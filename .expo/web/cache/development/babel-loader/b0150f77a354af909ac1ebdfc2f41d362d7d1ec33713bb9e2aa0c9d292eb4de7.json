{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport ExpoLocation from \"./ExpoLocation\";\nimport { LocationEventEmitter } from \"./LocationEventEmitter\";\nvar nextWatchId = 0;\nvar Subscriber = function () {\n  function Subscriber(eventName, eventDataField) {\n    _classCallCheck(this, Subscriber);\n    this.callbacks = {};\n    this.eventSubscription = null;\n    this.eventName = eventName;\n    this.eventDataField = eventDataField;\n  }\n  _createClass(Subscriber, [{\n    key: \"maybeInitializeSubscription\",\n    value: function maybeInitializeSubscription() {\n      var _this = this;\n      if (this.eventSubscription) {\n        return;\n      }\n      this.eventSubscription = LocationEventEmitter.addListener(this.eventName, function (event) {\n        return _this.trigger(event);\n      });\n    }\n  }, {\n    key: \"registerCallback\",\n    value: function registerCallback(callback) {\n      this.maybeInitializeSubscription();\n      var id = ++nextWatchId;\n      this.callbacks[id] = callback;\n      return id;\n    }\n  }, {\n    key: \"unregisterCallback\",\n    value: function unregisterCallback(id) {\n      if (!this.callbacks[id]) {\n        return;\n      }\n      delete this.callbacks[id];\n      ExpoLocation.removeWatchAsync(id);\n      if (Object.keys(this.callbacks).length === 0 && this.eventSubscription) {\n        LocationEventEmitter.removeSubscription(this.eventSubscription);\n        this.eventSubscription = null;\n      }\n    }\n  }, {\n    key: \"trigger\",\n    value: function trigger(event) {\n      var watchId = event.watchId;\n      var callback = this.callbacks[watchId];\n      if (callback) {\n        callback(event[this.eventDataField]);\n      } else {\n        ExpoLocation.removeWatchAsync(watchId);\n      }\n    }\n  }]);\n  return Subscriber;\n}();\nexport var LocationSubscriber = new Subscriber('Expo.locationChanged', 'location');\nexport var HeadingSubscriber = new Subscriber('Expo.headingChanged', 'heading');\nexport function _getCurrentWatchId() {\n  return nextWatchId;\n}","map":{"version":3,"names":["ExpoLocation","LocationEventEmitter","nextWatchId","Subscriber","eventName","eventDataField","_classCallCheck","callbacks","eventSubscription","_createClass","key","value","maybeInitializeSubscription","_this","addListener","event","trigger","registerCallback","callback","id","unregisterCallback","removeWatchAsync","Object","keys","length","removeSubscription","watchId","LocationSubscriber","HeadingSubscriber","_getCurrentWatchId"],"sources":["C:\\Users\\arzug\\Documents\\GitHub\\travel-brew\\node_modules\\expo-location\\src\\LocationSubscribers.ts"],"sourcesContent":["import { Subscription } from 'expo-modules-core';\n\nimport ExpoLocation from './ExpoLocation';\nimport { LocationCallback, LocationHeadingCallback } from './Location.types';\nimport { LocationEventEmitter } from './LocationEventEmitter';\n\ntype EventObject = {\n  watchId: number;\n  [key: string]: any;\n};\n\nlet nextWatchId = 0;\n\nclass Subscriber<CallbackType extends LocationCallback | LocationHeadingCallback> {\n  private eventName: string;\n  private eventDataField: string;\n  private callbacks: { [id: string]: CallbackType } = {};\n  private eventSubscription: Subscription | null = null;\n\n  constructor(eventName: string, eventDataField: string) {\n    this.eventName = eventName;\n    this.eventDataField = eventDataField;\n  }\n\n  maybeInitializeSubscription() {\n    if (this.eventSubscription) {\n      return;\n    }\n    this.eventSubscription = LocationEventEmitter.addListener(\n      this.eventName,\n      (event: EventObject) => this.trigger(event)\n    );\n  }\n\n  /**\n   * Registers given callback under new id which is then returned.\n   */\n  registerCallback(callback: CallbackType): number {\n    this.maybeInitializeSubscription();\n    const id = ++nextWatchId;\n    this.callbacks[id] = callback;\n    return id;\n  }\n\n  /**\n   * Unregisters a callback with given id and revokes the subscription if possible.\n   */\n  unregisterCallback(id: number): void {\n    // Do nothing if we have already unregistered the callback.\n    if (!this.callbacks[id]) {\n      return;\n    }\n\n    delete this.callbacks[id];\n    ExpoLocation.removeWatchAsync(id);\n\n    if (Object.keys(this.callbacks).length === 0 && this.eventSubscription) {\n      LocationEventEmitter.removeSubscription(this.eventSubscription);\n      this.eventSubscription = null;\n    }\n  }\n\n  trigger(event: EventObject): void {\n    const watchId = event.watchId;\n    const callback = this.callbacks[watchId];\n\n    if (callback) {\n      callback(event[this.eventDataField]);\n    } else {\n      ExpoLocation.removeWatchAsync(watchId);\n    }\n  }\n}\n\nexport const LocationSubscriber = new Subscriber<LocationCallback>(\n  'Expo.locationChanged',\n  'location'\n);\nexport const HeadingSubscriber = new Subscriber<LocationHeadingCallback>(\n  'Expo.headingChanged',\n  'heading'\n);\n\n/**\n * @private Necessary for some unit tests.\n */\nexport function _getCurrentWatchId(): number {\n  return nextWatchId;\n}\n"],"mappings":";;AAEA,OAAOA,YAAY;AAEnB,SAASC,oBAAoB;AAO7B,IAAIC,WAAW,GAAG,CAAC;AAAC,IAEdC,UAAU;EAMd,SAAAA,WAAYC,SAAiB,EAAEC,cAAsB;IAAAC,eAAA,OAAAH,UAAA;IAAA,KAH7CI,SAAS,GAAmC,EAAE;IAAA,KAC9CC,iBAAiB,GAAwB,IAAI;IAGnD,IAAI,CAACJ,SAAS,GAAGA,SAAS;IAC1B,IAAI,CAACC,cAAc,GAAGA,cAAc;EACtC;EAACI,YAAA,CAAAN,UAAA;IAAAO,GAAA;IAAAC,KAAA,EAED,SAAAC,4BAAA,EAA2B;MAAA,IAAAC,KAAA;MACzB,IAAI,IAAI,CAACL,iBAAiB,EAAE;QAC1B;;MAEF,IAAI,CAACA,iBAAiB,GAAGP,oBAAoB,CAACa,WAAW,CACvD,IAAI,CAACV,SAAS,EACd,UAACW,KAAkB;QAAA,OAAKF,KAAI,CAACG,OAAO,CAACD,KAAK,CAAC;MAAA,EAC5C;IACH;EAAC;IAAAL,GAAA;IAAAC,KAAA,EAKD,SAAAM,iBAAiBC,QAAsB;MACrC,IAAI,CAACN,2BAA2B,EAAE;MAClC,IAAMO,EAAE,GAAG,EAAEjB,WAAW;MACxB,IAAI,CAACK,SAAS,CAACY,EAAE,CAAC,GAAGD,QAAQ;MAC7B,OAAOC,EAAE;IACX;EAAC;IAAAT,GAAA;IAAAC,KAAA,EAKD,SAAAS,mBAAmBD,EAAU;MAE3B,IAAI,CAAC,IAAI,CAACZ,SAAS,CAACY,EAAE,CAAC,EAAE;QACvB;;MAGF,OAAO,IAAI,CAACZ,SAAS,CAACY,EAAE,CAAC;MACzBnB,YAAY,CAACqB,gBAAgB,CAACF,EAAE,CAAC;MAEjC,IAAIG,MAAM,CAACC,IAAI,CAAC,IAAI,CAAChB,SAAS,CAAC,CAACiB,MAAM,KAAK,CAAC,IAAI,IAAI,CAAChB,iBAAiB,EAAE;QACtEP,oBAAoB,CAACwB,kBAAkB,CAAC,IAAI,CAACjB,iBAAiB,CAAC;QAC/D,IAAI,CAACA,iBAAiB,GAAG,IAAI;;IAEjC;EAAC;IAAAE,GAAA;IAAAC,KAAA,EAED,SAAAK,QAAQD,KAAkB;MACxB,IAAMW,OAAO,GAAGX,KAAK,CAACW,OAAO;MAC7B,IAAMR,QAAQ,GAAG,IAAI,CAACX,SAAS,CAACmB,OAAO,CAAC;MAExC,IAAIR,QAAQ,EAAE;QACZA,QAAQ,CAACH,KAAK,CAAC,IAAI,CAACV,cAAc,CAAC,CAAC;OACrC,MAAM;QACLL,YAAY,CAACqB,gBAAgB,CAACK,OAAO,CAAC;;IAE1C;EAAC;EAAA,OAAAvB,UAAA;AAAA;AAGH,OAAO,IAAMwB,kBAAkB,GAAG,IAAIxB,UAAU,CAC9C,sBAAsB,EACtB,UAAU,CACX;AACD,OAAO,IAAMyB,iBAAiB,GAAG,IAAIzB,UAAU,CAC7C,qBAAqB,EACrB,SAAS,CACV;AAKD,OAAM,SAAU0B,kBAAkBA,CAAA;EAChC,OAAO3B,WAAW;AACpB"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import View from \"../../Components/View/View\";\nimport StyleSheet from \"../../StyleSheet/StyleSheet\";\nimport Text from \"../../Text/Text\";\nimport Platform from \"../../Utilities/Platform\";\nimport LogBoxButton from \"./LogBoxButton\";\nimport * as LogBoxStyle from \"./LogBoxStyle\";\nimport * as React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction LogBoxInspectorStackFrame(props) {\n  var frame = props.frame,\n    onPress = props.onPress;\n  var column = frame.column != null && parseInt(frame.column, 10);\n  var location = getFileName(frame.file) + (frame.lineNumber != null ? ':' + frame.lineNumber + (column && !isNaN(column) ? ':' + (column + 1) : '') : '');\n  return _jsx(View, {\n    style: styles.frameContainer,\n    children: _jsxs(LogBoxButton, {\n      backgroundColor: {\n        default: 'transparent',\n        pressed: onPress ? LogBoxStyle.getBackgroundColor(1) : 'transparent'\n      },\n      onPress: onPress,\n      style: styles.frame,\n      children: [_jsx(Text, {\n        style: [styles.name, frame.collapse === true && styles.dim],\n        children: frame.methodName\n      }), _jsx(Text, {\n        ellipsizeMode: \"middle\",\n        numberOfLines: 1,\n        style: [styles.location, frame.collapse === true && styles.dim],\n        children: location\n      })]\n    })\n  });\n}\nfunction getFileName(file) {\n  if (file == null) {\n    return '<unknown>';\n  }\n  var queryIndex = file.indexOf('?');\n  return file.substring(file.lastIndexOf('/') + 1, queryIndex === -1 ? file.length : queryIndex);\n}\nvar styles = StyleSheet.create({\n  frameContainer: {\n    flexDirection: 'row',\n    paddingHorizontal: 15\n  },\n  frame: {\n    flex: 1,\n    paddingVertical: 4,\n    paddingHorizontal: 10,\n    borderRadius: 5\n  },\n  lineLocation: {\n    flexDirection: 'row'\n  },\n  name: {\n    color: LogBoxStyle.getTextColor(1),\n    fontSize: 14,\n    includeFontPadding: false,\n    lineHeight: 18,\n    fontWeight: '400',\n    fontFamily: Platform.select({\n      android: 'monospace',\n      ios: 'Menlo'\n    })\n  },\n  location: {\n    color: LogBoxStyle.getTextColor(0.8),\n    fontSize: 12,\n    fontWeight: '300',\n    includeFontPadding: false,\n    lineHeight: 16,\n    paddingLeft: 10\n  },\n  dim: {\n    color: LogBoxStyle.getTextColor(0.4),\n    fontWeight: '300'\n  },\n  line: {\n    color: LogBoxStyle.getTextColor(0.8),\n    fontSize: 12,\n    fontWeight: '300',\n    includeFontPadding: false,\n    lineHeight: 16\n  }\n});\nexport default LogBoxInspectorStackFrame;","map":{"version":3,"names":["View","StyleSheet","Text","Platform","LogBoxButton","LogBoxStyle","React","jsx","_jsx","jsxs","_jsxs","LogBoxInspectorStackFrame","props","frame","onPress","column","parseInt","location","getFileName","file","lineNumber","isNaN","style","styles","frameContainer","children","backgroundColor","default","pressed","getBackgroundColor","name","collapse","dim","methodName","ellipsizeMode","numberOfLines","queryIndex","indexOf","substring","lastIndexOf","length","create","flexDirection","paddingHorizontal","flex","paddingVertical","borderRadius","lineLocation","color","getTextColor","fontSize","includeFontPadding","lineHeight","fontWeight","fontFamily","select","android","ios","paddingLeft","line"],"sources":["C:/Users/arzug/Documents/GitHub/travel-brew/node_modules/react-native/Libraries/LogBox/UI/LogBoxInspectorStackFrame.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport type {StackFrame} from '../../Core/NativeExceptionsManager';\nimport type {PressEvent} from '../../Types/CoreEventTypes';\n\nimport View from '../../Components/View/View';\nimport StyleSheet from '../../StyleSheet/StyleSheet';\nimport Text from '../../Text/Text';\nimport Platform from '../../Utilities/Platform';\nimport LogBoxButton from './LogBoxButton';\nimport * as LogBoxStyle from './LogBoxStyle';\nimport * as React from 'react';\n\ntype Props = $ReadOnly<{\n  frame: StackFrame,\n  onPress?: ?(event: PressEvent) => void,\n}>;\n\nfunction LogBoxInspectorStackFrame(props: Props): React.Node {\n  const {frame, onPress} = props;\n  const column = frame.column != null && parseInt(frame.column, 10);\n  const location =\n    getFileName(frame.file) +\n    (frame.lineNumber != null\n      ? ':' +\n        frame.lineNumber +\n        (column && !isNaN(column) ? ':' + (column + 1) : '')\n      : '');\n  return (\n    <View style={styles.frameContainer}>\n      <LogBoxButton\n        backgroundColor={{\n          default: 'transparent',\n          pressed: onPress ? LogBoxStyle.getBackgroundColor(1) : 'transparent',\n        }}\n        onPress={onPress}\n        style={styles.frame}>\n        <Text style={[styles.name, frame.collapse === true && styles.dim]}>\n          {frame.methodName}\n        </Text>\n        <Text\n          ellipsizeMode=\"middle\"\n          numberOfLines={1}\n          style={[styles.location, frame.collapse === true && styles.dim]}>\n          {location}\n        </Text>\n      </LogBoxButton>\n    </View>\n  );\n}\n\nfunction getFileName(file: ?string) {\n  if (file == null) {\n    return '<unknown>';\n  }\n  const queryIndex = file.indexOf('?');\n  return file.substring(\n    file.lastIndexOf('/') + 1,\n    queryIndex === -1 ? file.length : queryIndex,\n  );\n}\n\nconst styles = StyleSheet.create({\n  frameContainer: {\n    flexDirection: 'row',\n    paddingHorizontal: 15,\n  },\n  frame: {\n    flex: 1,\n    paddingVertical: 4,\n    paddingHorizontal: 10,\n    borderRadius: 5,\n  },\n  lineLocation: {\n    flexDirection: 'row',\n  },\n  name: {\n    color: LogBoxStyle.getTextColor(1),\n    fontSize: 14,\n    includeFontPadding: false,\n    lineHeight: 18,\n    fontWeight: '400',\n    fontFamily: Platform.select({android: 'monospace', ios: 'Menlo'}),\n  },\n  location: {\n    color: LogBoxStyle.getTextColor(0.8),\n    fontSize: 12,\n    fontWeight: '300',\n    includeFontPadding: false,\n    lineHeight: 16,\n    paddingLeft: 10,\n  },\n  dim: {\n    color: LogBoxStyle.getTextColor(0.4),\n    fontWeight: '300',\n  },\n  line: {\n    color: LogBoxStyle.getTextColor(0.8),\n    fontSize: 12,\n    fontWeight: '300',\n    includeFontPadding: false,\n    lineHeight: 16,\n  },\n});\n\nexport default LogBoxInspectorStackFrame;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
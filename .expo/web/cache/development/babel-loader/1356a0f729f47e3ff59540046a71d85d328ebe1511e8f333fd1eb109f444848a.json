{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport * as NativeComponentRegistry from \"../../NativeComponent/NativeComponentRegistry\";\nimport codegenNativeCommands from \"../../Utilities/codegenNativeCommands\";\nimport RCTTextInputViewConfig from \"./RCTTextInputViewConfig\";\nexport var Commands = codegenNativeCommands({\n  supportedCommands: ['focus', 'blur', 'setTextAndSelection']\n});\nexport var __INTERNAL_VIEW_CONFIG = _objectSpread({\n  uiViewClassName: 'RCTSinglelineTextInputView'\n}, RCTTextInputViewConfig);\nvar SinglelineTextInputNativeComponent = NativeComponentRegistry.get('RCTSinglelineTextInputView', function () {\n  return __INTERNAL_VIEW_CONFIG;\n});\nexport default SinglelineTextInputNativeComponent;","map":{"version":3,"names":["NativeComponentRegistry","codegenNativeCommands","RCTTextInputViewConfig","Commands","supportedCommands","__INTERNAL_VIEW_CONFIG","_objectSpread","uiViewClassName","SinglelineTextInputNativeComponent","get"],"sources":["C:/Users/arzug/Documents/GitHub/travel-brew/node_modules/react-native/Libraries/Components/TextInput/RCTSingelineTextInputNativeComponent.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport type {\n  HostComponent,\n  PartialViewConfig,\n} from '../../Renderer/shims/ReactNativeTypes';\nimport type {TextInputNativeCommands} from './TextInputNativeCommands';\n\nimport * as NativeComponentRegistry from '../../NativeComponent/NativeComponentRegistry';\nimport codegenNativeCommands from '../../Utilities/codegenNativeCommands';\nimport RCTTextInputViewConfig from './RCTTextInputViewConfig';\n\ntype NativeType = HostComponent<mixed>;\n\ntype NativeCommands = TextInputNativeCommands<NativeType>;\n\nexport const Commands: NativeCommands = codegenNativeCommands<NativeCommands>({\n  supportedCommands: ['focus', 'blur', 'setTextAndSelection'],\n});\n\nexport const __INTERNAL_VIEW_CONFIG: PartialViewConfig = {\n  uiViewClassName: 'RCTSinglelineTextInputView',\n  ...RCTTextInputViewConfig,\n};\n\nconst SinglelineTextInputNativeComponent: HostComponent<mixed> =\n  NativeComponentRegistry.get<mixed>(\n    'RCTSinglelineTextInputView',\n    () => __INTERNAL_VIEW_CONFIG,\n  );\n\n// flowlint-next-line unclear-type:off\nexport default ((SinglelineTextInputNativeComponent: any): HostComponent<mixed>);\n"],"mappings":";;;AAgBA,OAAO,KAAKA,uBAAuB;AACnC,OAAOC,qBAAqB;AAC5B,OAAOC,sBAAsB;AAM7B,OAAO,IAAMC,QAAwB,GAAGF,qBAAqB,CAAiB;EAC5EG,iBAAiB,EAAE,CAAC,OAAO,EAAE,MAAM,EAAE,qBAAqB;AAC5D,CAAC,CAAC;AAEF,OAAO,IAAMC,sBAAyC,GAAAC,aAAA;EACpDC,eAAe,EAAE;AAA4B,GAC1CL,sBAAsB,CAC1B;AAED,IAAMM,kCAAwD,GAC5DR,uBAAuB,CAACS,GAAG,CACzB,4BAA4B,EAC5B;EAAA,OAAMJ,sBAAsB;AAAA,CAC9B,CAAC;AAGH,eAAiBG,kCAAkC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
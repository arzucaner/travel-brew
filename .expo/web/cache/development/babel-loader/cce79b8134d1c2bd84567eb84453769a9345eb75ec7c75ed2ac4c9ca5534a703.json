{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport RefreshControl from \"../../Components/RefreshControl/RefreshControl\";\nimport ScrollView from \"../../Components/ScrollView/ScrollView\";\nimport flattenStyle from \"../../StyleSheet/flattenStyle\";\nimport splitLayoutProps from \"../../StyleSheet/splitLayoutProps\";\nimport StyleSheet from \"../../StyleSheet/StyleSheet\";\nimport Platform from \"../../Utilities/Platform\";\nimport useMergeRefs from \"../../Utilities/useMergeRefs\";\nimport createAnimatedComponent from \"../createAnimatedComponent\";\nimport useAnimatedProps from \"../useAnimatedProps\";\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar AnimatedScrollView = React.forwardRef(function (props, forwardedRef) {\n  if (Platform.OS === 'android' && props.refreshControl != null && props.style != null) {\n    return _jsx(AnimatedScrollViewWithInvertedRefreshControl, _objectSpread(_objectSpread({\n      scrollEventThrottle: 0.0001\n    }, props), {}, {\n      ref: forwardedRef,\n      refreshControl: props.refreshControl\n    }));\n  } else {\n    return _jsx(AnimatedScrollViewWithoutInvertedRefreshControl, _objectSpread(_objectSpread({\n      scrollEventThrottle: 0.0001\n    }, props), {}, {\n      ref: forwardedRef\n    }));\n  }\n});\nvar AnimatedScrollViewWithInvertedRefreshControl = React.forwardRef(function (props, forwardedRef) {\n  var _useMemo = useMemo(function () {\n      var _splitLayoutProps = splitLayoutProps(flattenStyle(props.style)),\n        outer = _splitLayoutProps.outer,\n        inner = _splitLayoutProps.inner;\n      return {\n        intermediatePropsForRefreshControl: {\n          style: outer\n        },\n        intermediatePropsForScrollView: _objectSpread(_objectSpread({}, props), {}, {\n          style: inner\n        })\n      };\n    }, [props]),\n    intermediatePropsForRefreshControl = _useMemo.intermediatePropsForRefreshControl,\n    intermediatePropsForScrollView = _useMemo.intermediatePropsForScrollView;\n  var _useAnimatedProps = useAnimatedProps(intermediatePropsForRefreshControl),\n    _useAnimatedProps2 = _slicedToArray(_useAnimatedProps, 2),\n    refreshControlAnimatedProps = _useAnimatedProps2[0],\n    refreshControlRef = _useAnimatedProps2[1];\n  var refreshControl = React.cloneElement(props.refreshControl, _objectSpread(_objectSpread({}, refreshControlAnimatedProps), {}, {\n    ref: refreshControlRef\n  }));\n  var _useAnimatedProps3 = useAnimatedProps(intermediatePropsForScrollView),\n    _useAnimatedProps4 = _slicedToArray(_useAnimatedProps3, 2),\n    scrollViewAnimatedProps = _useAnimatedProps4[0],\n    scrollViewRef = _useAnimatedProps4[1];\n  var ref = useMergeRefs(scrollViewRef, forwardedRef);\n  return _jsx(ScrollView, _objectSpread(_objectSpread({}, scrollViewAnimatedProps), {}, {\n    ref: ref,\n    refreshControl: refreshControl,\n    style: StyleSheet.compose(scrollViewAnimatedProps.style, refreshControlAnimatedProps.style)\n  }));\n});\nvar AnimatedScrollViewWithoutInvertedRefreshControl = createAnimatedComponent(ScrollView);\nexport default AnimatedScrollView;","map":{"version":3,"names":["RefreshControl","ScrollView","flattenStyle","splitLayoutProps","StyleSheet","Platform","useMergeRefs","createAnimatedComponent","useAnimatedProps","React","useMemo","jsx","_jsx","AnimatedScrollView","forwardRef","props","forwardedRef","OS","refreshControl","style","AnimatedScrollViewWithInvertedRefreshControl","_objectSpread","scrollEventThrottle","ref","AnimatedScrollViewWithoutInvertedRefreshControl","_useMemo","_splitLayoutProps","outer","inner","intermediatePropsForRefreshControl","intermediatePropsForScrollView","_useAnimatedProps","_useAnimatedProps2","_slicedToArray","refreshControlAnimatedProps","refreshControlRef","cloneElement","_useAnimatedProps3","_useAnimatedProps4","scrollViewAnimatedProps","scrollViewRef","compose"],"sources":["C:/Users/arzug/Documents/GitHub/travel-brew/node_modules/react-native/Libraries/Animated/components/AnimatedScrollView.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport type {____ViewStyle_Internal} from '../../StyleSheet/StyleSheetTypes';\nimport type {AnimatedComponentType} from '../createAnimatedComponent';\n\nimport RefreshControl from '../../Components/RefreshControl/RefreshControl';\nimport ScrollView from '../../Components/ScrollView/ScrollView';\nimport flattenStyle from '../../StyleSheet/flattenStyle';\nimport splitLayoutProps from '../../StyleSheet/splitLayoutProps';\nimport StyleSheet from '../../StyleSheet/StyleSheet';\nimport Platform from '../../Utilities/Platform';\nimport useMergeRefs from '../../Utilities/useMergeRefs';\nimport createAnimatedComponent from '../createAnimatedComponent';\nimport useAnimatedProps from '../useAnimatedProps';\nimport * as React from 'react';\nimport {useMemo} from 'react';\n\ntype Props = React.ElementConfig<typeof ScrollView>;\ntype Instance = React.ElementRef<typeof ScrollView>;\n\n/**\n * @see https://github.com/facebook/react-native/commit/b8c8562\n */\nconst AnimatedScrollView: AnimatedComponentType<Props, Instance> =\n  React.forwardRef((props, forwardedRef) => {\n    // (Android only) When a ScrollView has a RefreshControl and\n    // any `style` property set with an Animated.Value, the CSS\n    // gets incorrectly applied twice. This is because ScrollView\n    // swaps the parent/child relationship of itself and the\n    // RefreshControl component (see ScrollView.js for more details).\n    if (\n      Platform.OS === 'android' &&\n      props.refreshControl != null &&\n      props.style != null\n    ) {\n      return (\n        <AnimatedScrollViewWithInvertedRefreshControl\n          scrollEventThrottle={0.0001}\n          {...props}\n          ref={forwardedRef}\n          refreshControl={props.refreshControl}\n        />\n      );\n    } else {\n      return (\n        <AnimatedScrollViewWithoutInvertedRefreshControl\n          scrollEventThrottle={0.0001}\n          {...props}\n          ref={forwardedRef}\n        />\n      );\n    }\n  });\n\nconst AnimatedScrollViewWithInvertedRefreshControl = React.forwardRef(\n  (\n    props: {\n      ...React.ElementConfig<typeof ScrollView>,\n      // $FlowFixMe[unclear-type] Same Flow type as `refreshControl` in ScrollView\n      refreshControl: React.Element<any>,\n    },\n    forwardedRef:\n      | {current: Instance | null, ...}\n      | ((Instance | null) => mixed),\n  ) => {\n    // Split `props` into the animate-able props for the parent (RefreshControl)\n    // and child (ScrollView).\n    const {intermediatePropsForRefreshControl, intermediatePropsForScrollView} =\n      useMemo(() => {\n        // $FlowFixMe[underconstrained-implicit-instantiation]\n        const {outer, inner} = splitLayoutProps(flattenStyle(props.style));\n        return {\n          intermediatePropsForRefreshControl: {style: outer},\n          intermediatePropsForScrollView: {...props, style: inner},\n        };\n      }, [props]);\n\n    // Handle animated props on `refreshControl`.\n    const [refreshControlAnimatedProps, refreshControlRef] = useAnimatedProps<\n      {style: ?____ViewStyle_Internal},\n      $FlowFixMe,\n    >(intermediatePropsForRefreshControl);\n    // NOTE: Assumes that refreshControl.ref` and `refreshControl.style` can be\n    // safely clobbered.\n    const refreshControl: React.Element<typeof RefreshControl> =\n      React.cloneElement(props.refreshControl, {\n        ...refreshControlAnimatedProps,\n        ref: refreshControlRef,\n      });\n\n    // Handle animated props on `NativeDirectionalScrollView`.\n    const [scrollViewAnimatedProps, scrollViewRef] = useAnimatedProps<\n      Props,\n      Instance,\n    >(intermediatePropsForScrollView);\n    const ref = useMergeRefs<Instance | null>(scrollViewRef, forwardedRef);\n\n    return (\n      // $FlowFixMe[incompatible-use] Investigate useAnimatedProps return value\n      <ScrollView\n        {...scrollViewAnimatedProps}\n        ref={ref}\n        refreshControl={refreshControl}\n        // Because `refreshControl` is a clone of `props.refreshControl` with\n        // `refreshControlAnimatedProps` added, we need to pass ScrollView.js\n        // the combined styles since it also splits the outer/inner styles for\n        // its parent/child, respectively. Without this, the refreshControl\n        // styles would be ignored.\n        style={StyleSheet.compose(\n          scrollViewAnimatedProps.style,\n          refreshControlAnimatedProps.style,\n        )}\n      />\n    );\n  },\n);\n\nconst AnimatedScrollViewWithoutInvertedRefreshControl =\n  createAnimatedComponent(ScrollView);\n\nexport default AnimatedScrollView;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _excluded = [\"headers\"];\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport Blob from \"../Blob/Blob\";\nimport BlobManager from \"../Blob/BlobManager\";\nimport NativeEventEmitter from \"../EventEmitter/NativeEventEmitter\";\nimport binaryToBase64 from \"../Utilities/binaryToBase64\";\nimport Platform from \"../Utilities/Platform\";\nimport NativeWebSocketModule from \"./NativeWebSocketModule\";\nimport WebSocketEvent from \"./WebSocketEvent\";\nimport base64 from 'base64-js';\nimport EventTarget from 'event-target-shim';\nimport invariant from 'invariant';\nvar CONNECTING = 0;\nvar OPEN = 1;\nvar CLOSING = 2;\nvar CLOSED = 3;\nvar CLOSE_NORMAL = 1000;\nvar CLOSE_ABNORMAL = 1006;\nvar WEBSOCKET_EVENTS = ['close', 'error', 'message', 'open'];\nvar nextWebSocketId = 0;\nvar WebSocket = function (_ref) {\n  _inherits(WebSocket, _ref);\n  var _super = _createSuper(WebSocket);\n  function WebSocket(url, protocols, options) {\n    var _this;\n    _classCallCheck(this, WebSocket);\n    _this = _super.call(this);\n    _this.CONNECTING = CONNECTING;\n    _this.OPEN = OPEN;\n    _this.CLOSING = CLOSING;\n    _this.CLOSED = CLOSED;\n    _this.readyState = CONNECTING;\n    _this.url = url;\n    if (typeof protocols === 'string') {\n      protocols = [protocols];\n    }\n    var _ref2 = options || {},\n      _ref2$headers = _ref2.headers,\n      headers = _ref2$headers === void 0 ? {} : _ref2$headers,\n      unrecognized = _objectWithoutProperties(_ref2, _excluded);\n    if (unrecognized && typeof unrecognized.origin === 'string') {\n      console.warn('Specifying `origin` as a WebSocket connection option is deprecated. Include it under `headers` instead.');\n      headers.origin = unrecognized.origin;\n      delete unrecognized.origin;\n    }\n    if (Object.keys(unrecognized).length > 0) {\n      console.warn('Unrecognized WebSocket connection option(s) `' + Object.keys(unrecognized).join('`, `') + '`. ' + 'Did you mean to put these under `headers`?');\n    }\n    if (!Array.isArray(protocols)) {\n      protocols = null;\n    }\n    _this._eventEmitter = new NativeEventEmitter(Platform.OS !== 'ios' ? null : NativeWebSocketModule);\n    _this._socketId = nextWebSocketId++;\n    _this._registerEvents();\n    NativeWebSocketModule.connect(url, protocols, {\n      headers: headers\n    }, _this._socketId);\n    return _this;\n  }\n  _createClass(WebSocket, [{\n    key: \"binaryType\",\n    get: function get() {\n      return this._binaryType;\n    },\n    set: function set(binaryType) {\n      if (binaryType !== 'blob' && binaryType !== 'arraybuffer') {\n        throw new Error(\"binaryType must be either 'blob' or 'arraybuffer'\");\n      }\n      if (this._binaryType === 'blob' || binaryType === 'blob') {\n        invariant(BlobManager.isAvailable, 'Native module BlobModule is required for blob support');\n        if (binaryType === 'blob') {\n          BlobManager.addWebSocketHandler(this._socketId);\n        } else {\n          BlobManager.removeWebSocketHandler(this._socketId);\n        }\n      }\n      this._binaryType = binaryType;\n    }\n  }, {\n    key: \"close\",\n    value: function close(code, reason) {\n      if (this.readyState === this.CLOSING || this.readyState === this.CLOSED) {\n        return;\n      }\n      this.readyState = this.CLOSING;\n      this._close(code, reason);\n    }\n  }, {\n    key: \"send\",\n    value: function send(data) {\n      if (this.readyState === this.CONNECTING) {\n        throw new Error('INVALID_STATE_ERR');\n      }\n      if (data instanceof Blob) {\n        invariant(BlobManager.isAvailable, 'Native module BlobModule is required for blob support');\n        BlobManager.sendOverSocket(data, this._socketId);\n        return;\n      }\n      if (typeof data === 'string') {\n        NativeWebSocketModule.send(data, this._socketId);\n        return;\n      }\n      if (data instanceof ArrayBuffer || ArrayBuffer.isView(data)) {\n        NativeWebSocketModule.sendBinary(binaryToBase64(data), this._socketId);\n        return;\n      }\n      throw new Error('Unsupported data type');\n    }\n  }, {\n    key: \"ping\",\n    value: function ping() {\n      if (this.readyState === this.CONNECTING) {\n        throw new Error('INVALID_STATE_ERR');\n      }\n      NativeWebSocketModule.ping(this._socketId);\n    }\n  }, {\n    key: \"_close\",\n    value: function _close(code, reason) {\n      var statusCode = typeof code === 'number' ? code : CLOSE_NORMAL;\n      var closeReason = typeof reason === 'string' ? reason : '';\n      NativeWebSocketModule.close(statusCode, closeReason, this._socketId);\n      if (BlobManager.isAvailable && this._binaryType === 'blob') {\n        BlobManager.removeWebSocketHandler(this._socketId);\n      }\n    }\n  }, {\n    key: \"_unregisterEvents\",\n    value: function _unregisterEvents() {\n      this._subscriptions.forEach(function (e) {\n        return e.remove();\n      });\n      this._subscriptions = [];\n    }\n  }, {\n    key: \"_registerEvents\",\n    value: function _registerEvents() {\n      var _this2 = this;\n      this._subscriptions = [this._eventEmitter.addListener('websocketMessage', function (ev) {\n        if (ev.id !== _this2._socketId) {\n          return;\n        }\n        var data = ev.data;\n        switch (ev.type) {\n          case 'binary':\n            data = base64.toByteArray(ev.data).buffer;\n            break;\n          case 'blob':\n            data = BlobManager.createFromOptions(ev.data);\n            break;\n        }\n        _this2.dispatchEvent(new WebSocketEvent('message', {\n          data: data\n        }));\n      }), this._eventEmitter.addListener('websocketOpen', function (ev) {\n        if (ev.id !== _this2._socketId) {\n          return;\n        }\n        _this2.readyState = _this2.OPEN;\n        _this2.protocol = ev.protocol;\n        _this2.dispatchEvent(new WebSocketEvent('open'));\n      }), this._eventEmitter.addListener('websocketClosed', function (ev) {\n        if (ev.id !== _this2._socketId) {\n          return;\n        }\n        _this2.readyState = _this2.CLOSED;\n        _this2.dispatchEvent(new WebSocketEvent('close', {\n          code: ev.code,\n          reason: ev.reason\n        }));\n        _this2._unregisterEvents();\n        _this2.close();\n      }), this._eventEmitter.addListener('websocketFailed', function (ev) {\n        if (ev.id !== _this2._socketId) {\n          return;\n        }\n        _this2.readyState = _this2.CLOSED;\n        _this2.dispatchEvent(new WebSocketEvent('error', {\n          message: ev.message\n        }));\n        _this2.dispatchEvent(new WebSocketEvent('close', {\n          code: CLOSE_ABNORMAL,\n          reason: ev.message\n        }));\n        _this2._unregisterEvents();\n        _this2.close();\n      })];\n    }\n  }]);\n  return WebSocket;\n}(EventTarget.apply(void 0, WEBSOCKET_EVENTS));\nWebSocket.CONNECTING = CONNECTING;\nWebSocket.OPEN = OPEN;\nWebSocket.CLOSING = CLOSING;\nWebSocket.CLOSED = CLOSED;\nmodule.exports = WebSocket;","map":{"version":3,"names":["Blob","BlobManager","NativeEventEmitter","binaryToBase64","Platform","NativeWebSocketModule","WebSocketEvent","base64","EventTarget","invariant","CONNECTING","OPEN","CLOSING","CLOSED","CLOSE_NORMAL","CLOSE_ABNORMAL","WEBSOCKET_EVENTS","nextWebSocketId","WebSocket","_ref","_inherits","_super","_createSuper","url","protocols","options","_this","_classCallCheck","call","readyState","_ref2","_ref2$headers","headers","unrecognized","_objectWithoutProperties","_excluded","origin","console","warn","Object","keys","length","join","Array","isArray","_eventEmitter","OS","_socketId","_registerEvents","connect","_createClass","key","get","_binaryType","set","binaryType","Error","isAvailable","addWebSocketHandler","removeWebSocketHandler","value","close","code","reason","_close","send","data","sendOverSocket","ArrayBuffer","isView","sendBinary","ping","statusCode","closeReason","_unregisterEvents","_subscriptions","forEach","e","remove","_this2","addListener","ev","id","type","toByteArray","buffer","createFromOptions","dispatchEvent","protocol","message","apply","module","exports"],"sources":["C:/Users/arzug/Documents/GitHub/travel-brew/node_modules/react-native/Libraries/WebSocket/WebSocket.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\nimport type {BlobData} from '../Blob/BlobTypes';\nimport type {EventSubscription} from '../vendor/emitter/EventEmitter';\n\nimport Blob from '../Blob/Blob';\nimport BlobManager from '../Blob/BlobManager';\nimport NativeEventEmitter from '../EventEmitter/NativeEventEmitter';\nimport binaryToBase64 from '../Utilities/binaryToBase64';\nimport Platform from '../Utilities/Platform';\nimport NativeWebSocketModule from './NativeWebSocketModule';\nimport WebSocketEvent from './WebSocketEvent';\nimport base64 from 'base64-js';\nimport EventTarget from 'event-target-shim';\nimport invariant from 'invariant';\n\ntype ArrayBufferView =\n  | Int8Array\n  | Uint8Array\n  | Uint8ClampedArray\n  | Int16Array\n  | Uint16Array\n  | Int32Array\n  | Uint32Array\n  | Float32Array\n  | Float64Array\n  | DataView;\n\ntype BinaryType = 'blob' | 'arraybuffer';\n\nconst CONNECTING = 0;\nconst OPEN = 1;\nconst CLOSING = 2;\nconst CLOSED = 3;\n\nconst CLOSE_NORMAL = 1000;\n\n// Abnormal closure where no code is provided in a control frame\n// https://www.rfc-editor.org/rfc/rfc6455.html#section-7.1.5\nconst CLOSE_ABNORMAL = 1006;\n\nconst WEBSOCKET_EVENTS = ['close', 'error', 'message', 'open'];\n\nlet nextWebSocketId = 0;\n\ntype WebSocketEventDefinitions = {\n  websocketOpen: [{id: number, protocol: string}],\n  websocketClosed: [{id: number, code: number, reason: string}],\n  websocketMessage: [\n    | {type: 'binary', id: number, data: string}\n    | {type: 'text', id: number, data: string}\n    | {type: 'blob', id: number, data: BlobData},\n  ],\n  websocketFailed: [{id: number, message: string}],\n};\n\n/**\n * Browser-compatible WebSockets implementation.\n *\n * See https://developer.mozilla.org/en-US/docs/Web/API/WebSocket\n * See https://github.com/websockets/ws\n */\nclass WebSocket extends (EventTarget(...WEBSOCKET_EVENTS): any) {\n  static CONNECTING: number = CONNECTING;\n  static OPEN: number = OPEN;\n  static CLOSING: number = CLOSING;\n  static CLOSED: number = CLOSED;\n\n  CONNECTING: number = CONNECTING;\n  OPEN: number = OPEN;\n  CLOSING: number = CLOSING;\n  CLOSED: number = CLOSED;\n\n  _socketId: number;\n  _eventEmitter: NativeEventEmitter<WebSocketEventDefinitions>;\n  _subscriptions: Array<EventSubscription>;\n  _binaryType: ?BinaryType;\n\n  onclose: ?Function;\n  onerror: ?Function;\n  onmessage: ?Function;\n  onopen: ?Function;\n\n  bufferedAmount: number;\n  extension: ?string;\n  protocol: ?string;\n  readyState: number = CONNECTING;\n  url: ?string;\n\n  constructor(\n    url: string,\n    protocols: ?string | ?Array<string>,\n    options: ?{headers?: {origin?: string, ...}, ...},\n  ) {\n    super();\n    this.url = url;\n    if (typeof protocols === 'string') {\n      protocols = [protocols];\n    }\n\n    const {headers = {}, ...unrecognized} = options || {};\n\n    // Preserve deprecated backwards compatibility for the 'origin' option\n    // $FlowFixMe[prop-missing]\n    if (unrecognized && typeof unrecognized.origin === 'string') {\n      console.warn(\n        'Specifying `origin` as a WebSocket connection option is deprecated. Include it under `headers` instead.',\n      );\n      /* $FlowFixMe[prop-missing] (>=0.54.0 site=react_native_fb,react_native_\n       * oss) This comment suppresses an error found when Flow v0.54 was\n       * deployed. To see the error delete this comment and run Flow. */\n      headers.origin = unrecognized.origin;\n      /* $FlowFixMe[prop-missing] (>=0.54.0 site=react_native_fb,react_native_\n       * oss) This comment suppresses an error found when Flow v0.54 was\n       * deployed. To see the error delete this comment and run Flow. */\n      delete unrecognized.origin;\n    }\n\n    // Warn about and discard anything else\n    if (Object.keys(unrecognized).length > 0) {\n      console.warn(\n        'Unrecognized WebSocket connection option(s) `' +\n          Object.keys(unrecognized).join('`, `') +\n          '`. ' +\n          'Did you mean to put these under `headers`?',\n      );\n    }\n\n    if (!Array.isArray(protocols)) {\n      protocols = null;\n    }\n\n    this._eventEmitter = new NativeEventEmitter(\n      // T88715063: NativeEventEmitter only used this parameter on iOS. Now it uses it on all platforms, so this code was modified automatically to preserve its behavior\n      // If you want to use the native module on other platforms, please remove this condition and test its behavior\n      Platform.OS !== 'ios' ? null : NativeWebSocketModule,\n    );\n    this._socketId = nextWebSocketId++;\n    this._registerEvents();\n    NativeWebSocketModule.connect(url, protocols, {headers}, this._socketId);\n  }\n\n  get binaryType(): ?BinaryType {\n    return this._binaryType;\n  }\n\n  set binaryType(binaryType: BinaryType): void {\n    if (binaryType !== 'blob' && binaryType !== 'arraybuffer') {\n      throw new Error(\"binaryType must be either 'blob' or 'arraybuffer'\");\n    }\n    if (this._binaryType === 'blob' || binaryType === 'blob') {\n      invariant(\n        BlobManager.isAvailable,\n        'Native module BlobModule is required for blob support',\n      );\n      if (binaryType === 'blob') {\n        BlobManager.addWebSocketHandler(this._socketId);\n      } else {\n        BlobManager.removeWebSocketHandler(this._socketId);\n      }\n    }\n    this._binaryType = binaryType;\n  }\n\n  close(code?: number, reason?: string): void {\n    if (this.readyState === this.CLOSING || this.readyState === this.CLOSED) {\n      return;\n    }\n\n    this.readyState = this.CLOSING;\n    this._close(code, reason);\n  }\n\n  send(data: string | ArrayBuffer | ArrayBufferView | Blob): void {\n    if (this.readyState === this.CONNECTING) {\n      throw new Error('INVALID_STATE_ERR');\n    }\n\n    if (data instanceof Blob) {\n      invariant(\n        BlobManager.isAvailable,\n        'Native module BlobModule is required for blob support',\n      );\n      BlobManager.sendOverSocket(data, this._socketId);\n      return;\n    }\n\n    if (typeof data === 'string') {\n      NativeWebSocketModule.send(data, this._socketId);\n      return;\n    }\n\n    if (data instanceof ArrayBuffer || ArrayBuffer.isView(data)) {\n      NativeWebSocketModule.sendBinary(binaryToBase64(data), this._socketId);\n      return;\n    }\n\n    throw new Error('Unsupported data type');\n  }\n\n  ping(): void {\n    if (this.readyState === this.CONNECTING) {\n      throw new Error('INVALID_STATE_ERR');\n    }\n\n    NativeWebSocketModule.ping(this._socketId);\n  }\n\n  _close(code?: number, reason?: string): void {\n    // See https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent\n    const statusCode = typeof code === 'number' ? code : CLOSE_NORMAL;\n    const closeReason = typeof reason === 'string' ? reason : '';\n    NativeWebSocketModule.close(statusCode, closeReason, this._socketId);\n\n    if (BlobManager.isAvailable && this._binaryType === 'blob') {\n      BlobManager.removeWebSocketHandler(this._socketId);\n    }\n  }\n\n  _unregisterEvents(): void {\n    this._subscriptions.forEach(e => e.remove());\n    this._subscriptions = [];\n  }\n\n  _registerEvents(): void {\n    this._subscriptions = [\n      this._eventEmitter.addListener('websocketMessage', ev => {\n        if (ev.id !== this._socketId) {\n          return;\n        }\n        let data: Blob | BlobData | ArrayBuffer | string = ev.data;\n        switch (ev.type) {\n          case 'binary':\n            data = base64.toByteArray(ev.data).buffer;\n            break;\n          case 'blob':\n            data = BlobManager.createFromOptions(ev.data);\n            break;\n        }\n        this.dispatchEvent(new WebSocketEvent('message', {data}));\n      }),\n      this._eventEmitter.addListener('websocketOpen', ev => {\n        if (ev.id !== this._socketId) {\n          return;\n        }\n        this.readyState = this.OPEN;\n        this.protocol = ev.protocol;\n        this.dispatchEvent(new WebSocketEvent('open'));\n      }),\n      this._eventEmitter.addListener('websocketClosed', ev => {\n        if (ev.id !== this._socketId) {\n          return;\n        }\n        this.readyState = this.CLOSED;\n        this.dispatchEvent(\n          new WebSocketEvent('close', {\n            code: ev.code,\n            reason: ev.reason,\n            // TODO: missing `wasClean` (exposed on iOS as `clean` but missing on Android)\n          }),\n        );\n        this._unregisterEvents();\n        this.close();\n      }),\n      this._eventEmitter.addListener('websocketFailed', ev => {\n        if (ev.id !== this._socketId) {\n          return;\n        }\n        this.readyState = this.CLOSED;\n        this.dispatchEvent(\n          new WebSocketEvent('error', {\n            message: ev.message,\n          }),\n        );\n        this.dispatchEvent(\n          new WebSocketEvent('close', {\n            code: CLOSE_ABNORMAL,\n            reason: ev.message,\n            // TODO: Expose `wasClean`\n          }),\n        );\n        this._unregisterEvents();\n        this.close();\n      }),\n    ];\n  }\n}\n\nmodule.exports = WebSocket;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
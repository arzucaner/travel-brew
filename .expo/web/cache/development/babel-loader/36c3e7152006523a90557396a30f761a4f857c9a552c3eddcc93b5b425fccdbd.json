{"ast":null,"code":"'use strict';\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nvar ReactNativeStyleAttributes = require(\"../Components/View/ReactNativeStyleAttributes\");\nvar resolveAssetSource = require(\"../Image/resolveAssetSource\");\nvar processColor = require(\"../StyleSheet/processColor\").default;\nvar processColorArray = require(\"../StyleSheet/processColorArray\");\nvar insetsDiffer = require(\"../Utilities/differ/insetsDiffer\");\nvar matricesDiffer = require(\"../Utilities/differ/matricesDiffer\");\nvar pointsDiffer = require(\"../Utilities/differ/pointsDiffer\");\nvar sizesDiffer = require(\"../Utilities/differ/sizesDiffer\");\nvar UIManager = require(\"./UIManager\");\nvar invariant = require('invariant');\nfunction getNativeComponentAttributes(uiViewClassName) {\n  var _bubblingEventTypes, _directEventTypes;\n  var viewConfig = UIManager.getViewManagerConfig(uiViewClassName);\n  invariant(viewConfig != null && viewConfig.NativeProps != null, 'requireNativeComponent: \"%s\" was not found in the UIManager.', uiViewClassName);\n  var baseModuleName = viewConfig.baseModuleName,\n    bubblingEventTypes = viewConfig.bubblingEventTypes,\n    directEventTypes = viewConfig.directEventTypes;\n  var nativeProps = viewConfig.NativeProps;\n  bubblingEventTypes = (_bubblingEventTypes = bubblingEventTypes) != null ? _bubblingEventTypes : {};\n  directEventTypes = (_directEventTypes = directEventTypes) != null ? _directEventTypes : {};\n  while (baseModuleName) {\n    var baseModule = UIManager.getViewManagerConfig(baseModuleName);\n    if (!baseModule) {\n      baseModuleName = null;\n    } else {\n      bubblingEventTypes = _objectSpread(_objectSpread({}, baseModule.bubblingEventTypes), bubblingEventTypes);\n      directEventTypes = _objectSpread(_objectSpread({}, baseModule.directEventTypes), directEventTypes);\n      nativeProps = _objectSpread(_objectSpread({}, baseModule.NativeProps), nativeProps);\n      baseModuleName = baseModule.baseModuleName;\n    }\n  }\n  var validAttributes = {};\n  for (var key in nativeProps) {\n    var typeName = nativeProps[key];\n    var diff = getDifferForType(typeName);\n    var process = getProcessorForType(typeName);\n    validAttributes[key] = diff == null ? process == null ? true : {\n      process: process\n    } : process == null ? {\n      diff: diff\n    } : {\n      diff: diff,\n      process: process\n    };\n  }\n  validAttributes.style = ReactNativeStyleAttributes;\n  Object.assign(viewConfig, {\n    uiViewClassName: uiViewClassName,\n    validAttributes: validAttributes,\n    bubblingEventTypes: bubblingEventTypes,\n    directEventTypes: directEventTypes\n  });\n  attachDefaultEventTypes(viewConfig);\n  return viewConfig;\n}\nfunction attachDefaultEventTypes(viewConfig) {\n  var constants = UIManager.getConstants();\n  if (constants.ViewManagerNames || constants.LazyViewManagersEnabled) {\n    viewConfig = merge(viewConfig, UIManager.getDefaultEventTypes());\n  } else {\n    viewConfig.bubblingEventTypes = merge(viewConfig.bubblingEventTypes, constants.genericBubblingEventTypes);\n    viewConfig.directEventTypes = merge(viewConfig.directEventTypes, constants.genericDirectEventTypes);\n  }\n}\nfunction merge(destination, source) {\n  if (!source) {\n    return destination;\n  }\n  if (!destination) {\n    return source;\n  }\n  for (var key in source) {\n    if (!source.hasOwnProperty(key)) {\n      continue;\n    }\n    var sourceValue = source[key];\n    if (destination.hasOwnProperty(key)) {\n      var destinationValue = destination[key];\n      if (typeof sourceValue === 'object' && typeof destinationValue === 'object') {\n        sourceValue = merge(destinationValue, sourceValue);\n      }\n    }\n    destination[key] = sourceValue;\n  }\n  return destination;\n}\nfunction getDifferForType(typeName) {\n  switch (typeName) {\n    case 'CATransform3D':\n      return matricesDiffer;\n    case 'CGPoint':\n      return pointsDiffer;\n    case 'CGSize':\n      return sizesDiffer;\n    case 'UIEdgeInsets':\n      return insetsDiffer;\n    case 'Point':\n      return pointsDiffer;\n    case 'EdgeInsets':\n      return insetsDiffer;\n  }\n  return null;\n}\nfunction getProcessorForType(typeName) {\n  switch (typeName) {\n    case 'CGColor':\n    case 'UIColor':\n      return processColor;\n    case 'CGColorArray':\n    case 'UIColorArray':\n      return processColorArray;\n    case 'CGImage':\n    case 'UIImage':\n    case 'RCTImageSource':\n      return resolveAssetSource;\n    case 'Color':\n      return processColor;\n    case 'ColorArray':\n      return processColorArray;\n    case 'ImageSource':\n      return resolveAssetSource;\n  }\n  return null;\n}\nmodule.exports = getNativeComponentAttributes;","map":{"version":3,"names":["_defineProperty","require","ownKeys","e","r","t","Object","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","getOwnPropertyDescriptors","defineProperties","defineProperty","ReactNativeStyleAttributes","resolveAssetSource","processColor","default","processColorArray","insetsDiffer","matricesDiffer","pointsDiffer","sizesDiffer","UIManager","invariant","getNativeComponentAttributes","uiViewClassName","_bubblingEventTypes","_directEventTypes","viewConfig","getViewManagerConfig","NativeProps","baseModuleName","bubblingEventTypes","directEventTypes","nativeProps","baseModule","validAttributes","key","typeName","diff","getDifferForType","process","getProcessorForType","style","assign","attachDefaultEventTypes","constants","getConstants","ViewManagerNames","LazyViewManagersEnabled","merge","getDefaultEventTypes","genericBubblingEventTypes","genericDirectEventTypes","destination","source","hasOwnProperty","sourceValue","destinationValue","module","exports"],"sources":["C:/Users/arzug/Documents/GitHub/travel-brew/node_modules/react-native/Libraries/ReactNative/getNativeComponentAttributes.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\n'use strict';\n\nconst ReactNativeStyleAttributes = require('../Components/View/ReactNativeStyleAttributes');\nconst resolveAssetSource = require('../Image/resolveAssetSource');\nconst processColor = require('../StyleSheet/processColor').default;\nconst processColorArray = require('../StyleSheet/processColorArray');\nconst insetsDiffer = require('../Utilities/differ/insetsDiffer');\nconst matricesDiffer = require('../Utilities/differ/matricesDiffer');\nconst pointsDiffer = require('../Utilities/differ/pointsDiffer');\nconst sizesDiffer = require('../Utilities/differ/sizesDiffer');\nconst UIManager = require('./UIManager');\nconst invariant = require('invariant');\n\nfunction getNativeComponentAttributes(uiViewClassName: string): any {\n  const viewConfig = UIManager.getViewManagerConfig(uiViewClassName);\n\n  invariant(\n    viewConfig != null && viewConfig.NativeProps != null,\n    'requireNativeComponent: \"%s\" was not found in the UIManager.',\n    uiViewClassName,\n  );\n\n  // TODO: This seems like a whole lot of runtime initialization for every\n  // native component that can be either avoided or simplified.\n  let {baseModuleName, bubblingEventTypes, directEventTypes} = viewConfig;\n  let nativeProps = viewConfig.NativeProps;\n\n  bubblingEventTypes = bubblingEventTypes ?? {};\n  directEventTypes = directEventTypes ?? {};\n\n  while (baseModuleName) {\n    const baseModule = UIManager.getViewManagerConfig(baseModuleName);\n    if (!baseModule) {\n      baseModuleName = null;\n    } else {\n      bubblingEventTypes = {\n        ...baseModule.bubblingEventTypes,\n        ...bubblingEventTypes,\n      };\n      directEventTypes = {\n        ...baseModule.directEventTypes,\n        ...directEventTypes,\n      };\n      nativeProps = {\n        ...baseModule.NativeProps,\n        ...nativeProps,\n      };\n      baseModuleName = baseModule.baseModuleName;\n    }\n  }\n\n  const validAttributes: {[string]: mixed} = {};\n\n  for (const key in nativeProps) {\n    const typeName = nativeProps[key];\n    const diff = getDifferForType(typeName);\n    const process = getProcessorForType(typeName);\n\n    // If diff or process == null, omit the corresponding property from the Attribute\n    // Why:\n    //  1. Consistency with AttributeType flow type\n    //  2. Consistency with Static View Configs, which omit the null properties\n    validAttributes[key] =\n      diff == null\n        ? process == null\n          ? true\n          : {process}\n        : process == null\n        ? {diff}\n        : {diff, process};\n  }\n\n  // Unfortunately, the current setup declares style properties as top-level\n  // props. This makes it so we allow style properties in the `style` prop.\n  // TODO: Move style properties into a `style` prop and disallow them as\n  // top-level props on the native side.\n  validAttributes.style = ReactNativeStyleAttributes;\n\n  Object.assign(viewConfig, {\n    uiViewClassName,\n    validAttributes,\n    bubblingEventTypes,\n    directEventTypes,\n  });\n\n  attachDefaultEventTypes(viewConfig);\n\n  return viewConfig;\n}\n\nfunction attachDefaultEventTypes(viewConfig: any) {\n  // This is supported on UIManager platforms (ex: Android),\n  // as lazy view managers are not implemented for all platforms.\n  // See [UIManager] for details on constants and implementations.\n  const constants = UIManager.getConstants();\n  if (constants.ViewManagerNames || constants.LazyViewManagersEnabled) {\n    // Lazy view managers enabled.\n    viewConfig = merge(viewConfig, UIManager.getDefaultEventTypes());\n  } else {\n    viewConfig.bubblingEventTypes = merge(\n      viewConfig.bubblingEventTypes,\n      constants.genericBubblingEventTypes,\n    );\n    viewConfig.directEventTypes = merge(\n      viewConfig.directEventTypes,\n      constants.genericDirectEventTypes,\n    );\n  }\n}\n\n// TODO: Figure out how to avoid all this runtime initialization cost.\nfunction merge(destination: ?Object, source: ?Object): ?Object {\n  if (!source) {\n    return destination;\n  }\n  if (!destination) {\n    return source;\n  }\n\n  for (const key in source) {\n    if (!source.hasOwnProperty(key)) {\n      continue;\n    }\n\n    let sourceValue = source[key];\n    if (destination.hasOwnProperty(key)) {\n      const destinationValue = destination[key];\n      if (\n        typeof sourceValue === 'object' &&\n        typeof destinationValue === 'object'\n      ) {\n        sourceValue = merge(destinationValue, sourceValue);\n      }\n    }\n    destination[key] = sourceValue;\n  }\n  return destination;\n}\n\nfunction getDifferForType(\n  typeName: string,\n): ?(prevProp: any, nextProp: any) => boolean {\n  switch (typeName) {\n    // iOS Types\n    case 'CATransform3D':\n      return matricesDiffer;\n    case 'CGPoint':\n      return pointsDiffer;\n    case 'CGSize':\n      return sizesDiffer;\n    case 'UIEdgeInsets':\n      return insetsDiffer;\n    // Android Types\n    case 'Point':\n      return pointsDiffer;\n    case 'EdgeInsets':\n      return insetsDiffer;\n  }\n  return null;\n}\n\nfunction getProcessorForType(typeName: string): ?(nextProp: any) => any {\n  switch (typeName) {\n    // iOS Types\n    case 'CGColor':\n    case 'UIColor':\n      return processColor;\n    case 'CGColorArray':\n    case 'UIColorArray':\n      return processColorArray;\n    case 'CGImage':\n    case 'UIImage':\n    case 'RCTImageSource':\n      return resolveAssetSource;\n    // Android Types\n    case 'Color':\n      return processColor;\n    case 'ColorArray':\n      return processColorArray;\n    case 'ImageSource':\n      return resolveAssetSource;\n  }\n  return null;\n}\n\nmodule.exports = getNativeComponentAttributes;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
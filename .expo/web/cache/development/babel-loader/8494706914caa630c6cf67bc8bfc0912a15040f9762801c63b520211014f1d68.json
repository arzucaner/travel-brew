{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.googleMapIsInstalled = exports.createNotSupportedComponent = exports.getNativeMapName = exports.ProviderContext = exports.NOT_SUPPORTED = exports.USES_DEFAULT_IMPLEMENTATION = exports.SUPPORTED = void 0;\nvar react_1 = require(\"react\");\nvar react_native_1 = require(\"react-native-web/dist/index\");\nvar ProviderConstants_1 = require(\"./ProviderConstants\");\nexports.SUPPORTED = 'SUPPORTED';\nexports.USES_DEFAULT_IMPLEMENTATION = 'USES_DEFAULT_IMPLEMENTATION';\nexports.NOT_SUPPORTED = 'NOT_SUPPORTED';\nexports.ProviderContext = (0, react_1.createContext)(undefined);\nfunction getNativeMapName(provider) {\n  if (react_native_1.Platform.OS === 'android') {\n    return 'AIRMap';\n  }\n  if (provider === ProviderConstants_1.PROVIDER_GOOGLE) {\n    return 'AIRGoogleMap';\n  }\n  return 'AIRMap';\n}\nexports.getNativeMapName = getNativeMapName;\nfunction getNativeComponentName(provider, component) {\n  return `${getNativeMapName(provider)}${component}`;\n}\nvar createNotSupportedComponent = function createNotSupportedComponent(message) {\n  return function () {\n    console.error(message);\n    return null;\n  };\n};\nexports.createNotSupportedComponent = createNotSupportedComponent;\nexports.googleMapIsInstalled = !!react_native_1.UIManager.getViewManagerConfig(getNativeMapName(ProviderConstants_1.PROVIDER_GOOGLE));\nfunction decorateMapComponent(Component, componentName, providers) {\n  var components = {};\n  var getDefaultComponent = function getDefaultComponent() {\n    return (0, react_native_1.requireNativeComponent)(getNativeComponentName(undefined, componentName));\n  };\n  Component.contextType = exports.ProviderContext;\n  Component.prototype.getNativeComponent = function getNativeComponent() {\n    var provider = this.context;\n    var key = provider || 'default';\n    if (components[key]) {\n      return components[key];\n    }\n    if (provider === ProviderConstants_1.PROVIDER_DEFAULT) {\n      components[key] = getDefaultComponent();\n      return components[key];\n    }\n    var providerInfo = providers[provider];\n    if (react_native_1.Platform.OS !== 'android' && react_native_1.Platform.OS !== 'ios') {\n      throw new Error(`react-native-maps doesn't support ${react_native_1.Platform.OS}`);\n    }\n    var platformSupport = providerInfo[react_native_1.Platform.OS];\n    var nativeComponentName = getNativeComponentName(provider, componentName);\n    if (platformSupport === exports.NOT_SUPPORTED) {\n      components[key] = (0, exports.createNotSupportedComponent)(`react-native-maps: ${nativeComponentName} is not supported on ${react_native_1.Platform.OS}`);\n    } else if (platformSupport === exports.SUPPORTED) {\n      if (provider !== ProviderConstants_1.PROVIDER_GOOGLE || react_native_1.Platform.OS === 'ios' && exports.googleMapIsInstalled) {\n        components[key] = (0, react_native_1.requireNativeComponent)(nativeComponentName);\n      }\n    } else {\n      if (!components.default) {\n        components.default = getDefaultComponent();\n      }\n      components[key] = components.default;\n    }\n    return components[key];\n  };\n  Component.prototype.getUIManagerCommand = function getUIManagerCommand(name) {\n    var nativeComponentName = getNativeComponentName(this.context, componentName);\n    return react_native_1.UIManager.getViewManagerConfig(nativeComponentName).Commands[name];\n  };\n  Component.prototype.getMapManagerCommand = function getMapManagerCommand(name) {\n    var nativeComponentName = `${getNativeComponentName(this.context, componentName)}Manager`;\n    return react_native_1.NativeModules[nativeComponentName][name];\n  };\n  return Component;\n}\nexports.default = decorateMapComponent;","map":{"version":3,"names":["Object","defineProperty","exports","value","googleMapIsInstalled","createNotSupportedComponent","getNativeMapName","ProviderContext","NOT_SUPPORTED","USES_DEFAULT_IMPLEMENTATION","SUPPORTED","react_1","require","react_native_1","ProviderConstants_1","createContext","undefined","provider","Platform","OS","PROVIDER_GOOGLE","getNativeComponentName","component","message","console","error","UIManager","getViewManagerConfig","decorateMapComponent","Component","componentName","providers","components","getDefaultComponent","requireNativeComponent","contextType","prototype","getNativeComponent","context","key","PROVIDER_DEFAULT","providerInfo","Error","platformSupport","nativeComponentName","default","getUIManagerCommand","name","Commands","getMapManagerCommand","NativeModules"],"sources":["C:/Users/arzug/Documents/GitHub/travel-brew/node_modules/react-native-maps/lib/decorateMapComponent.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.googleMapIsInstalled = exports.createNotSupportedComponent = exports.getNativeMapName = exports.ProviderContext = exports.NOT_SUPPORTED = exports.USES_DEFAULT_IMPLEMENTATION = exports.SUPPORTED = void 0;\nconst react_1 = require(\"react\");\nconst react_native_1 = require(\"react-native\");\nconst ProviderConstants_1 = require(\"./ProviderConstants\");\nexports.SUPPORTED = 'SUPPORTED';\nexports.USES_DEFAULT_IMPLEMENTATION = 'USES_DEFAULT_IMPLEMENTATION';\nexports.NOT_SUPPORTED = 'NOT_SUPPORTED';\nexports.ProviderContext = (0, react_1.createContext)(undefined);\nfunction getNativeMapName(provider) {\n    if (react_native_1.Platform.OS === 'android') {\n        return 'AIRMap';\n    }\n    if (provider === ProviderConstants_1.PROVIDER_GOOGLE) {\n        return 'AIRGoogleMap';\n    }\n    return 'AIRMap';\n}\nexports.getNativeMapName = getNativeMapName;\nfunction getNativeComponentName(provider, component) {\n    return `${getNativeMapName(provider)}${component}`;\n}\nconst createNotSupportedComponent = (message) => () => {\n    console.error(message);\n    return null;\n};\nexports.createNotSupportedComponent = createNotSupportedComponent;\nexports.googleMapIsInstalled = !!react_native_1.UIManager.getViewManagerConfig(getNativeMapName(ProviderConstants_1.PROVIDER_GOOGLE));\nfunction decorateMapComponent(Component, componentName, providers) {\n    const components = {};\n    const getDefaultComponent = () => (0, react_native_1.requireNativeComponent)(getNativeComponentName(undefined, componentName));\n    Component.contextType = exports.ProviderContext;\n    Component.prototype.getNativeComponent =\n        function getNativeComponent() {\n            const provider = this.context;\n            const key = provider || 'default';\n            if (components[key]) {\n                return components[key];\n            }\n            if (provider === ProviderConstants_1.PROVIDER_DEFAULT) {\n                components[key] = getDefaultComponent();\n                return components[key];\n            }\n            const providerInfo = providers[provider];\n            // quick fix. Previous code assumed android | ios\n            if (react_native_1.Platform.OS !== 'android' && react_native_1.Platform.OS !== 'ios') {\n                throw new Error(`react-native-maps doesn't support ${react_native_1.Platform.OS}`);\n            }\n            const platformSupport = providerInfo[react_native_1.Platform.OS];\n            const nativeComponentName = getNativeComponentName(provider, componentName);\n            if (platformSupport === exports.NOT_SUPPORTED) {\n                components[key] = (0, exports.createNotSupportedComponent)(`react-native-maps: ${nativeComponentName} is not supported on ${react_native_1.Platform.OS}`);\n            }\n            else if (platformSupport === exports.SUPPORTED) {\n                if (provider !== ProviderConstants_1.PROVIDER_GOOGLE ||\n                    (react_native_1.Platform.OS === 'ios' && exports.googleMapIsInstalled)) {\n                    components[key] = (0, react_native_1.requireNativeComponent)(nativeComponentName);\n                }\n            }\n            else {\n                // (platformSupport === USES_DEFAULT_IMPLEMENTATION)\n                if (!components.default) {\n                    components.default = getDefaultComponent();\n                }\n                components[key] = components.default;\n            }\n            return components[key];\n        };\n    Component.prototype.getUIManagerCommand = function getUIManagerCommand(name) {\n        const nativeComponentName = getNativeComponentName(this.context, componentName);\n        return react_native_1.UIManager.getViewManagerConfig(nativeComponentName).Commands[name];\n    };\n    Component.prototype.getMapManagerCommand = function getMapManagerCommand(name) {\n        const nativeComponentName = `${getNativeComponentName(this.context, componentName)}Manager`;\n        return react_native_1.NativeModules[nativeComponentName][name];\n    };\n    return Component;\n}\nexports.default = decorateMapComponent;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"import * as TurboModuleRegistry from \"../TurboModule/TurboModuleRegistry\";\nexport default TurboModuleRegistry.get('NativePerformanceObserverCxx');","map":{"version":3,"names":["TurboModuleRegistry","get"],"sources":["C:/Users/arzug/Documents/GitHub/travel-brew/node_modules/react-native/Libraries/WebPerformance/NativePerformanceObserver.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nimport type {TurboModule} from '../TurboModule/RCTExport';\n\nimport * as TurboModuleRegistry from '../TurboModule/TurboModuleRegistry';\n\nexport type RawPerformanceEntryType = number;\n\nexport type RawPerformanceEntry = {|\n  name: string,\n  entryType: RawPerformanceEntryType,\n  startTime: number,\n  duration: number,\n  // For \"event\" entries only:\n  processingStart?: number,\n  processingEnd?: number,\n  interactionId?: number,\n|};\n\nexport type GetPendingEntriesResult = {|\n  entries: $ReadOnlyArray<RawPerformanceEntry>,\n  droppedEntriesCount: number,\n|};\n\nexport interface Spec extends TurboModule {\n  +startReporting: (entryType: RawPerformanceEntryType) => void;\n  +stopReporting: (entryType: RawPerformanceEntryType) => void;\n  +popPendingEntries: () => GetPendingEntriesResult;\n  +setOnPerformanceEntryCallback: (callback?: () => void) => void;\n  +logRawEntry: (entry: RawPerformanceEntry) => void;\n  +getEventCounts: () => $ReadOnlyArray<[string, number]>;\n  +setDurationThreshold: (\n    entryType: RawPerformanceEntryType,\n    durationThreshold: number,\n  ) => void;\n  +clearEntries: (\n    entryType: RawPerformanceEntryType,\n    entryName?: string,\n  ) => void;\n  +getEntries: (\n    entryType?: RawPerformanceEntryType,\n    entryName?: string,\n  ) => $ReadOnlyArray<RawPerformanceEntry>;\n}\n\nexport default (TurboModuleRegistry.get<Spec>(\n  'NativePerformanceObserverCxx',\n): ?Spec);\n"],"mappings":"AAYA,OAAO,KAAKA,mBAAmB;AAyC/B,eAAgBA,mBAAmB,CAACC,GAAG,CACrC,8BACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
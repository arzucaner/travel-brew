{"ast":null,"code":"import { useCallback } from 'react';\nexport default function useMergeRefs() {\n  for (var _len = arguments.length, refs = new Array(_len), _key = 0; _key < _len; _key++) {\n    refs[_key] = arguments[_key];\n  }\n  return useCallback(function (current) {\n    for (var ref of refs) {\n      if (ref != null) {\n        if (typeof ref === 'function') {\n          ref(current);\n        } else {\n          ref.current = current;\n        }\n      }\n    }\n  }, [].concat(refs));\n}","map":{"version":3,"names":["useCallback","useMergeRefs","_len","arguments","length","refs","Array","_key","current","ref","concat"],"sources":["C:/Users/arzug/Documents/GitHub/travel-brew/node_modules/react-native/Libraries/Utilities/useMergeRefs.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nimport {useCallback} from 'react';\n\ntype CallbackRef<T> = T => mixed;\ntype ObjectRef<T> = {current: T, ...};\n\ntype Ref<T> = CallbackRef<T> | ObjectRef<T>;\n\n/**\n * Constructs a new ref that forwards new values to each of the given refs. The\n * given refs will always be invoked in the order that they are supplied.\n *\n * WARNING: A known problem of merging refs using this approach is that if any\n * of the given refs change, the returned callback ref will also be changed. If\n * the returned callback ref is supplied as a `ref` to a React element, this may\n * lead to problems with the given refs being invoked more times than desired.\n */\nexport default function useMergeRefs<T>(\n  ...refs: $ReadOnlyArray<?Ref<T>>\n): CallbackRef<T> {\n  return useCallback(\n    (current: T) => {\n      for (const ref of refs) {\n        if (ref != null) {\n          if (typeof ref === 'function') {\n            ref(current);\n          } else {\n            ref.current = current;\n          }\n        }\n      }\n    },\n    [...refs], // eslint-disable-line react-hooks/exhaustive-deps\n  );\n}\n"],"mappings":"AAUA,SAAQA,WAAW,QAAO,OAAO;AAgBjC,eAAe,SAASC,YAAYA,CAAA,EAElB;EAAA,SAAAC,IAAA,GAAAC,SAAA,CAAAC,MAAA,EADbC,IAAI,OAAAC,KAAA,CAAAJ,IAAA,GAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;IAAJF,IAAI,CAAAE,IAAA,IAAAJ,SAAA,CAAAI,IAAA;EAAA;EAEP,OAAOP,WAAW,CAChB,UAACQ,OAAU,EAAK;IACd,KAAK,IAAMC,GAAG,IAAIJ,IAAI,EAAE;MACtB,IAAII,GAAG,IAAI,IAAI,EAAE;QACf,IAAI,OAAOA,GAAG,KAAK,UAAU,EAAE;UAC7BA,GAAG,CAACD,OAAO,CAAC;QACd,CAAC,MAAM;UACLC,GAAG,CAACD,OAAO,GAAGA,OAAO;QACvB;MACF;IACF;EACF,CAAC,KAAAE,MAAA,CACGL,IAAI,CACV,CAAC;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}
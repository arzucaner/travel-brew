{"ast":null,"code":"import EventEmitter from \"../vendor/emitter/EventEmitter\";\nvar RCTDeviceEventEmitter = new EventEmitter();\nObject.defineProperty(global, '__rctDeviceEventEmitter', {\n  configurable: true,\n  value: RCTDeviceEventEmitter\n});\nexport default RCTDeviceEventEmitter;","map":{"version":3,"names":["EventEmitter","RCTDeviceEventEmitter","Object","defineProperty","global","configurable","value"],"sources":["C:/Users/arzug/Documents/GitHub/travel-brew/node_modules/react-native/Libraries/EventEmitter/RCTDeviceEventEmitter.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nimport type {IEventEmitter} from '../vendor/emitter/EventEmitter';\n\nimport EventEmitter from '../vendor/emitter/EventEmitter';\n\n// FIXME: use typed events\ntype RCTDeviceEventDefinitions = $FlowFixMe;\n\n/**\n * Global EventEmitter used by the native platform to emit events to JavaScript.\n * Events are identified by globally unique event names.\n *\n * NativeModules that emit events should instead subclass `NativeEventEmitter`.\n */\nconst RCTDeviceEventEmitter: IEventEmitter<RCTDeviceEventDefinitions> =\n  new EventEmitter();\n\nObject.defineProperty(global, '__rctDeviceEventEmitter', {\n  configurable: true,\n  value: RCTDeviceEventEmitter,\n});\n\nexport default (RCTDeviceEventEmitter: IEventEmitter<RCTDeviceEventDefinitions>);\n"],"mappings":"AAYA,OAAOA,YAAY;AAWnB,IAAMC,qBAA+D,GACnE,IAAID,YAAY,CAAC,CAAC;AAEpBE,MAAM,CAACC,cAAc,CAACC,MAAM,EAAE,yBAAyB,EAAE;EACvDC,YAAY,EAAE,IAAI;EAClBC,KAAK,EAAEL;AACT,CAAC,CAAC;AAEF,eAAgBA,qBAAqB"},"metadata":{},"sourceType":"module","externalDependencies":[]}
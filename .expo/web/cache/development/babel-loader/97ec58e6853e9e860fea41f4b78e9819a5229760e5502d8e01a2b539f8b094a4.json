{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport findNodeHandle from \"react-native-web/dist/exports/findNodeHandle\";\nimport Batchinator from \"../Interaction/Batchinator\";\nimport clamp from \"../Utilities/clamp\";\nimport infoLog from \"../Utilities/infoLog\";\nimport { CellRenderMask } from \"./CellRenderMask\";\nimport ChildListCollection from \"./ChildListCollection\";\nimport FillRateHelper from \"./FillRateHelper\";\nimport StateSafePureComponent from \"./StateSafePureComponent\";\nimport ViewabilityHelper from \"./ViewabilityHelper\";\nimport CellRenderer from \"./VirtualizedListCellRenderer\";\nimport { VirtualizedListCellContextProvider, VirtualizedListContext, VirtualizedListContextProvider } from \"./VirtualizedListContext.js\";\nimport { computeWindowedRenderLimits, keyExtractor as defaultKeyExtractor } from \"./VirtualizeUtils\";\nimport invariant from 'invariant';\nimport nullthrows from 'nullthrows';\nimport * as React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ON_EDGE_REACHED_EPSILON = 0.001;\nvar _usedIndexForKey = false;\nvar _keylessItemComponentName = '';\nfunction horizontalOrDefault(horizontal) {\n  return horizontal != null ? horizontal : false;\n}\nfunction initialNumToRenderOrDefault(initialNumToRender) {\n  return initialNumToRender != null ? initialNumToRender : 10;\n}\nfunction maxToRenderPerBatchOrDefault(maxToRenderPerBatch) {\n  return maxToRenderPerBatch != null ? maxToRenderPerBatch : 10;\n}\nfunction onStartReachedThresholdOrDefault(onStartReachedThreshold) {\n  return onStartReachedThreshold != null ? onStartReachedThreshold : 2;\n}\nfunction onEndReachedThresholdOrDefault(onEndReachedThreshold) {\n  return onEndReachedThreshold != null ? onEndReachedThreshold : 2;\n}\nfunction getScrollingThreshold(threshold, visibleLength) {\n  return threshold * visibleLength / 2;\n}\nfunction scrollEventThrottleOrDefault(scrollEventThrottle) {\n  return scrollEventThrottle != null ? scrollEventThrottle : 50;\n}\nfunction windowSizeOrDefault(windowSize) {\n  return windowSize != null ? windowSize : 21;\n}\nfunction findLastWhere(arr, predicate) {\n  for (var i = arr.length - 1; i >= 0; i--) {\n    if (predicate(arr[i])) {\n      return arr[i];\n    }\n  }\n  return null;\n}\nvar VirtualizedList = function (_StateSafePureCompone) {\n  _inherits(VirtualizedList, _StateSafePureCompone);\n  var _super = _createSuper(VirtualizedList);\n  function VirtualizedList(_props) {\n    var _this$props$updateCel, _this$props$maintainV, _this$props$maintainV2;\n    var _this;\n    _classCallCheck(this, VirtualizedList);\n    _this = _super.call(this, _props);\n    _this._getScrollMetrics = function () {\n      return _this._scrollMetrics;\n    };\n    _this._getOutermostParentListRef = function () {\n      if (_this._isNestedWithSameOrientation()) {\n        return _this.context.getOutermostParentListRef();\n      } else {\n        return _assertThisInitialized(_this);\n      }\n    };\n    _this._registerAsNestedChild = function (childList) {\n      _this._nestedChildLists.add(childList.ref, childList.cellKey);\n      if (_this._hasInteracted) {\n        childList.ref.recordInteraction();\n      }\n    };\n    _this._unregisterAsNestedChild = function (childList) {\n      _this._nestedChildLists.remove(childList.ref);\n    };\n    _this._onUpdateSeparators = function (keys, newProps) {\n      keys.forEach(function (key) {\n        var ref = key != null && _this._cellRefs[key];\n        ref && ref.updateSeparatorProps(newProps);\n      });\n    };\n    _this._getSpacerKey = function (isVertical) {\n      return isVertical ? 'height' : 'width';\n    };\n    _this._averageCellLength = 0;\n    _this._cellRefs = {};\n    _this._frames = {};\n    _this._footerLength = 0;\n    _this._hasTriggeredInitialScrollToIndex = false;\n    _this._hasInteracted = false;\n    _this._hasMore = false;\n    _this._hasWarned = {};\n    _this._headerLength = 0;\n    _this._hiPriInProgress = false;\n    _this._highestMeasuredFrameIndex = 0;\n    _this._indicesToKeys = new Map();\n    _this._lastFocusedCellKey = null;\n    _this._nestedChildLists = new ChildListCollection();\n    _this._offsetFromParentVirtualizedList = 0;\n    _this._prevParentOffset = 0;\n    _this._scrollMetrics = {\n      contentLength: 0,\n      dOffset: 0,\n      dt: 10,\n      offset: 0,\n      timestamp: 0,\n      velocity: 0,\n      visibleLength: 0,\n      zoomScale: 1\n    };\n    _this._scrollRef = null;\n    _this._sentStartForContentLength = 0;\n    _this._sentEndForContentLength = 0;\n    _this._totalCellLength = 0;\n    _this._totalCellsMeasured = 0;\n    _this._viewabilityTuples = [];\n    _this._captureScrollRef = function (ref) {\n      _this._scrollRef = ref;\n    };\n    _this._defaultRenderScrollComponent = function (props) {\n      var onRefresh = props.onRefresh;\n      if (_this._isNestedWithSameOrientation()) {\n        return _jsx(View, _objectSpread({}, props));\n      } else if (onRefresh) {\n        var _props$refreshing;\n        invariant(typeof props.refreshing === 'boolean', '`refreshing` prop must be set as a boolean in order to use `onRefresh`, but got `' + JSON.stringify((_props$refreshing = props.refreshing) != null ? _props$refreshing : 'undefined') + '`');\n        return _jsx(ScrollView, _objectSpread(_objectSpread({}, props), {}, {\n          refreshControl: props.refreshControl == null ? _jsx(RefreshControl, {\n            refreshing: props.refreshing,\n            onRefresh: onRefresh,\n            progressViewOffset: props.progressViewOffset\n          }) : props.refreshControl\n        }));\n      } else {\n        return _jsx(ScrollView, _objectSpread({}, props));\n      }\n    };\n    _this._onCellLayout = function (e, cellKey, index) {\n      var layout = e.nativeEvent.layout;\n      var next = {\n        offset: _this._selectOffset(layout),\n        length: _this._selectLength(layout),\n        index: index,\n        inLayout: true\n      };\n      var curr = _this._frames[cellKey];\n      if (!curr || next.offset !== curr.offset || next.length !== curr.length || index !== curr.index) {\n        _this._totalCellLength += next.length - (curr ? curr.length : 0);\n        _this._totalCellsMeasured += curr ? 0 : 1;\n        _this._averageCellLength = _this._totalCellLength / _this._totalCellsMeasured;\n        _this._frames[cellKey] = next;\n        _this._highestMeasuredFrameIndex = Math.max(_this._highestMeasuredFrameIndex, index);\n        _this._scheduleCellsToRenderUpdate();\n      } else {\n        _this._frames[cellKey].inLayout = true;\n      }\n      _this._triggerRemeasureForChildListsInCell(cellKey);\n      _this._computeBlankness();\n      _this._updateViewableItems(_this.props, _this.state.cellsAroundViewport);\n    };\n    _this._onCellUnmount = function (cellKey) {\n      delete _this._cellRefs[cellKey];\n      var curr = _this._frames[cellKey];\n      if (curr) {\n        _this._frames[cellKey] = _objectSpread(_objectSpread({}, curr), {}, {\n          inLayout: false\n        });\n      }\n    };\n    _this._onLayout = function (e) {\n      if (_this._isNestedWithSameOrientation()) {\n        _this.measureLayoutRelativeToContainingList();\n      } else {\n        _this._scrollMetrics.visibleLength = _this._selectLength(e.nativeEvent.layout);\n      }\n      _this.props.onLayout && _this.props.onLayout(e);\n      _this._scheduleCellsToRenderUpdate();\n      _this._maybeCallOnEdgeReached();\n    };\n    _this._onLayoutEmpty = function (e) {\n      _this.props.onLayout && _this.props.onLayout(e);\n    };\n    _this._onLayoutFooter = function (e) {\n      _this._triggerRemeasureForChildListsInCell(_this._getFooterCellKey());\n      _this._footerLength = _this._selectLength(e.nativeEvent.layout);\n    };\n    _this._onLayoutHeader = function (e) {\n      _this._headerLength = _this._selectLength(e.nativeEvent.layout);\n    };\n    _this._onContentSizeChange = function (width, height) {\n      if (width > 0 && height > 0 && _this.props.initialScrollIndex != null && _this.props.initialScrollIndex > 0 && !_this._hasTriggeredInitialScrollToIndex) {\n        if (_this.props.contentOffset == null) {\n          if (_this.props.initialScrollIndex < _this.props.getItemCount(_this.props.data)) {\n            _this.scrollToIndex({\n              animated: false,\n              index: nullthrows(_this.props.initialScrollIndex)\n            });\n          } else {\n            _this.scrollToEnd({\n              animated: false\n            });\n          }\n        }\n        _this._hasTriggeredInitialScrollToIndex = true;\n      }\n      if (_this.props.onContentSizeChange) {\n        _this.props.onContentSizeChange(width, height);\n      }\n      _this._scrollMetrics.contentLength = _this._selectLength({\n        height: height,\n        width: width\n      });\n      _this._scheduleCellsToRenderUpdate();\n      _this._maybeCallOnEdgeReached();\n    };\n    _this._convertParentScrollMetrics = function (metrics) {\n      var offset = metrics.offset - _this._offsetFromParentVirtualizedList;\n      var visibleLength = metrics.visibleLength;\n      var dOffset = offset - _this._scrollMetrics.offset;\n      var contentLength = _this._scrollMetrics.contentLength;\n      return {\n        visibleLength: visibleLength,\n        contentLength: contentLength,\n        offset: offset,\n        dOffset: dOffset\n      };\n    };\n    _this._onScroll = function (e) {\n      _this._nestedChildLists.forEach(function (childList) {\n        childList._onScroll(e);\n      });\n      if (_this.props.onScroll) {\n        _this.props.onScroll(e);\n      }\n      var timestamp = e.timeStamp;\n      var visibleLength = _this._selectLength(e.nativeEvent.layoutMeasurement);\n      var contentLength = _this._selectLength(e.nativeEvent.contentSize);\n      var offset = _this._selectOffset(e.nativeEvent.contentOffset);\n      var dOffset = offset - _this._scrollMetrics.offset;\n      if (_this._isNestedWithSameOrientation()) {\n        if (_this._scrollMetrics.contentLength === 0) {\n          return;\n        }\n        var _this$_convertParentS = _this._convertParentScrollMetrics({\n          visibleLength: visibleLength,\n          offset: offset\n        });\n        visibleLength = _this$_convertParentS.visibleLength;\n        contentLength = _this$_convertParentS.contentLength;\n        offset = _this$_convertParentS.offset;\n        dOffset = _this$_convertParentS.dOffset;\n      }\n      var dt = _this._scrollMetrics.timestamp ? Math.max(1, timestamp - _this._scrollMetrics.timestamp) : 1;\n      var velocity = dOffset / dt;\n      if (dt > 500 && _this._scrollMetrics.dt > 500 && contentLength > 5 * visibleLength && !_this._hasWarned.perf) {\n        infoLog('VirtualizedList: You have a large list that is slow to update - make sure your ' + 'renderItem function renders components that follow React performance best practices ' + 'like PureComponent, shouldComponentUpdate, etc.', {\n          dt: dt,\n          prevDt: _this._scrollMetrics.dt,\n          contentLength: contentLength\n        });\n        _this._hasWarned.perf = true;\n      }\n      var zoomScale = e.nativeEvent.zoomScale < 0 ? 1 : e.nativeEvent.zoomScale;\n      _this._scrollMetrics = {\n        contentLength: contentLength,\n        dt: dt,\n        dOffset: dOffset,\n        offset: offset,\n        timestamp: timestamp,\n        velocity: velocity,\n        visibleLength: visibleLength,\n        zoomScale: zoomScale\n      };\n      if (_this.state.pendingScrollUpdateCount > 0) {\n        _this.setState(function (state) {\n          return {\n            pendingScrollUpdateCount: state.pendingScrollUpdateCount - 1\n          };\n        });\n      }\n      _this._updateViewableItems(_this.props, _this.state.cellsAroundViewport);\n      if (!_this.props) {\n        return;\n      }\n      _this._maybeCallOnEdgeReached();\n      if (velocity !== 0) {\n        _this._fillRateHelper.activate();\n      }\n      _this._computeBlankness();\n      _this._scheduleCellsToRenderUpdate();\n    };\n    _this._onScrollBeginDrag = function (e) {\n      _this._nestedChildLists.forEach(function (childList) {\n        childList._onScrollBeginDrag(e);\n      });\n      _this._viewabilityTuples.forEach(function (tuple) {\n        tuple.viewabilityHelper.recordInteraction();\n      });\n      _this._hasInteracted = true;\n      _this.props.onScrollBeginDrag && _this.props.onScrollBeginDrag(e);\n    };\n    _this._onScrollEndDrag = function (e) {\n      _this._nestedChildLists.forEach(function (childList) {\n        childList._onScrollEndDrag(e);\n      });\n      var velocity = e.nativeEvent.velocity;\n      if (velocity) {\n        _this._scrollMetrics.velocity = _this._selectOffset(velocity);\n      }\n      _this._computeBlankness();\n      _this.props.onScrollEndDrag && _this.props.onScrollEndDrag(e);\n    };\n    _this._onMomentumScrollBegin = function (e) {\n      _this._nestedChildLists.forEach(function (childList) {\n        childList._onMomentumScrollBegin(e);\n      });\n      _this.props.onMomentumScrollBegin && _this.props.onMomentumScrollBegin(e);\n    };\n    _this._onMomentumScrollEnd = function (e) {\n      _this._nestedChildLists.forEach(function (childList) {\n        childList._onMomentumScrollEnd(e);\n      });\n      _this._scrollMetrics.velocity = 0;\n      _this._computeBlankness();\n      _this.props.onMomentumScrollEnd && _this.props.onMomentumScrollEnd(e);\n    };\n    _this._updateCellsToRender = function () {\n      _this._updateViewableItems(_this.props, _this.state.cellsAroundViewport);\n      _this.setState(function (state, props) {\n        var cellsAroundViewport = _this._adjustCellsAroundViewport(props, state.cellsAroundViewport, state.pendingScrollUpdateCount);\n        var renderMask = VirtualizedList._createRenderMask(props, cellsAroundViewport, _this._getNonViewportRenderRegions(props));\n        if (cellsAroundViewport.first === state.cellsAroundViewport.first && cellsAroundViewport.last === state.cellsAroundViewport.last && renderMask.equals(state.renderMask)) {\n          return null;\n        }\n        return {\n          cellsAroundViewport: cellsAroundViewport,\n          renderMask: renderMask\n        };\n      });\n    };\n    _this._createViewToken = function (index, isViewable, props) {\n      var data = props.data,\n        getItem = props.getItem;\n      var item = getItem(data, index);\n      return {\n        index: index,\n        item: item,\n        key: VirtualizedList._keyExtractor(item, index, props),\n        isViewable: isViewable\n      };\n    };\n    _this._getOffsetApprox = function (index, props) {\n      if (Number.isInteger(index)) {\n        return _this.__getFrameMetricsApprox(index, props).offset;\n      } else {\n        var frameMetrics = _this.__getFrameMetricsApprox(Math.floor(index), props);\n        var remainder = index - Math.floor(index);\n        return frameMetrics.offset + remainder * frameMetrics.length;\n      }\n    };\n    _this.__getFrameMetricsApprox = function (index, props) {\n      var frame = _this._getFrameMetrics(index, props);\n      if (frame && frame.index === index) {\n        return frame;\n      } else {\n        var data = props.data,\n          getItemCount = props.getItemCount,\n          getItemLayout = props.getItemLayout;\n        invariant(index >= 0 && index < getItemCount(data), 'Tried to get frame for out of range index ' + index);\n        invariant(!getItemLayout, 'Should not have to estimate frames when a measurement metrics function is provided');\n        return {\n          length: _this._averageCellLength,\n          offset: _this._averageCellLength * index\n        };\n      }\n    };\n    _this._getFrameMetrics = function (index, props) {\n      var data = props.data,\n        getItemCount = props.getItemCount,\n        getItemLayout = props.getItemLayout;\n      invariant(index >= 0 && index < getItemCount(data), 'Tried to get frame for out of range index ' + index);\n      var frame = _this._frames[VirtualizedList._getItemKey(props, index)];\n      if (!frame || frame.index !== index) {\n        if (getItemLayout) {\n          return getItemLayout(data, index);\n        }\n      }\n      return frame;\n    };\n    _this._getNonViewportRenderRegions = function (props) {\n      if (!(_this._lastFocusedCellKey && _this._cellRefs[_this._lastFocusedCellKey])) {\n        return [];\n      }\n      var lastFocusedCellRenderer = _this._cellRefs[_this._lastFocusedCellKey];\n      var focusedCellIndex = lastFocusedCellRenderer.props.index;\n      var itemCount = props.getItemCount(props.data);\n      if (focusedCellIndex >= itemCount || VirtualizedList._getItemKey(props, focusedCellIndex) !== _this._lastFocusedCellKey) {\n        return [];\n      }\n      var first = focusedCellIndex;\n      var heightOfCellsBeforeFocused = 0;\n      for (var i = first - 1; i >= 0 && heightOfCellsBeforeFocused < _this._scrollMetrics.visibleLength; i--) {\n        first--;\n        heightOfCellsBeforeFocused += _this.__getFrameMetricsApprox(i, props).length;\n      }\n      var last = focusedCellIndex;\n      var heightOfCellsAfterFocused = 0;\n      for (var _i = last + 1; _i < itemCount && heightOfCellsAfterFocused < _this._scrollMetrics.visibleLength; _i++) {\n        last++;\n        heightOfCellsAfterFocused += _this.__getFrameMetricsApprox(_i, props).length;\n      }\n      return [{\n        first: first,\n        last: last\n      }];\n    };\n    _this._checkProps(_props);\n    _this._fillRateHelper = new FillRateHelper(_this._getFrameMetrics);\n    _this._updateCellsToRenderBatcher = new Batchinator(_this._updateCellsToRender, (_this$props$updateCel = _this.props.updateCellsBatchingPeriod) != null ? _this$props$updateCel : 50);\n    if (_this.props.viewabilityConfigCallbackPairs) {\n      _this._viewabilityTuples = _this.props.viewabilityConfigCallbackPairs.map(function (pair) {\n        return {\n          viewabilityHelper: new ViewabilityHelper(pair.viewabilityConfig),\n          onViewableItemsChanged: pair.onViewableItemsChanged\n        };\n      });\n    } else {\n      var _this$props = _this.props,\n        onViewableItemsChanged = _this$props.onViewableItemsChanged,\n        viewabilityConfig = _this$props.viewabilityConfig;\n      if (onViewableItemsChanged) {\n        _this._viewabilityTuples.push({\n          viewabilityHelper: new ViewabilityHelper(viewabilityConfig),\n          onViewableItemsChanged: onViewableItemsChanged\n        });\n      }\n    }\n    var initialRenderRegion = VirtualizedList._initialRenderRegion(_props);\n    var minIndexForVisible = (_this$props$maintainV = (_this$props$maintainV2 = _this.props.maintainVisibleContentPosition) == null ? void 0 : _this$props$maintainV2.minIndexForVisible) != null ? _this$props$maintainV : 0;\n    _this.state = {\n      cellsAroundViewport: initialRenderRegion,\n      renderMask: VirtualizedList._createRenderMask(_props, initialRenderRegion),\n      firstVisibleItemKey: _this.props.getItemCount(_this.props.data) > minIndexForVisible ? VirtualizedList._getItemKey(_this.props, minIndexForVisible) : null,\n      pendingScrollUpdateCount: _this.props.initialScrollIndex != null && _this.props.initialScrollIndex > 0 ? 1 : 0\n    };\n    return _this;\n  }\n  _createClass(VirtualizedList, [{\n    key: \"scrollToEnd\",\n    value: function scrollToEnd(params) {\n      var animated = params ? params.animated : true;\n      var veryLast = this.props.getItemCount(this.props.data) - 1;\n      if (veryLast < 0) {\n        return;\n      }\n      var frame = this.__getFrameMetricsApprox(veryLast, this.props);\n      var offset = Math.max(0, frame.offset + frame.length + this._footerLength - this._scrollMetrics.visibleLength);\n      if (this._scrollRef == null) {\n        return;\n      }\n      if (this._scrollRef.scrollTo == null) {\n        console.warn('No scrollTo method provided. This may be because you have two nested ' + 'VirtualizedLists with the same orientation, or because you are ' + 'using a custom component that does not implement scrollTo.');\n        return;\n      }\n      this._scrollRef.scrollTo(horizontalOrDefault(this.props.horizontal) ? {\n        x: offset,\n        animated: animated\n      } : {\n        y: offset,\n        animated: animated\n      });\n    }\n  }, {\n    key: \"scrollToIndex\",\n    value: function scrollToIndex(params) {\n      var _this$props2 = this.props,\n        data = _this$props2.data,\n        horizontal = _this$props2.horizontal,\n        getItemCount = _this$props2.getItemCount,\n        getItemLayout = _this$props2.getItemLayout,\n        onScrollToIndexFailed = _this$props2.onScrollToIndexFailed;\n      var animated = params.animated,\n        index = params.index,\n        viewOffset = params.viewOffset,\n        viewPosition = params.viewPosition;\n      invariant(index >= 0, `scrollToIndex out of range: requested index ${index} but minimum is 0`);\n      invariant(getItemCount(data) >= 1, `scrollToIndex out of range: item length ${getItemCount(data)} but minimum is 1`);\n      invariant(index < getItemCount(data), `scrollToIndex out of range: requested index ${index} is out of 0 to ${getItemCount(data) - 1}`);\n      if (!getItemLayout && index > this._highestMeasuredFrameIndex) {\n        invariant(!!onScrollToIndexFailed, 'scrollToIndex should be used in conjunction with getItemLayout or onScrollToIndexFailed, ' + 'otherwise there is no way to know the location of offscreen indices or handle failures.');\n        onScrollToIndexFailed({\n          averageItemLength: this._averageCellLength,\n          highestMeasuredFrameIndex: this._highestMeasuredFrameIndex,\n          index: index\n        });\n        return;\n      }\n      var frame = this.__getFrameMetricsApprox(Math.floor(index), this.props);\n      var offset = Math.max(0, this._getOffsetApprox(index, this.props) - (viewPosition || 0) * (this._scrollMetrics.visibleLength - frame.length)) - (viewOffset || 0);\n      if (this._scrollRef == null) {\n        return;\n      }\n      if (this._scrollRef.scrollTo == null) {\n        console.warn('No scrollTo method provided. This may be because you have two nested ' + 'VirtualizedLists with the same orientation, or because you are ' + 'using a custom component that does not implement scrollTo.');\n        return;\n      }\n      this._scrollRef.scrollTo(horizontal ? {\n        x: offset,\n        animated: animated\n      } : {\n        y: offset,\n        animated: animated\n      });\n    }\n  }, {\n    key: \"scrollToItem\",\n    value: function scrollToItem(params) {\n      var item = params.item;\n      var _this$props3 = this.props,\n        data = _this$props3.data,\n        getItem = _this$props3.getItem,\n        getItemCount = _this$props3.getItemCount;\n      var itemCount = getItemCount(data);\n      for (var _index = 0; _index < itemCount; _index++) {\n        if (getItem(data, _index) === item) {\n          this.scrollToIndex(_objectSpread(_objectSpread({}, params), {}, {\n            index: _index\n          }));\n          break;\n        }\n      }\n    }\n  }, {\n    key: \"scrollToOffset\",\n    value: function scrollToOffset(params) {\n      var animated = params.animated,\n        offset = params.offset;\n      if (this._scrollRef == null) {\n        return;\n      }\n      if (this._scrollRef.scrollTo == null) {\n        console.warn('No scrollTo method provided. This may be because you have two nested ' + 'VirtualizedLists with the same orientation, or because you are ' + 'using a custom component that does not implement scrollTo.');\n        return;\n      }\n      this._scrollRef.scrollTo(horizontalOrDefault(this.props.horizontal) ? {\n        x: offset,\n        animated: animated\n      } : {\n        y: offset,\n        animated: animated\n      });\n    }\n  }, {\n    key: \"recordInteraction\",\n    value: function recordInteraction() {\n      this._nestedChildLists.forEach(function (childList) {\n        childList.recordInteraction();\n      });\n      this._viewabilityTuples.forEach(function (t) {\n        t.viewabilityHelper.recordInteraction();\n      });\n      this._updateViewableItems(this.props, this.state.cellsAroundViewport);\n    }\n  }, {\n    key: \"flashScrollIndicators\",\n    value: function flashScrollIndicators() {\n      if (this._scrollRef == null) {\n        return;\n      }\n      this._scrollRef.flashScrollIndicators();\n    }\n  }, {\n    key: \"getScrollResponder\",\n    value: function getScrollResponder() {\n      if (this._scrollRef && this._scrollRef.getScrollResponder) {\n        return this._scrollRef.getScrollResponder();\n      }\n    }\n  }, {\n    key: \"getScrollableNode\",\n    value: function getScrollableNode() {\n      if (this._scrollRef && this._scrollRef.getScrollableNode) {\n        return this._scrollRef.getScrollableNode();\n      } else {\n        return findNodeHandle(this._scrollRef);\n      }\n    }\n  }, {\n    key: \"getScrollRef\",\n    value: function getScrollRef() {\n      if (this._scrollRef && this._scrollRef.getScrollRef) {\n        return this._scrollRef.getScrollRef();\n      } else {\n        return this._scrollRef;\n      }\n    }\n  }, {\n    key: \"setNativeProps\",\n    value: function setNativeProps(props) {\n      if (this._scrollRef) {\n        this._scrollRef.setNativeProps(props);\n      }\n    }\n  }, {\n    key: \"_getCellKey\",\n    value: function _getCellKey() {\n      var _this$context;\n      return ((_this$context = this.context) == null ? void 0 : _this$context.cellKey) || 'rootList';\n    }\n  }, {\n    key: \"hasMore\",\n    value: function hasMore() {\n      return this._hasMore;\n    }\n  }, {\n    key: \"_checkProps\",\n    value: function _checkProps(props) {\n      var onScroll = props.onScroll,\n        windowSize = props.windowSize,\n        getItemCount = props.getItemCount,\n        data = props.data,\n        initialScrollIndex = props.initialScrollIndex;\n      invariant(!onScroll || !onScroll.__isNative, 'Components based on VirtualizedList must be wrapped with Animated.createAnimatedComponent ' + 'to support native onScroll events with useNativeDriver');\n      invariant(windowSizeOrDefault(windowSize) > 0, 'VirtualizedList: The windowSize prop must be present and set to a value greater than 0.');\n      invariant(getItemCount, 'VirtualizedList: The \"getItemCount\" prop must be provided');\n      var itemCount = getItemCount(data);\n      if (initialScrollIndex != null && !this._hasTriggeredInitialScrollToIndex && (initialScrollIndex < 0 || itemCount > 0 && initialScrollIndex >= itemCount) && !this._hasWarned.initialScrollIndex) {\n        console.warn(`initialScrollIndex \"${initialScrollIndex}\" is not valid (list has ${itemCount} items)`);\n        this._hasWarned.initialScrollIndex = true;\n      }\n      if (__DEV__ && !this._hasWarned.flexWrap) {\n        var flatStyles = StyleSheet.flatten(this.props.contentContainerStyle);\n        if (flatStyles != null && flatStyles.flexWrap === 'wrap') {\n          console.warn('`flexWrap: `wrap`` is not supported with the `VirtualizedList` components.' + 'Consider using `numColumns` with `FlatList` instead.');\n          this._hasWarned.flexWrap = true;\n        }\n      }\n    }\n  }, {\n    key: \"_adjustCellsAroundViewport\",\n    value: function _adjustCellsAroundViewport(props, cellsAroundViewport, pendingScrollUpdateCount) {\n      var data = props.data,\n        getItemCount = props.getItemCount;\n      var onEndReachedThreshold = onEndReachedThresholdOrDefault(props.onEndReachedThreshold);\n      var _this$_scrollMetrics = this._scrollMetrics,\n        contentLength = _this$_scrollMetrics.contentLength,\n        offset = _this$_scrollMetrics.offset,\n        visibleLength = _this$_scrollMetrics.visibleLength;\n      var distanceFromEnd = contentLength - visibleLength - offset;\n      if (visibleLength <= 0 || contentLength <= 0) {\n        return cellsAroundViewport.last >= getItemCount(data) ? VirtualizedList._constrainToItemCount(cellsAroundViewport, props) : cellsAroundViewport;\n      }\n      var newCellsAroundViewport;\n      if (props.disableVirtualization) {\n        var renderAhead = distanceFromEnd < onEndReachedThreshold * visibleLength ? maxToRenderPerBatchOrDefault(props.maxToRenderPerBatch) : 0;\n        newCellsAroundViewport = {\n          first: 0,\n          last: Math.min(cellsAroundViewport.last + renderAhead, getItemCount(data) - 1)\n        };\n      } else {\n        if (pendingScrollUpdateCount > 0) {\n          return cellsAroundViewport.last >= getItemCount(data) ? VirtualizedList._constrainToItemCount(cellsAroundViewport, props) : cellsAroundViewport;\n        }\n        newCellsAroundViewport = computeWindowedRenderLimits(props, maxToRenderPerBatchOrDefault(props.maxToRenderPerBatch), windowSizeOrDefault(props.windowSize), cellsAroundViewport, this.__getFrameMetricsApprox, this._scrollMetrics);\n        invariant(newCellsAroundViewport.last < getItemCount(data), 'computeWindowedRenderLimits() should return range in-bounds');\n      }\n      if (this._nestedChildLists.size() > 0) {\n        var childIdx = this._findFirstChildWithMore(newCellsAroundViewport.first, newCellsAroundViewport.last);\n        newCellsAroundViewport.last = childIdx != null ? childIdx : newCellsAroundViewport.last;\n      }\n      return newCellsAroundViewport;\n    }\n  }, {\n    key: \"_findFirstChildWithMore\",\n    value: function _findFirstChildWithMore(first, last) {\n      for (var ii = first; ii <= last; ii++) {\n        var cellKeyForIndex = this._indicesToKeys.get(ii);\n        if (cellKeyForIndex != null && this._nestedChildLists.anyInCell(cellKeyForIndex, function (childList) {\n          return childList.hasMore();\n        })) {\n          return ii;\n        }\n      }\n      return null;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this._isNestedWithSameOrientation()) {\n        this.context.registerAsNestedChild({\n          ref: this,\n          cellKey: this.context.cellKey\n        });\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._isNestedWithSameOrientation()) {\n        this.context.unregisterAsNestedChild({\n          ref: this\n        });\n      }\n      this._updateCellsToRenderBatcher.dispose({\n        abort: true\n      });\n      this._viewabilityTuples.forEach(function (tuple) {\n        tuple.viewabilityHelper.dispose();\n      });\n      this._fillRateHelper.deactivateAndFlush();\n    }\n  }, {\n    key: \"_pushCells\",\n    value: function _pushCells(cells, stickyHeaderIndices, stickyIndicesFromProps, first, last, inversionStyle) {\n      var _this2 = this;\n      var _this$props4 = this.props,\n        CellRendererComponent = _this$props4.CellRendererComponent,\n        ItemSeparatorComponent = _this$props4.ItemSeparatorComponent,\n        ListHeaderComponent = _this$props4.ListHeaderComponent,\n        ListItemComponent = _this$props4.ListItemComponent,\n        data = _this$props4.data,\n        debug = _this$props4.debug,\n        getItem = _this$props4.getItem,\n        getItemCount = _this$props4.getItemCount,\n        getItemLayout = _this$props4.getItemLayout,\n        horizontal = _this$props4.horizontal,\n        renderItem = _this$props4.renderItem;\n      var stickyOffset = ListHeaderComponent ? 1 : 0;\n      var end = getItemCount(data) - 1;\n      var prevCellKey;\n      last = Math.min(end, last);\n      var _loop = function _loop() {\n        var item = getItem(data, ii);\n        var key = VirtualizedList._keyExtractor(item, ii, _this2.props);\n        _this2._indicesToKeys.set(ii, key);\n        if (stickyIndicesFromProps.has(ii + stickyOffset)) {\n          stickyHeaderIndices.push(cells.length);\n        }\n        var shouldListenForLayout = getItemLayout == null || debug || _this2._fillRateHelper.enabled();\n        cells.push(_jsx(CellRenderer, _objectSpread({\n          CellRendererComponent: CellRendererComponent,\n          ItemSeparatorComponent: ii < end ? ItemSeparatorComponent : undefined,\n          ListItemComponent: ListItemComponent,\n          cellKey: key,\n          horizontal: horizontal,\n          index: ii,\n          inversionStyle: inversionStyle,\n          item: item,\n          prevCellKey: prevCellKey,\n          onUpdateSeparators: _this2._onUpdateSeparators,\n          onCellFocusCapture: function onCellFocusCapture(e) {\n            return _this2._onCellFocusCapture(key);\n          },\n          onUnmount: _this2._onCellUnmount,\n          ref: function ref(_ref) {\n            _this2._cellRefs[key] = _ref;\n          },\n          renderItem: renderItem\n        }, shouldListenForLayout && {\n          onCellLayout: _this2._onCellLayout\n        }), key));\n        prevCellKey = key;\n      };\n      for (var ii = first; ii <= last; ii++) {\n        _loop();\n      }\n    }\n  }, {\n    key: \"_isNestedWithSameOrientation\",\n    value: function _isNestedWithSameOrientation() {\n      var nestedContext = this.context;\n      return !!(nestedContext && !!nestedContext.horizontal === horizontalOrDefault(this.props.horizontal));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n      this._checkProps(this.props);\n      var _this$props5 = this.props,\n        ListEmptyComponent = _this$props5.ListEmptyComponent,\n        ListFooterComponent = _this$props5.ListFooterComponent,\n        ListHeaderComponent = _this$props5.ListHeaderComponent;\n      var _this$props6 = this.props,\n        data = _this$props6.data,\n        horizontal = _this$props6.horizontal;\n      var inversionStyle = this.props.inverted ? horizontalOrDefault(this.props.horizontal) ? styles.horizontallyInverted : styles.verticallyInverted : null;\n      var cells = [];\n      var stickyIndicesFromProps = new Set(this.props.stickyHeaderIndices);\n      var stickyHeaderIndices = [];\n      if (ListHeaderComponent) {\n        if (stickyIndicesFromProps.has(0)) {\n          stickyHeaderIndices.push(0);\n        }\n        var _element = React.isValidElement(ListHeaderComponent) ? ListHeaderComponent : _jsx(ListHeaderComponent, {});\n        cells.push(_jsx(VirtualizedListCellContextProvider, {\n          cellKey: this._getCellKey() + '-header',\n          children: _jsx(View, {\n            collapsable: false,\n            onLayout: this._onLayoutHeader,\n            style: StyleSheet.compose(inversionStyle, this.props.ListHeaderComponentStyle),\n            children: _element\n          })\n        }, \"$header\"));\n      }\n      var itemCount = this.props.getItemCount(data);\n      if (itemCount === 0 && ListEmptyComponent) {\n        var _element2 = React.isValidElement(ListEmptyComponent) ? ListEmptyComponent : _jsx(ListEmptyComponent, {});\n        cells.push(_jsx(VirtualizedListCellContextProvider, {\n          cellKey: this._getCellKey() + '-empty',\n          children: React.cloneElement(_element2, {\n            onLayout: function onLayout(event) {\n              _this3._onLayoutEmpty(event);\n              if (_element2.props.onLayout) {\n                _element2.props.onLayout(event);\n              }\n            },\n            style: StyleSheet.compose(inversionStyle, _element2.props.style)\n          })\n        }, \"$empty\"));\n      }\n      if (itemCount > 0) {\n        _usedIndexForKey = false;\n        _keylessItemComponentName = '';\n        var spacerKey = this._getSpacerKey(!horizontal);\n        var renderRegions = this.state.renderMask.enumerateRegions();\n        var lastSpacer = findLastWhere(renderRegions, function (r) {\n          return r.isSpacer;\n        });\n        for (var section of renderRegions) {\n          if (section.isSpacer) {\n            if (this.props.disableVirtualization) {\n              continue;\n            }\n            var isLastSpacer = section === lastSpacer;\n            var constrainToMeasured = isLastSpacer && !this.props.getItemLayout;\n            var last = constrainToMeasured ? clamp(section.first - 1, section.last, this._highestMeasuredFrameIndex) : section.last;\n            var firstMetrics = this.__getFrameMetricsApprox(section.first, this.props);\n            var lastMetrics = this.__getFrameMetricsApprox(last, this.props);\n            var spacerSize = lastMetrics.offset + lastMetrics.length - firstMetrics.offset;\n            cells.push(_jsx(View, {\n              style: _defineProperty({}, spacerKey, spacerSize)\n            }, `$spacer-${section.first}`));\n          } else {\n            this._pushCells(cells, stickyHeaderIndices, stickyIndicesFromProps, section.first, section.last, inversionStyle);\n          }\n        }\n        if (!this._hasWarned.keys && _usedIndexForKey) {\n          console.warn('VirtualizedList: missing keys for items, make sure to specify a key or id property on each ' + 'item or provide a custom keyExtractor.', _keylessItemComponentName);\n          this._hasWarned.keys = true;\n        }\n      }\n      if (ListFooterComponent) {\n        var _element3 = React.isValidElement(ListFooterComponent) ? ListFooterComponent : _jsx(ListFooterComponent, {});\n        cells.push(_jsx(VirtualizedListCellContextProvider, {\n          cellKey: this._getFooterCellKey(),\n          children: _jsx(View, {\n            onLayout: this._onLayoutFooter,\n            style: StyleSheet.compose(inversionStyle, this.props.ListFooterComponentStyle),\n            children: _element3\n          })\n        }, \"$footer\"));\n      }\n      var scrollProps = _objectSpread(_objectSpread({}, this.props), {}, {\n        onContentSizeChange: this._onContentSizeChange,\n        onLayout: this._onLayout,\n        onScroll: this._onScroll,\n        onScrollBeginDrag: this._onScrollBeginDrag,\n        onScrollEndDrag: this._onScrollEndDrag,\n        onMomentumScrollBegin: this._onMomentumScrollBegin,\n        onMomentumScrollEnd: this._onMomentumScrollEnd,\n        scrollEventThrottle: scrollEventThrottleOrDefault(this.props.scrollEventThrottle),\n        invertStickyHeaders: this.props.invertStickyHeaders !== undefined ? this.props.invertStickyHeaders : this.props.inverted,\n        stickyHeaderIndices: stickyHeaderIndices,\n        style: inversionStyle ? [inversionStyle, this.props.style] : this.props.style,\n        isInvertedVirtualizedList: this.props.inverted,\n        maintainVisibleContentPosition: this.props.maintainVisibleContentPosition != null ? _objectSpread(_objectSpread({}, this.props.maintainVisibleContentPosition), {}, {\n          minIndexForVisible: this.props.maintainVisibleContentPosition.minIndexForVisible + (this.props.ListHeaderComponent ? 1 : 0)\n        }) : undefined\n      });\n      this._hasMore = this.state.cellsAroundViewport.last < itemCount - 1;\n      var innerRet = _jsx(VirtualizedListContextProvider, {\n        value: {\n          cellKey: null,\n          getScrollMetrics: this._getScrollMetrics,\n          horizontal: horizontalOrDefault(this.props.horizontal),\n          getOutermostParentListRef: this._getOutermostParentListRef,\n          registerAsNestedChild: this._registerAsNestedChild,\n          unregisterAsNestedChild: this._unregisterAsNestedChild\n        },\n        children: React.cloneElement((this.props.renderScrollComponent || this._defaultRenderScrollComponent)(scrollProps), {\n          ref: this._captureScrollRef\n        }, cells)\n      });\n      var ret = innerRet;\n      if (__DEV__) {\n        ret = _jsx(ScrollView.Context.Consumer, {\n          children: function children(scrollContext) {\n            if (scrollContext != null && !scrollContext.horizontal === !horizontalOrDefault(_this3.props.horizontal) && !_this3._hasWarned.nesting && _this3.context == null && _this3.props.scrollEnabled !== false) {\n              console.error('VirtualizedLists should never be nested inside plain ScrollViews with the same ' + 'orientation because it can break windowing and other functionality - use another ' + 'VirtualizedList-backed container instead.');\n              _this3._hasWarned.nesting = true;\n            }\n            return innerRet;\n          }\n        });\n      }\n      if (this.props.debug) {\n        return _jsxs(View, {\n          style: styles.debug,\n          children: [ret, this._renderDebugOverlay()]\n        });\n      } else {\n        return ret;\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this$props7 = this.props,\n        data = _this$props7.data,\n        extraData = _this$props7.extraData;\n      if (data !== prevProps.data || extraData !== prevProps.extraData) {\n        this._viewabilityTuples.forEach(function (tuple) {\n          tuple.viewabilityHelper.resetViewableIndices();\n        });\n      }\n      var hiPriInProgress = this._hiPriInProgress;\n      this._scheduleCellsToRenderUpdate();\n      if (hiPriInProgress) {\n        this._hiPriInProgress = false;\n      }\n    }\n  }, {\n    key: \"_computeBlankness\",\n    value: function _computeBlankness() {\n      this._fillRateHelper.computeBlankness(this.props, this.state.cellsAroundViewport, this._scrollMetrics);\n    }\n  }, {\n    key: \"_onCellFocusCapture\",\n    value: function _onCellFocusCapture(cellKey) {\n      this._lastFocusedCellKey = cellKey;\n      this._updateCellsToRender();\n    }\n  }, {\n    key: \"_triggerRemeasureForChildListsInCell\",\n    value: function _triggerRemeasureForChildListsInCell(cellKey) {\n      this._nestedChildLists.forEachInCell(cellKey, function (childList) {\n        childList.measureLayoutRelativeToContainingList();\n      });\n    }\n  }, {\n    key: \"measureLayoutRelativeToContainingList\",\n    value: function measureLayoutRelativeToContainingList() {\n      var _this4 = this;\n      try {\n        if (!this._scrollRef) {\n          return;\n        }\n        this._scrollRef.measureLayout(this.context.getOutermostParentListRef().getScrollRef(), function (x, y, width, height) {\n          _this4._offsetFromParentVirtualizedList = _this4._selectOffset({\n            x: x,\n            y: y\n          });\n          _this4._scrollMetrics.contentLength = _this4._selectLength({\n            width: width,\n            height: height\n          });\n          var scrollMetrics = _this4._convertParentScrollMetrics(_this4.context.getScrollMetrics());\n          var metricsChanged = _this4._scrollMetrics.visibleLength !== scrollMetrics.visibleLength || _this4._scrollMetrics.offset !== scrollMetrics.offset;\n          if (metricsChanged) {\n            _this4._scrollMetrics.visibleLength = scrollMetrics.visibleLength;\n            _this4._scrollMetrics.offset = scrollMetrics.offset;\n            _this4._nestedChildLists.forEach(function (childList) {\n              childList.measureLayoutRelativeToContainingList();\n            });\n          }\n        }, function (error) {\n          console.warn(\"VirtualizedList: Encountered an error while measuring a list's\" + ' offset from its containing VirtualizedList.');\n        });\n      } catch (error) {\n        console.warn('measureLayoutRelativeToContainingList threw an error', error.stack);\n      }\n    }\n  }, {\n    key: \"_getFooterCellKey\",\n    value: function _getFooterCellKey() {\n      return this._getCellKey() + '-footer';\n    }\n  }, {\n    key: \"_renderDebugOverlay\",\n    value: function _renderDebugOverlay() {\n      var normalize = this._scrollMetrics.visibleLength / (this._scrollMetrics.contentLength || 1);\n      var framesInLayout = [];\n      var itemCount = this.props.getItemCount(this.props.data);\n      for (var ii = 0; ii < itemCount; ii++) {\n        var frame = this.__getFrameMetricsApprox(ii, this.props);\n        if (frame.inLayout) {\n          framesInLayout.push(frame);\n        }\n      }\n      var windowTop = this.__getFrameMetricsApprox(this.state.cellsAroundViewport.first, this.props).offset;\n      var frameLast = this.__getFrameMetricsApprox(this.state.cellsAroundViewport.last, this.props);\n      var windowLen = frameLast.offset + frameLast.length - windowTop;\n      var visTop = this._scrollMetrics.offset;\n      var visLen = this._scrollMetrics.visibleLength;\n      return _jsxs(View, {\n        style: [styles.debugOverlayBase, styles.debugOverlay],\n        children: [framesInLayout.map(function (f, ii) {\n          return _jsx(View, {\n            style: [styles.debugOverlayBase, styles.debugOverlayFrame, {\n              top: f.offset * normalize,\n              height: f.length * normalize\n            }]\n          }, 'f' + ii);\n        }), _jsx(View, {\n          style: [styles.debugOverlayBase, styles.debugOverlayFrameLast, {\n            top: windowTop * normalize,\n            height: windowLen * normalize\n          }]\n        }), _jsx(View, {\n          style: [styles.debugOverlayBase, styles.debugOverlayFrameVis, {\n            top: visTop * normalize,\n            height: visLen * normalize\n          }]\n        })]\n      });\n    }\n  }, {\n    key: \"_selectLength\",\n    value: function _selectLength(metrics) {\n      return !horizontalOrDefault(this.props.horizontal) ? metrics.height : metrics.width;\n    }\n  }, {\n    key: \"_selectOffset\",\n    value: function _selectOffset(metrics) {\n      return !horizontalOrDefault(this.props.horizontal) ? metrics.y : metrics.x;\n    }\n  }, {\n    key: \"_maybeCallOnEdgeReached\",\n    value: function _maybeCallOnEdgeReached() {\n      var _this$props8 = this.props,\n        data = _this$props8.data,\n        getItemCount = _this$props8.getItemCount,\n        onStartReached = _this$props8.onStartReached,\n        onStartReachedThreshold = _this$props8.onStartReachedThreshold,\n        onEndReached = _this$props8.onEndReached,\n        onEndReachedThreshold = _this$props8.onEndReachedThreshold;\n      if (this.state.pendingScrollUpdateCount > 0) {\n        return;\n      }\n      var _this$_scrollMetrics2 = this._scrollMetrics,\n        contentLength = _this$_scrollMetrics2.contentLength,\n        visibleLength = _this$_scrollMetrics2.visibleLength,\n        offset = _this$_scrollMetrics2.offset;\n      var distanceFromStart = offset;\n      var distanceFromEnd = contentLength - visibleLength - offset;\n      if (distanceFromStart < ON_EDGE_REACHED_EPSILON) {\n        distanceFromStart = 0;\n      }\n      if (distanceFromEnd < ON_EDGE_REACHED_EPSILON) {\n        distanceFromEnd = 0;\n      }\n      var DEFAULT_THRESHOLD_PX = 2;\n      var startThreshold = onStartReachedThreshold != null ? onStartReachedThreshold * visibleLength : DEFAULT_THRESHOLD_PX;\n      var endThreshold = onEndReachedThreshold != null ? onEndReachedThreshold * visibleLength : DEFAULT_THRESHOLD_PX;\n      var isWithinStartThreshold = distanceFromStart <= startThreshold;\n      var isWithinEndThreshold = distanceFromEnd <= endThreshold;\n      if (onEndReached && this.state.cellsAroundViewport.last === getItemCount(data) - 1 && isWithinEndThreshold && this._scrollMetrics.contentLength !== this._sentEndForContentLength) {\n        this._sentEndForContentLength = this._scrollMetrics.contentLength;\n        onEndReached({\n          distanceFromEnd: distanceFromEnd\n        });\n      } else if (onStartReached != null && this.state.cellsAroundViewport.first === 0 && isWithinStartThreshold && this._scrollMetrics.contentLength !== this._sentStartForContentLength) {\n        this._sentStartForContentLength = this._scrollMetrics.contentLength;\n        onStartReached({\n          distanceFromStart: distanceFromStart\n        });\n      } else {\n        this._sentStartForContentLength = isWithinStartThreshold ? this._sentStartForContentLength : 0;\n        this._sentEndForContentLength = isWithinEndThreshold ? this._sentEndForContentLength : 0;\n      }\n    }\n  }, {\n    key: \"_scheduleCellsToRenderUpdate\",\n    value: function _scheduleCellsToRenderUpdate() {\n      var _this$state$cellsArou = this.state.cellsAroundViewport,\n        first = _this$state$cellsArou.first,\n        last = _this$state$cellsArou.last;\n      var _this$_scrollMetrics3 = this._scrollMetrics,\n        offset = _this$_scrollMetrics3.offset,\n        visibleLength = _this$_scrollMetrics3.visibleLength,\n        velocity = _this$_scrollMetrics3.velocity;\n      var itemCount = this.props.getItemCount(this.props.data);\n      var hiPri = false;\n      var onStartReachedThreshold = onStartReachedThresholdOrDefault(this.props.onStartReachedThreshold);\n      var onEndReachedThreshold = onEndReachedThresholdOrDefault(this.props.onEndReachedThreshold);\n      if (first > 0) {\n        var distTop = offset - this.__getFrameMetricsApprox(first, this.props).offset;\n        hiPri = distTop < 0 || velocity < -2 && distTop < getScrollingThreshold(onStartReachedThreshold, visibleLength);\n      }\n      if (!hiPri && last >= 0 && last < itemCount - 1) {\n        var distBottom = this.__getFrameMetricsApprox(last, this.props).offset - (offset + visibleLength);\n        hiPri = distBottom < 0 || velocity > 2 && distBottom < getScrollingThreshold(onEndReachedThreshold, visibleLength);\n      }\n      if (hiPri && (this._averageCellLength || this.props.getItemLayout) && !this._hiPriInProgress) {\n        this._hiPriInProgress = true;\n        this._updateCellsToRenderBatcher.dispose({\n          abort: true\n        });\n        this._updateCellsToRender();\n        return;\n      } else {\n        this._updateCellsToRenderBatcher.schedule();\n      }\n    }\n  }, {\n    key: \"_updateViewableItems\",\n    value: function _updateViewableItems(props, cellsAroundViewport) {\n      var _this5 = this;\n      if (this.state.pendingScrollUpdateCount > 0) {\n        return;\n      }\n      this._viewabilityTuples.forEach(function (tuple) {\n        tuple.viewabilityHelper.onUpdate(props, _this5._scrollMetrics.offset, _this5._scrollMetrics.visibleLength, _this5._getFrameMetrics, _this5._createViewToken, tuple.onViewableItemsChanged, cellsAroundViewport);\n      });\n    }\n  }], [{\n    key: \"_findItemIndexWithKey\",\n    value: function _findItemIndexWithKey(props, key, hint) {\n      var itemCount = props.getItemCount(props.data);\n      if (hint != null && hint >= 0 && hint < itemCount) {\n        var curKey = VirtualizedList._getItemKey(props, hint);\n        if (curKey === key) {\n          return hint;\n        }\n      }\n      for (var ii = 0; ii < itemCount; ii++) {\n        var _curKey = VirtualizedList._getItemKey(props, ii);\n        if (_curKey === key) {\n          return ii;\n        }\n      }\n      return null;\n    }\n  }, {\n    key: \"_getItemKey\",\n    value: function _getItemKey(props, index) {\n      var item = props.getItem(props.data, index);\n      return VirtualizedList._keyExtractor(item, index, props);\n    }\n  }, {\n    key: \"_createRenderMask\",\n    value: function _createRenderMask(props, cellsAroundViewport, additionalRegions) {\n      var itemCount = props.getItemCount(props.data);\n      invariant(cellsAroundViewport.first >= 0 && cellsAroundViewport.last >= cellsAroundViewport.first - 1 && cellsAroundViewport.last < itemCount, `Invalid cells around viewport \"[${cellsAroundViewport.first}, ${cellsAroundViewport.last}]\" was passed to VirtualizedList._createRenderMask`);\n      var renderMask = new CellRenderMask(itemCount);\n      if (itemCount > 0) {\n        var allRegions = [cellsAroundViewport].concat(_toConsumableArray(additionalRegions != null ? additionalRegions : []));\n        for (var region of allRegions) {\n          renderMask.addCells(region);\n        }\n        if (props.initialScrollIndex == null || props.initialScrollIndex <= 0) {\n          var initialRegion = VirtualizedList._initialRenderRegion(props);\n          renderMask.addCells(initialRegion);\n        }\n        var stickyIndicesSet = new Set(props.stickyHeaderIndices);\n        VirtualizedList._ensureClosestStickyHeader(props, stickyIndicesSet, renderMask, cellsAroundViewport.first);\n      }\n      return renderMask;\n    }\n  }, {\n    key: \"_initialRenderRegion\",\n    value: function _initialRenderRegion(props) {\n      var _props$initialScrollI;\n      var itemCount = props.getItemCount(props.data);\n      var firstCellIndex = Math.max(0, Math.min(itemCount - 1, Math.floor((_props$initialScrollI = props.initialScrollIndex) != null ? _props$initialScrollI : 0)));\n      var lastCellIndex = Math.min(itemCount, firstCellIndex + initialNumToRenderOrDefault(props.initialNumToRender)) - 1;\n      return {\n        first: firstCellIndex,\n        last: lastCellIndex\n      };\n    }\n  }, {\n    key: \"_ensureClosestStickyHeader\",\n    value: function _ensureClosestStickyHeader(props, stickyIndicesSet, renderMask, cellIdx) {\n      var stickyOffset = props.ListHeaderComponent ? 1 : 0;\n      for (var itemIdx = cellIdx - 1; itemIdx >= 0; itemIdx--) {\n        if (stickyIndicesSet.has(itemIdx + stickyOffset)) {\n          renderMask.addCells({\n            first: itemIdx,\n            last: itemIdx\n          });\n          break;\n        }\n      }\n    }\n  }, {\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(newProps, prevState) {\n      var _newProps$maintainVis, _newProps$maintainVis2;\n      var itemCount = newProps.getItemCount(newProps.data);\n      if (itemCount === prevState.renderMask.numCells()) {\n        return prevState;\n      }\n      var maintainVisibleContentPositionAdjustment = null;\n      var prevFirstVisibleItemKey = prevState.firstVisibleItemKey;\n      var minIndexForVisible = (_newProps$maintainVis = (_newProps$maintainVis2 = newProps.maintainVisibleContentPosition) == null ? void 0 : _newProps$maintainVis2.minIndexForVisible) != null ? _newProps$maintainVis : 0;\n      var newFirstVisibleItemKey = newProps.getItemCount(newProps.data) > minIndexForVisible ? VirtualizedList._getItemKey(newProps, minIndexForVisible) : null;\n      if (newProps.maintainVisibleContentPosition != null && prevFirstVisibleItemKey != null && newFirstVisibleItemKey != null) {\n        if (newFirstVisibleItemKey !== prevFirstVisibleItemKey) {\n          var hint = itemCount - prevState.renderMask.numCells() + minIndexForVisible;\n          var firstVisibleItemIndex = VirtualizedList._findItemIndexWithKey(newProps, prevFirstVisibleItemKey, hint);\n          maintainVisibleContentPositionAdjustment = firstVisibleItemIndex != null ? firstVisibleItemIndex - minIndexForVisible : null;\n        } else {\n          maintainVisibleContentPositionAdjustment = null;\n        }\n      }\n      var constrainedCells = VirtualizedList._constrainToItemCount(maintainVisibleContentPositionAdjustment != null ? {\n        first: prevState.cellsAroundViewport.first + maintainVisibleContentPositionAdjustment,\n        last: prevState.cellsAroundViewport.last + maintainVisibleContentPositionAdjustment\n      } : prevState.cellsAroundViewport, newProps);\n      return {\n        cellsAroundViewport: constrainedCells,\n        renderMask: VirtualizedList._createRenderMask(newProps, constrainedCells),\n        firstVisibleItemKey: newFirstVisibleItemKey,\n        pendingScrollUpdateCount: maintainVisibleContentPositionAdjustment != null ? prevState.pendingScrollUpdateCount + 1 : prevState.pendingScrollUpdateCount\n      };\n    }\n  }, {\n    key: \"_constrainToItemCount\",\n    value: function _constrainToItemCount(cells, props) {\n      var itemCount = props.getItemCount(props.data);\n      var last = Math.min(itemCount - 1, cells.last);\n      var maxToRenderPerBatch = maxToRenderPerBatchOrDefault(props.maxToRenderPerBatch);\n      return {\n        first: clamp(0, itemCount - 1 - maxToRenderPerBatch, cells.first),\n        last: last\n      };\n    }\n  }, {\n    key: \"_keyExtractor\",\n    value: function _keyExtractor(item, index, props) {\n      if (props.keyExtractor != null) {\n        return props.keyExtractor(item, index);\n      }\n      var key = defaultKeyExtractor(item, index);\n      if (key === String(index)) {\n        _usedIndexForKey = true;\n        if (item.type && item.type.displayName) {\n          _keylessItemComponentName = item.type.displayName;\n        }\n      }\n      return key;\n    }\n  }]);\n  return VirtualizedList;\n}(StateSafePureComponent);\nVirtualizedList.contextType = VirtualizedListContext;\nvar styles = StyleSheet.create({\n  verticallyInverted: Platform.OS === 'android' ? {\n    transform: [{\n      scale: -1\n    }]\n  } : {\n    transform: [{\n      scaleY: -1\n    }]\n  },\n  horizontallyInverted: {\n    transform: [{\n      scaleX: -1\n    }]\n  },\n  debug: {\n    flex: 1\n  },\n  debugOverlayBase: {\n    position: 'absolute',\n    top: 0,\n    right: 0\n  },\n  debugOverlay: {\n    bottom: 0,\n    width: 20,\n    borderColor: 'blue',\n    borderWidth: 1\n  },\n  debugOverlayFrame: {\n    left: 0,\n    backgroundColor: 'orange'\n  },\n  debugOverlayFrameLast: {\n    left: 0,\n    borderColor: 'green',\n    borderWidth: 2\n  },\n  debugOverlayFrameVis: {\n    left: 0,\n    borderColor: 'red',\n    borderWidth: 2\n  }\n});\nmodule.exports = VirtualizedList;","map":{"version":3,"names":["Batchinator","clamp","infoLog","CellRenderMask","ChildListCollection","FillRateHelper","StateSafePureComponent","ViewabilityHelper","CellRenderer","VirtualizedListCellContextProvider","VirtualizedListContext","VirtualizedListContextProvider","computeWindowedRenderLimits","keyExtractor","defaultKeyExtractor","invariant","nullthrows","React","jsx","_jsx","jsxs","_jsxs","ON_EDGE_REACHED_EPSILON","_usedIndexForKey","_keylessItemComponentName","horizontalOrDefault","horizontal","initialNumToRenderOrDefault","initialNumToRender","maxToRenderPerBatchOrDefault","maxToRenderPerBatch","onStartReachedThresholdOrDefault","onStartReachedThreshold","onEndReachedThresholdOrDefault","onEndReachedThreshold","getScrollingThreshold","threshold","visibleLength","scrollEventThrottleOrDefault","scrollEventThrottle","windowSizeOrDefault","windowSize","findLastWhere","arr","predicate","i","length","VirtualizedList","_StateSafePureCompone","_inherits","_super","_createSuper","props","_this$props$updateCel","_this$props$maintainV","_this$props$maintainV2","_this","_classCallCheck","call","_getScrollMetrics","_scrollMetrics","_getOutermostParentListRef","_isNestedWithSameOrientation","context","getOutermostParentListRef","_assertThisInitialized","_registerAsNestedChild","childList","_nestedChildLists","add","ref","cellKey","_hasInteracted","recordInteraction","_unregisterAsNestedChild","remove","_onUpdateSeparators","keys","newProps","forEach","key","_cellRefs","updateSeparatorProps","_getSpacerKey","isVertical","_averageCellLength","_frames","_footerLength","_hasTriggeredInitialScrollToIndex","_hasMore","_hasWarned","_headerLength","_hiPriInProgress","_highestMeasuredFrameIndex","_indicesToKeys","Map","_lastFocusedCellKey","_offsetFromParentVirtualizedList","_prevParentOffset","contentLength","dOffset","dt","offset","timestamp","velocity","zoomScale","_scrollRef","_sentStartForContentLength","_sentEndForContentLength","_totalCellLength","_totalCellsMeasured","_viewabilityTuples","_captureScrollRef","_defaultRenderScrollComponent","onRefresh","View","_objectSpread","_props$refreshing","refreshing","JSON","stringify","ScrollView","refreshControl","RefreshControl","progressViewOffset","_onCellLayout","e","index","layout","nativeEvent","next","_selectOffset","_selectLength","inLayout","curr","Math","max","_scheduleCellsToRenderUpdate","_triggerRemeasureForChildListsInCell","_computeBlankness","_updateViewableItems","state","cellsAroundViewport","_onCellUnmount","_onLayout","measureLayoutRelativeToContainingList","onLayout","_maybeCallOnEdgeReached","_onLayoutEmpty","_onLayoutFooter","_getFooterCellKey","_onLayoutHeader","_onContentSizeChange","width","height","initialScrollIndex","contentOffset","getItemCount","data","scrollToIndex","animated","scrollToEnd","onContentSizeChange","_convertParentScrollMetrics","metrics","_onScroll","onScroll","timeStamp","layoutMeasurement","contentSize","_this$_convertParentS","perf","prevDt","pendingScrollUpdateCount","setState","_fillRateHelper","activate","_onScrollBeginDrag","tuple","viewabilityHelper","onScrollBeginDrag","_onScrollEndDrag","onScrollEndDrag","_onMomentumScrollBegin","onMomentumScrollBegin","_onMomentumScrollEnd","onMomentumScrollEnd","_updateCellsToRender","_adjustCellsAroundViewport","renderMask","_createRenderMask","_getNonViewportRenderRegions","first","last","equals","_createViewToken","isViewable","getItem","item","_keyExtractor","_getOffsetApprox","Number","isInteger","__getFrameMetricsApprox","frameMetrics","floor","remainder","frame","_getFrameMetrics","getItemLayout","_getItemKey","lastFocusedCellRenderer","focusedCellIndex","itemCount","heightOfCellsBeforeFocused","heightOfCellsAfterFocused","_checkProps","_updateCellsToRenderBatcher","updateCellsBatchingPeriod","viewabilityConfigCallbackPairs","map","pair","viewabilityConfig","onViewableItemsChanged","_this$props","push","initialRenderRegion","_initialRenderRegion","minIndexForVisible","maintainVisibleContentPosition","firstVisibleItemKey","_createClass","value","params","veryLast","scrollTo","console","warn","x","y","_this$props2","onScrollToIndexFailed","viewOffset","viewPosition","averageItemLength","highestMeasuredFrameIndex","scrollToItem","_this$props3","scrollToOffset","t","flashScrollIndicators","getScrollResponder","getScrollableNode","findNodeHandle","getScrollRef","setNativeProps","_getCellKey","_this$context","hasMore","__isNative","__DEV__","flexWrap","flatStyles","StyleSheet","flatten","contentContainerStyle","_this$_scrollMetrics","distanceFromEnd","_constrainToItemCount","newCellsAroundViewport","disableVirtualization","renderAhead","min","size","childIdx","_findFirstChildWithMore","ii","cellKeyForIndex","get","anyInCell","componentDidMount","registerAsNestedChild","componentWillUnmount","unregisterAsNestedChild","dispose","abort","deactivateAndFlush","_pushCells","cells","stickyHeaderIndices","stickyIndicesFromProps","inversionStyle","_this2","_this$props4","CellRendererComponent","ItemSeparatorComponent","ListHeaderComponent","ListItemComponent","debug","renderItem","stickyOffset","end","prevCellKey","_loop","set","has","shouldListenForLayout","enabled","undefined","onUpdateSeparators","onCellFocusCapture","_onCellFocusCapture","onUnmount","onCellLayout","nestedContext","render","_this3","_this$props5","ListEmptyComponent","ListFooterComponent","_this$props6","inverted","styles","horizontallyInverted","verticallyInverted","Set","element","isValidElement","children","collapsable","style","compose","ListHeaderComponentStyle","cloneElement","event","spacerKey","renderRegions","enumerateRegions","lastSpacer","r","isSpacer","section","isLastSpacer","constrainToMeasured","firstMetrics","lastMetrics","spacerSize","_defineProperty","ListFooterComponentStyle","scrollProps","invertStickyHeaders","isInvertedVirtualizedList","innerRet","getScrollMetrics","renderScrollComponent","ret","Context","Consumer","scrollContext","nesting","scrollEnabled","error","_renderDebugOverlay","componentDidUpdate","prevProps","_this$props7","extraData","resetViewableIndices","hiPriInProgress","computeBlankness","forEachInCell","_this4","measureLayout","scrollMetrics","metricsChanged","stack","normalize","framesInLayout","windowTop","frameLast","windowLen","visTop","visLen","debugOverlayBase","debugOverlay","f","debugOverlayFrame","top","debugOverlayFrameLast","debugOverlayFrameVis","_this$props8","onStartReached","onEndReached","_this$_scrollMetrics2","distanceFromStart","DEFAULT_THRESHOLD_PX","startThreshold","endThreshold","isWithinStartThreshold","isWithinEndThreshold","_this$state$cellsArou","_this$_scrollMetrics3","hiPri","distTop","distBottom","schedule","_this5","onUpdate","_findItemIndexWithKey","hint","curKey","additionalRegions","allRegions","concat","_toConsumableArray","region","addCells","initialRegion","stickyIndicesSet","_ensureClosestStickyHeader","_props$initialScrollI","firstCellIndex","lastCellIndex","cellIdx","itemIdx","getDerivedStateFromProps","prevState","_newProps$maintainVis","_newProps$maintainVis2","numCells","maintainVisibleContentPositionAdjustment","prevFirstVisibleItemKey","newFirstVisibleItemKey","firstVisibleItemIndex","constrainedCells","String","type","displayName","contextType","create","Platform","OS","transform","scale","scaleY","scaleX","flex","position","right","bottom","borderColor","borderWidth","left","backgroundColor","module","exports"],"sources":["C:/Users/arzug/Documents/GitHub/travel-brew/node_modules/@react-native/virtualized-lists/Lists/VirtualizedList.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\nimport type {ScrollResponderType} from 'react-native/Libraries/Components/ScrollView/ScrollView';\nimport type {ViewStyleProp} from 'react-native/Libraries/StyleSheet/StyleSheet';\nimport type {\n  LayoutEvent,\n  ScrollEvent,\n} from 'react-native/Libraries/Types/CoreEventTypes';\nimport type {ViewToken} from './ViewabilityHelper';\nimport type {\n  FrameMetricProps,\n  Item,\n  Props,\n  RenderItemProps,\n  RenderItemType,\n  Separators,\n} from './VirtualizedListProps';\n\nimport {\n  Platform,\n  RefreshControl,\n  ScrollView,\n  View,\n  StyleSheet,\n  findNodeHandle,\n} from 'react-native';\nimport Batchinator from '../Interaction/Batchinator';\nimport clamp from '../Utilities/clamp';\nimport infoLog from '../Utilities/infoLog';\nimport {CellRenderMask} from './CellRenderMask';\nimport ChildListCollection from './ChildListCollection';\nimport FillRateHelper from './FillRateHelper';\nimport StateSafePureComponent from './StateSafePureComponent';\nimport ViewabilityHelper from './ViewabilityHelper';\nimport CellRenderer from './VirtualizedListCellRenderer';\nimport {\n  VirtualizedListCellContextProvider,\n  VirtualizedListContext,\n  VirtualizedListContextProvider,\n} from './VirtualizedListContext.js';\nimport {\n  computeWindowedRenderLimits,\n  keyExtractor as defaultKeyExtractor,\n} from './VirtualizeUtils';\nimport invariant from 'invariant';\nimport nullthrows from 'nullthrows';\nimport * as React from 'react';\n\nexport type {RenderItemProps, RenderItemType, Separators};\n\nconst ON_EDGE_REACHED_EPSILON = 0.001;\n\nlet _usedIndexForKey = false;\nlet _keylessItemComponentName: string = '';\n\ntype ViewabilityHelperCallbackTuple = {\n  viewabilityHelper: ViewabilityHelper,\n  onViewableItemsChanged: (info: {\n    viewableItems: Array<ViewToken>,\n    changed: Array<ViewToken>,\n    ...\n  }) => void,\n  ...\n};\n\ntype State = {\n  renderMask: CellRenderMask,\n  cellsAroundViewport: {first: number, last: number},\n  // Used to track items added at the start of the list for maintainVisibleContentPosition.\n  firstVisibleItemKey: ?string,\n  // When > 0 the scroll position available in JS is considered stale and should not be used.\n  pendingScrollUpdateCount: number,\n};\n\n/**\n * Default Props Helper Functions\n * Use the following helper functions for default values\n */\n\n// horizontalOrDefault(this.props.horizontal)\nfunction horizontalOrDefault(horizontal: ?boolean) {\n  return horizontal ?? false;\n}\n\n// initialNumToRenderOrDefault(this.props.initialNumToRender)\nfunction initialNumToRenderOrDefault(initialNumToRender: ?number) {\n  return initialNumToRender ?? 10;\n}\n\n// maxToRenderPerBatchOrDefault(this.props.maxToRenderPerBatch)\nfunction maxToRenderPerBatchOrDefault(maxToRenderPerBatch: ?number) {\n  return maxToRenderPerBatch ?? 10;\n}\n\n// onStartReachedThresholdOrDefault(this.props.onStartReachedThreshold)\nfunction onStartReachedThresholdOrDefault(onStartReachedThreshold: ?number) {\n  return onStartReachedThreshold ?? 2;\n}\n\n// onEndReachedThresholdOrDefault(this.props.onEndReachedThreshold)\nfunction onEndReachedThresholdOrDefault(onEndReachedThreshold: ?number) {\n  return onEndReachedThreshold ?? 2;\n}\n\n// getScrollingThreshold(visibleLength, onEndReachedThreshold)\nfunction getScrollingThreshold(threshold: number, visibleLength: number) {\n  return (threshold * visibleLength) / 2;\n}\n\n// scrollEventThrottleOrDefault(this.props.scrollEventThrottle)\nfunction scrollEventThrottleOrDefault(scrollEventThrottle: ?number) {\n  return scrollEventThrottle ?? 50;\n}\n\n// windowSizeOrDefault(this.props.windowSize)\nfunction windowSizeOrDefault(windowSize: ?number) {\n  return windowSize ?? 21;\n}\n\nfunction findLastWhere<T>(\n  arr: $ReadOnlyArray<T>,\n  predicate: (element: T) => boolean,\n): T | null {\n  for (let i = arr.length - 1; i >= 0; i--) {\n    if (predicate(arr[i])) {\n      return arr[i];\n    }\n  }\n\n  return null;\n}\n\n/**\n * Base implementation for the more convenient [`<FlatList>`](https://reactnative.dev/docs/flatlist)\n * and [`<SectionList>`](https://reactnative.dev/docs/sectionlist) components, which are also better\n * documented. In general, this should only really be used if you need more flexibility than\n * `FlatList` provides, e.g. for use with immutable data instead of plain arrays.\n *\n * Virtualization massively improves memory consumption and performance of large lists by\n * maintaining a finite render window of active items and replacing all items outside of the render\n * window with appropriately sized blank space. The window adapts to scrolling behavior, and items\n * are rendered incrementally with low-pri (after any running interactions) if they are far from the\n * visible area, or with hi-pri otherwise to minimize the potential of seeing blank space.\n *\n * Some caveats:\n *\n * - Internal state is not preserved when content scrolls out of the render window. Make sure all\n *   your data is captured in the item data or external stores like Flux, Redux, or Relay.\n * - This is a `PureComponent` which means that it will not re-render if `props` remain shallow-\n *   equal. Make sure that everything your `renderItem` function depends on is passed as a prop\n *   (e.g. `extraData`) that is not `===` after updates, otherwise your UI may not update on\n *   changes. This includes the `data` prop and parent component state.\n * - In order to constrain memory and enable smooth scrolling, content is rendered asynchronously\n *   offscreen. This means it's possible to scroll faster than the fill rate ands momentarily see\n *   blank content. This is a tradeoff that can be adjusted to suit the needs of each application,\n *   and we are working on improving it behind the scenes.\n * - By default, the list looks for a `key` or `id` prop on each item and uses that for the React key.\n *   Alternatively, you can provide a custom `keyExtractor` prop.\n * - As an effort to remove defaultProps, use helper functions when referencing certain props\n *\n */\nclass VirtualizedList extends StateSafePureComponent<Props, State> {\n  static contextType: typeof VirtualizedListContext = VirtualizedListContext;\n\n  // scrollToEnd may be janky without getItemLayout prop\n  scrollToEnd(params?: ?{animated?: ?boolean, ...}) {\n    const animated = params ? params.animated : true;\n    const veryLast = this.props.getItemCount(this.props.data) - 1;\n    if (veryLast < 0) {\n      return;\n    }\n    const frame = this.__getFrameMetricsApprox(veryLast, this.props);\n    const offset = Math.max(\n      0,\n      frame.offset +\n        frame.length +\n        this._footerLength -\n        this._scrollMetrics.visibleLength,\n    );\n\n    if (this._scrollRef == null) {\n      return;\n    }\n\n    if (this._scrollRef.scrollTo == null) {\n      console.warn(\n        'No scrollTo method provided. This may be because you have two nested ' +\n          'VirtualizedLists with the same orientation, or because you are ' +\n          'using a custom component that does not implement scrollTo.',\n      );\n      return;\n    }\n\n    this._scrollRef.scrollTo(\n      horizontalOrDefault(this.props.horizontal)\n        ? {x: offset, animated}\n        : {y: offset, animated},\n    );\n  }\n\n  // scrollToIndex may be janky without getItemLayout prop\n  scrollToIndex(params: {\n    animated?: ?boolean,\n    index: number,\n    viewOffset?: number,\n    viewPosition?: number,\n    ...\n  }): $FlowFixMe {\n    const {\n      data,\n      horizontal,\n      getItemCount,\n      getItemLayout,\n      onScrollToIndexFailed,\n    } = this.props;\n    const {animated, index, viewOffset, viewPosition} = params;\n    invariant(\n      index >= 0,\n      `scrollToIndex out of range: requested index ${index} but minimum is 0`,\n    );\n    invariant(\n      getItemCount(data) >= 1,\n      `scrollToIndex out of range: item length ${getItemCount(\n        data,\n      )} but minimum is 1`,\n    );\n    invariant(\n      index < getItemCount(data),\n      `scrollToIndex out of range: requested index ${index} is out of 0 to ${\n        getItemCount(data) - 1\n      }`,\n    );\n    if (!getItemLayout && index > this._highestMeasuredFrameIndex) {\n      invariant(\n        !!onScrollToIndexFailed,\n        'scrollToIndex should be used in conjunction with getItemLayout or onScrollToIndexFailed, ' +\n          'otherwise there is no way to know the location of offscreen indices or handle failures.',\n      );\n      onScrollToIndexFailed({\n        averageItemLength: this._averageCellLength,\n        highestMeasuredFrameIndex: this._highestMeasuredFrameIndex,\n        index,\n      });\n      return;\n    }\n    const frame = this.__getFrameMetricsApprox(Math.floor(index), this.props);\n    const offset =\n      Math.max(\n        0,\n        this._getOffsetApprox(index, this.props) -\n          (viewPosition || 0) *\n            (this._scrollMetrics.visibleLength - frame.length),\n      ) - (viewOffset || 0);\n\n    if (this._scrollRef == null) {\n      return;\n    }\n\n    if (this._scrollRef.scrollTo == null) {\n      console.warn(\n        'No scrollTo method provided. This may be because you have two nested ' +\n          'VirtualizedLists with the same orientation, or because you are ' +\n          'using a custom component that does not implement scrollTo.',\n      );\n      return;\n    }\n\n    this._scrollRef.scrollTo(\n      horizontal ? {x: offset, animated} : {y: offset, animated},\n    );\n  }\n\n  // scrollToItem may be janky without getItemLayout prop. Required linear scan through items -\n  // use scrollToIndex instead if possible.\n  scrollToItem(params: {\n    animated?: ?boolean,\n    item: Item,\n    viewOffset?: number,\n    viewPosition?: number,\n    ...\n  }) {\n    const {item} = params;\n    const {data, getItem, getItemCount} = this.props;\n    const itemCount = getItemCount(data);\n    for (let index = 0; index < itemCount; index++) {\n      if (getItem(data, index) === item) {\n        this.scrollToIndex({...params, index});\n        break;\n      }\n    }\n  }\n\n  /**\n   * Scroll to a specific content pixel offset in the list.\n   *\n   * Param `offset` expects the offset to scroll to.\n   * In case of `horizontal` is true, the offset is the x-value,\n   * in any other case the offset is the y-value.\n   *\n   * Param `animated` (`true` by default) defines whether the list\n   * should do an animation while scrolling.\n   */\n  scrollToOffset(params: {animated?: ?boolean, offset: number, ...}) {\n    const {animated, offset} = params;\n\n    if (this._scrollRef == null) {\n      return;\n    }\n\n    if (this._scrollRef.scrollTo == null) {\n      console.warn(\n        'No scrollTo method provided. This may be because you have two nested ' +\n          'VirtualizedLists with the same orientation, or because you are ' +\n          'using a custom component that does not implement scrollTo.',\n      );\n      return;\n    }\n\n    this._scrollRef.scrollTo(\n      horizontalOrDefault(this.props.horizontal)\n        ? {x: offset, animated}\n        : {y: offset, animated},\n    );\n  }\n\n  recordInteraction() {\n    this._nestedChildLists.forEach(childList => {\n      childList.recordInteraction();\n    });\n    this._viewabilityTuples.forEach(t => {\n      t.viewabilityHelper.recordInteraction();\n    });\n    this._updateViewableItems(this.props, this.state.cellsAroundViewport);\n  }\n\n  flashScrollIndicators() {\n    if (this._scrollRef == null) {\n      return;\n    }\n\n    this._scrollRef.flashScrollIndicators();\n  }\n\n  /**\n   * Provides a handle to the underlying scroll responder.\n   * Note that `this._scrollRef` might not be a `ScrollView`, so we\n   * need to check that it responds to `getScrollResponder` before calling it.\n   */\n  getScrollResponder(): ?ScrollResponderType {\n    if (this._scrollRef && this._scrollRef.getScrollResponder) {\n      return this._scrollRef.getScrollResponder();\n    }\n  }\n\n  getScrollableNode(): ?number {\n    if (this._scrollRef && this._scrollRef.getScrollableNode) {\n      return this._scrollRef.getScrollableNode();\n    } else {\n      return findNodeHandle(this._scrollRef);\n    }\n  }\n\n  getScrollRef():\n    | ?React.ElementRef<typeof ScrollView>\n    | ?React.ElementRef<typeof View> {\n    if (this._scrollRef && this._scrollRef.getScrollRef) {\n      return this._scrollRef.getScrollRef();\n    } else {\n      return this._scrollRef;\n    }\n  }\n\n  setNativeProps(props: Object) {\n    if (this._scrollRef) {\n      this._scrollRef.setNativeProps(props);\n    }\n  }\n\n  _getCellKey(): string {\n    return this.context?.cellKey || 'rootList';\n  }\n\n  // $FlowFixMe[missing-local-annot]\n  _getScrollMetrics = () => {\n    return this._scrollMetrics;\n  };\n\n  hasMore(): boolean {\n    return this._hasMore;\n  }\n\n  // $FlowFixMe[missing-local-annot]\n  _getOutermostParentListRef = () => {\n    if (this._isNestedWithSameOrientation()) {\n      return this.context.getOutermostParentListRef();\n    } else {\n      return this;\n    }\n  };\n\n  _registerAsNestedChild = (childList: {\n    cellKey: string,\n    ref: React.ElementRef<typeof VirtualizedList>,\n  }): void => {\n    this._nestedChildLists.add(childList.ref, childList.cellKey);\n    if (this._hasInteracted) {\n      childList.ref.recordInteraction();\n    }\n  };\n\n  _unregisterAsNestedChild = (childList: {\n    ref: React.ElementRef<typeof VirtualizedList>,\n  }): void => {\n    this._nestedChildLists.remove(childList.ref);\n  };\n\n  state: State;\n\n  constructor(props: Props) {\n    super(props);\n    this._checkProps(props);\n\n    this._fillRateHelper = new FillRateHelper(this._getFrameMetrics);\n    this._updateCellsToRenderBatcher = new Batchinator(\n      this._updateCellsToRender,\n      this.props.updateCellsBatchingPeriod ?? 50,\n    );\n\n    if (this.props.viewabilityConfigCallbackPairs) {\n      this._viewabilityTuples = this.props.viewabilityConfigCallbackPairs.map(\n        pair => ({\n          viewabilityHelper: new ViewabilityHelper(pair.viewabilityConfig),\n          onViewableItemsChanged: pair.onViewableItemsChanged,\n        }),\n      );\n    } else {\n      const {onViewableItemsChanged, viewabilityConfig} = this.props;\n      if (onViewableItemsChanged) {\n        this._viewabilityTuples.push({\n          viewabilityHelper: new ViewabilityHelper(viewabilityConfig),\n          onViewableItemsChanged: onViewableItemsChanged,\n        });\n      }\n    }\n\n    const initialRenderRegion = VirtualizedList._initialRenderRegion(props);\n\n    const minIndexForVisible =\n      this.props.maintainVisibleContentPosition?.minIndexForVisible ?? 0;\n\n    this.state = {\n      cellsAroundViewport: initialRenderRegion,\n      renderMask: VirtualizedList._createRenderMask(props, initialRenderRegion),\n      firstVisibleItemKey:\n        this.props.getItemCount(this.props.data) > minIndexForVisible\n          ? VirtualizedList._getItemKey(this.props, minIndexForVisible)\n          : null,\n      // When we have a non-zero initialScrollIndex, we will receive a\n      // scroll event later so this will prevent the window from updating\n      // until we get a valid offset.\n      pendingScrollUpdateCount:\n        this.props.initialScrollIndex != null &&\n        this.props.initialScrollIndex > 0\n          ? 1\n          : 0,\n    };\n  }\n\n  _checkProps(props: Props) {\n    const {onScroll, windowSize, getItemCount, data, initialScrollIndex} =\n      props;\n\n    invariant(\n      // $FlowFixMe[prop-missing]\n      !onScroll || !onScroll.__isNative,\n      'Components based on VirtualizedList must be wrapped with Animated.createAnimatedComponent ' +\n        'to support native onScroll events with useNativeDriver',\n    );\n    invariant(\n      windowSizeOrDefault(windowSize) > 0,\n      'VirtualizedList: The windowSize prop must be present and set to a value greater than 0.',\n    );\n\n    invariant(\n      getItemCount,\n      'VirtualizedList: The \"getItemCount\" prop must be provided',\n    );\n\n    const itemCount = getItemCount(data);\n\n    if (\n      initialScrollIndex != null &&\n      !this._hasTriggeredInitialScrollToIndex &&\n      (initialScrollIndex < 0 ||\n        (itemCount > 0 && initialScrollIndex >= itemCount)) &&\n      !this._hasWarned.initialScrollIndex\n    ) {\n      console.warn(\n        `initialScrollIndex \"${initialScrollIndex}\" is not valid (list has ${itemCount} items)`,\n      );\n      this._hasWarned.initialScrollIndex = true;\n    }\n\n    if (__DEV__ && !this._hasWarned.flexWrap) {\n      // $FlowFixMe[underconstrained-implicit-instantiation]\n      const flatStyles = StyleSheet.flatten(this.props.contentContainerStyle);\n      if (flatStyles != null && flatStyles.flexWrap === 'wrap') {\n        console.warn(\n          '`flexWrap: `wrap`` is not supported with the `VirtualizedList` components.' +\n            'Consider using `numColumns` with `FlatList` instead.',\n        );\n        this._hasWarned.flexWrap = true;\n      }\n    }\n  }\n\n  static _findItemIndexWithKey(\n    props: Props,\n    key: string,\n    hint: ?number,\n  ): ?number {\n    const itemCount = props.getItemCount(props.data);\n    if (hint != null && hint >= 0 && hint < itemCount) {\n      const curKey = VirtualizedList._getItemKey(props, hint);\n      if (curKey === key) {\n        return hint;\n      }\n    }\n    for (let ii = 0; ii < itemCount; ii++) {\n      const curKey = VirtualizedList._getItemKey(props, ii);\n      if (curKey === key) {\n        return ii;\n      }\n    }\n    return null;\n  }\n\n  static _getItemKey(\n    props: {\n      data: Props['data'],\n      getItem: Props['getItem'],\n      keyExtractor: Props['keyExtractor'],\n      ...\n    },\n    index: number,\n  ): string {\n    const item = props.getItem(props.data, index);\n    return VirtualizedList._keyExtractor(item, index, props);\n  }\n\n  static _createRenderMask(\n    props: Props,\n    cellsAroundViewport: {first: number, last: number},\n    additionalRegions?: ?$ReadOnlyArray<{first: number, last: number}>,\n  ): CellRenderMask {\n    const itemCount = props.getItemCount(props.data);\n\n    invariant(\n      cellsAroundViewport.first >= 0 &&\n        cellsAroundViewport.last >= cellsAroundViewport.first - 1 &&\n        cellsAroundViewport.last < itemCount,\n      `Invalid cells around viewport \"[${cellsAroundViewport.first}, ${cellsAroundViewport.last}]\" was passed to VirtualizedList._createRenderMask`,\n    );\n\n    const renderMask = new CellRenderMask(itemCount);\n\n    if (itemCount > 0) {\n      const allRegions = [cellsAroundViewport, ...(additionalRegions ?? [])];\n      for (const region of allRegions) {\n        renderMask.addCells(region);\n      }\n\n      // The initially rendered cells are retained as part of the\n      // \"scroll-to-top\" optimization\n      if (props.initialScrollIndex == null || props.initialScrollIndex <= 0) {\n        const initialRegion = VirtualizedList._initialRenderRegion(props);\n        renderMask.addCells(initialRegion);\n      }\n\n      // The layout coordinates of sticker headers may be off-screen while the\n      // actual header is on-screen. Keep the most recent before the viewport\n      // rendered, even if its layout coordinates are not in viewport.\n      const stickyIndicesSet = new Set(props.stickyHeaderIndices);\n      VirtualizedList._ensureClosestStickyHeader(\n        props,\n        stickyIndicesSet,\n        renderMask,\n        cellsAroundViewport.first,\n      );\n    }\n\n    return renderMask;\n  }\n\n  static _initialRenderRegion(props: Props): {first: number, last: number} {\n    const itemCount = props.getItemCount(props.data);\n\n    const firstCellIndex = Math.max(\n      0,\n      Math.min(itemCount - 1, Math.floor(props.initialScrollIndex ?? 0)),\n    );\n\n    const lastCellIndex =\n      Math.min(\n        itemCount,\n        firstCellIndex + initialNumToRenderOrDefault(props.initialNumToRender),\n      ) - 1;\n\n    return {\n      first: firstCellIndex,\n      last: lastCellIndex,\n    };\n  }\n\n  static _ensureClosestStickyHeader(\n    props: Props,\n    stickyIndicesSet: Set<number>,\n    renderMask: CellRenderMask,\n    cellIdx: number,\n  ) {\n    const stickyOffset = props.ListHeaderComponent ? 1 : 0;\n\n    for (let itemIdx = cellIdx - 1; itemIdx >= 0; itemIdx--) {\n      if (stickyIndicesSet.has(itemIdx + stickyOffset)) {\n        renderMask.addCells({first: itemIdx, last: itemIdx});\n        break;\n      }\n    }\n  }\n\n  _adjustCellsAroundViewport(\n    props: Props,\n    cellsAroundViewport: {first: number, last: number},\n    pendingScrollUpdateCount: number,\n  ): {first: number, last: number} {\n    const {data, getItemCount} = props;\n    const onEndReachedThreshold = onEndReachedThresholdOrDefault(\n      props.onEndReachedThreshold,\n    );\n    const {contentLength, offset, visibleLength} = this._scrollMetrics;\n    const distanceFromEnd = contentLength - visibleLength - offset;\n\n    // Wait until the scroll view metrics have been set up. And until then,\n    // we will trust the initialNumToRender suggestion\n    if (visibleLength <= 0 || contentLength <= 0) {\n      return cellsAroundViewport.last >= getItemCount(data)\n        ? VirtualizedList._constrainToItemCount(cellsAroundViewport, props)\n        : cellsAroundViewport;\n    }\n\n    let newCellsAroundViewport: {first: number, last: number};\n    if (props.disableVirtualization) {\n      const renderAhead =\n        distanceFromEnd < onEndReachedThreshold * visibleLength\n          ? maxToRenderPerBatchOrDefault(props.maxToRenderPerBatch)\n          : 0;\n\n      newCellsAroundViewport = {\n        first: 0,\n        last: Math.min(\n          cellsAroundViewport.last + renderAhead,\n          getItemCount(data) - 1,\n        ),\n      };\n    } else {\n      // If we have a pending scroll update, we should not adjust the render window as it\n      // might override the correct window.\n      if (pendingScrollUpdateCount > 0) {\n        return cellsAroundViewport.last >= getItemCount(data)\n          ? VirtualizedList._constrainToItemCount(cellsAroundViewport, props)\n          : cellsAroundViewport;\n      }\n\n      newCellsAroundViewport = computeWindowedRenderLimits(\n        props,\n        maxToRenderPerBatchOrDefault(props.maxToRenderPerBatch),\n        windowSizeOrDefault(props.windowSize),\n        cellsAroundViewport,\n        this.__getFrameMetricsApprox,\n        this._scrollMetrics,\n      );\n      invariant(\n        newCellsAroundViewport.last < getItemCount(data),\n        'computeWindowedRenderLimits() should return range in-bounds',\n      );\n    }\n\n    if (this._nestedChildLists.size() > 0) {\n      // If some cell in the new state has a child list in it, we should only render\n      // up through that item, so that we give that list a chance to render.\n      // Otherwise there's churn from multiple child lists mounting and un-mounting\n      // their items.\n\n      // Will this prevent rendering if the nested list doesn't realize the end?\n      const childIdx = this._findFirstChildWithMore(\n        newCellsAroundViewport.first,\n        newCellsAroundViewport.last,\n      );\n\n      newCellsAroundViewport.last = childIdx ?? newCellsAroundViewport.last;\n    }\n\n    return newCellsAroundViewport;\n  }\n\n  _findFirstChildWithMore(first: number, last: number): number | null {\n    for (let ii = first; ii <= last; ii++) {\n      const cellKeyForIndex = this._indicesToKeys.get(ii);\n      if (\n        cellKeyForIndex != null &&\n        this._nestedChildLists.anyInCell(cellKeyForIndex, childList =>\n          childList.hasMore(),\n        )\n      ) {\n        return ii;\n      }\n    }\n\n    return null;\n  }\n\n  componentDidMount() {\n    if (this._isNestedWithSameOrientation()) {\n      this.context.registerAsNestedChild({\n        ref: this,\n        cellKey: this.context.cellKey,\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    if (this._isNestedWithSameOrientation()) {\n      this.context.unregisterAsNestedChild({ref: this});\n    }\n    this._updateCellsToRenderBatcher.dispose({abort: true});\n    this._viewabilityTuples.forEach(tuple => {\n      tuple.viewabilityHelper.dispose();\n    });\n    this._fillRateHelper.deactivateAndFlush();\n  }\n\n  static getDerivedStateFromProps(newProps: Props, prevState: State): State {\n    // first and last could be stale (e.g. if a new, shorter items props is passed in), so we make\n    // sure we're rendering a reasonable range here.\n    const itemCount = newProps.getItemCount(newProps.data);\n    if (itemCount === prevState.renderMask.numCells()) {\n      return prevState;\n    }\n\n    let maintainVisibleContentPositionAdjustment: ?number = null;\n    const prevFirstVisibleItemKey = prevState.firstVisibleItemKey;\n    const minIndexForVisible =\n      newProps.maintainVisibleContentPosition?.minIndexForVisible ?? 0;\n    const newFirstVisibleItemKey =\n      newProps.getItemCount(newProps.data) > minIndexForVisible\n        ? VirtualizedList._getItemKey(newProps, minIndexForVisible)\n        : null;\n    if (\n      newProps.maintainVisibleContentPosition != null &&\n      prevFirstVisibleItemKey != null &&\n      newFirstVisibleItemKey != null\n    ) {\n      if (newFirstVisibleItemKey !== prevFirstVisibleItemKey) {\n        // Fast path if items were added at the start of the list.\n        const hint =\n          itemCount - prevState.renderMask.numCells() + minIndexForVisible;\n        const firstVisibleItemIndex = VirtualizedList._findItemIndexWithKey(\n          newProps,\n          prevFirstVisibleItemKey,\n          hint,\n        );\n        maintainVisibleContentPositionAdjustment =\n          firstVisibleItemIndex != null\n            ? firstVisibleItemIndex - minIndexForVisible\n            : null;\n      } else {\n        maintainVisibleContentPositionAdjustment = null;\n      }\n    }\n\n    const constrainedCells = VirtualizedList._constrainToItemCount(\n      maintainVisibleContentPositionAdjustment != null\n        ? {\n            first:\n              prevState.cellsAroundViewport.first +\n              maintainVisibleContentPositionAdjustment,\n            last:\n              prevState.cellsAroundViewport.last +\n              maintainVisibleContentPositionAdjustment,\n          }\n        : prevState.cellsAroundViewport,\n      newProps,\n    );\n\n    return {\n      cellsAroundViewport: constrainedCells,\n      renderMask: VirtualizedList._createRenderMask(newProps, constrainedCells),\n      firstVisibleItemKey: newFirstVisibleItemKey,\n      pendingScrollUpdateCount:\n        maintainVisibleContentPositionAdjustment != null\n          ? prevState.pendingScrollUpdateCount + 1\n          : prevState.pendingScrollUpdateCount,\n    };\n  }\n\n  _pushCells(\n    cells: Array<Object>,\n    stickyHeaderIndices: Array<number>,\n    stickyIndicesFromProps: Set<number>,\n    first: number,\n    last: number,\n    inversionStyle: ViewStyleProp,\n  ) {\n    const {\n      CellRendererComponent,\n      ItemSeparatorComponent,\n      ListHeaderComponent,\n      ListItemComponent,\n      data,\n      debug,\n      getItem,\n      getItemCount,\n      getItemLayout,\n      horizontal,\n      renderItem,\n    } = this.props;\n    const stickyOffset = ListHeaderComponent ? 1 : 0;\n    const end = getItemCount(data) - 1;\n    let prevCellKey;\n    last = Math.min(end, last);\n\n    for (let ii = first; ii <= last; ii++) {\n      const item = getItem(data, ii);\n      const key = VirtualizedList._keyExtractor(item, ii, this.props);\n\n      this._indicesToKeys.set(ii, key);\n      if (stickyIndicesFromProps.has(ii + stickyOffset)) {\n        stickyHeaderIndices.push(cells.length);\n      }\n\n      const shouldListenForLayout =\n        getItemLayout == null || debug || this._fillRateHelper.enabled();\n\n      cells.push(\n        <CellRenderer\n          CellRendererComponent={CellRendererComponent}\n          ItemSeparatorComponent={ii < end ? ItemSeparatorComponent : undefined}\n          ListItemComponent={ListItemComponent}\n          cellKey={key}\n          horizontal={horizontal}\n          index={ii}\n          inversionStyle={inversionStyle}\n          item={item}\n          key={key}\n          prevCellKey={prevCellKey}\n          onUpdateSeparators={this._onUpdateSeparators}\n          onCellFocusCapture={e => this._onCellFocusCapture(key)}\n          onUnmount={this._onCellUnmount}\n          ref={ref => {\n            this._cellRefs[key] = ref;\n          }}\n          renderItem={renderItem}\n          {...(shouldListenForLayout && {\n            onCellLayout: this._onCellLayout,\n          })}\n        />,\n      );\n      prevCellKey = key;\n    }\n  }\n\n  static _constrainToItemCount(\n    cells: {first: number, last: number},\n    props: Props,\n  ): {first: number, last: number} {\n    const itemCount = props.getItemCount(props.data);\n    const last = Math.min(itemCount - 1, cells.last);\n\n    const maxToRenderPerBatch = maxToRenderPerBatchOrDefault(\n      props.maxToRenderPerBatch,\n    );\n\n    return {\n      first: clamp(0, itemCount - 1 - maxToRenderPerBatch, cells.first),\n      last,\n    };\n  }\n\n  _onUpdateSeparators = (keys: Array<?string>, newProps: Object) => {\n    keys.forEach(key => {\n      const ref = key != null && this._cellRefs[key];\n      ref && ref.updateSeparatorProps(newProps);\n    });\n  };\n\n  _isNestedWithSameOrientation(): boolean {\n    const nestedContext = this.context;\n    return !!(\n      nestedContext &&\n      !!nestedContext.horizontal === horizontalOrDefault(this.props.horizontal)\n    );\n  }\n\n  _getSpacerKey = (isVertical: boolean): string =>\n    isVertical ? 'height' : 'width';\n\n  static _keyExtractor(\n    item: Item,\n    index: number,\n    props: {\n      keyExtractor?: ?(item: Item, index: number) => string,\n      ...\n    },\n  ): string {\n    if (props.keyExtractor != null) {\n      return props.keyExtractor(item, index);\n    }\n\n    const key = defaultKeyExtractor(item, index);\n    if (key === String(index)) {\n      _usedIndexForKey = true;\n      if (item.type && item.type.displayName) {\n        _keylessItemComponentName = item.type.displayName;\n      }\n    }\n    return key;\n  }\n\n  render(): React.Node {\n    this._checkProps(this.props);\n    const {ListEmptyComponent, ListFooterComponent, ListHeaderComponent} =\n      this.props;\n    const {data, horizontal} = this.props;\n    const inversionStyle = this.props.inverted\n      ? horizontalOrDefault(this.props.horizontal)\n        ? styles.horizontallyInverted\n        : styles.verticallyInverted\n      : null;\n    const cells: Array<any | React.Node> = [];\n    const stickyIndicesFromProps = new Set(this.props.stickyHeaderIndices);\n    const stickyHeaderIndices = [];\n\n    // 1. Add cell for ListHeaderComponent\n    if (ListHeaderComponent) {\n      if (stickyIndicesFromProps.has(0)) {\n        stickyHeaderIndices.push(0);\n      }\n      const element = React.isValidElement(ListHeaderComponent) ? (\n        ListHeaderComponent\n      ) : (\n        // $FlowFixMe[not-a-component]\n        // $FlowFixMe[incompatible-type-arg]\n        <ListHeaderComponent />\n      );\n      cells.push(\n        <VirtualizedListCellContextProvider\n          cellKey={this._getCellKey() + '-header'}\n          key=\"$header\">\n          <View\n            // We expect that header component will be a single native view so make it\n            // not collapsable to avoid this view being flattened and make this assumption\n            // no longer true.\n            collapsable={false}\n            onLayout={this._onLayoutHeader}\n            style={StyleSheet.compose(\n              inversionStyle,\n              this.props.ListHeaderComponentStyle,\n            )}>\n            {\n              // $FlowFixMe[incompatible-type] - Typing ReactNativeComponent revealed errors\n              element\n            }\n          </View>\n        </VirtualizedListCellContextProvider>,\n      );\n    }\n\n    // 2a. Add a cell for ListEmptyComponent if applicable\n    const itemCount = this.props.getItemCount(data);\n    if (itemCount === 0 && ListEmptyComponent) {\n      const element: React.Element<any> = ((React.isValidElement(\n        ListEmptyComponent,\n      ) ? (\n        ListEmptyComponent\n      ) : (\n        // $FlowFixMe[not-a-component]\n        // $FlowFixMe[incompatible-type-arg]\n        <ListEmptyComponent />\n      )): any);\n      cells.push(\n        <VirtualizedListCellContextProvider\n          cellKey={this._getCellKey() + '-empty'}\n          key=\"$empty\">\n          {React.cloneElement(element, {\n            onLayout: (event: LayoutEvent) => {\n              this._onLayoutEmpty(event);\n              if (element.props.onLayout) {\n                element.props.onLayout(event);\n              }\n            },\n            style: StyleSheet.compose(inversionStyle, element.props.style),\n          })}\n        </VirtualizedListCellContextProvider>,\n      );\n    }\n\n    // 2b. Add cells and spacers for each item\n    if (itemCount > 0) {\n      _usedIndexForKey = false;\n      _keylessItemComponentName = '';\n      const spacerKey = this._getSpacerKey(!horizontal);\n\n      const renderRegions = this.state.renderMask.enumerateRegions();\n      const lastSpacer = findLastWhere(renderRegions, r => r.isSpacer);\n\n      for (const section of renderRegions) {\n        if (section.isSpacer) {\n          // Legacy behavior is to avoid spacers when virtualization is\n          // disabled (including head spacers on initial render).\n          if (this.props.disableVirtualization) {\n            continue;\n          }\n\n          // Without getItemLayout, we limit our tail spacer to the _highestMeasuredFrameIndex to\n          // prevent the user for hyperscrolling into un-measured area because otherwise content will\n          // likely jump around as it renders in above the viewport.\n          const isLastSpacer = section === lastSpacer;\n          const constrainToMeasured = isLastSpacer && !this.props.getItemLayout;\n          const last = constrainToMeasured\n            ? clamp(\n                section.first - 1,\n                section.last,\n                this._highestMeasuredFrameIndex,\n              )\n            : section.last;\n\n          const firstMetrics = this.__getFrameMetricsApprox(\n            section.first,\n            this.props,\n          );\n          const lastMetrics = this.__getFrameMetricsApprox(last, this.props);\n          const spacerSize =\n            lastMetrics.offset + lastMetrics.length - firstMetrics.offset;\n          cells.push(\n            <View\n              key={`$spacer-${section.first}`}\n              style={{[spacerKey]: spacerSize}}\n            />,\n          );\n        } else {\n          this._pushCells(\n            cells,\n            stickyHeaderIndices,\n            stickyIndicesFromProps,\n            section.first,\n            section.last,\n            inversionStyle,\n          );\n        }\n      }\n\n      if (!this._hasWarned.keys && _usedIndexForKey) {\n        console.warn(\n          'VirtualizedList: missing keys for items, make sure to specify a key or id property on each ' +\n            'item or provide a custom keyExtractor.',\n          _keylessItemComponentName,\n        );\n        this._hasWarned.keys = true;\n      }\n    }\n\n    // 3. Add cell for ListFooterComponent\n    if (ListFooterComponent) {\n      const element = React.isValidElement(ListFooterComponent) ? (\n        ListFooterComponent\n      ) : (\n        // $FlowFixMe[not-a-component]\n        // $FlowFixMe[incompatible-type-arg]\n        <ListFooterComponent />\n      );\n      cells.push(\n        <VirtualizedListCellContextProvider\n          cellKey={this._getFooterCellKey()}\n          key=\"$footer\">\n          <View\n            onLayout={this._onLayoutFooter}\n            style={StyleSheet.compose(\n              inversionStyle,\n              this.props.ListFooterComponentStyle,\n            )}>\n            {\n              // $FlowFixMe[incompatible-type] - Typing ReactNativeComponent revealed errors\n              element\n            }\n          </View>\n        </VirtualizedListCellContextProvider>,\n      );\n    }\n\n    // 4. Render the ScrollView\n    const scrollProps = {\n      ...this.props,\n      onContentSizeChange: this._onContentSizeChange,\n      onLayout: this._onLayout,\n      onScroll: this._onScroll,\n      onScrollBeginDrag: this._onScrollBeginDrag,\n      onScrollEndDrag: this._onScrollEndDrag,\n      onMomentumScrollBegin: this._onMomentumScrollBegin,\n      onMomentumScrollEnd: this._onMomentumScrollEnd,\n      scrollEventThrottle: scrollEventThrottleOrDefault(\n        this.props.scrollEventThrottle,\n      ), // TODO: Android support\n      invertStickyHeaders:\n        this.props.invertStickyHeaders !== undefined\n          ? this.props.invertStickyHeaders\n          : this.props.inverted,\n      stickyHeaderIndices,\n      style: inversionStyle\n        ? [inversionStyle, this.props.style]\n        : this.props.style,\n      isInvertedVirtualizedList: this.props.inverted,\n      maintainVisibleContentPosition:\n        this.props.maintainVisibleContentPosition != null\n          ? {\n              ...this.props.maintainVisibleContentPosition,\n              // Adjust index to account for ListHeaderComponent.\n              minIndexForVisible:\n                this.props.maintainVisibleContentPosition.minIndexForVisible +\n                (this.props.ListHeaderComponent ? 1 : 0),\n            }\n          : undefined,\n    };\n\n    this._hasMore = this.state.cellsAroundViewport.last < itemCount - 1;\n\n    const innerRet = (\n      <VirtualizedListContextProvider\n        value={{\n          cellKey: null,\n          getScrollMetrics: this._getScrollMetrics,\n          horizontal: horizontalOrDefault(this.props.horizontal),\n          getOutermostParentListRef: this._getOutermostParentListRef,\n          registerAsNestedChild: this._registerAsNestedChild,\n          unregisterAsNestedChild: this._unregisterAsNestedChild,\n        }}>\n        {React.cloneElement(\n          (\n            this.props.renderScrollComponent ||\n            this._defaultRenderScrollComponent\n          )(scrollProps),\n          {\n            ref: this._captureScrollRef,\n          },\n          cells,\n        )}\n      </VirtualizedListContextProvider>\n    );\n    let ret: React.Node = innerRet;\n    if (__DEV__) {\n      ret = (\n        <ScrollView.Context.Consumer>\n          {scrollContext => {\n            if (\n              scrollContext != null &&\n              !scrollContext.horizontal ===\n                !horizontalOrDefault(this.props.horizontal) &&\n              !this._hasWarned.nesting &&\n              this.context == null &&\n              this.props.scrollEnabled !== false\n            ) {\n              // TODO (T46547044): use React.warn once 16.9 is sync'd: https://github.com/facebook/react/pull/15170\n              console.error(\n                'VirtualizedLists should never be nested inside plain ScrollViews with the same ' +\n                  'orientation because it can break windowing and other functionality - use another ' +\n                  'VirtualizedList-backed container instead.',\n              );\n              this._hasWarned.nesting = true;\n            }\n            return innerRet;\n          }}\n        </ScrollView.Context.Consumer>\n      );\n    }\n    if (this.props.debug) {\n      return (\n        <View style={styles.debug}>\n          {ret}\n          {this._renderDebugOverlay()}\n        </View>\n      );\n    } else {\n      return ret;\n    }\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const {data, extraData} = this.props;\n    if (data !== prevProps.data || extraData !== prevProps.extraData) {\n      // clear the viewableIndices cache to also trigger\n      // the onViewableItemsChanged callback with the new data\n      this._viewabilityTuples.forEach(tuple => {\n        tuple.viewabilityHelper.resetViewableIndices();\n      });\n    }\n    // The `this._hiPriInProgress` is guaranteeing a hiPri cell update will only happen\n    // once per fiber update. The `_scheduleCellsToRenderUpdate` will set it to true\n    // if a hiPri update needs to perform. If `componentDidUpdate` is triggered with\n    // `this._hiPriInProgress=true`, means it's triggered by the hiPri update. The\n    // `_scheduleCellsToRenderUpdate` will check this condition and not perform\n    // another hiPri update.\n    const hiPriInProgress = this._hiPriInProgress;\n    this._scheduleCellsToRenderUpdate();\n    // Make sure setting `this._hiPriInProgress` back to false after `componentDidUpdate`\n    // is triggered with `this._hiPriInProgress = true`\n    if (hiPriInProgress) {\n      this._hiPriInProgress = false;\n    }\n  }\n\n  _averageCellLength = 0;\n  _cellRefs: {[string]: null | CellRenderer<any>} = {};\n  _fillRateHelper: FillRateHelper;\n  _frames: {\n    [string]: {\n      inLayout?: boolean,\n      index: number,\n      length: number,\n      offset: number,\n    },\n  } = {};\n  _footerLength = 0;\n  // Used for preventing scrollToIndex from being called multiple times for initialScrollIndex\n  _hasTriggeredInitialScrollToIndex = false;\n  _hasInteracted = false;\n  _hasMore = false;\n  _hasWarned: {[string]: boolean} = {};\n  _headerLength = 0;\n  _hiPriInProgress: boolean = false; // flag to prevent infinite hiPri cell limit update\n  _highestMeasuredFrameIndex = 0;\n  _indicesToKeys: Map<number, string> = new Map();\n  _lastFocusedCellKey: ?string = null;\n  _nestedChildLists: ChildListCollection<VirtualizedList> =\n    new ChildListCollection();\n  _offsetFromParentVirtualizedList: number = 0;\n  _prevParentOffset: number = 0;\n  // $FlowFixMe[missing-local-annot]\n  _scrollMetrics = {\n    contentLength: 0,\n    dOffset: 0,\n    dt: 10,\n    offset: 0,\n    timestamp: 0,\n    velocity: 0,\n    visibleLength: 0,\n    zoomScale: 1,\n  };\n  _scrollRef: ?React.ElementRef<any> = null;\n  _sentStartForContentLength = 0;\n  _sentEndForContentLength = 0;\n  _totalCellLength = 0;\n  _totalCellsMeasured = 0;\n  _updateCellsToRenderBatcher: Batchinator;\n  _viewabilityTuples: Array<ViewabilityHelperCallbackTuple> = [];\n\n  /* $FlowFixMe[missing-local-annot] The type annotation(s) required by Flow's\n   * LTI update could not be added via codemod */\n  _captureScrollRef = ref => {\n    this._scrollRef = ref;\n  };\n\n  _computeBlankness() {\n    this._fillRateHelper.computeBlankness(\n      this.props,\n      this.state.cellsAroundViewport,\n      this._scrollMetrics,\n    );\n  }\n\n  /* $FlowFixMe[missing-local-annot] The type annotation(s) required by Flow's\n   * LTI update could not be added via codemod */\n  _defaultRenderScrollComponent = props => {\n    const onRefresh = props.onRefresh;\n    if (this._isNestedWithSameOrientation()) {\n      // $FlowFixMe[prop-missing] - Typing ReactNativeComponent revealed errors\n      return <View {...props} />;\n    } else if (onRefresh) {\n      invariant(\n        typeof props.refreshing === 'boolean',\n        '`refreshing` prop must be set as a boolean in order to use `onRefresh`, but got `' +\n          JSON.stringify(props.refreshing ?? 'undefined') +\n          '`',\n      );\n      return (\n        // $FlowFixMe[prop-missing] Invalid prop usage\n        // $FlowFixMe[incompatible-use]\n        <ScrollView\n          {...props}\n          refreshControl={\n            props.refreshControl == null ? (\n              <RefreshControl\n                // $FlowFixMe[incompatible-type]\n                refreshing={props.refreshing}\n                onRefresh={onRefresh}\n                progressViewOffset={props.progressViewOffset}\n              />\n            ) : (\n              props.refreshControl\n            )\n          }\n        />\n      );\n    } else {\n      // $FlowFixMe[prop-missing] Invalid prop usage\n      // $FlowFixMe[incompatible-use]\n      return <ScrollView {...props} />;\n    }\n  };\n\n  _onCellLayout = (e: LayoutEvent, cellKey: string, index: number): void => {\n    const layout = e.nativeEvent.layout;\n    const next = {\n      offset: this._selectOffset(layout),\n      length: this._selectLength(layout),\n      index,\n      inLayout: true,\n    };\n    const curr = this._frames[cellKey];\n    if (\n      !curr ||\n      next.offset !== curr.offset ||\n      next.length !== curr.length ||\n      index !== curr.index\n    ) {\n      this._totalCellLength += next.length - (curr ? curr.length : 0);\n      this._totalCellsMeasured += curr ? 0 : 1;\n      this._averageCellLength =\n        this._totalCellLength / this._totalCellsMeasured;\n      this._frames[cellKey] = next;\n      this._highestMeasuredFrameIndex = Math.max(\n        this._highestMeasuredFrameIndex,\n        index,\n      );\n      this._scheduleCellsToRenderUpdate();\n    } else {\n      this._frames[cellKey].inLayout = true;\n    }\n\n    this._triggerRemeasureForChildListsInCell(cellKey);\n\n    this._computeBlankness();\n    this._updateViewableItems(this.props, this.state.cellsAroundViewport);\n  };\n\n  _onCellFocusCapture(cellKey: string) {\n    this._lastFocusedCellKey = cellKey;\n    this._updateCellsToRender();\n  }\n\n  _onCellUnmount = (cellKey: string) => {\n    delete this._cellRefs[cellKey];\n    const curr = this._frames[cellKey];\n    if (curr) {\n      this._frames[cellKey] = {...curr, inLayout: false};\n    }\n  };\n\n  _triggerRemeasureForChildListsInCell(cellKey: string): void {\n    this._nestedChildLists.forEachInCell(cellKey, childList => {\n      childList.measureLayoutRelativeToContainingList();\n    });\n  }\n\n  measureLayoutRelativeToContainingList(): void {\n    // TODO (T35574538): findNodeHandle sometimes crashes with \"Unable to find\n    // node on an unmounted component\" during scrolling\n    try {\n      if (!this._scrollRef) {\n        return;\n      }\n      // We are assuming that getOutermostParentListRef().getScrollRef()\n      // is a non-null reference to a ScrollView\n      this._scrollRef.measureLayout(\n        this.context.getOutermostParentListRef().getScrollRef(),\n        (x, y, width, height) => {\n          this._offsetFromParentVirtualizedList = this._selectOffset({x, y});\n          this._scrollMetrics.contentLength = this._selectLength({\n            width,\n            height,\n          });\n          const scrollMetrics = this._convertParentScrollMetrics(\n            this.context.getScrollMetrics(),\n          );\n\n          const metricsChanged =\n            this._scrollMetrics.visibleLength !== scrollMetrics.visibleLength ||\n            this._scrollMetrics.offset !== scrollMetrics.offset;\n\n          if (metricsChanged) {\n            this._scrollMetrics.visibleLength = scrollMetrics.visibleLength;\n            this._scrollMetrics.offset = scrollMetrics.offset;\n\n            // If metrics of the scrollView changed, then we triggered remeasure for child list\n            // to ensure VirtualizedList has the right information.\n            this._nestedChildLists.forEach(childList => {\n              childList.measureLayoutRelativeToContainingList();\n            });\n          }\n        },\n        error => {\n          console.warn(\n            \"VirtualizedList: Encountered an error while measuring a list's\" +\n              ' offset from its containing VirtualizedList.',\n          );\n        },\n      );\n    } catch (error) {\n      console.warn(\n        'measureLayoutRelativeToContainingList threw an error',\n        error.stack,\n      );\n    }\n  }\n\n  _onLayout = (e: LayoutEvent) => {\n    if (this._isNestedWithSameOrientation()) {\n      // Need to adjust our scroll metrics to be relative to our containing\n      // VirtualizedList before we can make claims about list item viewability\n      this.measureLayoutRelativeToContainingList();\n    } else {\n      this._scrollMetrics.visibleLength = this._selectLength(\n        e.nativeEvent.layout,\n      );\n    }\n    this.props.onLayout && this.props.onLayout(e);\n    this._scheduleCellsToRenderUpdate();\n    this._maybeCallOnEdgeReached();\n  };\n\n  _onLayoutEmpty = (e: LayoutEvent) => {\n    this.props.onLayout && this.props.onLayout(e);\n  };\n\n  _getFooterCellKey(): string {\n    return this._getCellKey() + '-footer';\n  }\n\n  _onLayoutFooter = (e: LayoutEvent) => {\n    this._triggerRemeasureForChildListsInCell(this._getFooterCellKey());\n    this._footerLength = this._selectLength(e.nativeEvent.layout);\n  };\n\n  _onLayoutHeader = (e: LayoutEvent) => {\n    this._headerLength = this._selectLength(e.nativeEvent.layout);\n  };\n\n  // $FlowFixMe[missing-local-annot]\n  _renderDebugOverlay() {\n    const normalize =\n      this._scrollMetrics.visibleLength /\n      (this._scrollMetrics.contentLength || 1);\n    const framesInLayout = [];\n    const itemCount = this.props.getItemCount(this.props.data);\n    for (let ii = 0; ii < itemCount; ii++) {\n      const frame = this.__getFrameMetricsApprox(ii, this.props);\n      /* $FlowFixMe[prop-missing] (>=0.68.0 site=react_native_fb) This comment\n       * suppresses an error found when Flow v0.68 was deployed. To see the\n       * error delete this comment and run Flow. */\n      if (frame.inLayout) {\n        framesInLayout.push(frame);\n      }\n    }\n    const windowTop = this.__getFrameMetricsApprox(\n      this.state.cellsAroundViewport.first,\n      this.props,\n    ).offset;\n    const frameLast = this.__getFrameMetricsApprox(\n      this.state.cellsAroundViewport.last,\n      this.props,\n    );\n    const windowLen = frameLast.offset + frameLast.length - windowTop;\n    const visTop = this._scrollMetrics.offset;\n    const visLen = this._scrollMetrics.visibleLength;\n\n    return (\n      <View style={[styles.debugOverlayBase, styles.debugOverlay]}>\n        {framesInLayout.map((f, ii) => (\n          <View\n            key={'f' + ii}\n            style={[\n              styles.debugOverlayBase,\n              styles.debugOverlayFrame,\n              {\n                top: f.offset * normalize,\n                height: f.length * normalize,\n              },\n            ]}\n          />\n        ))}\n        <View\n          style={[\n            styles.debugOverlayBase,\n            styles.debugOverlayFrameLast,\n            {\n              top: windowTop * normalize,\n              height: windowLen * normalize,\n            },\n          ]}\n        />\n        <View\n          style={[\n            styles.debugOverlayBase,\n            styles.debugOverlayFrameVis,\n            {\n              top: visTop * normalize,\n              height: visLen * normalize,\n            },\n          ]}\n        />\n      </View>\n    );\n  }\n\n  _selectLength(\n    metrics: $ReadOnly<{\n      height: number,\n      width: number,\n      ...\n    }>,\n  ): number {\n    return !horizontalOrDefault(this.props.horizontal)\n      ? metrics.height\n      : metrics.width;\n  }\n\n  _selectOffset(\n    metrics: $ReadOnly<{\n      x: number,\n      y: number,\n      ...\n    }>,\n  ): number {\n    return !horizontalOrDefault(this.props.horizontal) ? metrics.y : metrics.x;\n  }\n\n  _maybeCallOnEdgeReached() {\n    const {\n      data,\n      getItemCount,\n      onStartReached,\n      onStartReachedThreshold,\n      onEndReached,\n      onEndReachedThreshold,\n    } = this.props;\n    // If we have any pending scroll updates it means that the scroll metrics\n    // are out of date and we should not call any of the edge reached callbacks.\n    if (this.state.pendingScrollUpdateCount > 0) {\n      return;\n    }\n\n    const {contentLength, visibleLength, offset} = this._scrollMetrics;\n    let distanceFromStart = offset;\n    let distanceFromEnd = contentLength - visibleLength - offset;\n\n    // Especially when oERT is zero it's necessary to 'floor' very small distance values to be 0\n    // since debouncing causes us to not fire this event for every single \"pixel\" we scroll and can thus\n    // be at the edge of the list with a distance approximating 0 but not quite there.\n    if (distanceFromStart < ON_EDGE_REACHED_EPSILON) {\n      distanceFromStart = 0;\n    }\n    if (distanceFromEnd < ON_EDGE_REACHED_EPSILON) {\n      distanceFromEnd = 0;\n    }\n\n    // TODO: T121172172 Look into why we're \"defaulting\" to a threshold of 2px\n    // when oERT is not present (different from 2 viewports used elsewhere)\n    const DEFAULT_THRESHOLD_PX = 2;\n\n    const startThreshold =\n      onStartReachedThreshold != null\n        ? onStartReachedThreshold * visibleLength\n        : DEFAULT_THRESHOLD_PX;\n    const endThreshold =\n      onEndReachedThreshold != null\n        ? onEndReachedThreshold * visibleLength\n        : DEFAULT_THRESHOLD_PX;\n    const isWithinStartThreshold = distanceFromStart <= startThreshold;\n    const isWithinEndThreshold = distanceFromEnd <= endThreshold;\n\n    // First check if the user just scrolled within the end threshold\n    // and call onEndReached only once for a given content length,\n    // and only if onStartReached is not being executed\n    if (\n      onEndReached &&\n      this.state.cellsAroundViewport.last === getItemCount(data) - 1 &&\n      isWithinEndThreshold &&\n      this._scrollMetrics.contentLength !== this._sentEndForContentLength\n    ) {\n      this._sentEndForContentLength = this._scrollMetrics.contentLength;\n      onEndReached({distanceFromEnd});\n    }\n\n    // Next check if the user just scrolled within the start threshold\n    // and call onStartReached only once for a given content length,\n    // and only if onEndReached is not being executed\n    else if (\n      onStartReached != null &&\n      this.state.cellsAroundViewport.first === 0 &&\n      isWithinStartThreshold &&\n      this._scrollMetrics.contentLength !== this._sentStartForContentLength\n    ) {\n      this._sentStartForContentLength = this._scrollMetrics.contentLength;\n      onStartReached({distanceFromStart});\n    }\n\n    // If the user scrolls away from the start or end and back again,\n    // cause onStartReached or onEndReached to be triggered again\n    else {\n      this._sentStartForContentLength = isWithinStartThreshold\n        ? this._sentStartForContentLength\n        : 0;\n      this._sentEndForContentLength = isWithinEndThreshold\n        ? this._sentEndForContentLength\n        : 0;\n    }\n  }\n\n  _onContentSizeChange = (width: number, height: number) => {\n    if (\n      width > 0 &&\n      height > 0 &&\n      this.props.initialScrollIndex != null &&\n      this.props.initialScrollIndex > 0 &&\n      !this._hasTriggeredInitialScrollToIndex\n    ) {\n      if (this.props.contentOffset == null) {\n        if (\n          this.props.initialScrollIndex <\n          this.props.getItemCount(this.props.data)\n        ) {\n          this.scrollToIndex({\n            animated: false,\n            index: nullthrows(this.props.initialScrollIndex),\n          });\n        } else {\n          this.scrollToEnd({animated: false});\n        }\n      }\n      this._hasTriggeredInitialScrollToIndex = true;\n    }\n    if (this.props.onContentSizeChange) {\n      this.props.onContentSizeChange(width, height);\n    }\n    this._scrollMetrics.contentLength = this._selectLength({height, width});\n    this._scheduleCellsToRenderUpdate();\n    this._maybeCallOnEdgeReached();\n  };\n\n  /* Translates metrics from a scroll event in a parent VirtualizedList into\n   * coordinates relative to the child list.\n   */\n  _convertParentScrollMetrics = (metrics: {\n    visibleLength: number,\n    offset: number,\n    ...\n  }): $FlowFixMe => {\n    // Offset of the top of the nested list relative to the top of its parent's viewport\n    const offset = metrics.offset - this._offsetFromParentVirtualizedList;\n    // Child's visible length is the same as its parent's\n    const visibleLength = metrics.visibleLength;\n    const dOffset = offset - this._scrollMetrics.offset;\n    const contentLength = this._scrollMetrics.contentLength;\n\n    return {\n      visibleLength,\n      contentLength,\n      offset,\n      dOffset,\n    };\n  };\n\n  _onScroll = (e: Object) => {\n    this._nestedChildLists.forEach(childList => {\n      childList._onScroll(e);\n    });\n    if (this.props.onScroll) {\n      this.props.onScroll(e);\n    }\n    const timestamp = e.timeStamp;\n    let visibleLength = this._selectLength(e.nativeEvent.layoutMeasurement);\n    let contentLength = this._selectLength(e.nativeEvent.contentSize);\n    let offset = this._selectOffset(e.nativeEvent.contentOffset);\n    let dOffset = offset - this._scrollMetrics.offset;\n\n    if (this._isNestedWithSameOrientation()) {\n      if (this._scrollMetrics.contentLength === 0) {\n        // Ignore scroll events until onLayout has been called and we\n        // know our offset from our offset from our parent\n        return;\n      }\n      ({visibleLength, contentLength, offset, dOffset} =\n        this._convertParentScrollMetrics({\n          visibleLength,\n          offset,\n        }));\n    }\n\n    const dt = this._scrollMetrics.timestamp\n      ? Math.max(1, timestamp - this._scrollMetrics.timestamp)\n      : 1;\n    const velocity = dOffset / dt;\n\n    if (\n      dt > 500 &&\n      this._scrollMetrics.dt > 500 &&\n      contentLength > 5 * visibleLength &&\n      !this._hasWarned.perf\n    ) {\n      infoLog(\n        'VirtualizedList: You have a large list that is slow to update - make sure your ' +\n          'renderItem function renders components that follow React performance best practices ' +\n          'like PureComponent, shouldComponentUpdate, etc.',\n        {dt, prevDt: this._scrollMetrics.dt, contentLength},\n      );\n      this._hasWarned.perf = true;\n    }\n\n    // For invalid negative values (w/ RTL), set this to 1.\n    const zoomScale = e.nativeEvent.zoomScale < 0 ? 1 : e.nativeEvent.zoomScale;\n    this._scrollMetrics = {\n      contentLength,\n      dt,\n      dOffset,\n      offset,\n      timestamp,\n      velocity,\n      visibleLength,\n      zoomScale,\n    };\n    if (this.state.pendingScrollUpdateCount > 0) {\n      this.setState(state => ({\n        pendingScrollUpdateCount: state.pendingScrollUpdateCount - 1,\n      }));\n    }\n    this._updateViewableItems(this.props, this.state.cellsAroundViewport);\n    if (!this.props) {\n      return;\n    }\n    this._maybeCallOnEdgeReached();\n    if (velocity !== 0) {\n      this._fillRateHelper.activate();\n    }\n    this._computeBlankness();\n    this._scheduleCellsToRenderUpdate();\n  };\n\n  _scheduleCellsToRenderUpdate() {\n    const {first, last} = this.state.cellsAroundViewport;\n    const {offset, visibleLength, velocity} = this._scrollMetrics;\n    const itemCount = this.props.getItemCount(this.props.data);\n    let hiPri = false;\n    const onStartReachedThreshold = onStartReachedThresholdOrDefault(\n      this.props.onStartReachedThreshold,\n    );\n    const onEndReachedThreshold = onEndReachedThresholdOrDefault(\n      this.props.onEndReachedThreshold,\n    );\n    // Mark as high priority if we're close to the start of the first item\n    // But only if there are items before the first rendered item\n    if (first > 0) {\n      const distTop =\n        offset - this.__getFrameMetricsApprox(first, this.props).offset;\n      hiPri =\n        distTop < 0 ||\n        (velocity < -2 &&\n          distTop <\n            getScrollingThreshold(onStartReachedThreshold, visibleLength));\n    }\n    // Mark as high priority if we're close to the end of the last item\n    // But only if there are items after the last rendered item\n    if (!hiPri && last >= 0 && last < itemCount - 1) {\n      const distBottom =\n        this.__getFrameMetricsApprox(last, this.props).offset -\n        (offset + visibleLength);\n      hiPri =\n        distBottom < 0 ||\n        (velocity > 2 &&\n          distBottom <\n            getScrollingThreshold(onEndReachedThreshold, visibleLength));\n    }\n    // Only trigger high-priority updates if we've actually rendered cells,\n    // and with that size estimate, accurately compute how many cells we should render.\n    // Otherwise, it would just render as many cells as it can (of zero dimension),\n    // each time through attempting to render more (limited by maxToRenderPerBatch),\n    // starving the renderer from actually laying out the objects and computing _averageCellLength.\n    // If this is triggered in an `componentDidUpdate` followed by a hiPri cellToRenderUpdate\n    // We shouldn't do another hipri cellToRenderUpdate\n    if (\n      hiPri &&\n      (this._averageCellLength || this.props.getItemLayout) &&\n      !this._hiPriInProgress\n    ) {\n      this._hiPriInProgress = true;\n      // Don't worry about interactions when scrolling quickly; focus on filling content as fast\n      // as possible.\n      this._updateCellsToRenderBatcher.dispose({abort: true});\n      this._updateCellsToRender();\n      return;\n    } else {\n      this._updateCellsToRenderBatcher.schedule();\n    }\n  }\n\n  _onScrollBeginDrag = (e: ScrollEvent): void => {\n    this._nestedChildLists.forEach(childList => {\n      childList._onScrollBeginDrag(e);\n    });\n    this._viewabilityTuples.forEach(tuple => {\n      tuple.viewabilityHelper.recordInteraction();\n    });\n    this._hasInteracted = true;\n    this.props.onScrollBeginDrag && this.props.onScrollBeginDrag(e);\n  };\n\n  _onScrollEndDrag = (e: ScrollEvent): void => {\n    this._nestedChildLists.forEach(childList => {\n      childList._onScrollEndDrag(e);\n    });\n    const {velocity} = e.nativeEvent;\n    if (velocity) {\n      this._scrollMetrics.velocity = this._selectOffset(velocity);\n    }\n    this._computeBlankness();\n    this.props.onScrollEndDrag && this.props.onScrollEndDrag(e);\n  };\n\n  _onMomentumScrollBegin = (e: ScrollEvent): void => {\n    this._nestedChildLists.forEach(childList => {\n      childList._onMomentumScrollBegin(e);\n    });\n    this.props.onMomentumScrollBegin && this.props.onMomentumScrollBegin(e);\n  };\n\n  _onMomentumScrollEnd = (e: ScrollEvent): void => {\n    this._nestedChildLists.forEach(childList => {\n      childList._onMomentumScrollEnd(e);\n    });\n    this._scrollMetrics.velocity = 0;\n    this._computeBlankness();\n    this.props.onMomentumScrollEnd && this.props.onMomentumScrollEnd(e);\n  };\n\n  _updateCellsToRender = () => {\n    this._updateViewableItems(this.props, this.state.cellsAroundViewport);\n\n    this.setState((state, props) => {\n      const cellsAroundViewport = this._adjustCellsAroundViewport(\n        props,\n        state.cellsAroundViewport,\n        state.pendingScrollUpdateCount,\n      );\n      const renderMask = VirtualizedList._createRenderMask(\n        props,\n        cellsAroundViewport,\n        this._getNonViewportRenderRegions(props),\n      );\n\n      if (\n        cellsAroundViewport.first === state.cellsAroundViewport.first &&\n        cellsAroundViewport.last === state.cellsAroundViewport.last &&\n        renderMask.equals(state.renderMask)\n      ) {\n        return null;\n      }\n\n      return {cellsAroundViewport, renderMask};\n    });\n  };\n\n  _createViewToken = (\n    index: number,\n    isViewable: boolean,\n    props: FrameMetricProps,\n    // $FlowFixMe[missing-local-annot]\n  ) => {\n    const {data, getItem} = props;\n    const item = getItem(data, index);\n    return {\n      index,\n      item,\n      key: VirtualizedList._keyExtractor(item, index, props),\n      isViewable,\n    };\n  };\n\n  /**\n   * Gets an approximate offset to an item at a given index. Supports\n   * fractional indices.\n   */\n  _getOffsetApprox = (index: number, props: FrameMetricProps): number => {\n    if (Number.isInteger(index)) {\n      return this.__getFrameMetricsApprox(index, props).offset;\n    } else {\n      const frameMetrics = this.__getFrameMetricsApprox(\n        Math.floor(index),\n        props,\n      );\n      const remainder = index - Math.floor(index);\n      return frameMetrics.offset + remainder * frameMetrics.length;\n    }\n  };\n\n  __getFrameMetricsApprox: (\n    index: number,\n    props: FrameMetricProps,\n  ) => {\n    length: number,\n    offset: number,\n    ...\n  } = (index, props) => {\n    const frame = this._getFrameMetrics(index, props);\n    if (frame && frame.index === index) {\n      // check for invalid frames due to row re-ordering\n      return frame;\n    } else {\n      const {data, getItemCount, getItemLayout} = props;\n      invariant(\n        index >= 0 && index < getItemCount(data),\n        'Tried to get frame for out of range index ' + index,\n      );\n      invariant(\n        !getItemLayout,\n        'Should not have to estimate frames when a measurement metrics function is provided',\n      );\n      return {\n        length: this._averageCellLength,\n        offset: this._averageCellLength * index,\n      };\n    }\n  };\n\n  _getFrameMetrics = (\n    index: number,\n    props: FrameMetricProps,\n  ): ?{\n    length: number,\n    offset: number,\n    index: number,\n    inLayout?: boolean,\n    ...\n  } => {\n    const {data, getItemCount, getItemLayout} = props;\n    invariant(\n      index >= 0 && index < getItemCount(data),\n      'Tried to get frame for out of range index ' + index,\n    );\n    const frame = this._frames[VirtualizedList._getItemKey(props, index)];\n    if (!frame || frame.index !== index) {\n      if (getItemLayout) {\n        /* $FlowFixMe[prop-missing] (>=0.63.0 site=react_native_fb) This comment\n         * suppresses an error found when Flow v0.63 was deployed. To see the error\n         * delete this comment and run Flow. */\n        return getItemLayout(data, index);\n      }\n    }\n    return frame;\n  };\n\n  _getNonViewportRenderRegions = (\n    props: FrameMetricProps,\n  ): $ReadOnlyArray<{\n    first: number,\n    last: number,\n  }> => {\n    // Keep a viewport's worth of content around the last focused cell to allow\n    // random navigation around it without any blanking. E.g. tabbing from one\n    // focused item out of viewport to another.\n    if (\n      !(this._lastFocusedCellKey && this._cellRefs[this._lastFocusedCellKey])\n    ) {\n      return [];\n    }\n\n    const lastFocusedCellRenderer = this._cellRefs[this._lastFocusedCellKey];\n    const focusedCellIndex = lastFocusedCellRenderer.props.index;\n    const itemCount = props.getItemCount(props.data);\n\n    // The last cell we rendered may be at a new index. Bail if we don't know\n    // where it is.\n    if (\n      focusedCellIndex >= itemCount ||\n      VirtualizedList._getItemKey(props, focusedCellIndex) !==\n        this._lastFocusedCellKey\n    ) {\n      return [];\n    }\n\n    let first = focusedCellIndex;\n    let heightOfCellsBeforeFocused = 0;\n    for (\n      let i = first - 1;\n      i >= 0 && heightOfCellsBeforeFocused < this._scrollMetrics.visibleLength;\n      i--\n    ) {\n      first--;\n      heightOfCellsBeforeFocused += this.__getFrameMetricsApprox(\n        i,\n        props,\n      ).length;\n    }\n\n    let last = focusedCellIndex;\n    let heightOfCellsAfterFocused = 0;\n    for (\n      let i = last + 1;\n      i < itemCount &&\n      heightOfCellsAfterFocused < this._scrollMetrics.visibleLength;\n      i++\n    ) {\n      last++;\n      heightOfCellsAfterFocused += this.__getFrameMetricsApprox(\n        i,\n        props,\n      ).length;\n    }\n\n    return [{first, last}];\n  };\n\n  _updateViewableItems(\n    props: FrameMetricProps,\n    cellsAroundViewport: {first: number, last: number},\n  ) {\n    // If we have any pending scroll updates it means that the scroll metrics\n    // are out of date and we should not call any of the visibility callbacks.\n    if (this.state.pendingScrollUpdateCount > 0) {\n      return;\n    }\n    this._viewabilityTuples.forEach(tuple => {\n      tuple.viewabilityHelper.onUpdate(\n        props,\n        this._scrollMetrics.offset,\n        this._scrollMetrics.visibleLength,\n        this._getFrameMetrics,\n        this._createViewToken,\n        tuple.onViewableItemsChanged,\n        cellsAroundViewport,\n      );\n    });\n  }\n}\n\nconst styles = StyleSheet.create({\n  verticallyInverted:\n    Platform.OS === 'android'\n      ? {transform: [{scale: -1}]}\n      : {transform: [{scaleY: -1}]},\n  horizontallyInverted: {\n    transform: [{scaleX: -1}],\n  },\n  debug: {\n    flex: 1,\n  },\n  debugOverlayBase: {\n    position: 'absolute',\n    top: 0,\n    right: 0,\n  },\n  debugOverlay: {\n    bottom: 0,\n    width: 20,\n    borderColor: 'blue',\n    borderWidth: 1,\n  },\n  debugOverlayFrame: {\n    left: 0,\n    backgroundColor: 'orange',\n  },\n  debugOverlayFrameLast: {\n    left: 0,\n    borderColor: 'green',\n    borderWidth: 2,\n  },\n  debugOverlayFrameVis: {\n    left: 0,\n    borderColor: 'red',\n    borderWidth: 2,\n  },\n});\n\nmodule.exports = VirtualizedList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
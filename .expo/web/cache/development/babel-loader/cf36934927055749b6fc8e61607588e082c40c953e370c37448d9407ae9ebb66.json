{"ast":null,"code":"'use strict';\n\nfunction processFontVariant(fontVariant) {\n  if (Array.isArray(fontVariant)) {\n    return fontVariant;\n  }\n  var match = fontVariant.split(' ').filter(Boolean);\n  return match;\n}\nmodule.exports = processFontVariant;","map":{"version":3,"names":["processFontVariant","fontVariant","Array","isArray","match","split","filter","Boolean","module","exports"],"sources":["C:/Users/arzug/Documents/GitHub/travel-brew/node_modules/react-native/Libraries/StyleSheet/processFontVariant.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\nimport type {____FontVariantArray_Internal} from './StyleSheetTypes';\n\nfunction processFontVariant(\n  fontVariant: ____FontVariantArray_Internal | string,\n): ?____FontVariantArray_Internal {\n  if (Array.isArray(fontVariant)) {\n    return fontVariant;\n  }\n\n  // $FlowFixMe[incompatible-type]\n  const match: ?____FontVariantArray_Internal = fontVariant\n    .split(' ')\n    .filter(Boolean);\n\n  return match;\n}\n\nmodule.exports = processFontVariant;\n"],"mappings":"AAUA,YAAY;;AAIZ,SAASA,kBAAkBA,CACzBC,WAAmD,EACnB;EAChC,IAAIC,KAAK,CAACC,OAAO,CAACF,WAAW,CAAC,EAAE;IAC9B,OAAOA,WAAW;EACpB;EAGA,IAAMG,KAAqC,GAAGH,WAAW,CACtDI,KAAK,CAAC,GAAG,CAAC,CACVC,MAAM,CAACC,OAAO,CAAC;EAElB,OAAOH,KAAK;AACd;AAEAI,MAAM,CAACC,OAAO,GAAGT,kBAAkB"},"metadata":{},"sourceType":"script","externalDependencies":[]}
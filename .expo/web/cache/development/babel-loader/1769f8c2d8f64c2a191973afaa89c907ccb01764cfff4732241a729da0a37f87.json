{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport GlobalPerformanceLogger from \"../Utilities/GlobalPerformanceLogger\";\nimport PerformanceLoggerContext from \"../Utilities/PerformanceLoggerContext\";\nimport AppContainer from \"./AppContainer\";\nimport DisplayMode from \"./DisplayMode\";\nimport getCachedComponentWithDebugName from \"./getCachedComponentWithDebugName\";\nimport * as Renderer from \"./RendererProxy\";\nimport invariant from 'invariant';\nimport * as React from 'react';\nimport \"../Utilities/BackHandler\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function renderApplication(RootComponent, initialProps, rootTag, WrapperComponent, fabric, showArchitectureIndicator, scopedPerformanceLogger, isLogBox, debugName, displayMode, useConcurrentRoot, useOffscreen) {\n  invariant(rootTag, 'Expect to have a valid rootTag, instead got ', rootTag);\n  var performanceLogger = scopedPerformanceLogger != null ? scopedPerformanceLogger : GlobalPerformanceLogger;\n  var renderable = _jsx(PerformanceLoggerContext.Provider, {\n    value: performanceLogger,\n    children: _jsx(AppContainer, {\n      rootTag: rootTag,\n      fabric: fabric,\n      showArchitectureIndicator: showArchitectureIndicator,\n      WrapperComponent: WrapperComponent,\n      initialProps: initialProps != null ? initialProps : Object.freeze({}),\n      internal_excludeLogBox: isLogBox,\n      children: _jsx(RootComponent, _objectSpread(_objectSpread({}, initialProps), {}, {\n        rootTag: rootTag\n      }))\n    })\n  });\n  if (__DEV__ && debugName) {\n    var RootComponentWithMeaningfulName = getCachedComponentWithDebugName(`${debugName}(RootComponent)`);\n    renderable = _jsx(RootComponentWithMeaningfulName, {\n      children: renderable\n    });\n  }\n  if (useOffscreen && displayMode != null) {\n    var Offscreen = React.unstable_Offscreen;\n    renderable = _jsx(Offscreen, {\n      mode: displayMode === DisplayMode.VISIBLE ? 'visible' : 'hidden',\n      children: renderable\n    });\n  }\n  performanceLogger.startTimespan('renderApplication_React_render');\n  performanceLogger.setExtra('usedReactConcurrentRoot', useConcurrentRoot ? '1' : '0');\n  performanceLogger.setExtra('usedReactFabric', fabric ? '1' : '0');\n  performanceLogger.setExtra('usedReactProfiler', Renderer.isProfilingRenderer());\n  Renderer.renderElement({\n    element: renderable,\n    rootTag: rootTag,\n    useFabric: Boolean(fabric),\n    useConcurrentRoot: Boolean(useConcurrentRoot)\n  });\n  performanceLogger.stopTimespan('renderApplication_React_render');\n}","map":{"version":3,"names":["GlobalPerformanceLogger","PerformanceLoggerContext","AppContainer","DisplayMode","getCachedComponentWithDebugName","Renderer","invariant","React","jsx","_jsx","renderApplication","RootComponent","initialProps","rootTag","WrapperComponent","fabric","showArchitectureIndicator","scopedPerformanceLogger","isLogBox","debugName","displayMode","useConcurrentRoot","useOffscreen","performanceLogger","renderable","Provider","value","children","Object","freeze","internal_excludeLogBox","_objectSpread","__DEV__","RootComponentWithMeaningfulName","Offscreen","unstable_Offscreen","mode","VISIBLE","startTimespan","setExtra","isProfilingRenderer","renderElement","element","useFabric","Boolean","stopTimespan"],"sources":["C:/Users/arzug/Documents/GitHub/travel-brew/node_modules/react-native/Libraries/ReactNative/renderApplication.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\nimport type {IPerformanceLogger} from '../Utilities/createPerformanceLogger';\n\nimport GlobalPerformanceLogger from '../Utilities/GlobalPerformanceLogger';\nimport PerformanceLoggerContext from '../Utilities/PerformanceLoggerContext';\nimport AppContainer from './AppContainer';\nimport DisplayMode, {type DisplayModeType} from './DisplayMode';\nimport getCachedComponentWithDebugName from './getCachedComponentWithDebugName';\nimport * as Renderer from './RendererProxy';\nimport invariant from 'invariant';\nimport * as React from 'react';\n\n// require BackHandler so it sets the default handler that exits the app if no listeners respond\nimport '../Utilities/BackHandler';\n\ntype OffscreenType = React.AbstractComponent<{\n  mode: 'visible' | 'hidden',\n  children: React.Node,\n}>;\n\nexport default function renderApplication<Props: Object>(\n  RootComponent: React.ComponentType<Props>,\n  initialProps: Props,\n  rootTag: any,\n  WrapperComponent?: ?React.ComponentType<any>,\n  fabric?: boolean,\n  showArchitectureIndicator?: boolean,\n  scopedPerformanceLogger?: IPerformanceLogger,\n  isLogBox?: boolean,\n  debugName?: string,\n  displayMode?: ?DisplayModeType,\n  useConcurrentRoot?: boolean,\n  useOffscreen?: boolean,\n) {\n  invariant(rootTag, 'Expect to have a valid rootTag, instead got ', rootTag);\n\n  const performanceLogger = scopedPerformanceLogger ?? GlobalPerformanceLogger;\n\n  let renderable: React.MixedElement = (\n    <PerformanceLoggerContext.Provider value={performanceLogger}>\n      <AppContainer\n        rootTag={rootTag}\n        fabric={fabric}\n        showArchitectureIndicator={showArchitectureIndicator}\n        WrapperComponent={WrapperComponent}\n        initialProps={initialProps ?? Object.freeze({})}\n        internal_excludeLogBox={isLogBox}>\n        <RootComponent {...initialProps} rootTag={rootTag} />\n      </AppContainer>\n    </PerformanceLoggerContext.Provider>\n  );\n\n  if (__DEV__ && debugName) {\n    const RootComponentWithMeaningfulName = getCachedComponentWithDebugName(\n      `${debugName}(RootComponent)`,\n    );\n    renderable = (\n      <RootComponentWithMeaningfulName>\n        {renderable}\n      </RootComponentWithMeaningfulName>\n    );\n  }\n\n  if (useOffscreen && displayMode != null) {\n    // $FlowFixMe[incompatible-type]\n    // $FlowFixMe[prop-missing]\n    const Offscreen: OffscreenType = React.unstable_Offscreen;\n\n    renderable = (\n      <Offscreen\n        mode={displayMode === DisplayMode.VISIBLE ? 'visible' : 'hidden'}>\n        {renderable}\n      </Offscreen>\n    );\n  }\n\n  performanceLogger.startTimespan('renderApplication_React_render');\n  performanceLogger.setExtra(\n    'usedReactConcurrentRoot',\n    useConcurrentRoot ? '1' : '0',\n  );\n  performanceLogger.setExtra('usedReactFabric', fabric ? '1' : '0');\n  performanceLogger.setExtra(\n    'usedReactProfiler',\n    Renderer.isProfilingRenderer(),\n  );\n  Renderer.renderElement({\n    element: renderable,\n    rootTag,\n    useFabric: Boolean(fabric),\n    useConcurrentRoot: Boolean(useConcurrentRoot),\n  });\n  performanceLogger.stopTimespan('renderApplication_React_render');\n}\n"],"mappings":";;;AAYA,OAAOA,uBAAuB;AAC9B,OAAOC,wBAAwB;AAC/B,OAAOC,YAAY;AACnB,OAAOC,WAAW;AAClB,OAAOC,+BAA+B;AACtC,OAAO,KAAKC,QAAQ;AACpB,OAAOC,SAAS,MAAM,WAAW;AACjC,OAAO,KAAKC,KAAK,MAAM,OAAO;AAG9B;AAAkC,SAAAC,GAAA,IAAAC,IAAA;AAOlC,eAAe,SAASC,iBAAiBA,CACvCC,aAAyC,EACzCC,YAAmB,EACnBC,OAAY,EACZC,gBAA4C,EAC5CC,MAAgB,EAChBC,yBAAmC,EACnCC,uBAA4C,EAC5CC,QAAkB,EAClBC,SAAkB,EAClBC,WAA8B,EAC9BC,iBAA2B,EAC3BC,YAAsB,EACtB;EACAhB,SAAS,CAACO,OAAO,EAAE,8CAA8C,EAAEA,OAAO,CAAC;EAE3E,IAAMU,iBAAiB,GAAGN,uBAAuB,WAAvBA,uBAAuB,GAAIjB,uBAAuB;EAE5E,IAAIwB,UAA8B,GAChCf,IAAA,CAACR,wBAAwB,CAACwB,QAAQ;IAACC,KAAK,EAAEH,iBAAkB;IAAAI,QAAA,EAC1DlB,IAAA,CAACP,YAAY;MACXW,OAAO,EAAEA,OAAQ;MACjBE,MAAM,EAAEA,MAAO;MACfC,yBAAyB,EAAEA,yBAA0B;MACrDF,gBAAgB,EAAEA,gBAAiB;MACnCF,YAAY,EAAEA,YAAY,WAAZA,YAAY,GAAIgB,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,CAAE;MAChDC,sBAAsB,EAAEZ,QAAS;MAAAS,QAAA,EACjClB,IAAA,CAACE,aAAa,EAAAoB,aAAA,CAAAA,aAAA,KAAKnB,YAAY;QAAEC,OAAO,EAAEA;MAAQ,EAAE;IAAC,CACzC;EAAC,CACkB,CACpC;EAED,IAAImB,OAAO,IAAIb,SAAS,EAAE;IACxB,IAAMc,+BAA+B,GAAG7B,+BAA+B,CACpE,GAAEe,SAAU,iBACf,CAAC;IACDK,UAAU,GACRf,IAAA,CAACwB,+BAA+B;MAAAN,QAAA,EAC7BH;IAAU,CACoB,CAClC;EACH;EAEA,IAAIF,YAAY,IAAIF,WAAW,IAAI,IAAI,EAAE;IAGvC,IAAMc,SAAwB,GAAG3B,KAAK,CAAC4B,kBAAkB;IAEzDX,UAAU,GACRf,IAAA,CAACyB,SAAS;MACRE,IAAI,EAAEhB,WAAW,KAAKjB,WAAW,CAACkC,OAAO,GAAG,SAAS,GAAG,QAAS;MAAAV,QAAA,EAChEH;IAAU,CACF,CACZ;EACH;EAEAD,iBAAiB,CAACe,aAAa,CAAC,gCAAgC,CAAC;EACjEf,iBAAiB,CAACgB,QAAQ,CACxB,yBAAyB,EACzBlB,iBAAiB,GAAG,GAAG,GAAG,GAC5B,CAAC;EACDE,iBAAiB,CAACgB,QAAQ,CAAC,iBAAiB,EAAExB,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC;EACjEQ,iBAAiB,CAACgB,QAAQ,CACxB,mBAAmB,EACnBlC,QAAQ,CAACmC,mBAAmB,CAAC,CAC/B,CAAC;EACDnC,QAAQ,CAACoC,aAAa,CAAC;IACrBC,OAAO,EAAElB,UAAU;IACnBX,OAAO,EAAPA,OAAO;IACP8B,SAAS,EAAEC,OAAO,CAAC7B,MAAM,CAAC;IAC1BM,iBAAiB,EAAEuB,OAAO,CAACvB,iBAAiB;EAC9C,CAAC,CAAC;EACFE,iBAAiB,CAACsB,YAAY,CAAC,gCAAgC,CAAC;AAClE"},"metadata":{},"sourceType":"module","externalDependencies":[]}
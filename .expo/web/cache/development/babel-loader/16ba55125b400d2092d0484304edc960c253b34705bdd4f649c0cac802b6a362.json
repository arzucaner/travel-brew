{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"../../Components/View/View\";\nimport openFileInEditor from \"../../Core/Devtools/openFileInEditor\";\nimport StyleSheet from \"../../StyleSheet/StyleSheet\";\nimport Text from \"../../Text/Text\";\nimport Platform from \"../../Utilities/Platform\";\nimport LogBoxButton from \"./LogBoxButton\";\nimport LogBoxInspectorSection from \"./LogBoxInspectorSection\";\nimport * as LogBoxStyle from \"./LogBoxStyle\";\nimport * as React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar BEFORE_SLASH_RE = /^(.*)[\\\\/]/;\nfunction getPrettyFileName(path) {\n  var fileName = path.replace(BEFORE_SLASH_RE, '');\n  if (/^index\\./.test(fileName)) {\n    var match = path.match(BEFORE_SLASH_RE);\n    if (match) {\n      var pathBeforeSlash = match[1];\n      if (pathBeforeSlash) {\n        var folderName = pathBeforeSlash.replace(BEFORE_SLASH_RE, '');\n        fileName = folderName + '/​' + fileName;\n      }\n    }\n  }\n  return fileName;\n}\nfunction LogBoxInspectorReactFrames(props) {\n  var _React$useState = React.useState(true),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    collapsed = _React$useState2[0],\n    setCollapsed = _React$useState2[1];\n  if (props.log.componentStack == null || props.log.componentStack.length < 1) {\n    return null;\n  }\n  function getStackList() {\n    if (collapsed) {\n      return props.log.componentStack.slice(0, 3);\n    } else {\n      return props.log.componentStack;\n    }\n  }\n  function getCollapseMessage() {\n    if (props.log.componentStack.length <= 3) {\n      return;\n    }\n    var count = props.log.componentStack.length - 3;\n    if (collapsed) {\n      return `See ${count} more components`;\n    } else {\n      return `Collapse ${count} components`;\n    }\n  }\n  return _jsxs(LogBoxInspectorSection, {\n    heading: \"Component Stack\",\n    children: [getStackList().map(function (frame, index) {\n      return _jsx(View, {\n        style: componentStyles.frameContainer,\n        children: _jsxs(LogBoxButton, {\n          backgroundColor: {\n            default: 'transparent',\n            pressed: LogBoxStyle.getBackgroundColor(1)\n          },\n          onPress: frame.fileName.startsWith('/') ? function () {\n            var _frame$location$row, _frame$location;\n            return openFileInEditor(frame.fileName, (_frame$location$row = (_frame$location = frame.location) == null ? void 0 : _frame$location.row) != null ? _frame$location$row : 1);\n          } : null,\n          style: componentStyles.frame,\n          children: [_jsx(View, {\n            style: componentStyles.component,\n            children: _jsxs(Text, {\n              style: componentStyles.frameName,\n              children: [_jsx(Text, {\n                style: componentStyles.bracket,\n                children: '<'\n              }), frame.content, _jsx(Text, {\n                style: componentStyles.bracket,\n                children: ' />'\n              })]\n            })\n          }), _jsxs(Text, {\n            style: componentStyles.frameLocation,\n            children: [getPrettyFileName(frame.fileName), frame.location ? `:${frame.location.row}` : '']\n          })]\n        })\n      }, index);\n    }), _jsx(View, {\n      style: componentStyles.collapseContainer,\n      children: _jsx(LogBoxButton, {\n        backgroundColor: {\n          default: 'transparent',\n          pressed: LogBoxStyle.getBackgroundColor(1)\n        },\n        onPress: function onPress() {\n          return setCollapsed(!collapsed);\n        },\n        style: componentStyles.collapseButton,\n        children: _jsx(Text, {\n          style: componentStyles.collapse,\n          children: getCollapseMessage()\n        })\n      })\n    })]\n  });\n}\nvar componentStyles = StyleSheet.create({\n  collapseContainer: {\n    marginLeft: 15,\n    flexDirection: 'row'\n  },\n  collapseButton: {\n    borderRadius: 5\n  },\n  collapse: {\n    color: LogBoxStyle.getTextColor(0.7),\n    fontSize: 12,\n    fontWeight: '300',\n    lineHeight: 20,\n    marginTop: 0,\n    paddingVertical: 5,\n    paddingHorizontal: 10\n  },\n  frameContainer: {\n    flexDirection: 'row',\n    paddingHorizontal: 15\n  },\n  frame: {\n    flex: 1,\n    paddingVertical: 4,\n    paddingHorizontal: 10,\n    borderRadius: 5\n  },\n  component: {\n    flexDirection: 'row',\n    paddingRight: 10\n  },\n  frameName: {\n    fontFamily: Platform.select({\n      android: 'monospace',\n      ios: 'Menlo'\n    }),\n    color: LogBoxStyle.getTextColor(1),\n    fontSize: 14,\n    includeFontPadding: false,\n    lineHeight: 18\n  },\n  bracket: {\n    fontFamily: Platform.select({\n      android: 'monospace',\n      ios: 'Menlo'\n    }),\n    color: LogBoxStyle.getTextColor(0.4),\n    fontSize: 14,\n    fontWeight: '500',\n    includeFontPadding: false,\n    lineHeight: 18\n  },\n  frameLocation: {\n    color: LogBoxStyle.getTextColor(0.7),\n    fontSize: 12,\n    fontWeight: '300',\n    includeFontPadding: false,\n    lineHeight: 16,\n    paddingLeft: 10\n  }\n});\nexport default LogBoxInspectorReactFrames;","map":{"version":3,"names":["View","openFileInEditor","StyleSheet","Text","Platform","LogBoxButton","LogBoxInspectorSection","LogBoxStyle","React","jsx","_jsx","jsxs","_jsxs","BEFORE_SLASH_RE","getPrettyFileName","path","fileName","replace","test","match","pathBeforeSlash","folderName","LogBoxInspectorReactFrames","props","_React$useState","useState","_React$useState2","_slicedToArray","collapsed","setCollapsed","log","componentStack","length","getStackList","slice","getCollapseMessage","count","heading","children","map","frame","index","style","componentStyles","frameContainer","backgroundColor","default","pressed","getBackgroundColor","onPress","startsWith","_frame$location$row","_frame$location","location","row","component","frameName","bracket","content","frameLocation","collapseContainer","collapseButton","collapse","create","marginLeft","flexDirection","borderRadius","color","getTextColor","fontSize","fontWeight","lineHeight","marginTop","paddingVertical","paddingHorizontal","flex","paddingRight","fontFamily","select","android","ios","includeFontPadding","paddingLeft"],"sources":["C:/Users/arzug/Documents/GitHub/travel-brew/node_modules/react-native/Libraries/LogBox/UI/LogBoxInspectorReactFrames.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport type LogBoxLog from '../Data/LogBoxLog';\n\nimport View from '../../Components/View/View';\nimport openFileInEditor from '../../Core/Devtools/openFileInEditor';\nimport StyleSheet from '../../StyleSheet/StyleSheet';\nimport Text from '../../Text/Text';\nimport Platform from '../../Utilities/Platform';\nimport LogBoxButton from './LogBoxButton';\nimport LogBoxInspectorSection from './LogBoxInspectorSection';\nimport * as LogBoxStyle from './LogBoxStyle';\nimport * as React from 'react';\n\ntype Props = $ReadOnly<{|\n  log: LogBoxLog,\n|}>;\n\nconst BEFORE_SLASH_RE = /^(.*)[\\\\/]/;\n\n// Taken from React https://github.com/facebook/react/blob/206d61f72214e8ae5b935f0bf8628491cb7f0797/packages/react-devtools-shared/src/backend/describeComponentFrame.js#L27-L41\nfunction getPrettyFileName(path: string) {\n  let fileName = path.replace(BEFORE_SLASH_RE, '');\n\n  // In DEV, include code for a common special case:\n  // prefer \"folder/index.js\" instead of just \"index.js\".\n  if (/^index\\./.test(fileName)) {\n    const match = path.match(BEFORE_SLASH_RE);\n    if (match) {\n      const pathBeforeSlash = match[1];\n      if (pathBeforeSlash) {\n        const folderName = pathBeforeSlash.replace(BEFORE_SLASH_RE, '');\n        // Note the below string contains a zero width space after the \"/\" character.\n        // This is to prevent browsers like Chrome from formatting the file name as a link.\n        // (Since this is a source link, it would not work to open the source file anyway.)\n        fileName = folderName + '/​' + fileName;\n      }\n    }\n  }\n\n  return fileName;\n}\nfunction LogBoxInspectorReactFrames(props: Props): React.Node {\n  const [collapsed, setCollapsed] = React.useState(true);\n  if (props.log.componentStack == null || props.log.componentStack.length < 1) {\n    return null;\n  }\n\n  function getStackList() {\n    if (collapsed) {\n      return props.log.componentStack.slice(0, 3);\n    } else {\n      return props.log.componentStack;\n    }\n  }\n\n  function getCollapseMessage() {\n    if (props.log.componentStack.length <= 3) {\n      return;\n    }\n\n    const count = props.log.componentStack.length - 3;\n    if (collapsed) {\n      return `See ${count} more components`;\n    } else {\n      return `Collapse ${count} components`;\n    }\n  }\n\n  return (\n    <LogBoxInspectorSection heading=\"Component Stack\">\n      {getStackList().map((frame, index) => (\n        <View\n          // Unfortunately we don't have a unique identifier for stack traces.\n          key={index}\n          style={componentStyles.frameContainer}>\n          <LogBoxButton\n            backgroundColor={{\n              default: 'transparent',\n              pressed: LogBoxStyle.getBackgroundColor(1),\n            }}\n            onPress={\n              // Older versions of DevTools do not provide full path.\n              // This will not work on Windows, remove check once the\n              // DevTools return the full file path.\n              frame.fileName.startsWith('/')\n                ? () =>\n                    openFileInEditor(frame.fileName, frame.location?.row ?? 1)\n                : null\n            }\n            style={componentStyles.frame}>\n            <View style={componentStyles.component}>\n              <Text style={componentStyles.frameName}>\n                <Text style={componentStyles.bracket}>{'<'}</Text>\n                {frame.content}\n                <Text style={componentStyles.bracket}>{' />'}</Text>\n              </Text>\n            </View>\n            <Text style={componentStyles.frameLocation}>\n              {getPrettyFileName(frame.fileName)}\n              {frame.location ? `:${frame.location.row}` : ''}\n            </Text>\n          </LogBoxButton>\n        </View>\n      ))}\n      <View style={componentStyles.collapseContainer}>\n        <LogBoxButton\n          backgroundColor={{\n            default: 'transparent',\n            pressed: LogBoxStyle.getBackgroundColor(1),\n          }}\n          onPress={() => setCollapsed(!collapsed)}\n          style={componentStyles.collapseButton}>\n          <Text style={componentStyles.collapse}>{getCollapseMessage()}</Text>\n        </LogBoxButton>\n      </View>\n    </LogBoxInspectorSection>\n  );\n}\n\nconst componentStyles = StyleSheet.create({\n  collapseContainer: {\n    marginLeft: 15,\n    flexDirection: 'row',\n  },\n  collapseButton: {\n    borderRadius: 5,\n  },\n  collapse: {\n    color: LogBoxStyle.getTextColor(0.7),\n    fontSize: 12,\n    fontWeight: '300',\n    lineHeight: 20,\n    marginTop: 0,\n    paddingVertical: 5,\n    paddingHorizontal: 10,\n  },\n  frameContainer: {\n    flexDirection: 'row',\n    paddingHorizontal: 15,\n  },\n  frame: {\n    flex: 1,\n    paddingVertical: 4,\n    paddingHorizontal: 10,\n    borderRadius: 5,\n  },\n  component: {\n    flexDirection: 'row',\n    paddingRight: 10,\n  },\n  frameName: {\n    fontFamily: Platform.select({android: 'monospace', ios: 'Menlo'}),\n    color: LogBoxStyle.getTextColor(1),\n    fontSize: 14,\n    includeFontPadding: false,\n    lineHeight: 18,\n  },\n  bracket: {\n    fontFamily: Platform.select({android: 'monospace', ios: 'Menlo'}),\n    color: LogBoxStyle.getTextColor(0.4),\n    fontSize: 14,\n    fontWeight: '500',\n    includeFontPadding: false,\n    lineHeight: 18,\n  },\n  frameLocation: {\n    color: LogBoxStyle.getTextColor(0.7),\n    fontSize: 12,\n    fontWeight: '300',\n    includeFontPadding: false,\n    lineHeight: 16,\n    paddingLeft: 10,\n  },\n});\n\nexport default LogBoxInspectorReactFrames;\n"],"mappings":";AAYA,OAAOA,IAAI;AACX,OAAOC,gBAAgB;AACvB,OAAOC,UAAU;AACjB,OAAOC,IAAI;AACX,OAAOC,QAAQ;AACf,OAAOC,YAAY;AACnB,OAAOC,sBAAsB;AAC7B,OAAO,KAAKC,WAAW;AACvB,OAAO,KAAKC,KAAK,MAAM,OAAO;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAM/B,IAAMC,eAAe,GAAG,YAAY;AAGpC,SAASC,iBAAiBA,CAACC,IAAY,EAAE;EACvC,IAAIC,QAAQ,GAAGD,IAAI,CAACE,OAAO,CAACJ,eAAe,EAAE,EAAE,CAAC;EAIhD,IAAI,UAAU,CAACK,IAAI,CAACF,QAAQ,CAAC,EAAE;IAC7B,IAAMG,KAAK,GAAGJ,IAAI,CAACI,KAAK,CAACN,eAAe,CAAC;IACzC,IAAIM,KAAK,EAAE;MACT,IAAMC,eAAe,GAAGD,KAAK,CAAC,CAAC,CAAC;MAChC,IAAIC,eAAe,EAAE;QACnB,IAAMC,UAAU,GAAGD,eAAe,CAACH,OAAO,CAACJ,eAAe,EAAE,EAAE,CAAC;QAI/DG,QAAQ,GAAGK,UAAU,GAAG,IAAI,GAAGL,QAAQ;MACzC;IACF;EACF;EAEA,OAAOA,QAAQ;AACjB;AACA,SAASM,0BAA0BA,CAACC,KAAY,EAAc;EAC5D,IAAAC,eAAA,GAAkChB,KAAK,CAACiB,QAAQ,CAAC,IAAI,CAAC;IAAAC,gBAAA,GAAAC,cAAA,CAAAH,eAAA;IAA/CI,SAAS,GAAAF,gBAAA;IAAEG,YAAY,GAAAH,gBAAA;EAC9B,IAAIH,KAAK,CAACO,GAAG,CAACC,cAAc,IAAI,IAAI,IAAIR,KAAK,CAACO,GAAG,CAACC,cAAc,CAACC,MAAM,GAAG,CAAC,EAAE;IAC3E,OAAO,IAAI;EACb;EAEA,SAASC,YAAYA,CAAA,EAAG;IACtB,IAAIL,SAAS,EAAE;MACb,OAAOL,KAAK,CAACO,GAAG,CAACC,cAAc,CAACG,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;IAC7C,CAAC,MAAM;MACL,OAAOX,KAAK,CAACO,GAAG,CAACC,cAAc;IACjC;EACF;EAEA,SAASI,kBAAkBA,CAAA,EAAG;IAC5B,IAAIZ,KAAK,CAACO,GAAG,CAACC,cAAc,CAACC,MAAM,IAAI,CAAC,EAAE;MACxC;IACF;IAEA,IAAMI,KAAK,GAAGb,KAAK,CAACO,GAAG,CAACC,cAAc,CAACC,MAAM,GAAG,CAAC;IACjD,IAAIJ,SAAS,EAAE;MACb,OAAQ,OAAMQ,KAAM,kBAAiB;IACvC,CAAC,MAAM;MACL,OAAQ,YAAWA,KAAM,aAAY;IACvC;EACF;EAEA,OACExB,KAAA,CAACN,sBAAsB;IAAC+B,OAAO,EAAC,iBAAiB;IAAAC,QAAA,GAC9CL,YAAY,CAAC,CAAC,CAACM,GAAG,CAAC,UAACC,KAAK,EAAEC,KAAK;MAAA,OAC/B/B,IAAA,CAACV,IAAI;QAGH0C,KAAK,EAAEC,eAAe,CAACC,cAAe;QAAAN,QAAA,EACtC1B,KAAA,CAACP,YAAY;UACXwC,eAAe,EAAE;YACfC,OAAO,EAAE,aAAa;YACtBC,OAAO,EAAExC,WAAW,CAACyC,kBAAkB,CAAC,CAAC;UAC3C,CAAE;UACFC,OAAO,EAILT,KAAK,CAACxB,QAAQ,CAACkC,UAAU,CAAC,GAAG,CAAC,GAC1B;YAAA,IAAAC,mBAAA,EAAAC,eAAA;YAAA,OACEnD,gBAAgB,CAACuC,KAAK,CAACxB,QAAQ,GAAAmC,mBAAA,IAAAC,eAAA,GAAEZ,KAAK,CAACa,QAAQ,qBAAdD,eAAA,CAAgBE,GAAG,YAAAH,mBAAA,GAAI,CAAC,CAAC;UAAA,IAC5D,IACL;UACDT,KAAK,EAAEC,eAAe,CAACH,KAAM;UAAAF,QAAA,GAC7B5B,IAAA,CAACV,IAAI;YAAC0C,KAAK,EAAEC,eAAe,CAACY,SAAU;YAAAjB,QAAA,EACrC1B,KAAA,CAACT,IAAI;cAACuC,KAAK,EAAEC,eAAe,CAACa,SAAU;cAAAlB,QAAA,GACrC5B,IAAA,CAACP,IAAI;gBAACuC,KAAK,EAAEC,eAAe,CAACc,OAAQ;gBAAAnB,QAAA,EAAE;cAAG,CAAO,CAAC,EACjDE,KAAK,CAACkB,OAAO,EACdhD,IAAA,CAACP,IAAI;gBAACuC,KAAK,EAAEC,eAAe,CAACc,OAAQ;gBAAAnB,QAAA,EAAE;cAAK,CAAO,CAAC;YAAA,CAChD;UAAC,CACH,CAAC,EACP1B,KAAA,CAACT,IAAI;YAACuC,KAAK,EAAEC,eAAe,CAACgB,aAAc;YAAArB,QAAA,GACxCxB,iBAAiB,CAAC0B,KAAK,CAACxB,QAAQ,CAAC,EACjCwB,KAAK,CAACa,QAAQ,GAAI,IAAGb,KAAK,CAACa,QAAQ,CAACC,GAAI,EAAC,GAAG,EAAE;UAAA,CAC3C,CAAC;QAAA,CACK;MAAC,GA5BVb,KA6BD,CAAC;IAAA,CACR,CAAC,EACF/B,IAAA,CAACV,IAAI;MAAC0C,KAAK,EAAEC,eAAe,CAACiB,iBAAkB;MAAAtB,QAAA,EAC7C5B,IAAA,CAACL,YAAY;QACXwC,eAAe,EAAE;UACfC,OAAO,EAAE,aAAa;UACtBC,OAAO,EAAExC,WAAW,CAACyC,kBAAkB,CAAC,CAAC;QAC3C,CAAE;QACFC,OAAO,EAAE,SAAAA,QAAA;UAAA,OAAMpB,YAAY,CAAC,CAACD,SAAS,CAAC;QAAA,CAAC;QACxCc,KAAK,EAAEC,eAAe,CAACkB,cAAe;QAAAvB,QAAA,EACtC5B,IAAA,CAACP,IAAI;UAACuC,KAAK,EAAEC,eAAe,CAACmB,QAAS;UAAAxB,QAAA,EAAEH,kBAAkB,CAAC;QAAC,CAAO;MAAC,CACxD;IAAC,CACX,CAAC;EAAA,CACe,CAAC;AAE7B;AAEA,IAAMQ,eAAe,GAAGzC,UAAU,CAAC6D,MAAM,CAAC;EACxCH,iBAAiB,EAAE;IACjBI,UAAU,EAAE,EAAE;IACdC,aAAa,EAAE;EACjB,CAAC;EACDJ,cAAc,EAAE;IACdK,YAAY,EAAE;EAChB,CAAC;EACDJ,QAAQ,EAAE;IACRK,KAAK,EAAE5D,WAAW,CAAC6D,YAAY,CAAC,GAAG,CAAC;IACpCC,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,KAAK;IACjBC,UAAU,EAAE,EAAE;IACdC,SAAS,EAAE,CAAC;IACZC,eAAe,EAAE,CAAC;IAClBC,iBAAiB,EAAE;EACrB,CAAC;EACD9B,cAAc,EAAE;IACdqB,aAAa,EAAE,KAAK;IACpBS,iBAAiB,EAAE;EACrB,CAAC;EACDlC,KAAK,EAAE;IACLmC,IAAI,EAAE,CAAC;IACPF,eAAe,EAAE,CAAC;IAClBC,iBAAiB,EAAE,EAAE;IACrBR,YAAY,EAAE;EAChB,CAAC;EACDX,SAAS,EAAE;IACTU,aAAa,EAAE,KAAK;IACpBW,YAAY,EAAE;EAChB,CAAC;EACDpB,SAAS,EAAE;IACTqB,UAAU,EAAEzE,QAAQ,CAAC0E,MAAM,CAAC;MAACC,OAAO,EAAE,WAAW;MAAEC,GAAG,EAAE;IAAO,CAAC,CAAC;IACjEb,KAAK,EAAE5D,WAAW,CAAC6D,YAAY,CAAC,CAAC,CAAC;IAClCC,QAAQ,EAAE,EAAE;IACZY,kBAAkB,EAAE,KAAK;IACzBV,UAAU,EAAE;EACd,CAAC;EACDd,OAAO,EAAE;IACPoB,UAAU,EAAEzE,QAAQ,CAAC0E,MAAM,CAAC;MAACC,OAAO,EAAE,WAAW;MAAEC,GAAG,EAAE;IAAO,CAAC,CAAC;IACjEb,KAAK,EAAE5D,WAAW,CAAC6D,YAAY,CAAC,GAAG,CAAC;IACpCC,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,KAAK;IACjBW,kBAAkB,EAAE,KAAK;IACzBV,UAAU,EAAE;EACd,CAAC;EACDZ,aAAa,EAAE;IACbQ,KAAK,EAAE5D,WAAW,CAAC6D,YAAY,CAAC,GAAG,CAAC;IACpCC,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,KAAK;IACjBW,kBAAkB,EAAE,KAAK;IACzBV,UAAU,EAAE,EAAE;IACdW,WAAW,EAAE;EACf;AACF,CAAC,CAAC;AAEF,eAAe5D,0BAA0B"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"'use strict';\n\nvar _global, _global$HermesInterna;\nvar _require = require(\"../Utilities/PolyfillFunctions\"),\n  polyfillGlobal = _require.polyfillGlobal;\nif ((_global = global) != null && (_global$HermesInterna = _global.HermesInternal) != null && _global$HermesInterna.hasPromise != null && _global$HermesInterna.hasPromise()) {\n  var HermesPromise = global.Promise;\n  if (__DEV__) {\n    var _global$HermesInterna2;\n    if (typeof HermesPromise !== 'function') {\n      console.error('HermesPromise does not exist');\n    }\n    (_global$HermesInterna2 = global.HermesInternal) == null ? void 0 : _global$HermesInterna2.enablePromiseRejectionTracker == null ? void 0 : _global$HermesInterna2.enablePromiseRejectionTracker(require(\"../promiseRejectionTrackingOptions\").default);\n  }\n} else {\n  polyfillGlobal('Promise', function () {\n    return require(\"../Promise\");\n  });\n}","map":{"version":3,"names":["_global","_global$HermesInterna","_require","require","polyfillGlobal","global","HermesInternal","hasPromise","HermesPromise","Promise","__DEV__","_global$HermesInterna2","console","error","enablePromiseRejectionTracker","default"],"sources":["C:/Users/arzug/Documents/GitHub/travel-brew/node_modules/react-native/Libraries/Core/polyfillPromise.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\n'use strict';\n\nconst {polyfillGlobal} = require('../Utilities/PolyfillFunctions');\n\n/**\n * Set up Promise. The native Promise implementation throws the following error:\n * ERROR: Event loop not supported.\n *\n * If you don't need these polyfills, don't use InitializeCore; just directly\n * require the modules you need from InitializeCore for setup.\n */\n\n// If global.Promise is provided by Hermes, we are confident that it can provide\n// all the methods needed by React Native, so we can directly use it.\nif (global?.HermesInternal?.hasPromise?.()) {\n  const HermesPromise = global.Promise;\n\n  if (__DEV__) {\n    if (typeof HermesPromise !== 'function') {\n      console.error('HermesPromise does not exist');\n    }\n    global.HermesInternal?.enablePromiseRejectionTracker?.(\n      require('../promiseRejectionTrackingOptions').default,\n    );\n  }\n} else {\n  polyfillGlobal('Promise', () => require('../Promise'));\n}\n"],"mappings":"AAUA,YAAY;;AAAC,IAAAA,OAAA,EAAAC,qBAAA;AAEb,IAAAC,QAAA,GAAyBC,OAAO,iCAAiC,CAAC;EAA3DC,cAAc,GAAAF,QAAA,CAAdE,cAAc;AAYrB,KAAAJ,OAAA,GAAIK,MAAM,cAAAJ,qBAAA,GAAND,OAAA,CAAQM,cAAc,aAAtBL,qBAAA,CAAwBM,UAAU,YAAlCN,qBAAA,CAAwBM,UAAU,CAAG,CAAC,EAAE;EAC1C,IAAMC,aAAa,GAAGH,MAAM,CAACI,OAAO;EAEpC,IAAIC,OAAO,EAAE;IAAA,IAAAC,sBAAA;IACX,IAAI,OAAOH,aAAa,KAAK,UAAU,EAAE;MACvCI,OAAO,CAACC,KAAK,CAAC,8BAA8B,CAAC;IAC/C;IACA,CAAAF,sBAAA,GAAAN,MAAM,CAACC,cAAc,qBAArBK,sBAAA,CAAuBG,6BAA6B,oBAApDH,sBAAA,CAAuBG,6BAA6B,CAClDX,OAAO,qCAAqC,CAAC,CAACY,OAChD,CAAC;EACH;AACF,CAAC,MAAM;EACLX,cAAc,CAAC,SAAS,EAAE;IAAA,OAAMD,OAAO,aAAa,CAAC;EAAA,EAAC;AACxD"},"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nvar MemoryInfo = function () {\n  function MemoryInfo(memoryInfo) {\n    _classCallCheck(this, MemoryInfo);\n    if (memoryInfo != null) {\n      this._jsHeapSizeLimit = memoryInfo.jsHeapSizeLimit;\n      this._totalJSHeapSize = memoryInfo.totalJSHeapSize;\n      this._usedJSHeapSize = memoryInfo.usedJSHeapSize;\n    }\n  }\n  _createClass(MemoryInfo, [{\n    key: \"jsHeapSizeLimit\",\n    get: function get() {\n      return this._jsHeapSizeLimit;\n    }\n  }, {\n    key: \"totalJSHeapSize\",\n    get: function get() {\n      return this._totalJSHeapSize;\n    }\n  }, {\n    key: \"usedJSHeapSize\",\n    get: function get() {\n      return this._usedJSHeapSize;\n    }\n  }]);\n  return MemoryInfo;\n}();\nexport { MemoryInfo as default };","map":{"version":3,"names":["MemoryInfo","memoryInfo","_classCallCheck","_jsHeapSizeLimit","jsHeapSizeLimit","_totalJSHeapSize","totalJSHeapSize","_usedJSHeapSize","usedJSHeapSize","_createClass","key","get","default"],"sources":["C:/Users/arzug/Documents/GitHub/travel-brew/node_modules/react-native/Libraries/WebPerformance/MemoryInfo.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n * @oncall react_native\n */\n\n// flowlint unsafe-getters-setters:off\n\nexport type MemoryInfoLike = {\n  jsHeapSizeLimit: ?number,\n  totalJSHeapSize: ?number,\n  usedJSHeapSize: ?number,\n};\n\n// Read-only object with JS memory information. This is returned by the performance.memory API.\nexport default class MemoryInfo {\n  _jsHeapSizeLimit: ?number;\n  _totalJSHeapSize: ?number;\n  _usedJSHeapSize: ?number;\n\n  constructor(memoryInfo: ?MemoryInfoLike) {\n    if (memoryInfo != null) {\n      this._jsHeapSizeLimit = memoryInfo.jsHeapSizeLimit;\n      this._totalJSHeapSize = memoryInfo.totalJSHeapSize;\n      this._usedJSHeapSize = memoryInfo.usedJSHeapSize;\n    }\n  }\n\n  /**\n   * The maximum size of the heap, in bytes, that is available to the context\n   */\n  get jsHeapSizeLimit(): ?number {\n    return this._jsHeapSizeLimit;\n  }\n\n  /**\n   * The total allocated heap size, in bytes\n   */\n  get totalJSHeapSize(): ?number {\n    return this._totalJSHeapSize;\n  }\n\n  /**\n   * The currently active segment of JS heap, in bytes.\n   */\n  get usedJSHeapSize(): ?number {\n    return this._usedJSHeapSize;\n  }\n}\n"],"mappings":";;IAoBqBA,UAAU;EAK7B,SAAAA,WAAYC,UAA2B,EAAE;IAAAC,eAAA,OAAAF,UAAA;IACvC,IAAIC,UAAU,IAAI,IAAI,EAAE;MACtB,IAAI,CAACE,gBAAgB,GAAGF,UAAU,CAACG,eAAe;MAClD,IAAI,CAACC,gBAAgB,GAAGJ,UAAU,CAACK,eAAe;MAClD,IAAI,CAACC,eAAe,GAAGN,UAAU,CAACO,cAAc;IAClD;EACF;EAACC,YAAA,CAAAT,UAAA;IAAAU,GAAA;IAAAC,GAAA,EAKD,SAAAA,IAAA,EAA+B;MAC7B,OAAO,IAAI,CAACR,gBAAgB;IAC9B;EAAC;IAAAO,GAAA;IAAAC,GAAA,EAKD,SAAAA,IAAA,EAA+B;MAC7B,OAAO,IAAI,CAACN,gBAAgB;IAC9B;EAAC;IAAAK,GAAA;IAAAC,GAAA,EAKD,SAAAA,IAAA,EAA8B;MAC5B,OAAO,IAAI,CAACJ,eAAe;IAC7B;EAAC;EAAA,OAAAP,UAAA;AAAA;AAAA,SAhCkBA,UAAU,IAAAY,OAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
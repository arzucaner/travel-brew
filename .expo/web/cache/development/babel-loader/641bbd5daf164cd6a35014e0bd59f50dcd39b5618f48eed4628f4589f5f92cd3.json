{"ast":null,"code":"import codegenNativeCommands from \"../../Utilities/codegenNativeCommands\";\nimport codegenNativeComponent from \"../../Utilities/codegenNativeComponent\";\nimport * as React from 'react';\nexport var Commands = codegenNativeCommands({\n  supportedCommands: ['setNativeRefreshing']\n});\nexport default codegenNativeComponent('PullToRefreshView', {\n  paperComponentName: 'RCTRefreshControl',\n  excludedPlatforms: ['android']\n});","map":{"version":3,"names":["codegenNativeCommands","codegenNativeComponent","React","Commands","supportedCommands","paperComponentName","excludedPlatforms"],"sources":["C:/Users/arzug/Documents/GitHub/travel-brew/node_modules/react-native/Libraries/Components/RefreshControl/PullToRefreshViewNativeComponent.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\nimport type {HostComponent} from '../../Renderer/shims/ReactNativeTypes';\nimport type {ColorValue} from '../../StyleSheet/StyleSheet';\nimport type {\n  DirectEventHandler,\n  Float,\n  WithDefault,\n} from '../../Types/CodegenTypes';\nimport type {ViewProps} from '../View/ViewPropTypes';\n\nimport codegenNativeCommands from '../../Utilities/codegenNativeCommands';\nimport codegenNativeComponent from '../../Utilities/codegenNativeComponent';\nimport * as React from 'react';\n\ntype NativeProps = $ReadOnly<{|\n  ...ViewProps,\n\n  /**\n   * The color of the refresh indicator.\n   */\n  tintColor?: ?ColorValue,\n  /**\n   * Title color.\n   */\n  titleColor?: ?ColorValue,\n  /**\n   * The title displayed under the refresh indicator.\n   */\n  title?: WithDefault<string, null>,\n  /**\n   * Progress view top offset\n   */\n  progressViewOffset?: WithDefault<Float, 0>,\n\n  /**\n   * Called when the view starts refreshing.\n   */\n  onRefresh?: ?DirectEventHandler<null>,\n\n  /**\n   * Whether the view should be indicating an active refresh.\n   */\n  refreshing: boolean,\n|}>;\n\ntype ComponentType = HostComponent<NativeProps>;\n\ninterface NativeCommands {\n  +setNativeRefreshing: (\n    viewRef: React.ElementRef<ComponentType>,\n    refreshing: boolean,\n  ) => void;\n}\n\nexport const Commands: NativeCommands = codegenNativeCommands<NativeCommands>({\n  supportedCommands: ['setNativeRefreshing'],\n});\n\nexport default (codegenNativeComponent<NativeProps>('PullToRefreshView', {\n  paperComponentName: 'RCTRefreshControl',\n  excludedPlatforms: ['android'],\n}): HostComponent<NativeProps>);\n"],"mappings":"AAmBA,OAAOA,qBAAqB;AAC5B,OAAOC,sBAAsB;AAC7B,OAAO,KAAKC,KAAK,MAAM,OAAO;AA0C9B,OAAO,IAAMC,QAAwB,GAAGH,qBAAqB,CAAiB;EAC5EI,iBAAiB,EAAE,CAAC,qBAAqB;AAC3C,CAAC,CAAC;AAEF,eAAgBH,sBAAsB,CAAc,mBAAmB,EAAE;EACvEI,kBAAkB,EAAE,mBAAmB;EACvCC,iBAAiB,EAAE,CAAC,SAAS;AAC/B,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"'use strict';\n\nif (__DEV__) {\n  (function () {\n    'use strict';\n    if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart === 'function') {\n      __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());\n    }\n    \"use strict\";\n    var React = require(\"react\");\n    require(\"react-native/Libraries/ReactPrivate/ReactNativePrivateInitializeCore\");\n    var ReactNativePrivateInterface = require(\"react-native/Libraries/ReactPrivate/ReactNativePrivateInterface\");\n    var Scheduler = require(\"scheduler\");\n    var ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n    function warn(format) {\n      {\n        {\n          for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n            args[_key - 1] = arguments[_key];\n          }\n          printWarning(\"warn\", format, args);\n        }\n      }\n    }\n    function error(format) {\n      {\n        {\n          for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n            args[_key2 - 1] = arguments[_key2];\n          }\n          printWarning(\"error\", format, args);\n        }\n      }\n    }\n    function printWarning(level, format, args) {\n      {\n        var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n        var stack = ReactDebugCurrentFrame.getStackAddendum();\n        if (stack !== \"\") {\n          format += \"%s\";\n          args = args.concat([stack]);\n        }\n        var argsWithFormat = args.map(function (item) {\n          return String(item);\n        });\n        argsWithFormat.unshift(\"Warning: \" + format);\n        Function.prototype.apply.call(console[level], console, argsWithFormat);\n      }\n    }\n    function invokeGuardedCallbackProd(name, func, context, a, b, c, d, e, f) {\n      var funcArgs = Array.prototype.slice.call(arguments, 3);\n      try {\n        func.apply(context, funcArgs);\n      } catch (error) {\n        this.onError(error);\n      }\n    }\n    var invokeGuardedCallbackImpl = invokeGuardedCallbackProd;\n    {\n      if (typeof window !== \"undefined\" && typeof window.dispatchEvent === \"function\" && typeof document !== \"undefined\" && typeof document.createEvent === \"function\") {\n        var fakeNode = document.createElement(\"react\");\n        invokeGuardedCallbackImpl = function invokeGuardedCallbackDev(name, func, context, a, b, c, d, e, f) {\n          if (typeof document === \"undefined\" || document === null) {\n            throw new Error(\"The `document` global was defined when React was initialized, but is not \" + \"defined anymore. This can happen in a test environment if a component \" + \"schedules an update from an asynchronous callback, but the test has already \" + \"finished running. To solve this, you can either unmount the component at \" + \"the end of your test (and ensure that any asynchronous operations get \" + \"canceled in `componentWillUnmount`), or you can change the test itself \" + \"to be asynchronous.\");\n          }\n          var evt = document.createEvent(\"Event\");\n          var didCall = false;\n          var didError = true;\n          var windowEvent = window.event;\n          var windowEventDescriptor = Object.getOwnPropertyDescriptor(window, \"event\");\n          function restoreAfterDispatch() {\n            fakeNode.removeEventListener(evtType, callCallback, false);\n            if (typeof window.event !== \"undefined\" && window.hasOwnProperty(\"event\")) {\n              window.event = windowEvent;\n            }\n          }\n          var funcArgs = Array.prototype.slice.call(arguments, 3);\n          function callCallback() {\n            didCall = true;\n            restoreAfterDispatch();\n            func.apply(context, funcArgs);\n            didError = false;\n          }\n          var error;\n          var didSetError = false;\n          var isCrossOriginError = false;\n          function handleWindowError(event) {\n            error = event.error;\n            didSetError = true;\n            if (error === null && event.colno === 0 && event.lineno === 0) {\n              isCrossOriginError = true;\n            }\n            if (event.defaultPrevented) {\n              if (error != null && typeof error === \"object\") {\n                try {\n                  error._suppressLogging = true;\n                } catch (inner) {}\n              }\n            }\n          }\n          var evtType = \"react-\" + (name ? name : \"invokeguardedcallback\");\n          window.addEventListener(\"error\", handleWindowError);\n          fakeNode.addEventListener(evtType, callCallback, false);\n          evt.initEvent(evtType, false, false);\n          fakeNode.dispatchEvent(evt);\n          if (windowEventDescriptor) {\n            Object.defineProperty(window, \"event\", windowEventDescriptor);\n          }\n          if (didCall && didError) {\n            if (!didSetError) {\n              error = new Error(\"An error was thrown inside one of your components, but React \" + \"doesn't know what it was. This is likely due to browser \" + 'flakiness. React does its best to preserve the \"Pause on ' + 'exceptions\" behavior of the DevTools, which requires some ' + \"DEV-mode only tricks. It's possible that these don't work in \" + \"your browser. Try triggering the error in production mode, \" + \"or switching to a modern browser. If you suspect that this is \" + \"actually an issue with React, please file an issue.\");\n            } else if (isCrossOriginError) {\n              error = new Error(\"A cross-origin error was thrown. React doesn't have access to \" + \"the actual error object in development. \" + \"See https://reactjs.org/link/crossorigin-error for more information.\");\n            }\n            this.onError(error);\n          }\n          window.removeEventListener(\"error\", handleWindowError);\n          if (!didCall) {\n            restoreAfterDispatch();\n            return invokeGuardedCallbackProd.apply(this, arguments);\n          }\n        };\n      }\n    }\n    var invokeGuardedCallbackImpl$1 = invokeGuardedCallbackImpl;\n    var hasError = false;\n    var caughtError = null;\n    var hasRethrowError = false;\n    var rethrowError = null;\n    var reporter = {\n      onError: function onError(error) {\n        hasError = true;\n        caughtError = error;\n      }\n    };\n    function invokeGuardedCallback(name, func, context, a, b, c, d, e, f) {\n      hasError = false;\n      caughtError = null;\n      invokeGuardedCallbackImpl$1.apply(reporter, arguments);\n    }\n    function invokeGuardedCallbackAndCatchFirstError(name, func, context, a, b, c, d, e, f) {\n      invokeGuardedCallback.apply(this, arguments);\n      if (hasError) {\n        var error = clearCaughtError();\n        if (!hasRethrowError) {\n          hasRethrowError = true;\n          rethrowError = error;\n        }\n      }\n    }\n    function rethrowCaughtError() {\n      if (hasRethrowError) {\n        var error = rethrowError;\n        hasRethrowError = false;\n        rethrowError = null;\n        throw error;\n      }\n    }\n    function hasCaughtError() {\n      return hasError;\n    }\n    function clearCaughtError() {\n      if (hasError) {\n        var error = caughtError;\n        hasError = false;\n        caughtError = null;\n        return error;\n      } else {\n        throw new Error(\"clearCaughtError was called but no error was captured. This error \" + \"is likely caused by a bug in React. Please file an issue.\");\n      }\n    }\n    var isArrayImpl = Array.isArray;\n    function isArray(a) {\n      return isArrayImpl(a);\n    }\n    var getFiberCurrentPropsFromNode = null;\n    var getInstanceFromNode = null;\n    var getNodeFromInstance = null;\n    function setComponentTree(getFiberCurrentPropsFromNodeImpl, getInstanceFromNodeImpl, getNodeFromInstanceImpl) {\n      getFiberCurrentPropsFromNode = getFiberCurrentPropsFromNodeImpl;\n      getInstanceFromNode = getInstanceFromNodeImpl;\n      getNodeFromInstance = getNodeFromInstanceImpl;\n      {\n        if (!getNodeFromInstance || !getInstanceFromNode) {\n          error(\"EventPluginUtils.setComponentTree(...): Injected \" + \"module is missing getNodeFromInstance or getInstanceFromNode.\");\n        }\n      }\n    }\n    var validateEventDispatches;\n    {\n      validateEventDispatches = function validateEventDispatches(event) {\n        var dispatchListeners = event._dispatchListeners;\n        var dispatchInstances = event._dispatchInstances;\n        var listenersIsArr = isArray(dispatchListeners);\n        var listenersLen = listenersIsArr ? dispatchListeners.length : dispatchListeners ? 1 : 0;\n        var instancesIsArr = isArray(dispatchInstances);\n        var instancesLen = instancesIsArr ? dispatchInstances.length : dispatchInstances ? 1 : 0;\n        if (instancesIsArr !== listenersIsArr || instancesLen !== listenersLen) {\n          error(\"EventPluginUtils: Invalid `event`.\");\n        }\n      };\n    }\n    function executeDispatch(event, listener, inst) {\n      var type = event.type || \"unknown-event\";\n      event.currentTarget = getNodeFromInstance(inst);\n      invokeGuardedCallbackAndCatchFirstError(type, listener, undefined, event);\n      event.currentTarget = null;\n    }\n    function executeDispatchesInOrder(event) {\n      var dispatchListeners = event._dispatchListeners;\n      var dispatchInstances = event._dispatchInstances;\n      {\n        validateEventDispatches(event);\n      }\n      if (isArray(dispatchListeners)) {\n        for (var i = 0; i < dispatchListeners.length; i++) {\n          if (event.isPropagationStopped()) {\n            break;\n          }\n          executeDispatch(event, dispatchListeners[i], dispatchInstances[i]);\n        }\n      } else if (dispatchListeners) {\n        executeDispatch(event, dispatchListeners, dispatchInstances);\n      }\n      event._dispatchListeners = null;\n      event._dispatchInstances = null;\n    }\n    function executeDispatchesInOrderStopAtTrueImpl(event) {\n      var dispatchListeners = event._dispatchListeners;\n      var dispatchInstances = event._dispatchInstances;\n      {\n        validateEventDispatches(event);\n      }\n      if (isArray(dispatchListeners)) {\n        for (var i = 0; i < dispatchListeners.length; i++) {\n          if (event.isPropagationStopped()) {\n            break;\n          }\n          if (dispatchListeners[i](event, dispatchInstances[i])) {\n            return dispatchInstances[i];\n          }\n        }\n      } else if (dispatchListeners) {\n        if (dispatchListeners(event, dispatchInstances)) {\n          return dispatchInstances;\n        }\n      }\n      return null;\n    }\n    function executeDispatchesInOrderStopAtTrue(event) {\n      var ret = executeDispatchesInOrderStopAtTrueImpl(event);\n      event._dispatchInstances = null;\n      event._dispatchListeners = null;\n      return ret;\n    }\n    function executeDirectDispatch(event) {\n      {\n        validateEventDispatches(event);\n      }\n      var dispatchListener = event._dispatchListeners;\n      var dispatchInstance = event._dispatchInstances;\n      if (isArray(dispatchListener)) {\n        throw new Error(\"executeDirectDispatch(...): Invalid `event`.\");\n      }\n      event.currentTarget = dispatchListener ? getNodeFromInstance(dispatchInstance) : null;\n      var res = dispatchListener ? dispatchListener(event) : null;\n      event.currentTarget = null;\n      event._dispatchListeners = null;\n      event._dispatchInstances = null;\n      return res;\n    }\n    function hasDispatches(event) {\n      return !!event._dispatchListeners;\n    }\n    var assign = Object.assign;\n    var EVENT_POOL_SIZE = 10;\n    var EventInterface = {\n      type: null,\n      target: null,\n      currentTarget: function currentTarget() {\n        return null;\n      },\n      eventPhase: null,\n      bubbles: null,\n      cancelable: null,\n      timeStamp: function timeStamp(event) {\n        return event.timeStamp || Date.now();\n      },\n      defaultPrevented: null,\n      isTrusted: null\n    };\n    function functionThatReturnsTrue() {\n      return true;\n    }\n    function functionThatReturnsFalse() {\n      return false;\n    }\n    function SyntheticEvent(dispatchConfig, targetInst, nativeEvent, nativeEventTarget) {\n      {\n        delete this.nativeEvent;\n        delete this.preventDefault;\n        delete this.stopPropagation;\n        delete this.isDefaultPrevented;\n        delete this.isPropagationStopped;\n      }\n      this.dispatchConfig = dispatchConfig;\n      this._targetInst = targetInst;\n      this.nativeEvent = nativeEvent;\n      this._dispatchListeners = null;\n      this._dispatchInstances = null;\n      var Interface = this.constructor.Interface;\n      for (var propName in Interface) {\n        if (!Interface.hasOwnProperty(propName)) {\n          continue;\n        }\n        {\n          delete this[propName];\n        }\n        var normalize = Interface[propName];\n        if (normalize) {\n          this[propName] = normalize(nativeEvent);\n        } else {\n          if (propName === \"target\") {\n            this.target = nativeEventTarget;\n          } else {\n            this[propName] = nativeEvent[propName];\n          }\n        }\n      }\n      var defaultPrevented = nativeEvent.defaultPrevented != null ? nativeEvent.defaultPrevented : nativeEvent.returnValue === false;\n      if (defaultPrevented) {\n        this.isDefaultPrevented = functionThatReturnsTrue;\n      } else {\n        this.isDefaultPrevented = functionThatReturnsFalse;\n      }\n      this.isPropagationStopped = functionThatReturnsFalse;\n      return this;\n    }\n    assign(SyntheticEvent.prototype, {\n      preventDefault: function preventDefault() {\n        this.defaultPrevented = true;\n        var event = this.nativeEvent;\n        if (!event) {\n          return;\n        }\n        if (event.preventDefault) {\n          event.preventDefault();\n        } else if (typeof event.returnValue !== \"unknown\") {\n          event.returnValue = false;\n        }\n        this.isDefaultPrevented = functionThatReturnsTrue;\n      },\n      stopPropagation: function stopPropagation() {\n        var event = this.nativeEvent;\n        if (!event) {\n          return;\n        }\n        if (event.stopPropagation) {\n          event.stopPropagation();\n        } else if (typeof event.cancelBubble !== \"unknown\") {\n          event.cancelBubble = true;\n        }\n        this.isPropagationStopped = functionThatReturnsTrue;\n      },\n      persist: function persist() {\n        this.isPersistent = functionThatReturnsTrue;\n      },\n      isPersistent: functionThatReturnsFalse,\n      destructor: function destructor() {\n        var Interface = this.constructor.Interface;\n        for (var propName in Interface) {\n          {\n            Object.defineProperty(this, propName, getPooledWarningPropertyDefinition(propName, Interface[propName]));\n          }\n        }\n        this.dispatchConfig = null;\n        this._targetInst = null;\n        this.nativeEvent = null;\n        this.isDefaultPrevented = functionThatReturnsFalse;\n        this.isPropagationStopped = functionThatReturnsFalse;\n        this._dispatchListeners = null;\n        this._dispatchInstances = null;\n        {\n          Object.defineProperty(this, \"nativeEvent\", getPooledWarningPropertyDefinition(\"nativeEvent\", null));\n          Object.defineProperty(this, \"isDefaultPrevented\", getPooledWarningPropertyDefinition(\"isDefaultPrevented\", functionThatReturnsFalse));\n          Object.defineProperty(this, \"isPropagationStopped\", getPooledWarningPropertyDefinition(\"isPropagationStopped\", functionThatReturnsFalse));\n          Object.defineProperty(this, \"preventDefault\", getPooledWarningPropertyDefinition(\"preventDefault\", function () {}));\n          Object.defineProperty(this, \"stopPropagation\", getPooledWarningPropertyDefinition(\"stopPropagation\", function () {}));\n        }\n      }\n    });\n    SyntheticEvent.Interface = EventInterface;\n    SyntheticEvent.extend = function (Interface) {\n      var Super = this;\n      var E = function E() {};\n      E.prototype = Super.prototype;\n      var prototype = new E();\n      function Class() {\n        return Super.apply(this, arguments);\n      }\n      assign(prototype, Class.prototype);\n      Class.prototype = prototype;\n      Class.prototype.constructor = Class;\n      Class.Interface = assign({}, Super.Interface, Interface);\n      Class.extend = Super.extend;\n      addEventPoolingTo(Class);\n      return Class;\n    };\n    addEventPoolingTo(SyntheticEvent);\n    function getPooledWarningPropertyDefinition(propName, getVal) {\n      function set(val) {\n        var action = isFunction ? \"setting the method\" : \"setting the property\";\n        warn(action, \"This is effectively a no-op\");\n        return val;\n      }\n      function get() {\n        var action = isFunction ? \"accessing the method\" : \"accessing the property\";\n        var result = isFunction ? \"This is a no-op function\" : \"This is set to null\";\n        warn(action, result);\n        return getVal;\n      }\n      function warn(action, result) {\n        {\n          error(\"This synthetic event is reused for performance reasons. If you're seeing this, \" + \"you're %s `%s` on a released/nullified synthetic event. %s. \" + \"If you must keep the original synthetic event around, use event.persist(). \" + \"See https://reactjs.org/link/event-pooling for more information.\", action, propName, result);\n        }\n      }\n      var isFunction = typeof getVal === \"function\";\n      return {\n        configurable: true,\n        set: set,\n        get: get\n      };\n    }\n    function createOrGetPooledEvent(dispatchConfig, targetInst, nativeEvent, nativeInst) {\n      var EventConstructor = this;\n      if (EventConstructor.eventPool.length) {\n        var instance = EventConstructor.eventPool.pop();\n        EventConstructor.call(instance, dispatchConfig, targetInst, nativeEvent, nativeInst);\n        return instance;\n      }\n      return new EventConstructor(dispatchConfig, targetInst, nativeEvent, nativeInst);\n    }\n    function releasePooledEvent(event) {\n      var EventConstructor = this;\n      if (!(event instanceof EventConstructor)) {\n        throw new Error(\"Trying to release an event instance into a pool of a different type.\");\n      }\n      event.destructor();\n      if (EventConstructor.eventPool.length < EVENT_POOL_SIZE) {\n        EventConstructor.eventPool.push(event);\n      }\n    }\n    function addEventPoolingTo(EventConstructor) {\n      EventConstructor.getPooled = createOrGetPooledEvent;\n      EventConstructor.eventPool = [];\n      EventConstructor.release = releasePooledEvent;\n    }\n    var ResponderSyntheticEvent = SyntheticEvent.extend({\n      touchHistory: function touchHistory(nativeEvent) {\n        return null;\n      }\n    });\n    var TOP_TOUCH_START = \"topTouchStart\";\n    var TOP_TOUCH_MOVE = \"topTouchMove\";\n    var TOP_TOUCH_END = \"topTouchEnd\";\n    var TOP_TOUCH_CANCEL = \"topTouchCancel\";\n    var TOP_SCROLL = \"topScroll\";\n    var TOP_SELECTION_CHANGE = \"topSelectionChange\";\n    function isStartish(topLevelType) {\n      return topLevelType === TOP_TOUCH_START;\n    }\n    function isMoveish(topLevelType) {\n      return topLevelType === TOP_TOUCH_MOVE;\n    }\n    function isEndish(topLevelType) {\n      return topLevelType === TOP_TOUCH_END || topLevelType === TOP_TOUCH_CANCEL;\n    }\n    var startDependencies = [TOP_TOUCH_START];\n    var moveDependencies = [TOP_TOUCH_MOVE];\n    var endDependencies = [TOP_TOUCH_CANCEL, TOP_TOUCH_END];\n    var MAX_TOUCH_BANK = 20;\n    var touchBank = [];\n    var touchHistory = {\n      touchBank: touchBank,\n      numberActiveTouches: 0,\n      indexOfSingleActiveTouch: -1,\n      mostRecentTimeStamp: 0\n    };\n    function timestampForTouch(touch) {\n      return touch.timeStamp || touch.timestamp;\n    }\n    function createTouchRecord(touch) {\n      return {\n        touchActive: true,\n        startPageX: touch.pageX,\n        startPageY: touch.pageY,\n        startTimeStamp: timestampForTouch(touch),\n        currentPageX: touch.pageX,\n        currentPageY: touch.pageY,\n        currentTimeStamp: timestampForTouch(touch),\n        previousPageX: touch.pageX,\n        previousPageY: touch.pageY,\n        previousTimeStamp: timestampForTouch(touch)\n      };\n    }\n    function resetTouchRecord(touchRecord, touch) {\n      touchRecord.touchActive = true;\n      touchRecord.startPageX = touch.pageX;\n      touchRecord.startPageY = touch.pageY;\n      touchRecord.startTimeStamp = timestampForTouch(touch);\n      touchRecord.currentPageX = touch.pageX;\n      touchRecord.currentPageY = touch.pageY;\n      touchRecord.currentTimeStamp = timestampForTouch(touch);\n      touchRecord.previousPageX = touch.pageX;\n      touchRecord.previousPageY = touch.pageY;\n      touchRecord.previousTimeStamp = timestampForTouch(touch);\n    }\n    function getTouchIdentifier(_ref) {\n      var identifier = _ref.identifier;\n      if (identifier == null) {\n        throw new Error(\"Touch object is missing identifier.\");\n      }\n      {\n        if (identifier > MAX_TOUCH_BANK) {\n          error(\"Touch identifier %s is greater than maximum supported %s which causes \" + \"performance issues backfilling array locations for all of the indices.\", identifier, MAX_TOUCH_BANK);\n        }\n      }\n      return identifier;\n    }\n    function recordTouchStart(touch) {\n      var identifier = getTouchIdentifier(touch);\n      var touchRecord = touchBank[identifier];\n      if (touchRecord) {\n        resetTouchRecord(touchRecord, touch);\n      } else {\n        touchBank[identifier] = createTouchRecord(touch);\n      }\n      touchHistory.mostRecentTimeStamp = timestampForTouch(touch);\n    }\n    function recordTouchMove(touch) {\n      var touchRecord = touchBank[getTouchIdentifier(touch)];\n      if (touchRecord) {\n        touchRecord.touchActive = true;\n        touchRecord.previousPageX = touchRecord.currentPageX;\n        touchRecord.previousPageY = touchRecord.currentPageY;\n        touchRecord.previousTimeStamp = touchRecord.currentTimeStamp;\n        touchRecord.currentPageX = touch.pageX;\n        touchRecord.currentPageY = touch.pageY;\n        touchRecord.currentTimeStamp = timestampForTouch(touch);\n        touchHistory.mostRecentTimeStamp = timestampForTouch(touch);\n      } else {\n        {\n          warn(\"Cannot record touch move without a touch start.\\n\" + \"Touch Move: %s\\n\" + \"Touch Bank: %s\", printTouch(touch), printTouchBank());\n        }\n      }\n    }\n    function recordTouchEnd(touch) {\n      var touchRecord = touchBank[getTouchIdentifier(touch)];\n      if (touchRecord) {\n        touchRecord.touchActive = false;\n        touchRecord.previousPageX = touchRecord.currentPageX;\n        touchRecord.previousPageY = touchRecord.currentPageY;\n        touchRecord.previousTimeStamp = touchRecord.currentTimeStamp;\n        touchRecord.currentPageX = touch.pageX;\n        touchRecord.currentPageY = touch.pageY;\n        touchRecord.currentTimeStamp = timestampForTouch(touch);\n        touchHistory.mostRecentTimeStamp = timestampForTouch(touch);\n      } else {\n        {\n          warn(\"Cannot record touch end without a touch start.\\n\" + \"Touch End: %s\\n\" + \"Touch Bank: %s\", printTouch(touch), printTouchBank());\n        }\n      }\n    }\n    function printTouch(touch) {\n      return JSON.stringify({\n        identifier: touch.identifier,\n        pageX: touch.pageX,\n        pageY: touch.pageY,\n        timestamp: timestampForTouch(touch)\n      });\n    }\n    function printTouchBank() {\n      var printed = JSON.stringify(touchBank.slice(0, MAX_TOUCH_BANK));\n      if (touchBank.length > MAX_TOUCH_BANK) {\n        printed += \" (original size: \" + touchBank.length + \")\";\n      }\n      return printed;\n    }\n    var instrumentationCallback;\n    var ResponderTouchHistoryStore = {\n      instrument: function instrument(callback) {\n        instrumentationCallback = callback;\n      },\n      recordTouchTrack: function recordTouchTrack(topLevelType, nativeEvent) {\n        if (instrumentationCallback != null) {\n          instrumentationCallback(topLevelType, nativeEvent);\n        }\n        if (isMoveish(topLevelType)) {\n          nativeEvent.changedTouches.forEach(recordTouchMove);\n        } else if (isStartish(topLevelType)) {\n          nativeEvent.changedTouches.forEach(recordTouchStart);\n          touchHistory.numberActiveTouches = nativeEvent.touches.length;\n          if (touchHistory.numberActiveTouches === 1) {\n            touchHistory.indexOfSingleActiveTouch = nativeEvent.touches[0].identifier;\n          }\n        } else if (isEndish(topLevelType)) {\n          nativeEvent.changedTouches.forEach(recordTouchEnd);\n          touchHistory.numberActiveTouches = nativeEvent.touches.length;\n          if (touchHistory.numberActiveTouches === 1) {\n            for (var i = 0; i < touchBank.length; i++) {\n              var touchTrackToCheck = touchBank[i];\n              if (touchTrackToCheck != null && touchTrackToCheck.touchActive) {\n                touchHistory.indexOfSingleActiveTouch = i;\n                break;\n              }\n            }\n            {\n              var activeRecord = touchBank[touchHistory.indexOfSingleActiveTouch];\n              if (activeRecord == null || !activeRecord.touchActive) {\n                error(\"Cannot find single active touch.\");\n              }\n            }\n          }\n        }\n      },\n      touchHistory: touchHistory\n    };\n    function accumulate(current, next) {\n      if (next == null) {\n        throw new Error(\"accumulate(...): Accumulated items must not be null or undefined.\");\n      }\n      if (current == null) {\n        return next;\n      }\n      if (isArray(current)) {\n        return current.concat(next);\n      }\n      if (isArray(next)) {\n        return [current].concat(next);\n      }\n      return [current, next];\n    }\n    function accumulateInto(current, next) {\n      if (next == null) {\n        throw new Error(\"accumulateInto(...): Accumulated items must not be null or undefined.\");\n      }\n      if (current == null) {\n        return next;\n      }\n      if (isArray(current)) {\n        if (isArray(next)) {\n          current.push.apply(current, next);\n          return current;\n        }\n        current.push(next);\n        return current;\n      }\n      if (isArray(next)) {\n        return [current].concat(next);\n      }\n      return [current, next];\n    }\n    function forEachAccumulated(arr, cb, scope) {\n      if (Array.isArray(arr)) {\n        arr.forEach(cb, scope);\n      } else if (arr) {\n        cb.call(scope, arr);\n      }\n    }\n    var FunctionComponent = 0;\n    var ClassComponent = 1;\n    var IndeterminateComponent = 2;\n    var HostRoot = 3;\n    var HostPortal = 4;\n    var HostComponent = 5;\n    var HostText = 6;\n    var Fragment = 7;\n    var Mode = 8;\n    var ContextConsumer = 9;\n    var ContextProvider = 10;\n    var ForwardRef = 11;\n    var Profiler = 12;\n    var SuspenseComponent = 13;\n    var MemoComponent = 14;\n    var SimpleMemoComponent = 15;\n    var LazyComponent = 16;\n    var IncompleteClassComponent = 17;\n    var DehydratedFragment = 18;\n    var SuspenseListComponent = 19;\n    var ScopeComponent = 21;\n    var OffscreenComponent = 22;\n    var LegacyHiddenComponent = 23;\n    var CacheComponent = 24;\n    var TracingMarkerComponent = 25;\n    var responderInst = null;\n    var trackedTouchCount = 0;\n    var changeResponder = function changeResponder(nextResponderInst, blockHostResponder) {\n      var oldResponderInst = responderInst;\n      responderInst = nextResponderInst;\n      if (ResponderEventPlugin.GlobalResponderHandler !== null) {\n        ResponderEventPlugin.GlobalResponderHandler.onChange(oldResponderInst, nextResponderInst, blockHostResponder);\n      }\n    };\n    var eventTypes = {\n      startShouldSetResponder: {\n        phasedRegistrationNames: {\n          bubbled: \"onStartShouldSetResponder\",\n          captured: \"onStartShouldSetResponderCapture\"\n        },\n        dependencies: startDependencies\n      },\n      scrollShouldSetResponder: {\n        phasedRegistrationNames: {\n          bubbled: \"onScrollShouldSetResponder\",\n          captured: \"onScrollShouldSetResponderCapture\"\n        },\n        dependencies: [TOP_SCROLL]\n      },\n      selectionChangeShouldSetResponder: {\n        phasedRegistrationNames: {\n          bubbled: \"onSelectionChangeShouldSetResponder\",\n          captured: \"onSelectionChangeShouldSetResponderCapture\"\n        },\n        dependencies: [TOP_SELECTION_CHANGE]\n      },\n      moveShouldSetResponder: {\n        phasedRegistrationNames: {\n          bubbled: \"onMoveShouldSetResponder\",\n          captured: \"onMoveShouldSetResponderCapture\"\n        },\n        dependencies: moveDependencies\n      },\n      responderStart: {\n        registrationName: \"onResponderStart\",\n        dependencies: startDependencies\n      },\n      responderMove: {\n        registrationName: \"onResponderMove\",\n        dependencies: moveDependencies\n      },\n      responderEnd: {\n        registrationName: \"onResponderEnd\",\n        dependencies: endDependencies\n      },\n      responderRelease: {\n        registrationName: \"onResponderRelease\",\n        dependencies: endDependencies\n      },\n      responderTerminationRequest: {\n        registrationName: \"onResponderTerminationRequest\",\n        dependencies: []\n      },\n      responderGrant: {\n        registrationName: \"onResponderGrant\",\n        dependencies: []\n      },\n      responderReject: {\n        registrationName: \"onResponderReject\",\n        dependencies: []\n      },\n      responderTerminate: {\n        registrationName: \"onResponderTerminate\",\n        dependencies: []\n      }\n    };\n    function getParent(inst) {\n      do {\n        inst = inst.return;\n      } while (inst && inst.tag !== HostComponent);\n      if (inst) {\n        return inst;\n      }\n      return null;\n    }\n    function getLowestCommonAncestor(instA, instB) {\n      var depthA = 0;\n      for (var tempA = instA; tempA; tempA = getParent(tempA)) {\n        depthA++;\n      }\n      var depthB = 0;\n      for (var tempB = instB; tempB; tempB = getParent(tempB)) {\n        depthB++;\n      }\n      while (depthA - depthB > 0) {\n        instA = getParent(instA);\n        depthA--;\n      }\n      while (depthB - depthA > 0) {\n        instB = getParent(instB);\n        depthB--;\n      }\n      var depth = depthA;\n      while (depth--) {\n        if (instA === instB || instA === instB.alternate) {\n          return instA;\n        }\n        instA = getParent(instA);\n        instB = getParent(instB);\n      }\n      return null;\n    }\n    function isAncestor(instA, instB) {\n      while (instB) {\n        if (instA === instB || instA === instB.alternate) {\n          return true;\n        }\n        instB = getParent(instB);\n      }\n      return false;\n    }\n    function traverseTwoPhase(inst, fn, arg) {\n      var path = [];\n      while (inst) {\n        path.push(inst);\n        inst = getParent(inst);\n      }\n      var i;\n      for (i = path.length; i-- > 0;) {\n        fn(path[i], \"captured\", arg);\n      }\n      for (i = 0; i < path.length; i++) {\n        fn(path[i], \"bubbled\", arg);\n      }\n    }\n    function getListener(inst, registrationName) {\n      var stateNode = inst.stateNode;\n      if (stateNode === null) {\n        return null;\n      }\n      var props = getFiberCurrentPropsFromNode(stateNode);\n      if (props === null) {\n        return null;\n      }\n      var listener = props[registrationName];\n      if (listener && typeof listener !== \"function\") {\n        throw new Error(\"Expected `\" + registrationName + \"` listener to be a function, instead got a value of `\" + typeof listener + \"` type.\");\n      }\n      return listener;\n    }\n    function listenerAtPhase(inst, event, propagationPhase) {\n      var registrationName = event.dispatchConfig.phasedRegistrationNames[propagationPhase];\n      return getListener(inst, registrationName);\n    }\n    function accumulateDirectionalDispatches(inst, phase, event) {\n      {\n        if (!inst) {\n          error(\"Dispatching inst must not be null\");\n        }\n      }\n      var listener = listenerAtPhase(inst, event, phase);\n      if (listener) {\n        event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);\n        event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);\n      }\n    }\n    function accumulateDispatches(inst, ignoredDirection, event) {\n      if (inst && event && event.dispatchConfig.registrationName) {\n        var registrationName = event.dispatchConfig.registrationName;\n        var listener = getListener(inst, registrationName);\n        if (listener) {\n          event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);\n          event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);\n        }\n      }\n    }\n    function accumulateDirectDispatchesSingle(event) {\n      if (event && event.dispatchConfig.registrationName) {\n        accumulateDispatches(event._targetInst, null, event);\n      }\n    }\n    function accumulateDirectDispatches(events) {\n      forEachAccumulated(events, accumulateDirectDispatchesSingle);\n    }\n    function accumulateTwoPhaseDispatchesSingleSkipTarget(event) {\n      if (event && event.dispatchConfig.phasedRegistrationNames) {\n        var targetInst = event._targetInst;\n        var parentInst = targetInst ? getParent(targetInst) : null;\n        traverseTwoPhase(parentInst, accumulateDirectionalDispatches, event);\n      }\n    }\n    function accumulateTwoPhaseDispatchesSkipTarget(events) {\n      forEachAccumulated(events, accumulateTwoPhaseDispatchesSingleSkipTarget);\n    }\n    function accumulateTwoPhaseDispatchesSingle(event) {\n      if (event && event.dispatchConfig.phasedRegistrationNames) {\n        traverseTwoPhase(event._targetInst, accumulateDirectionalDispatches, event);\n      }\n    }\n    function accumulateTwoPhaseDispatches(events) {\n      forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle);\n    }\n    function setResponderAndExtractTransfer(topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n      var shouldSetEventType = isStartish(topLevelType) ? eventTypes.startShouldSetResponder : isMoveish(topLevelType) ? eventTypes.moveShouldSetResponder : topLevelType === TOP_SELECTION_CHANGE ? eventTypes.selectionChangeShouldSetResponder : eventTypes.scrollShouldSetResponder;\n      var bubbleShouldSetFrom = !responderInst ? targetInst : getLowestCommonAncestor(responderInst, targetInst);\n      var skipOverBubbleShouldSetFrom = bubbleShouldSetFrom === responderInst;\n      var shouldSetEvent = ResponderSyntheticEvent.getPooled(shouldSetEventType, bubbleShouldSetFrom, nativeEvent, nativeEventTarget);\n      shouldSetEvent.touchHistory = ResponderTouchHistoryStore.touchHistory;\n      if (skipOverBubbleShouldSetFrom) {\n        accumulateTwoPhaseDispatchesSkipTarget(shouldSetEvent);\n      } else {\n        accumulateTwoPhaseDispatches(shouldSetEvent);\n      }\n      var wantsResponderInst = executeDispatchesInOrderStopAtTrue(shouldSetEvent);\n      if (!shouldSetEvent.isPersistent()) {\n        shouldSetEvent.constructor.release(shouldSetEvent);\n      }\n      if (!wantsResponderInst || wantsResponderInst === responderInst) {\n        return null;\n      }\n      var extracted;\n      var grantEvent = ResponderSyntheticEvent.getPooled(eventTypes.responderGrant, wantsResponderInst, nativeEvent, nativeEventTarget);\n      grantEvent.touchHistory = ResponderTouchHistoryStore.touchHistory;\n      accumulateDirectDispatches(grantEvent);\n      var blockHostResponder = executeDirectDispatch(grantEvent) === true;\n      if (responderInst) {\n        var terminationRequestEvent = ResponderSyntheticEvent.getPooled(eventTypes.responderTerminationRequest, responderInst, nativeEvent, nativeEventTarget);\n        terminationRequestEvent.touchHistory = ResponderTouchHistoryStore.touchHistory;\n        accumulateDirectDispatches(terminationRequestEvent);\n        var shouldSwitch = !hasDispatches(terminationRequestEvent) || executeDirectDispatch(terminationRequestEvent);\n        if (!terminationRequestEvent.isPersistent()) {\n          terminationRequestEvent.constructor.release(terminationRequestEvent);\n        }\n        if (shouldSwitch) {\n          var terminateEvent = ResponderSyntheticEvent.getPooled(eventTypes.responderTerminate, responderInst, nativeEvent, nativeEventTarget);\n          terminateEvent.touchHistory = ResponderTouchHistoryStore.touchHistory;\n          accumulateDirectDispatches(terminateEvent);\n          extracted = accumulate(extracted, [grantEvent, terminateEvent]);\n          changeResponder(wantsResponderInst, blockHostResponder);\n        } else {\n          var rejectEvent = ResponderSyntheticEvent.getPooled(eventTypes.responderReject, wantsResponderInst, nativeEvent, nativeEventTarget);\n          rejectEvent.touchHistory = ResponderTouchHistoryStore.touchHistory;\n          accumulateDirectDispatches(rejectEvent);\n          extracted = accumulate(extracted, rejectEvent);\n        }\n      } else {\n        extracted = accumulate(extracted, grantEvent);\n        changeResponder(wantsResponderInst, blockHostResponder);\n      }\n      return extracted;\n    }\n    function canTriggerTransfer(topLevelType, topLevelInst, nativeEvent) {\n      return topLevelInst && (topLevelType === TOP_SCROLL && !nativeEvent.responderIgnoreScroll || trackedTouchCount > 0 && topLevelType === TOP_SELECTION_CHANGE || isStartish(topLevelType) || isMoveish(topLevelType));\n    }\n    function noResponderTouches(nativeEvent) {\n      var touches = nativeEvent.touches;\n      if (!touches || touches.length === 0) {\n        return true;\n      }\n      for (var i = 0; i < touches.length; i++) {\n        var activeTouch = touches[i];\n        var target = activeTouch.target;\n        if (target !== null && target !== undefined && target !== 0) {\n          var targetInst = getInstanceFromNode(target);\n          if (isAncestor(responderInst, targetInst)) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n    var ResponderEventPlugin = {\n      _getResponder: function _getResponder() {\n        return responderInst;\n      },\n      eventTypes: eventTypes,\n      extractEvents: function extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags) {\n        if (isStartish(topLevelType)) {\n          trackedTouchCount += 1;\n        } else if (isEndish(topLevelType)) {\n          if (trackedTouchCount >= 0) {\n            trackedTouchCount -= 1;\n          } else {\n            {\n              warn(\"Ended a touch event which was not counted in `trackedTouchCount`.\");\n            }\n            return null;\n          }\n        }\n        ResponderTouchHistoryStore.recordTouchTrack(topLevelType, nativeEvent);\n        var extracted = canTriggerTransfer(topLevelType, targetInst, nativeEvent) ? setResponderAndExtractTransfer(topLevelType, targetInst, nativeEvent, nativeEventTarget) : null;\n        var isResponderTouchStart = responderInst && isStartish(topLevelType);\n        var isResponderTouchMove = responderInst && isMoveish(topLevelType);\n        var isResponderTouchEnd = responderInst && isEndish(topLevelType);\n        var incrementalTouch = isResponderTouchStart ? eventTypes.responderStart : isResponderTouchMove ? eventTypes.responderMove : isResponderTouchEnd ? eventTypes.responderEnd : null;\n        if (incrementalTouch) {\n          var gesture = ResponderSyntheticEvent.getPooled(incrementalTouch, responderInst, nativeEvent, nativeEventTarget);\n          gesture.touchHistory = ResponderTouchHistoryStore.touchHistory;\n          accumulateDirectDispatches(gesture);\n          extracted = accumulate(extracted, gesture);\n        }\n        var isResponderTerminate = responderInst && topLevelType === TOP_TOUCH_CANCEL;\n        var isResponderRelease = responderInst && !isResponderTerminate && isEndish(topLevelType) && noResponderTouches(nativeEvent);\n        var finalTouch = isResponderTerminate ? eventTypes.responderTerminate : isResponderRelease ? eventTypes.responderRelease : null;\n        if (finalTouch) {\n          var finalEvent = ResponderSyntheticEvent.getPooled(finalTouch, responderInst, nativeEvent, nativeEventTarget);\n          finalEvent.touchHistory = ResponderTouchHistoryStore.touchHistory;\n          accumulateDirectDispatches(finalEvent);\n          extracted = accumulate(extracted, finalEvent);\n          changeResponder(null);\n        }\n        return extracted;\n      },\n      GlobalResponderHandler: null,\n      injection: {\n        injectGlobalResponderHandler: function injectGlobalResponderHandler(GlobalResponderHandler) {\n          ResponderEventPlugin.GlobalResponderHandler = GlobalResponderHandler;\n        }\n      }\n    };\n    var eventPluginOrder = null;\n    var namesToPlugins = {};\n    function recomputePluginOrdering() {\n      if (!eventPluginOrder) {\n        return;\n      }\n      for (var pluginName in namesToPlugins) {\n        var pluginModule = namesToPlugins[pluginName];\n        var pluginIndex = eventPluginOrder.indexOf(pluginName);\n        if (pluginIndex <= -1) {\n          throw new Error(\"EventPluginRegistry: Cannot inject event plugins that do not exist in \" + (\"the plugin ordering, `\" + pluginName + \"`.\"));\n        }\n        if (plugins[pluginIndex]) {\n          continue;\n        }\n        if (!pluginModule.extractEvents) {\n          throw new Error(\"EventPluginRegistry: Event plugins must implement an `extractEvents` \" + (\"method, but `\" + pluginName + \"` does not.\"));\n        }\n        plugins[pluginIndex] = pluginModule;\n        var publishedEvents = pluginModule.eventTypes;\n        for (var eventName in publishedEvents) {\n          if (!publishEventForPlugin(publishedEvents[eventName], pluginModule, eventName)) {\n            throw new Error(\"EventPluginRegistry: Failed to publish event `\" + eventName + \"` for plugin `\" + pluginName + \"`.\");\n          }\n        }\n      }\n    }\n    function publishEventForPlugin(dispatchConfig, pluginModule, eventName) {\n      if (eventNameDispatchConfigs.hasOwnProperty(eventName)) {\n        throw new Error(\"EventPluginRegistry: More than one plugin attempted to publish the same \" + (\"event name, `\" + eventName + \"`.\"));\n      }\n      eventNameDispatchConfigs[eventName] = dispatchConfig;\n      var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;\n      if (phasedRegistrationNames) {\n        for (var phaseName in phasedRegistrationNames) {\n          if (phasedRegistrationNames.hasOwnProperty(phaseName)) {\n            var phasedRegistrationName = phasedRegistrationNames[phaseName];\n            publishRegistrationName(phasedRegistrationName, pluginModule, eventName);\n          }\n        }\n        return true;\n      } else if (dispatchConfig.registrationName) {\n        publishRegistrationName(dispatchConfig.registrationName, pluginModule, eventName);\n        return true;\n      }\n      return false;\n    }\n    function publishRegistrationName(registrationName, pluginModule, eventName) {\n      if (registrationNameModules[registrationName]) {\n        throw new Error(\"EventPluginRegistry: More than one plugin attempted to publish the same \" + (\"registration name, `\" + registrationName + \"`.\"));\n      }\n      registrationNameModules[registrationName] = pluginModule;\n      registrationNameDependencies[registrationName] = pluginModule.eventTypes[eventName].dependencies;\n      {\n        var lowerCasedName = registrationName.toLowerCase();\n      }\n    }\n    var plugins = [];\n    var eventNameDispatchConfigs = {};\n    var registrationNameModules = {};\n    var registrationNameDependencies = {};\n    function injectEventPluginOrder(injectedEventPluginOrder) {\n      if (eventPluginOrder) {\n        throw new Error(\"EventPluginRegistry: Cannot inject event plugin ordering more than \" + \"once. You are likely trying to load more than one copy of React.\");\n      }\n      eventPluginOrder = Array.prototype.slice.call(injectedEventPluginOrder);\n      recomputePluginOrdering();\n    }\n    function injectEventPluginsByName(injectedNamesToPlugins) {\n      var isOrderingDirty = false;\n      for (var pluginName in injectedNamesToPlugins) {\n        if (!injectedNamesToPlugins.hasOwnProperty(pluginName)) {\n          continue;\n        }\n        var pluginModule = injectedNamesToPlugins[pluginName];\n        if (!namesToPlugins.hasOwnProperty(pluginName) || namesToPlugins[pluginName] !== pluginModule) {\n          if (namesToPlugins[pluginName]) {\n            throw new Error(\"EventPluginRegistry: Cannot inject two different event plugins \" + (\"using the same name, `\" + pluginName + \"`.\"));\n          }\n          namesToPlugins[pluginName] = pluginModule;\n          isOrderingDirty = true;\n        }\n      }\n      if (isOrderingDirty) {\n        recomputePluginOrdering();\n      }\n    }\n    function getListeners(inst, registrationName, phase, dispatchToImperativeListeners) {\n      var stateNode = inst.stateNode;\n      if (stateNode === null) {\n        return null;\n      }\n      var props = getFiberCurrentPropsFromNode(stateNode);\n      if (props === null) {\n        return null;\n      }\n      var listener = props[registrationName];\n      if (listener && typeof listener !== \"function\") {\n        throw new Error(\"Expected `\" + registrationName + \"` listener to be a function, instead got a value of `\" + typeof listener + \"` type.\");\n      }\n      if (!(dispatchToImperativeListeners && stateNode.canonical && stateNode.canonical._eventListeners)) {\n        return listener;\n      }\n      var listeners = [];\n      if (listener) {\n        listeners.push(listener);\n      }\n      var requestedPhaseIsCapture = phase === \"captured\";\n      var mangledImperativeRegistrationName = requestedPhaseIsCapture ? \"rn:\" + registrationName.replace(/Capture$/, \"\") : \"rn:\" + registrationName;\n      if (stateNode.canonical._eventListeners[mangledImperativeRegistrationName] && stateNode.canonical._eventListeners[mangledImperativeRegistrationName].length > 0) {\n        var eventListeners = stateNode.canonical._eventListeners[mangledImperativeRegistrationName];\n        eventListeners.forEach(function (listenerObj) {\n          var isCaptureEvent = listenerObj.options.capture != null && listenerObj.options.capture;\n          if (isCaptureEvent !== requestedPhaseIsCapture) {\n            return;\n          }\n          var listenerFnWrapper = function listenerFnWrapper(syntheticEvent) {\n            var eventInst = new ReactNativePrivateInterface.CustomEvent(mangledImperativeRegistrationName, {\n              detail: syntheticEvent.nativeEvent\n            });\n            eventInst.isTrusted = true;\n            eventInst.setSyntheticEvent(syntheticEvent);\n            for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n              args[_key - 1] = arguments[_key];\n            }\n            listenerObj.listener.apply(listenerObj, [eventInst].concat(args));\n          };\n          if (listenerObj.options.once) {\n            listeners.push(function () {\n              stateNode.canonical.removeEventListener_unstable(mangledImperativeRegistrationName, listenerObj.listener, listenerObj.capture);\n              if (!listenerObj.invalidated) {\n                listenerObj.invalidated = true;\n                listenerObj.listener.apply(listenerObj, arguments);\n              }\n            });\n          } else {\n            listeners.push(listenerFnWrapper);\n          }\n        });\n      }\n      if (listeners.length === 0) {\n        return null;\n      }\n      if (listeners.length === 1) {\n        return listeners[0];\n      }\n      return listeners;\n    }\n    var customBubblingEventTypes = ReactNativePrivateInterface.ReactNativeViewConfigRegistry.customBubblingEventTypes,\n      customDirectEventTypes = ReactNativePrivateInterface.ReactNativeViewConfigRegistry.customDirectEventTypes;\n    function listenersAtPhase(inst, event, propagationPhase) {\n      var registrationName = event.dispatchConfig.phasedRegistrationNames[propagationPhase];\n      return getListeners(inst, registrationName, propagationPhase, true);\n    }\n    function accumulateListenersAndInstances(inst, event, listeners) {\n      var listenersLength = listeners ? isArray(listeners) ? listeners.length : 1 : 0;\n      if (listenersLength > 0) {\n        event._dispatchListeners = accumulateInto(event._dispatchListeners, listeners);\n        if (event._dispatchInstances == null && listenersLength === 1) {\n          event._dispatchInstances = inst;\n        } else {\n          event._dispatchInstances = event._dispatchInstances || [];\n          if (!isArray(event._dispatchInstances)) {\n            event._dispatchInstances = [event._dispatchInstances];\n          }\n          for (var i = 0; i < listenersLength; i++) {\n            event._dispatchInstances.push(inst);\n          }\n        }\n      }\n    }\n    function accumulateDirectionalDispatches$1(inst, phase, event) {\n      {\n        if (!inst) {\n          error(\"Dispatching inst must not be null\");\n        }\n      }\n      var listeners = listenersAtPhase(inst, event, phase);\n      accumulateListenersAndInstances(inst, event, listeners);\n    }\n    function getParent$1(inst) {\n      do {\n        inst = inst.return;\n      } while (inst && inst.tag !== HostComponent);\n      if (inst) {\n        return inst;\n      }\n      return null;\n    }\n    function traverseTwoPhase$1(inst, fn, arg, skipBubbling) {\n      var path = [];\n      while (inst) {\n        path.push(inst);\n        inst = getParent$1(inst);\n      }\n      var i;\n      for (i = path.length; i-- > 0;) {\n        fn(path[i], \"captured\", arg);\n      }\n      if (skipBubbling) {\n        fn(path[0], \"bubbled\", arg);\n      } else {\n        for (i = 0; i < path.length; i++) {\n          fn(path[i], \"bubbled\", arg);\n        }\n      }\n    }\n    function accumulateTwoPhaseDispatchesSingle$1(event) {\n      if (event && event.dispatchConfig.phasedRegistrationNames) {\n        traverseTwoPhase$1(event._targetInst, accumulateDirectionalDispatches$1, event, false);\n      }\n    }\n    function accumulateTwoPhaseDispatches$1(events) {\n      forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle$1);\n    }\n    function accumulateCapturePhaseDispatches(event) {\n      if (event && event.dispatchConfig.phasedRegistrationNames) {\n        traverseTwoPhase$1(event._targetInst, accumulateDirectionalDispatches$1, event, true);\n      }\n    }\n    function accumulateDispatches$1(inst, ignoredDirection, event) {\n      if (inst && event && event.dispatchConfig.registrationName) {\n        var registrationName = event.dispatchConfig.registrationName;\n        var listeners = getListeners(inst, registrationName, \"bubbled\", false);\n        accumulateListenersAndInstances(inst, event, listeners);\n      }\n    }\n    function accumulateDirectDispatchesSingle$1(event) {\n      if (event && event.dispatchConfig.registrationName) {\n        accumulateDispatches$1(event._targetInst, null, event);\n      }\n    }\n    function accumulateDirectDispatches$1(events) {\n      forEachAccumulated(events, accumulateDirectDispatchesSingle$1);\n    }\n    var ReactNativeBridgeEventPlugin = {\n      eventTypes: {},\n      extractEvents: function extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n        if (targetInst == null) {\n          return null;\n        }\n        var bubbleDispatchConfig = customBubblingEventTypes[topLevelType];\n        var directDispatchConfig = customDirectEventTypes[topLevelType];\n        if (!bubbleDispatchConfig && !directDispatchConfig) {\n          throw new Error('Unsupported top level event type \"' + topLevelType + '\" dispatched');\n        }\n        var event = SyntheticEvent.getPooled(bubbleDispatchConfig || directDispatchConfig, targetInst, nativeEvent, nativeEventTarget);\n        if (bubbleDispatchConfig) {\n          var skipBubbling = event != null && event.dispatchConfig.phasedRegistrationNames != null && event.dispatchConfig.phasedRegistrationNames.skipBubbling;\n          if (skipBubbling) {\n            accumulateCapturePhaseDispatches(event);\n          } else {\n            accumulateTwoPhaseDispatches$1(event);\n          }\n        } else if (directDispatchConfig) {\n          accumulateDirectDispatches$1(event);\n        } else {\n          return null;\n        }\n        return event;\n      }\n    };\n    var ReactNativeEventPluginOrder = [\"ResponderEventPlugin\", \"ReactNativeBridgeEventPlugin\"];\n    injectEventPluginOrder(ReactNativeEventPluginOrder);\n    injectEventPluginsByName({\n      ResponderEventPlugin: ResponderEventPlugin,\n      ReactNativeBridgeEventPlugin: ReactNativeBridgeEventPlugin\n    });\n    function getInstanceFromInstance(instanceHandle) {\n      return instanceHandle;\n    }\n    function getTagFromInstance(inst) {\n      var nativeInstance = inst.stateNode.canonical;\n      if (!nativeInstance._nativeTag) {\n        throw new Error(\"All native instances should have a tag.\");\n      }\n      return nativeInstance;\n    }\n    function getFiberCurrentPropsFromNode$1(inst) {\n      return inst.canonical.currentProps;\n    }\n    var ReactFabricGlobalResponderHandler = {\n      onChange: function onChange(from, to, blockNativeResponder) {\n        var fromOrTo = from || to;\n        var fromOrToStateNode = fromOrTo && fromOrTo.stateNode;\n        var isFabric = !!(fromOrToStateNode && fromOrToStateNode.canonical._internalInstanceHandle);\n        if (isFabric) {\n          if (from) {\n            nativeFabricUIManager.setIsJSResponder(from.stateNode.node, false, blockNativeResponder || false);\n          }\n          if (to) {\n            nativeFabricUIManager.setIsJSResponder(to.stateNode.node, true, blockNativeResponder || false);\n          }\n        } else {\n          if (to !== null) {\n            var tag = to.stateNode.canonical._nativeTag;\n            ReactNativePrivateInterface.UIManager.setJSResponder(tag, blockNativeResponder);\n          } else {\n            ReactNativePrivateInterface.UIManager.clearJSResponder();\n          }\n        }\n      }\n    };\n    setComponentTree(getFiberCurrentPropsFromNode$1, getInstanceFromInstance, getTagFromInstance);\n    ResponderEventPlugin.injection.injectGlobalResponderHandler(ReactFabricGlobalResponderHandler);\n    function get(key) {\n      return key._reactInternals;\n    }\n    function set(key, value) {\n      key._reactInternals = value;\n    }\n    var enableSchedulingProfiler = false;\n    var enableProfilerTimer = true;\n    var enableProfilerCommitHooks = true;\n    var warnAboutStringRefs = false;\n    var enableSuspenseAvoidThisFallback = false;\n    var enableNewReconciler = false;\n    var enableLazyContextPropagation = false;\n    var enableLegacyHidden = false;\n    var REACT_ELEMENT_TYPE = Symbol.for(\"react.element\");\n    var REACT_PORTAL_TYPE = Symbol.for(\"react.portal\");\n    var REACT_FRAGMENT_TYPE = Symbol.for(\"react.fragment\");\n    var REACT_STRICT_MODE_TYPE = Symbol.for(\"react.strict_mode\");\n    var REACT_PROFILER_TYPE = Symbol.for(\"react.profiler\");\n    var REACT_PROVIDER_TYPE = Symbol.for(\"react.provider\");\n    var REACT_CONTEXT_TYPE = Symbol.for(\"react.context\");\n    var REACT_FORWARD_REF_TYPE = Symbol.for(\"react.forward_ref\");\n    var REACT_SUSPENSE_TYPE = Symbol.for(\"react.suspense\");\n    var REACT_SUSPENSE_LIST_TYPE = Symbol.for(\"react.suspense_list\");\n    var REACT_MEMO_TYPE = Symbol.for(\"react.memo\");\n    var REACT_LAZY_TYPE = Symbol.for(\"react.lazy\");\n    var REACT_SCOPE_TYPE = Symbol.for(\"react.scope\");\n    var REACT_DEBUG_TRACING_MODE_TYPE = Symbol.for(\"react.debug_trace_mode\");\n    var REACT_OFFSCREEN_TYPE = Symbol.for(\"react.offscreen\");\n    var REACT_LEGACY_HIDDEN_TYPE = Symbol.for(\"react.legacy_hidden\");\n    var REACT_CACHE_TYPE = Symbol.for(\"react.cache\");\n    var REACT_TRACING_MARKER_TYPE = Symbol.for(\"react.tracing_marker\");\n    var MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\n    var FAUX_ITERATOR_SYMBOL = \"@@iterator\";\n    function getIteratorFn(maybeIterable) {\n      if (maybeIterable === null || typeof maybeIterable !== \"object\") {\n        return null;\n      }\n      var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n      if (typeof maybeIterator === \"function\") {\n        return maybeIterator;\n      }\n      return null;\n    }\n    function getWrappedName(outerType, innerType, wrapperName) {\n      var displayName = outerType.displayName;\n      if (displayName) {\n        return displayName;\n      }\n      var functionName = innerType.displayName || innerType.name || \"\";\n      return functionName !== \"\" ? wrapperName + \"(\" + functionName + \")\" : wrapperName;\n    }\n    function getContextName(type) {\n      return type.displayName || \"Context\";\n    }\n    function getComponentNameFromType(type) {\n      if (type == null) {\n        return null;\n      }\n      {\n        if (typeof type.tag === \"number\") {\n          error(\"Received an unexpected object in getComponentNameFromType(). \" + \"This is likely a bug in React. Please file an issue.\");\n        }\n      }\n      if (typeof type === \"function\") {\n        return type.displayName || type.name || null;\n      }\n      if (typeof type === \"string\") {\n        return type;\n      }\n      switch (type) {\n        case REACT_FRAGMENT_TYPE:\n          return \"Fragment\";\n        case REACT_PORTAL_TYPE:\n          return \"Portal\";\n        case REACT_PROFILER_TYPE:\n          return \"Profiler\";\n        case REACT_STRICT_MODE_TYPE:\n          return \"StrictMode\";\n        case REACT_SUSPENSE_TYPE:\n          return \"Suspense\";\n        case REACT_SUSPENSE_LIST_TYPE:\n          return \"SuspenseList\";\n      }\n      if (typeof type === \"object\") {\n        switch (type.$$typeof) {\n          case REACT_CONTEXT_TYPE:\n            var context = type;\n            return getContextName(context) + \".Consumer\";\n          case REACT_PROVIDER_TYPE:\n            var provider = type;\n            return getContextName(provider._context) + \".Provider\";\n          case REACT_FORWARD_REF_TYPE:\n            return getWrappedName(type, type.render, \"ForwardRef\");\n          case REACT_MEMO_TYPE:\n            var outerName = type.displayName || null;\n            if (outerName !== null) {\n              return outerName;\n            }\n            return getComponentNameFromType(type.type) || \"Memo\";\n          case REACT_LAZY_TYPE:\n            {\n              var lazyComponent = type;\n              var payload = lazyComponent._payload;\n              var init = lazyComponent._init;\n              try {\n                return getComponentNameFromType(init(payload));\n              } catch (x) {\n                return null;\n              }\n            }\n        }\n      }\n      return null;\n    }\n    function getWrappedName$1(outerType, innerType, wrapperName) {\n      var functionName = innerType.displayName || innerType.name || \"\";\n      return outerType.displayName || (functionName !== \"\" ? wrapperName + \"(\" + functionName + \")\" : wrapperName);\n    }\n    function getContextName$1(type) {\n      return type.displayName || \"Context\";\n    }\n    function getComponentNameFromFiber(fiber) {\n      var tag = fiber.tag,\n        type = fiber.type;\n      switch (tag) {\n        case CacheComponent:\n          return \"Cache\";\n        case ContextConsumer:\n          var context = type;\n          return getContextName$1(context) + \".Consumer\";\n        case ContextProvider:\n          var provider = type;\n          return getContextName$1(provider._context) + \".Provider\";\n        case DehydratedFragment:\n          return \"DehydratedFragment\";\n        case ForwardRef:\n          return getWrappedName$1(type, type.render, \"ForwardRef\");\n        case Fragment:\n          return \"Fragment\";\n        case HostComponent:\n          return type;\n        case HostPortal:\n          return \"Portal\";\n        case HostRoot:\n          return \"Root\";\n        case HostText:\n          return \"Text\";\n        case LazyComponent:\n          return getComponentNameFromType(type);\n        case Mode:\n          if (type === REACT_STRICT_MODE_TYPE) {\n            return \"StrictMode\";\n          }\n          return \"Mode\";\n        case OffscreenComponent:\n          return \"Offscreen\";\n        case Profiler:\n          return \"Profiler\";\n        case ScopeComponent:\n          return \"Scope\";\n        case SuspenseComponent:\n          return \"Suspense\";\n        case SuspenseListComponent:\n          return \"SuspenseList\";\n        case TracingMarkerComponent:\n          return \"TracingMarker\";\n        case ClassComponent:\n        case FunctionComponent:\n        case IncompleteClassComponent:\n        case IndeterminateComponent:\n        case MemoComponent:\n        case SimpleMemoComponent:\n          if (typeof type === \"function\") {\n            return type.displayName || type.name || null;\n          }\n          if (typeof type === \"string\") {\n            return type;\n          }\n          break;\n      }\n      return null;\n    }\n    var NoFlags = 0;\n    var PerformedWork = 1;\n    var Placement = 2;\n    var Update = 4;\n    var ChildDeletion = 16;\n    var ContentReset = 32;\n    var Callback = 64;\n    var DidCapture = 128;\n    var ForceClientRender = 256;\n    var Ref = 512;\n    var Snapshot = 1024;\n    var Passive = 2048;\n    var Hydrating = 4096;\n    var Visibility = 8192;\n    var StoreConsistency = 16384;\n    var LifecycleEffectMask = Passive | Update | Callback | Ref | Snapshot | StoreConsistency;\n    var HostEffectMask = 32767;\n    var Incomplete = 32768;\n    var ShouldCapture = 65536;\n    var ForceUpdateForLegacySuspense = 131072;\n    var Forked = 1048576;\n    var RefStatic = 2097152;\n    var LayoutStatic = 4194304;\n    var PassiveStatic = 8388608;\n    var BeforeMutationMask = Update | Snapshot | 0;\n    var MutationMask = Placement | Update | ChildDeletion | ContentReset | Ref | Hydrating | Visibility;\n    var LayoutMask = Update | Callback | Ref | Visibility;\n    var PassiveMask = Passive | ChildDeletion;\n    var StaticMask = LayoutStatic | PassiveStatic | RefStatic;\n    var ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\n    function getNearestMountedFiber(fiber) {\n      var node = fiber;\n      var nearestMounted = fiber;\n      if (!fiber.alternate) {\n        var nextNode = node;\n        do {\n          node = nextNode;\n          if ((node.flags & (Placement | Hydrating)) !== NoFlags) {\n            nearestMounted = node.return;\n          }\n          nextNode = node.return;\n        } while (nextNode);\n      } else {\n        while (node.return) {\n          node = node.return;\n        }\n      }\n      if (node.tag === HostRoot) {\n        return nearestMounted;\n      }\n      return null;\n    }\n    function isFiberMounted(fiber) {\n      return getNearestMountedFiber(fiber) === fiber;\n    }\n    function isMounted(component) {\n      {\n        var owner = ReactCurrentOwner.current;\n        if (owner !== null && owner.tag === ClassComponent) {\n          var ownerFiber = owner;\n          var instance = ownerFiber.stateNode;\n          if (!instance._warnedAboutRefsInRender) {\n            error(\"%s is accessing isMounted inside its render() function. \" + \"render() should be a pure function of props and state. It should \" + \"never access something that requires stale data from the previous \" + \"render, such as refs. Move this logic to componentDidMount and \" + \"componentDidUpdate instead.\", getComponentNameFromFiber(ownerFiber) || \"A component\");\n          }\n          instance._warnedAboutRefsInRender = true;\n        }\n      }\n      var fiber = get(component);\n      if (!fiber) {\n        return false;\n      }\n      return getNearestMountedFiber(fiber) === fiber;\n    }\n    function assertIsMounted(fiber) {\n      if (getNearestMountedFiber(fiber) !== fiber) {\n        throw new Error(\"Unable to find node on an unmounted component.\");\n      }\n    }\n    function findCurrentFiberUsingSlowPath(fiber) {\n      var alternate = fiber.alternate;\n      if (!alternate) {\n        var nearestMounted = getNearestMountedFiber(fiber);\n        if (nearestMounted === null) {\n          throw new Error(\"Unable to find node on an unmounted component.\");\n        }\n        if (nearestMounted !== fiber) {\n          return null;\n        }\n        return fiber;\n      }\n      var a = fiber;\n      var b = alternate;\n      while (true) {\n        var parentA = a.return;\n        if (parentA === null) {\n          break;\n        }\n        var parentB = parentA.alternate;\n        if (parentB === null) {\n          var nextParent = parentA.return;\n          if (nextParent !== null) {\n            a = b = nextParent;\n            continue;\n          }\n          break;\n        }\n        if (parentA.child === parentB.child) {\n          var child = parentA.child;\n          while (child) {\n            if (child === a) {\n              assertIsMounted(parentA);\n              return fiber;\n            }\n            if (child === b) {\n              assertIsMounted(parentA);\n              return alternate;\n            }\n            child = child.sibling;\n          }\n          throw new Error(\"Unable to find node on an unmounted component.\");\n        }\n        if (a.return !== b.return) {\n          a = parentA;\n          b = parentB;\n        } else {\n          var didFindChild = false;\n          var _child = parentA.child;\n          while (_child) {\n            if (_child === a) {\n              didFindChild = true;\n              a = parentA;\n              b = parentB;\n              break;\n            }\n            if (_child === b) {\n              didFindChild = true;\n              b = parentA;\n              a = parentB;\n              break;\n            }\n            _child = _child.sibling;\n          }\n          if (!didFindChild) {\n            _child = parentB.child;\n            while (_child) {\n              if (_child === a) {\n                didFindChild = true;\n                a = parentB;\n                b = parentA;\n                break;\n              }\n              if (_child === b) {\n                didFindChild = true;\n                b = parentB;\n                a = parentA;\n                break;\n              }\n              _child = _child.sibling;\n            }\n            if (!didFindChild) {\n              throw new Error(\"Child was not found in either parent set. This indicates a bug \" + \"in React related to the return pointer. Please file an issue.\");\n            }\n          }\n        }\n        if (a.alternate !== b) {\n          throw new Error(\"Return fibers should always be each others' alternates. \" + \"This error is likely caused by a bug in React. Please file an issue.\");\n        }\n      }\n      if (a.tag !== HostRoot) {\n        throw new Error(\"Unable to find node on an unmounted component.\");\n      }\n      if (a.stateNode.current === a) {\n        return fiber;\n      }\n      return alternate;\n    }\n    function findCurrentHostFiber(parent) {\n      var currentParent = findCurrentFiberUsingSlowPath(parent);\n      return currentParent !== null ? findCurrentHostFiberImpl(currentParent) : null;\n    }\n    function findCurrentHostFiberImpl(node) {\n      if (node.tag === HostComponent || node.tag === HostText) {\n        return node;\n      }\n      var child = node.child;\n      while (child !== null) {\n        var match = findCurrentHostFiberImpl(child);\n        if (match !== null) {\n          return match;\n        }\n        child = child.sibling;\n      }\n      return null;\n    }\n    function mountSafeCallback_NOT_REALLY_SAFE(context, callback) {\n      return function () {\n        if (!callback) {\n          return undefined;\n        }\n        if (typeof context.__isMounted === \"boolean\") {\n          if (!context.__isMounted) {\n            return undefined;\n          }\n        }\n        return callback.apply(context, arguments);\n      };\n    }\n    function warnForStyleProps(props, validAttributes) {\n      {\n        for (var key in validAttributes.style) {\n          if (!(validAttributes[key] || props[key] === undefined)) {\n            error(\"You are setting the style `{ %s\" + \": ... }` as a prop. You \" + \"should nest it in a style object. \" + \"E.g. `{ style: { %s\" + \": ... } }`\", key, key);\n          }\n        }\n      }\n    }\n    var emptyObject = {};\n    var removedKeys = null;\n    var removedKeyCount = 0;\n    var deepDifferOptions = {\n      unsafelyIgnoreFunctions: true\n    };\n    function defaultDiffer(prevProp, nextProp) {\n      if (typeof nextProp !== \"object\" || nextProp === null) {\n        return true;\n      } else {\n        return ReactNativePrivateInterface.deepDiffer(prevProp, nextProp, deepDifferOptions);\n      }\n    }\n    function restoreDeletedValuesInNestedArray(updatePayload, node, validAttributes) {\n      if (isArray(node)) {\n        var i = node.length;\n        while (i-- && removedKeyCount > 0) {\n          restoreDeletedValuesInNestedArray(updatePayload, node[i], validAttributes);\n        }\n      } else if (node && removedKeyCount > 0) {\n        var obj = node;\n        for (var propKey in removedKeys) {\n          if (!removedKeys[propKey]) {\n            continue;\n          }\n          var nextProp = obj[propKey];\n          if (nextProp === undefined) {\n            continue;\n          }\n          var attributeConfig = validAttributes[propKey];\n          if (!attributeConfig) {\n            continue;\n          }\n          if (typeof nextProp === \"function\") {\n            nextProp = true;\n          }\n          if (typeof nextProp === \"undefined\") {\n            nextProp = null;\n          }\n          if (typeof attributeConfig !== \"object\") {\n            updatePayload[propKey] = nextProp;\n          } else if (typeof attributeConfig.diff === \"function\" || typeof attributeConfig.process === \"function\") {\n            var nextValue = typeof attributeConfig.process === \"function\" ? attributeConfig.process(nextProp) : nextProp;\n            updatePayload[propKey] = nextValue;\n          }\n          removedKeys[propKey] = false;\n          removedKeyCount--;\n        }\n      }\n    }\n    function diffNestedArrayProperty(updatePayload, prevArray, nextArray, validAttributes) {\n      var minLength = prevArray.length < nextArray.length ? prevArray.length : nextArray.length;\n      var i;\n      for (i = 0; i < minLength; i++) {\n        updatePayload = diffNestedProperty(updatePayload, prevArray[i], nextArray[i], validAttributes);\n      }\n      for (; i < prevArray.length; i++) {\n        updatePayload = clearNestedProperty(updatePayload, prevArray[i], validAttributes);\n      }\n      for (; i < nextArray.length; i++) {\n        updatePayload = addNestedProperty(updatePayload, nextArray[i], validAttributes);\n      }\n      return updatePayload;\n    }\n    function diffNestedProperty(updatePayload, prevProp, nextProp, validAttributes) {\n      if (!updatePayload && prevProp === nextProp) {\n        return updatePayload;\n      }\n      if (!prevProp || !nextProp) {\n        if (nextProp) {\n          return addNestedProperty(updatePayload, nextProp, validAttributes);\n        }\n        if (prevProp) {\n          return clearNestedProperty(updatePayload, prevProp, validAttributes);\n        }\n        return updatePayload;\n      }\n      if (!isArray(prevProp) && !isArray(nextProp)) {\n        return diffProperties(updatePayload, prevProp, nextProp, validAttributes);\n      }\n      if (isArray(prevProp) && isArray(nextProp)) {\n        return diffNestedArrayProperty(updatePayload, prevProp, nextProp, validAttributes);\n      }\n      if (isArray(prevProp)) {\n        return diffProperties(updatePayload, ReactNativePrivateInterface.flattenStyle(prevProp), nextProp, validAttributes);\n      }\n      return diffProperties(updatePayload, prevProp, ReactNativePrivateInterface.flattenStyle(nextProp), validAttributes);\n    }\n    function addNestedProperty(updatePayload, nextProp, validAttributes) {\n      if (!nextProp) {\n        return updatePayload;\n      }\n      if (!isArray(nextProp)) {\n        return addProperties(updatePayload, nextProp, validAttributes);\n      }\n      for (var i = 0; i < nextProp.length; i++) {\n        updatePayload = addNestedProperty(updatePayload, nextProp[i], validAttributes);\n      }\n      return updatePayload;\n    }\n    function clearNestedProperty(updatePayload, prevProp, validAttributes) {\n      if (!prevProp) {\n        return updatePayload;\n      }\n      if (!isArray(prevProp)) {\n        return clearProperties(updatePayload, prevProp, validAttributes);\n      }\n      for (var i = 0; i < prevProp.length; i++) {\n        updatePayload = clearNestedProperty(updatePayload, prevProp[i], validAttributes);\n      }\n      return updatePayload;\n    }\n    function diffProperties(updatePayload, prevProps, nextProps, validAttributes) {\n      var attributeConfig;\n      var nextProp;\n      var prevProp;\n      for (var propKey in nextProps) {\n        attributeConfig = validAttributes[propKey];\n        if (!attributeConfig) {\n          continue;\n        }\n        prevProp = prevProps[propKey];\n        nextProp = nextProps[propKey];\n        if (typeof nextProp === \"function\") {\n          nextProp = true;\n          if (typeof prevProp === \"function\") {\n            prevProp = true;\n          }\n        }\n        if (typeof nextProp === \"undefined\") {\n          nextProp = null;\n          if (typeof prevProp === \"undefined\") {\n            prevProp = null;\n          }\n        }\n        if (removedKeys) {\n          removedKeys[propKey] = false;\n        }\n        if (updatePayload && updatePayload[propKey] !== undefined) {\n          if (typeof attributeConfig !== \"object\") {\n            updatePayload[propKey] = nextProp;\n          } else if (typeof attributeConfig.diff === \"function\" || typeof attributeConfig.process === \"function\") {\n            var nextValue = typeof attributeConfig.process === \"function\" ? attributeConfig.process(nextProp) : nextProp;\n            updatePayload[propKey] = nextValue;\n          }\n          continue;\n        }\n        if (prevProp === nextProp) {\n          continue;\n        }\n        if (typeof attributeConfig !== \"object\") {\n          if (defaultDiffer(prevProp, nextProp)) {\n            (updatePayload || (updatePayload = {}))[propKey] = nextProp;\n          }\n        } else if (typeof attributeConfig.diff === \"function\" || typeof attributeConfig.process === \"function\") {\n          var shouldUpdate = prevProp === undefined || (typeof attributeConfig.diff === \"function\" ? attributeConfig.diff(prevProp, nextProp) : defaultDiffer(prevProp, nextProp));\n          if (shouldUpdate) {\n            var _nextValue = typeof attributeConfig.process === \"function\" ? attributeConfig.process(nextProp) : nextProp;\n            (updatePayload || (updatePayload = {}))[propKey] = _nextValue;\n          }\n        } else {\n          removedKeys = null;\n          removedKeyCount = 0;\n          updatePayload = diffNestedProperty(updatePayload, prevProp, nextProp, attributeConfig);\n          if (removedKeyCount > 0 && updatePayload) {\n            restoreDeletedValuesInNestedArray(updatePayload, nextProp, attributeConfig);\n            removedKeys = null;\n          }\n        }\n      }\n      for (var _propKey in prevProps) {\n        if (nextProps[_propKey] !== undefined) {\n          continue;\n        }\n        attributeConfig = validAttributes[_propKey];\n        if (!attributeConfig) {\n          continue;\n        }\n        if (updatePayload && updatePayload[_propKey] !== undefined) {\n          continue;\n        }\n        prevProp = prevProps[_propKey];\n        if (prevProp === undefined) {\n          continue;\n        }\n        if (typeof attributeConfig !== \"object\" || typeof attributeConfig.diff === \"function\" || typeof attributeConfig.process === \"function\") {\n          (updatePayload || (updatePayload = {}))[_propKey] = null;\n          if (!removedKeys) {\n            removedKeys = {};\n          }\n          if (!removedKeys[_propKey]) {\n            removedKeys[_propKey] = true;\n            removedKeyCount++;\n          }\n        } else {\n          updatePayload = clearNestedProperty(updatePayload, prevProp, attributeConfig);\n        }\n      }\n      return updatePayload;\n    }\n    function addProperties(updatePayload, props, validAttributes) {\n      return diffProperties(updatePayload, emptyObject, props, validAttributes);\n    }\n    function clearProperties(updatePayload, prevProps, validAttributes) {\n      return diffProperties(updatePayload, prevProps, emptyObject, validAttributes);\n    }\n    function create(props, validAttributes) {\n      return addProperties(null, props, validAttributes);\n    }\n    function diff(prevProps, nextProps, validAttributes) {\n      return diffProperties(null, prevProps, nextProps, validAttributes);\n    }\n    var batchedUpdatesImpl = function batchedUpdatesImpl(fn, bookkeeping) {\n      return fn(bookkeeping);\n    };\n    var isInsideEventHandler = false;\n    function batchedUpdates(fn, bookkeeping) {\n      if (isInsideEventHandler) {\n        return fn(bookkeeping);\n      }\n      isInsideEventHandler = true;\n      try {\n        return batchedUpdatesImpl(fn, bookkeeping);\n      } finally {\n        isInsideEventHandler = false;\n      }\n    }\n    function setBatchingImplementation(_batchedUpdatesImpl, _discreteUpdatesImpl) {\n      batchedUpdatesImpl = _batchedUpdatesImpl;\n    }\n    var eventQueue = null;\n    var executeDispatchesAndRelease = function executeDispatchesAndRelease(event) {\n      if (event) {\n        executeDispatchesInOrder(event);\n        if (!event.isPersistent()) {\n          event.constructor.release(event);\n        }\n      }\n    };\n    var executeDispatchesAndReleaseTopLevel = function executeDispatchesAndReleaseTopLevel(e) {\n      return executeDispatchesAndRelease(e);\n    };\n    function runEventsInBatch(events) {\n      if (events !== null) {\n        eventQueue = accumulateInto(eventQueue, events);\n      }\n      var processingEventQueue = eventQueue;\n      eventQueue = null;\n      if (!processingEventQueue) {\n        return;\n      }\n      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseTopLevel);\n      if (eventQueue) {\n        throw new Error(\"processEventQueue(): Additional events were enqueued while processing \" + \"an event queue. Support for this has not yet been implemented.\");\n      }\n      rethrowCaughtError();\n    }\n    function extractPluginEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n      var events = null;\n      var legacyPlugins = plugins;\n      for (var i = 0; i < legacyPlugins.length; i++) {\n        var possiblePlugin = legacyPlugins[i];\n        if (possiblePlugin) {\n          var extractedEvents = possiblePlugin.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);\n          if (extractedEvents) {\n            events = accumulateInto(events, extractedEvents);\n          }\n        }\n      }\n      return events;\n    }\n    function runExtractedPluginEventsInBatch(topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n      var events = extractPluginEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);\n      runEventsInBatch(events);\n    }\n    function dispatchEvent(target, topLevelType, nativeEvent) {\n      var targetFiber = target;\n      var eventTarget = null;\n      if (targetFiber != null) {\n        var stateNode = targetFiber.stateNode;\n        if (stateNode != null) {\n          eventTarget = stateNode.canonical;\n        }\n      }\n      batchedUpdates(function () {\n        var event = {\n          eventName: topLevelType,\n          nativeEvent: nativeEvent\n        };\n        ReactNativePrivateInterface.RawEventEmitter.emit(topLevelType, event);\n        ReactNativePrivateInterface.RawEventEmitter.emit(\"*\", event);\n        runExtractedPluginEventsInBatch(topLevelType, targetFiber, nativeEvent, eventTarget);\n      });\n    }\n    var scheduleCallback = Scheduler.unstable_scheduleCallback;\n    var cancelCallback = Scheduler.unstable_cancelCallback;\n    var shouldYield = Scheduler.unstable_shouldYield;\n    var requestPaint = Scheduler.unstable_requestPaint;\n    var now = Scheduler.unstable_now;\n    var ImmediatePriority = Scheduler.unstable_ImmediatePriority;\n    var UserBlockingPriority = Scheduler.unstable_UserBlockingPriority;\n    var NormalPriority = Scheduler.unstable_NormalPriority;\n    var IdlePriority = Scheduler.unstable_IdlePriority;\n    var rendererID = null;\n    var injectedHook = null;\n    var hasLoggedError = false;\n    var isDevToolsPresent = typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== \"undefined\";\n    function injectInternals(internals) {\n      if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === \"undefined\") {\n        return false;\n      }\n      var hook = __REACT_DEVTOOLS_GLOBAL_HOOK__;\n      if (hook.isDisabled) {\n        return true;\n      }\n      if (!hook.supportsFiber) {\n        {\n          error(\"The installed version of React DevTools is too old and will not work \" + \"with the current version of React. Please update React DevTools. \" + \"https://reactjs.org/link/react-devtools\");\n        }\n        return true;\n      }\n      try {\n        if (enableSchedulingProfiler) {\n          internals = assign({}, internals, {\n            getLaneLabelMap: getLaneLabelMap,\n            injectProfilingHooks: injectProfilingHooks\n          });\n        }\n        rendererID = hook.inject(internals);\n        injectedHook = hook;\n      } catch (err) {\n        {\n          error(\"React instrumentation encountered an error: %s.\", err);\n        }\n      }\n      if (hook.checkDCE) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n    function onScheduleRoot(root, children) {\n      {\n        if (injectedHook && typeof injectedHook.onScheduleFiberRoot === \"function\") {\n          try {\n            injectedHook.onScheduleFiberRoot(rendererID, root, children);\n          } catch (err) {\n            if (!hasLoggedError) {\n              hasLoggedError = true;\n              error(\"React instrumentation encountered an error: %s\", err);\n            }\n          }\n        }\n      }\n    }\n    function onCommitRoot(root, eventPriority) {\n      if (injectedHook && typeof injectedHook.onCommitFiberRoot === \"function\") {\n        try {\n          var didError = (root.current.flags & DidCapture) === DidCapture;\n          if (enableProfilerTimer) {\n            var schedulerPriority;\n            switch (eventPriority) {\n              case DiscreteEventPriority:\n                schedulerPriority = ImmediatePriority;\n                break;\n              case ContinuousEventPriority:\n                schedulerPriority = UserBlockingPriority;\n                break;\n              case DefaultEventPriority:\n                schedulerPriority = NormalPriority;\n                break;\n              case IdleEventPriority:\n                schedulerPriority = IdlePriority;\n                break;\n              default:\n                schedulerPriority = NormalPriority;\n                break;\n            }\n            injectedHook.onCommitFiberRoot(rendererID, root, schedulerPriority, didError);\n          } else {\n            injectedHook.onCommitFiberRoot(rendererID, root, undefined, didError);\n          }\n        } catch (err) {\n          {\n            if (!hasLoggedError) {\n              hasLoggedError = true;\n              error(\"React instrumentation encountered an error: %s\", err);\n            }\n          }\n        }\n      }\n    }\n    function onPostCommitRoot(root) {\n      if (injectedHook && typeof injectedHook.onPostCommitFiberRoot === \"function\") {\n        try {\n          injectedHook.onPostCommitFiberRoot(rendererID, root);\n        } catch (err) {\n          {\n            if (!hasLoggedError) {\n              hasLoggedError = true;\n              error(\"React instrumentation encountered an error: %s\", err);\n            }\n          }\n        }\n      }\n    }\n    function onCommitUnmount(fiber) {\n      if (injectedHook && typeof injectedHook.onCommitFiberUnmount === \"function\") {\n        try {\n          injectedHook.onCommitFiberUnmount(rendererID, fiber);\n        } catch (err) {\n          {\n            if (!hasLoggedError) {\n              hasLoggedError = true;\n              error(\"React instrumentation encountered an error: %s\", err);\n            }\n          }\n        }\n      }\n    }\n    function injectProfilingHooks(profilingHooks) {}\n    function getLaneLabelMap() {\n      {\n        return null;\n      }\n    }\n    function markComponentRenderStopped() {}\n    function markComponentErrored(fiber, thrownValue, lanes) {}\n    function markComponentSuspended(fiber, wakeable, lanes) {}\n    var NoMode = 0;\n    var ConcurrentMode = 1;\n    var ProfileMode = 2;\n    var StrictLegacyMode = 8;\n    var clz32 = Math.clz32 ? Math.clz32 : clz32Fallback;\n    var log = Math.log;\n    var LN2 = Math.LN2;\n    function clz32Fallback(x) {\n      var asUint = x >>> 0;\n      if (asUint === 0) {\n        return 32;\n      }\n      return 31 - (log(asUint) / LN2 | 0) | 0;\n    }\n    var TotalLanes = 31;\n    var NoLanes = 0;\n    var NoLane = 0;\n    var SyncLane = 1;\n    var InputContinuousHydrationLane = 2;\n    var InputContinuousLane = 4;\n    var DefaultHydrationLane = 8;\n    var DefaultLane = 16;\n    var TransitionHydrationLane = 32;\n    var TransitionLanes = 4194240;\n    var TransitionLane1 = 64;\n    var TransitionLane2 = 128;\n    var TransitionLane3 = 256;\n    var TransitionLane4 = 512;\n    var TransitionLane5 = 1024;\n    var TransitionLane6 = 2048;\n    var TransitionLane7 = 4096;\n    var TransitionLane8 = 8192;\n    var TransitionLane9 = 16384;\n    var TransitionLane10 = 32768;\n    var TransitionLane11 = 65536;\n    var TransitionLane12 = 131072;\n    var TransitionLane13 = 262144;\n    var TransitionLane14 = 524288;\n    var TransitionLane15 = 1048576;\n    var TransitionLane16 = 2097152;\n    var RetryLanes = 130023424;\n    var RetryLane1 = 4194304;\n    var RetryLane2 = 8388608;\n    var RetryLane3 = 16777216;\n    var RetryLane4 = 33554432;\n    var RetryLane5 = 67108864;\n    var SomeRetryLane = RetryLane1;\n    var SelectiveHydrationLane = 134217728;\n    var NonIdleLanes = 268435455;\n    var IdleHydrationLane = 268435456;\n    var IdleLane = 536870912;\n    var OffscreenLane = 1073741824;\n    var NoTimestamp = -1;\n    var nextTransitionLane = TransitionLane1;\n    var nextRetryLane = RetryLane1;\n    function getHighestPriorityLanes(lanes) {\n      switch (getHighestPriorityLane(lanes)) {\n        case SyncLane:\n          return SyncLane;\n        case InputContinuousHydrationLane:\n          return InputContinuousHydrationLane;\n        case InputContinuousLane:\n          return InputContinuousLane;\n        case DefaultHydrationLane:\n          return DefaultHydrationLane;\n        case DefaultLane:\n          return DefaultLane;\n        case TransitionHydrationLane:\n          return TransitionHydrationLane;\n        case TransitionLane1:\n        case TransitionLane2:\n        case TransitionLane3:\n        case TransitionLane4:\n        case TransitionLane5:\n        case TransitionLane6:\n        case TransitionLane7:\n        case TransitionLane8:\n        case TransitionLane9:\n        case TransitionLane10:\n        case TransitionLane11:\n        case TransitionLane12:\n        case TransitionLane13:\n        case TransitionLane14:\n        case TransitionLane15:\n        case TransitionLane16:\n          return lanes & TransitionLanes;\n        case RetryLane1:\n        case RetryLane2:\n        case RetryLane3:\n        case RetryLane4:\n        case RetryLane5:\n          return lanes & RetryLanes;\n        case SelectiveHydrationLane:\n          return SelectiveHydrationLane;\n        case IdleHydrationLane:\n          return IdleHydrationLane;\n        case IdleLane:\n          return IdleLane;\n        case OffscreenLane:\n          return OffscreenLane;\n        default:\n          {\n            error(\"Should have found matching lanes. This is a bug in React.\");\n          }\n          return lanes;\n      }\n    }\n    function getNextLanes(root, wipLanes) {\n      var pendingLanes = root.pendingLanes;\n      if (pendingLanes === NoLanes) {\n        return NoLanes;\n      }\n      var nextLanes = NoLanes;\n      var suspendedLanes = root.suspendedLanes;\n      var pingedLanes = root.pingedLanes;\n      var nonIdlePendingLanes = pendingLanes & NonIdleLanes;\n      if (nonIdlePendingLanes !== NoLanes) {\n        var nonIdleUnblockedLanes = nonIdlePendingLanes & ~suspendedLanes;\n        if (nonIdleUnblockedLanes !== NoLanes) {\n          nextLanes = getHighestPriorityLanes(nonIdleUnblockedLanes);\n        } else {\n          var nonIdlePingedLanes = nonIdlePendingLanes & pingedLanes;\n          if (nonIdlePingedLanes !== NoLanes) {\n            nextLanes = getHighestPriorityLanes(nonIdlePingedLanes);\n          }\n        }\n      } else {\n        var unblockedLanes = pendingLanes & ~suspendedLanes;\n        if (unblockedLanes !== NoLanes) {\n          nextLanes = getHighestPriorityLanes(unblockedLanes);\n        } else {\n          if (pingedLanes !== NoLanes) {\n            nextLanes = getHighestPriorityLanes(pingedLanes);\n          }\n        }\n      }\n      if (nextLanes === NoLanes) {\n        return NoLanes;\n      }\n      if (wipLanes !== NoLanes && wipLanes !== nextLanes && (wipLanes & suspendedLanes) === NoLanes) {\n        var nextLane = getHighestPriorityLane(nextLanes);\n        var wipLane = getHighestPriorityLane(wipLanes);\n        if (nextLane >= wipLane || nextLane === DefaultLane && (wipLane & TransitionLanes) !== NoLanes) {\n          return wipLanes;\n        }\n      }\n      if ((nextLanes & InputContinuousLane) !== NoLanes) {\n        nextLanes |= pendingLanes & DefaultLane;\n      }\n      var entangledLanes = root.entangledLanes;\n      if (entangledLanes !== NoLanes) {\n        var entanglements = root.entanglements;\n        var lanes = nextLanes & entangledLanes;\n        while (lanes > 0) {\n          var index = pickArbitraryLaneIndex(lanes);\n          var lane = 1 << index;\n          nextLanes |= entanglements[index];\n          lanes &= ~lane;\n        }\n      }\n      return nextLanes;\n    }\n    function getMostRecentEventTime(root, lanes) {\n      var eventTimes = root.eventTimes;\n      var mostRecentEventTime = NoTimestamp;\n      while (lanes > 0) {\n        var index = pickArbitraryLaneIndex(lanes);\n        var lane = 1 << index;\n        var eventTime = eventTimes[index];\n        if (eventTime > mostRecentEventTime) {\n          mostRecentEventTime = eventTime;\n        }\n        lanes &= ~lane;\n      }\n      return mostRecentEventTime;\n    }\n    function computeExpirationTime(lane, currentTime) {\n      switch (lane) {\n        case SyncLane:\n        case InputContinuousHydrationLane:\n        case InputContinuousLane:\n          return currentTime + 250;\n        case DefaultHydrationLane:\n        case DefaultLane:\n        case TransitionHydrationLane:\n        case TransitionLane1:\n        case TransitionLane2:\n        case TransitionLane3:\n        case TransitionLane4:\n        case TransitionLane5:\n        case TransitionLane6:\n        case TransitionLane7:\n        case TransitionLane8:\n        case TransitionLane9:\n        case TransitionLane10:\n        case TransitionLane11:\n        case TransitionLane12:\n        case TransitionLane13:\n        case TransitionLane14:\n        case TransitionLane15:\n        case TransitionLane16:\n          return currentTime + 5000;\n        case RetryLane1:\n        case RetryLane2:\n        case RetryLane3:\n        case RetryLane4:\n        case RetryLane5:\n          return NoTimestamp;\n        case SelectiveHydrationLane:\n        case IdleHydrationLane:\n        case IdleLane:\n        case OffscreenLane:\n          return NoTimestamp;\n        default:\n          {\n            error(\"Should have found matching lanes. This is a bug in React.\");\n          }\n          return NoTimestamp;\n      }\n    }\n    function markStarvedLanesAsExpired(root, currentTime) {\n      var pendingLanes = root.pendingLanes;\n      var suspendedLanes = root.suspendedLanes;\n      var pingedLanes = root.pingedLanes;\n      var expirationTimes = root.expirationTimes;\n      var lanes = pendingLanes;\n      while (lanes > 0) {\n        var index = pickArbitraryLaneIndex(lanes);\n        var lane = 1 << index;\n        var expirationTime = expirationTimes[index];\n        if (expirationTime === NoTimestamp) {\n          if ((lane & suspendedLanes) === NoLanes || (lane & pingedLanes) !== NoLanes) {\n            expirationTimes[index] = computeExpirationTime(lane, currentTime);\n          }\n        } else if (expirationTime <= currentTime) {\n          root.expiredLanes |= lane;\n        }\n        lanes &= ~lane;\n      }\n    }\n    function getLanesToRetrySynchronouslyOnError(root) {\n      var everythingButOffscreen = root.pendingLanes & ~OffscreenLane;\n      if (everythingButOffscreen !== NoLanes) {\n        return everythingButOffscreen;\n      }\n      if (everythingButOffscreen & OffscreenLane) {\n        return OffscreenLane;\n      }\n      return NoLanes;\n    }\n    function includesSyncLane(lanes) {\n      return (lanes & SyncLane) !== NoLanes;\n    }\n    function includesNonIdleWork(lanes) {\n      return (lanes & NonIdleLanes) !== NoLanes;\n    }\n    function includesOnlyRetries(lanes) {\n      return (lanes & RetryLanes) === lanes;\n    }\n    function includesOnlyNonUrgentLanes(lanes) {\n      var UrgentLanes = SyncLane | InputContinuousLane | DefaultLane;\n      return (lanes & UrgentLanes) === NoLanes;\n    }\n    function includesOnlyTransitions(lanes) {\n      return (lanes & TransitionLanes) === lanes;\n    }\n    function includesBlockingLane(root, lanes) {\n      var SyncDefaultLanes = InputContinuousHydrationLane | InputContinuousLane | DefaultHydrationLane | DefaultLane;\n      return (lanes & SyncDefaultLanes) !== NoLanes;\n    }\n    function includesExpiredLane(root, lanes) {\n      return (lanes & root.expiredLanes) !== NoLanes;\n    }\n    function isTransitionLane(lane) {\n      return (lane & TransitionLanes) !== NoLanes;\n    }\n    function claimNextTransitionLane() {\n      var lane = nextTransitionLane;\n      nextTransitionLane <<= 1;\n      if ((nextTransitionLane & TransitionLanes) === NoLanes) {\n        nextTransitionLane = TransitionLane1;\n      }\n      return lane;\n    }\n    function claimNextRetryLane() {\n      var lane = nextRetryLane;\n      nextRetryLane <<= 1;\n      if ((nextRetryLane & RetryLanes) === NoLanes) {\n        nextRetryLane = RetryLane1;\n      }\n      return lane;\n    }\n    function getHighestPriorityLane(lanes) {\n      return lanes & -lanes;\n    }\n    function pickArbitraryLane(lanes) {\n      return getHighestPriorityLane(lanes);\n    }\n    function pickArbitraryLaneIndex(lanes) {\n      return 31 - clz32(lanes);\n    }\n    function laneToIndex(lane) {\n      return pickArbitraryLaneIndex(lane);\n    }\n    function includesSomeLane(a, b) {\n      return (a & b) !== NoLanes;\n    }\n    function isSubsetOfLanes(set, subset) {\n      return (set & subset) === subset;\n    }\n    function mergeLanes(a, b) {\n      return a | b;\n    }\n    function removeLanes(set, subset) {\n      return set & ~subset;\n    }\n    function intersectLanes(a, b) {\n      return a & b;\n    }\n    function laneToLanes(lane) {\n      return lane;\n    }\n    function createLaneMap(initial) {\n      var laneMap = [];\n      for (var i = 0; i < TotalLanes; i++) {\n        laneMap.push(initial);\n      }\n      return laneMap;\n    }\n    function markRootUpdated(root, updateLane, eventTime) {\n      root.pendingLanes |= updateLane;\n      if (updateLane !== IdleLane) {\n        root.suspendedLanes = NoLanes;\n        root.pingedLanes = NoLanes;\n      }\n      var eventTimes = root.eventTimes;\n      var index = laneToIndex(updateLane);\n      eventTimes[index] = eventTime;\n    }\n    function markRootSuspended(root, suspendedLanes) {\n      root.suspendedLanes |= suspendedLanes;\n      root.pingedLanes &= ~suspendedLanes;\n      var expirationTimes = root.expirationTimes;\n      var lanes = suspendedLanes;\n      while (lanes > 0) {\n        var index = pickArbitraryLaneIndex(lanes);\n        var lane = 1 << index;\n        expirationTimes[index] = NoTimestamp;\n        lanes &= ~lane;\n      }\n    }\n    function markRootPinged(root, pingedLanes, eventTime) {\n      root.pingedLanes |= root.suspendedLanes & pingedLanes;\n    }\n    function markRootFinished(root, remainingLanes) {\n      var noLongerPendingLanes = root.pendingLanes & ~remainingLanes;\n      root.pendingLanes = remainingLanes;\n      root.suspendedLanes = NoLanes;\n      root.pingedLanes = NoLanes;\n      root.expiredLanes &= remainingLanes;\n      root.mutableReadLanes &= remainingLanes;\n      root.entangledLanes &= remainingLanes;\n      var entanglements = root.entanglements;\n      var eventTimes = root.eventTimes;\n      var expirationTimes = root.expirationTimes;\n      var lanes = noLongerPendingLanes;\n      while (lanes > 0) {\n        var index = pickArbitraryLaneIndex(lanes);\n        var lane = 1 << index;\n        entanglements[index] = NoLanes;\n        eventTimes[index] = NoTimestamp;\n        expirationTimes[index] = NoTimestamp;\n        lanes &= ~lane;\n      }\n    }\n    function markRootEntangled(root, entangledLanes) {\n      var rootEntangledLanes = root.entangledLanes |= entangledLanes;\n      var entanglements = root.entanglements;\n      var lanes = rootEntangledLanes;\n      while (lanes) {\n        var index = pickArbitraryLaneIndex(lanes);\n        var lane = 1 << index;\n        if (lane & entangledLanes | entanglements[index] & entangledLanes) {\n          entanglements[index] |= entangledLanes;\n        }\n        lanes &= ~lane;\n      }\n    }\n    function getBumpedLaneForHydration(root, renderLanes) {\n      var renderLane = getHighestPriorityLane(renderLanes);\n      var lane;\n      switch (renderLane) {\n        case InputContinuousLane:\n          lane = InputContinuousHydrationLane;\n          break;\n        case DefaultLane:\n          lane = DefaultHydrationLane;\n          break;\n        case TransitionLane1:\n        case TransitionLane2:\n        case TransitionLane3:\n        case TransitionLane4:\n        case TransitionLane5:\n        case TransitionLane6:\n        case TransitionLane7:\n        case TransitionLane8:\n        case TransitionLane9:\n        case TransitionLane10:\n        case TransitionLane11:\n        case TransitionLane12:\n        case TransitionLane13:\n        case TransitionLane14:\n        case TransitionLane15:\n        case TransitionLane16:\n        case RetryLane1:\n        case RetryLane2:\n        case RetryLane3:\n        case RetryLane4:\n        case RetryLane5:\n          lane = TransitionHydrationLane;\n          break;\n        case IdleLane:\n          lane = IdleHydrationLane;\n          break;\n        default:\n          lane = NoLane;\n          break;\n      }\n      if ((lane & (root.suspendedLanes | renderLanes)) !== NoLane) {\n        return NoLane;\n      }\n      return lane;\n    }\n    function addFiberToLanesMap(root, fiber, lanes) {\n      if (!isDevToolsPresent) {\n        return;\n      }\n      var pendingUpdatersLaneMap = root.pendingUpdatersLaneMap;\n      while (lanes > 0) {\n        var index = laneToIndex(lanes);\n        var lane = 1 << index;\n        var updaters = pendingUpdatersLaneMap[index];\n        updaters.add(fiber);\n        lanes &= ~lane;\n      }\n    }\n    function movePendingFibersToMemoized(root, lanes) {\n      if (!isDevToolsPresent) {\n        return;\n      }\n      var pendingUpdatersLaneMap = root.pendingUpdatersLaneMap;\n      var memoizedUpdaters = root.memoizedUpdaters;\n      while (lanes > 0) {\n        var index = laneToIndex(lanes);\n        var lane = 1 << index;\n        var updaters = pendingUpdatersLaneMap[index];\n        if (updaters.size > 0) {\n          updaters.forEach(function (fiber) {\n            var alternate = fiber.alternate;\n            if (alternate === null || !memoizedUpdaters.has(alternate)) {\n              memoizedUpdaters.add(fiber);\n            }\n          });\n          updaters.clear();\n        }\n        lanes &= ~lane;\n      }\n    }\n    function getTransitionsForLanes(root, lanes) {\n      {\n        return null;\n      }\n    }\n    var DiscreteEventPriority = SyncLane;\n    var ContinuousEventPriority = InputContinuousLane;\n    var DefaultEventPriority = DefaultLane;\n    var IdleEventPriority = IdleLane;\n    var currentUpdatePriority = NoLane;\n    function getCurrentUpdatePriority() {\n      return currentUpdatePriority;\n    }\n    function setCurrentUpdatePriority(newPriority) {\n      currentUpdatePriority = newPriority;\n    }\n    function higherEventPriority(a, b) {\n      return a !== 0 && a < b ? a : b;\n    }\n    function lowerEventPriority(a, b) {\n      return a === 0 || a > b ? a : b;\n    }\n    function isHigherEventPriority(a, b) {\n      return a !== 0 && a < b;\n    }\n    function lanesToEventPriority(lanes) {\n      var lane = getHighestPriorityLane(lanes);\n      if (!isHigherEventPriority(DiscreteEventPriority, lane)) {\n        return DiscreteEventPriority;\n      }\n      if (!isHigherEventPriority(ContinuousEventPriority, lane)) {\n        return ContinuousEventPriority;\n      }\n      if (includesNonIdleWork(lane)) {\n        return DefaultEventPriority;\n      }\n      return IdleEventPriority;\n    }\n    function shim() {\n      throw new Error(\"The current renderer does not support mutation. \" + \"This error is likely caused by a bug in React. \" + \"Please file an issue.\");\n    }\n    var commitMount = shim;\n    function shim$1() {\n      throw new Error(\"The current renderer does not support hydration. \" + \"This error is likely caused by a bug in React. \" + \"Please file an issue.\");\n    }\n    var isSuspenseInstancePending = shim$1;\n    var isSuspenseInstanceFallback = shim$1;\n    var getSuspenseInstanceFallbackErrorDetails = shim$1;\n    var registerSuspenseInstanceRetry = shim$1;\n    var hydrateTextInstance = shim$1;\n    var errorHydratingContainer = shim$1;\n    var _nativeFabricUIManage = nativeFabricUIManager,\n      createNode = _nativeFabricUIManage.createNode,\n      cloneNode = _nativeFabricUIManage.cloneNode,\n      cloneNodeWithNewChildren = _nativeFabricUIManage.cloneNodeWithNewChildren,\n      cloneNodeWithNewChildrenAndProps = _nativeFabricUIManage.cloneNodeWithNewChildrenAndProps,\n      cloneNodeWithNewProps = _nativeFabricUIManage.cloneNodeWithNewProps,\n      createChildNodeSet = _nativeFabricUIManage.createChildSet,\n      appendChildNode = _nativeFabricUIManage.appendChild,\n      appendChildNodeToSet = _nativeFabricUIManage.appendChildToSet,\n      completeRoot = _nativeFabricUIManage.completeRoot,\n      registerEventHandler = _nativeFabricUIManage.registerEventHandler,\n      fabricMeasure = _nativeFabricUIManage.measure,\n      fabricMeasureInWindow = _nativeFabricUIManage.measureInWindow,\n      fabricMeasureLayout = _nativeFabricUIManage.measureLayout,\n      FabricDefaultPriority = _nativeFabricUIManage.unstable_DefaultEventPriority,\n      FabricDiscretePriority = _nativeFabricUIManage.unstable_DiscreteEventPriority,\n      fabricGetCurrentEventPriority = _nativeFabricUIManage.unstable_getCurrentEventPriority,\n      _setNativeProps = _nativeFabricUIManage.setNativeProps;\n    var getViewConfigForType = ReactNativePrivateInterface.ReactNativeViewConfigRegistry.get;\n    var nextReactTag = 2;\n    if (registerEventHandler) {\n      registerEventHandler(dispatchEvent);\n    }\n    var ReactFabricHostComponent = function () {\n      function ReactFabricHostComponent(tag, viewConfig, props, internalInstanceHandle) {\n        this._nativeTag = tag;\n        this.viewConfig = viewConfig;\n        this.currentProps = props;\n        this._internalInstanceHandle = internalInstanceHandle;\n      }\n      var _proto = ReactFabricHostComponent.prototype;\n      _proto.blur = function blur() {\n        ReactNativePrivateInterface.TextInputState.blurTextInput(this);\n      };\n      _proto.focus = function focus() {\n        ReactNativePrivateInterface.TextInputState.focusTextInput(this);\n      };\n      _proto.measure = function measure(callback) {\n        var stateNode = this._internalInstanceHandle.stateNode;\n        if (stateNode != null) {\n          fabricMeasure(stateNode.node, mountSafeCallback_NOT_REALLY_SAFE(this, callback));\n        }\n      };\n      _proto.measureInWindow = function measureInWindow(callback) {\n        var stateNode = this._internalInstanceHandle.stateNode;\n        if (stateNode != null) {\n          fabricMeasureInWindow(stateNode.node, mountSafeCallback_NOT_REALLY_SAFE(this, callback));\n        }\n      };\n      _proto.measureLayout = function measureLayout(relativeToNativeNode, onSuccess, onFail) {\n        if (typeof relativeToNativeNode === \"number\" || !(relativeToNativeNode instanceof ReactFabricHostComponent)) {\n          {\n            error(\"Warning: ref.measureLayout must be called with a ref to a native component.\");\n          }\n          return;\n        }\n        var toStateNode = this._internalInstanceHandle.stateNode;\n        var fromStateNode = relativeToNativeNode._internalInstanceHandle.stateNode;\n        if (toStateNode != null && fromStateNode != null) {\n          fabricMeasureLayout(toStateNode.node, fromStateNode.node, mountSafeCallback_NOT_REALLY_SAFE(this, onFail), mountSafeCallback_NOT_REALLY_SAFE(this, onSuccess));\n        }\n      };\n      _proto.setNativeProps = function setNativeProps(nativeProps) {\n        {\n          warnForStyleProps(nativeProps, this.viewConfig.validAttributes);\n        }\n        var updatePayload = create(nativeProps, this.viewConfig.validAttributes);\n        var stateNode = this._internalInstanceHandle.stateNode;\n        if (stateNode != null && updatePayload != null) {\n          _setNativeProps(stateNode.node, updatePayload);\n        }\n      };\n      _proto.addEventListener_unstable = function addEventListener_unstable(eventType, listener, options) {\n        if (typeof eventType !== \"string\") {\n          throw new Error(\"addEventListener_unstable eventType must be a string\");\n        }\n        if (typeof listener !== \"function\") {\n          throw new Error(\"addEventListener_unstable listener must be a function\");\n        }\n        var optionsObj = typeof options === \"object\" && options !== null ? options : {};\n        var capture = (typeof options === \"boolean\" ? options : optionsObj.capture) || false;\n        var once = optionsObj.once || false;\n        var passive = optionsObj.passive || false;\n        var signal = null;\n        var eventListeners = this._eventListeners || {};\n        if (this._eventListeners == null) {\n          this._eventListeners = eventListeners;\n        }\n        var namedEventListeners = eventListeners[eventType] || [];\n        if (eventListeners[eventType] == null) {\n          eventListeners[eventType] = namedEventListeners;\n        }\n        namedEventListeners.push({\n          listener: listener,\n          invalidated: false,\n          options: {\n            capture: capture,\n            once: once,\n            passive: passive,\n            signal: signal\n          }\n        });\n      };\n      _proto.removeEventListener_unstable = function removeEventListener_unstable(eventType, listener, options) {\n        var optionsObj = typeof options === \"object\" && options !== null ? options : {};\n        var capture = (typeof options === \"boolean\" ? options : optionsObj.capture) || false;\n        var eventListeners = this._eventListeners;\n        if (!eventListeners) {\n          return;\n        }\n        var namedEventListeners = eventListeners[eventType];\n        if (!namedEventListeners) {\n          return;\n        }\n        eventListeners[eventType] = namedEventListeners.filter(function (listenerObj) {\n          return !(listenerObj.listener === listener && listenerObj.options.capture === capture);\n        });\n      };\n      return ReactFabricHostComponent;\n    }();\n    function appendInitialChild(parentInstance, child) {\n      appendChildNode(parentInstance.node, child.node);\n    }\n    function createInstance(type, props, rootContainerInstance, hostContext, internalInstanceHandle) {\n      var tag = nextReactTag;\n      nextReactTag += 2;\n      var viewConfig = getViewConfigForType(type);\n      {\n        for (var key in viewConfig.validAttributes) {\n          if (props.hasOwnProperty(key)) {\n            ReactNativePrivateInterface.deepFreezeAndThrowOnMutationInDev(props[key]);\n          }\n        }\n      }\n      var updatePayload = create(props, viewConfig.validAttributes);\n      var node = createNode(tag, viewConfig.uiViewClassName, rootContainerInstance, updatePayload, internalInstanceHandle);\n      var component = new ReactFabricHostComponent(tag, viewConfig, props, internalInstanceHandle);\n      return {\n        node: node,\n        canonical: component\n      };\n    }\n    function createTextInstance(text, rootContainerInstance, hostContext, internalInstanceHandle) {\n      {\n        if (!hostContext.isInAParentText) {\n          error(\"Text strings must be rendered within a <Text> component.\");\n        }\n      }\n      var tag = nextReactTag;\n      nextReactTag += 2;\n      var node = createNode(tag, \"RCTRawText\", rootContainerInstance, {\n        text: text\n      }, internalInstanceHandle);\n      return {\n        node: node\n      };\n    }\n    function getRootHostContext(rootContainerInstance) {\n      return {\n        isInAParentText: false\n      };\n    }\n    function getChildHostContext(parentHostContext, type, rootContainerInstance) {\n      var prevIsInAParentText = parentHostContext.isInAParentText;\n      var isInAParentText = type === \"AndroidTextInput\" || type === \"RCTMultilineTextInputView\" || type === \"RCTSinglelineTextInputView\" || type === \"RCTText\" || type === \"RCTVirtualText\";\n      if (prevIsInAParentText !== isInAParentText) {\n        return {\n          isInAParentText: isInAParentText\n        };\n      } else {\n        return parentHostContext;\n      }\n    }\n    function getPublicInstance(instance) {\n      return instance.canonical;\n    }\n    function prepareForCommit(containerInfo) {\n      return null;\n    }\n    function prepareUpdate(instance, type, oldProps, newProps, rootContainerInstance, hostContext) {\n      var viewConfig = instance.canonical.viewConfig;\n      var updatePayload = diff(oldProps, newProps, viewConfig.validAttributes);\n      instance.canonical.currentProps = newProps;\n      return updatePayload;\n    }\n    function resetAfterCommit(containerInfo) {}\n    function shouldSetTextContent(type, props) {\n      return false;\n    }\n    function getCurrentEventPriority() {\n      var currentEventPriority = fabricGetCurrentEventPriority ? fabricGetCurrentEventPriority() : null;\n      if (currentEventPriority != null) {\n        switch (currentEventPriority) {\n          case FabricDiscretePriority:\n            return DiscreteEventPriority;\n          case FabricDefaultPriority:\n          default:\n            return DefaultEventPriority;\n        }\n      }\n      return DefaultEventPriority;\n    }\n    var warnsIfNotActing = false;\n    var scheduleTimeout = setTimeout;\n    var cancelTimeout = clearTimeout;\n    var noTimeout = -1;\n    function cloneInstance(instance, updatePayload, type, oldProps, newProps, internalInstanceHandle, keepChildren, recyclableInstance) {\n      var node = instance.node;\n      var clone;\n      if (keepChildren) {\n        if (updatePayload !== null) {\n          clone = cloneNodeWithNewProps(node, updatePayload);\n        } else {\n          clone = cloneNode(node);\n        }\n      } else {\n        if (updatePayload !== null) {\n          clone = cloneNodeWithNewChildrenAndProps(node, updatePayload);\n        } else {\n          clone = cloneNodeWithNewChildren(node);\n        }\n      }\n      return {\n        node: clone,\n        canonical: instance.canonical\n      };\n    }\n    function cloneHiddenInstance(instance, type, props, internalInstanceHandle) {\n      var viewConfig = instance.canonical.viewConfig;\n      var node = instance.node;\n      var updatePayload = create({\n        style: {\n          display: \"none\"\n        }\n      }, viewConfig.validAttributes);\n      return {\n        node: cloneNodeWithNewProps(node, updatePayload),\n        canonical: instance.canonical\n      };\n    }\n    function cloneHiddenTextInstance(instance, text, internalInstanceHandle) {\n      throw new Error(\"Not yet implemented.\");\n    }\n    function createContainerChildSet(container) {\n      return createChildNodeSet(container);\n    }\n    function appendChildToContainerChildSet(childSet, child) {\n      appendChildNodeToSet(childSet, child.node);\n    }\n    function finalizeContainerChildren(container, newChildren) {\n      completeRoot(container, newChildren);\n    }\n    function replaceContainerChildren(container, newChildren) {}\n    function preparePortalMount(portalInstance) {}\n    var ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\n    function describeBuiltInComponentFrame(name, source, ownerFn) {\n      {\n        var ownerName = null;\n        if (ownerFn) {\n          ownerName = ownerFn.displayName || ownerFn.name || null;\n        }\n        return describeComponentFrame(name, source, ownerName);\n      }\n    }\n    var componentFrameCache;\n    {\n      var PossiblyWeakMap = typeof WeakMap === \"function\" ? WeakMap : Map;\n      componentFrameCache = new PossiblyWeakMap();\n    }\n    var BEFORE_SLASH_RE = /^(.*)[\\\\\\/]/;\n    function describeComponentFrame(name, source, ownerName) {\n      var sourceInfo = \"\";\n      if (source) {\n        var path = source.fileName;\n        var fileName = path.replace(BEFORE_SLASH_RE, \"\");\n        if (/^index\\./.test(fileName)) {\n          var match = path.match(BEFORE_SLASH_RE);\n          if (match) {\n            var pathBeforeSlash = match[1];\n            if (pathBeforeSlash) {\n              var folderName = pathBeforeSlash.replace(BEFORE_SLASH_RE, \"\");\n              fileName = folderName + \"/\" + fileName;\n            }\n          }\n        }\n        sourceInfo = \" (at \" + fileName + \":\" + source.lineNumber + \")\";\n      } else if (ownerName) {\n        sourceInfo = \" (created by \" + ownerName + \")\";\n      }\n      return \"\\n    in \" + (name || \"Unknown\") + sourceInfo;\n    }\n    function describeClassComponentFrame(ctor, source, ownerFn) {\n      {\n        return describeFunctionComponentFrame(ctor, source, ownerFn);\n      }\n    }\n    function describeFunctionComponentFrame(fn, source, ownerFn) {\n      {\n        if (!fn) {\n          return \"\";\n        }\n        var name = fn.displayName || fn.name || null;\n        var ownerName = null;\n        if (ownerFn) {\n          ownerName = ownerFn.displayName || ownerFn.name || null;\n        }\n        return describeComponentFrame(name, source, ownerName);\n      }\n    }\n    function describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {\n      if (type == null) {\n        return \"\";\n      }\n      if (typeof type === \"function\") {\n        {\n          return describeFunctionComponentFrame(type, source, ownerFn);\n        }\n      }\n      if (typeof type === \"string\") {\n        return describeBuiltInComponentFrame(type, source, ownerFn);\n      }\n      switch (type) {\n        case REACT_SUSPENSE_TYPE:\n          return describeBuiltInComponentFrame(\"Suspense\", source, ownerFn);\n        case REACT_SUSPENSE_LIST_TYPE:\n          return describeBuiltInComponentFrame(\"SuspenseList\", source, ownerFn);\n      }\n      if (typeof type === \"object\") {\n        switch (type.$$typeof) {\n          case REACT_FORWARD_REF_TYPE:\n            return describeFunctionComponentFrame(type.render, source, ownerFn);\n          case REACT_MEMO_TYPE:\n            return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);\n          case REACT_LAZY_TYPE:\n            {\n              var lazyComponent = type;\n              var payload = lazyComponent._payload;\n              var init = lazyComponent._init;\n              try {\n                return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);\n              } catch (x) {}\n            }\n        }\n      }\n      return \"\";\n    }\n    var hasOwnProperty = Object.prototype.hasOwnProperty;\n    var loggedTypeFailures = {};\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    function setCurrentlyValidatingElement(element) {\n      {\n        if (element) {\n          var owner = element._owner;\n          var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n          ReactDebugCurrentFrame.setExtraStackFrame(stack);\n        } else {\n          ReactDebugCurrentFrame.setExtraStackFrame(null);\n        }\n      }\n    }\n    function checkPropTypes(typeSpecs, values, location, componentName, element) {\n      {\n        var has = Function.call.bind(hasOwnProperty);\n        for (var typeSpecName in typeSpecs) {\n          if (has(typeSpecs, typeSpecName)) {\n            var error$1 = void 0;\n            try {\n              if (typeof typeSpecs[typeSpecName] !== \"function\") {\n                var err = Error((componentName || \"React class\") + \": \" + location + \" type `\" + typeSpecName + \"` is invalid; \" + \"it must be a function, usually from the `prop-types` package, but received `\" + typeof typeSpecs[typeSpecName] + \"`.\" + \"This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.\");\n                err.name = \"Invariant Violation\";\n                throw err;\n              }\n              error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, \"SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED\");\n            } catch (ex) {\n              error$1 = ex;\n            }\n            if (error$1 && !(error$1 instanceof Error)) {\n              setCurrentlyValidatingElement(element);\n              error(\"%s: type specification of %s\" + \" `%s` is invalid; the type checker \" + \"function must return `null` or an `Error` but returned a %s. \" + \"You may have forgotten to pass an argument to the type checker \" + \"creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and \" + \"shape all require an argument).\", componentName || \"React class\", location, typeSpecName, typeof error$1);\n              setCurrentlyValidatingElement(null);\n            }\n            if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {\n              loggedTypeFailures[error$1.message] = true;\n              setCurrentlyValidatingElement(element);\n              error(\"Failed %s type: %s\", location, error$1.message);\n              setCurrentlyValidatingElement(null);\n            }\n          }\n        }\n      }\n    }\n    var valueStack = [];\n    var fiberStack;\n    {\n      fiberStack = [];\n    }\n    var index = -1;\n    function createCursor(defaultValue) {\n      return {\n        current: defaultValue\n      };\n    }\n    function pop(cursor, fiber) {\n      if (index < 0) {\n        {\n          error(\"Unexpected pop.\");\n        }\n        return;\n      }\n      {\n        if (fiber !== fiberStack[index]) {\n          error(\"Unexpected Fiber popped.\");\n        }\n      }\n      cursor.current = valueStack[index];\n      valueStack[index] = null;\n      {\n        fiberStack[index] = null;\n      }\n      index--;\n    }\n    function push(cursor, value, fiber) {\n      index++;\n      valueStack[index] = cursor.current;\n      {\n        fiberStack[index] = fiber;\n      }\n      cursor.current = value;\n    }\n    var warnedAboutMissingGetChildContext;\n    {\n      warnedAboutMissingGetChildContext = {};\n    }\n    var emptyContextObject = {};\n    {\n      Object.freeze(emptyContextObject);\n    }\n    var contextStackCursor = createCursor(emptyContextObject);\n    var didPerformWorkStackCursor = createCursor(false);\n    var previousContext = emptyContextObject;\n    function getUnmaskedContext(workInProgress, Component, didPushOwnContextIfProvider) {\n      {\n        if (didPushOwnContextIfProvider && isContextProvider(Component)) {\n          return previousContext;\n        }\n        return contextStackCursor.current;\n      }\n    }\n    function cacheContext(workInProgress, unmaskedContext, maskedContext) {\n      {\n        var instance = workInProgress.stateNode;\n        instance.__reactInternalMemoizedUnmaskedChildContext = unmaskedContext;\n        instance.__reactInternalMemoizedMaskedChildContext = maskedContext;\n      }\n    }\n    function getMaskedContext(workInProgress, unmaskedContext) {\n      {\n        var type = workInProgress.type;\n        var contextTypes = type.contextTypes;\n        if (!contextTypes) {\n          return emptyContextObject;\n        }\n        var instance = workInProgress.stateNode;\n        if (instance && instance.__reactInternalMemoizedUnmaskedChildContext === unmaskedContext) {\n          return instance.__reactInternalMemoizedMaskedChildContext;\n        }\n        var context = {};\n        for (var key in contextTypes) {\n          context[key] = unmaskedContext[key];\n        }\n        {\n          var name = getComponentNameFromFiber(workInProgress) || \"Unknown\";\n          checkPropTypes(contextTypes, context, \"context\", name);\n        }\n        if (instance) {\n          cacheContext(workInProgress, unmaskedContext, context);\n        }\n        return context;\n      }\n    }\n    function hasContextChanged() {\n      {\n        return didPerformWorkStackCursor.current;\n      }\n    }\n    function isContextProvider(type) {\n      {\n        var childContextTypes = type.childContextTypes;\n        return childContextTypes !== null && childContextTypes !== undefined;\n      }\n    }\n    function popContext(fiber) {\n      {\n        pop(didPerformWorkStackCursor, fiber);\n        pop(contextStackCursor, fiber);\n      }\n    }\n    function popTopLevelContextObject(fiber) {\n      {\n        pop(didPerformWorkStackCursor, fiber);\n        pop(contextStackCursor, fiber);\n      }\n    }\n    function pushTopLevelContextObject(fiber, context, didChange) {\n      {\n        if (contextStackCursor.current !== emptyContextObject) {\n          throw new Error(\"Unexpected context found on stack. \" + \"This error is likely caused by a bug in React. Please file an issue.\");\n        }\n        push(contextStackCursor, context, fiber);\n        push(didPerformWorkStackCursor, didChange, fiber);\n      }\n    }\n    function processChildContext(fiber, type, parentContext) {\n      {\n        var instance = fiber.stateNode;\n        var childContextTypes = type.childContextTypes;\n        if (typeof instance.getChildContext !== \"function\") {\n          {\n            var componentName = getComponentNameFromFiber(fiber) || \"Unknown\";\n            if (!warnedAboutMissingGetChildContext[componentName]) {\n              warnedAboutMissingGetChildContext[componentName] = true;\n              error(\"%s.childContextTypes is specified but there is no getChildContext() method \" + \"on the instance. You can either define getChildContext() on %s or remove \" + \"childContextTypes from it.\", componentName, componentName);\n            }\n          }\n          return parentContext;\n        }\n        var childContext = instance.getChildContext();\n        for (var contextKey in childContext) {\n          if (!(contextKey in childContextTypes)) {\n            throw new Error((getComponentNameFromFiber(fiber) || \"Unknown\") + '.getChildContext(): key \"' + contextKey + '\" is not defined in childContextTypes.');\n          }\n        }\n        {\n          var name = getComponentNameFromFiber(fiber) || \"Unknown\";\n          checkPropTypes(childContextTypes, childContext, \"child context\", name);\n        }\n        return assign({}, parentContext, childContext);\n      }\n    }\n    function pushContextProvider(workInProgress) {\n      {\n        var instance = workInProgress.stateNode;\n        var memoizedMergedChildContext = instance && instance.__reactInternalMemoizedMergedChildContext || emptyContextObject;\n        previousContext = contextStackCursor.current;\n        push(contextStackCursor, memoizedMergedChildContext, workInProgress);\n        push(didPerformWorkStackCursor, didPerformWorkStackCursor.current, workInProgress);\n        return true;\n      }\n    }\n    function invalidateContextProvider(workInProgress, type, didChange) {\n      {\n        var instance = workInProgress.stateNode;\n        if (!instance) {\n          throw new Error(\"Expected to have an instance by this point. \" + \"This error is likely caused by a bug in React. Please file an issue.\");\n        }\n        if (didChange) {\n          var mergedContext = processChildContext(workInProgress, type, previousContext);\n          instance.__reactInternalMemoizedMergedChildContext = mergedContext;\n          pop(didPerformWorkStackCursor, workInProgress);\n          pop(contextStackCursor, workInProgress);\n          push(contextStackCursor, mergedContext, workInProgress);\n          push(didPerformWorkStackCursor, didChange, workInProgress);\n        } else {\n          pop(didPerformWorkStackCursor, workInProgress);\n          push(didPerformWorkStackCursor, didChange, workInProgress);\n        }\n      }\n    }\n    function findCurrentUnmaskedContext(fiber) {\n      {\n        if (!isFiberMounted(fiber) || fiber.tag !== ClassComponent) {\n          throw new Error(\"Expected subtree parent to be a mounted class component. \" + \"This error is likely caused by a bug in React. Please file an issue.\");\n        }\n        var node = fiber;\n        do {\n          switch (node.tag) {\n            case HostRoot:\n              return node.stateNode.context;\n            case ClassComponent:\n              {\n                var Component = node.type;\n                if (isContextProvider(Component)) {\n                  return node.stateNode.__reactInternalMemoizedMergedChildContext;\n                }\n                break;\n              }\n          }\n          node = node.return;\n        } while (node !== null);\n        throw new Error(\"Found unexpected detached subtree parent. \" + \"This error is likely caused by a bug in React. Please file an issue.\");\n      }\n    }\n    var LegacyRoot = 0;\n    var ConcurrentRoot = 1;\n    function is(x, y) {\n      return x === y && (x !== 0 || 1 / x === 1 / y) || x !== x && y !== y;\n    }\n    var objectIs = typeof Object.is === \"function\" ? Object.is : is;\n    var syncQueue = null;\n    var includesLegacySyncCallbacks = false;\n    var isFlushingSyncQueue = false;\n    function scheduleSyncCallback(callback) {\n      if (syncQueue === null) {\n        syncQueue = [callback];\n      } else {\n        syncQueue.push(callback);\n      }\n    }\n    function scheduleLegacySyncCallback(callback) {\n      includesLegacySyncCallbacks = true;\n      scheduleSyncCallback(callback);\n    }\n    function flushSyncCallbacksOnlyInLegacyMode() {\n      if (includesLegacySyncCallbacks) {\n        flushSyncCallbacks();\n      }\n    }\n    function flushSyncCallbacks() {\n      if (!isFlushingSyncQueue && syncQueue !== null) {\n        isFlushingSyncQueue = true;\n        var i = 0;\n        var previousUpdatePriority = getCurrentUpdatePriority();\n        try {\n          var isSync = true;\n          var queue = syncQueue;\n          setCurrentUpdatePriority(DiscreteEventPriority);\n          for (; i < queue.length; i++) {\n            var callback = queue[i];\n            do {\n              callback = callback(isSync);\n            } while (callback !== null);\n          }\n          syncQueue = null;\n          includesLegacySyncCallbacks = false;\n        } catch (error) {\n          if (syncQueue !== null) {\n            syncQueue = syncQueue.slice(i + 1);\n          }\n          scheduleCallback(ImmediatePriority, flushSyncCallbacks);\n          throw error;\n        } finally {\n          setCurrentUpdatePriority(previousUpdatePriority);\n          isFlushingSyncQueue = false;\n        }\n      }\n      return null;\n    }\n    function isRootDehydrated(root) {\n      var currentState = root.current.memoizedState;\n      return currentState.isDehydrated;\n    }\n    var forkStack = [];\n    var forkStackIndex = 0;\n    var treeForkProvider = null;\n    var treeForkCount = 0;\n    var idStack = [];\n    var idStackIndex = 0;\n    var treeContextProvider = null;\n    var treeContextId = 1;\n    var treeContextOverflow = \"\";\n    function popTreeContext(workInProgress) {\n      while (workInProgress === treeForkProvider) {\n        treeForkProvider = forkStack[--forkStackIndex];\n        forkStack[forkStackIndex] = null;\n        treeForkCount = forkStack[--forkStackIndex];\n        forkStack[forkStackIndex] = null;\n      }\n      while (workInProgress === treeContextProvider) {\n        treeContextProvider = idStack[--idStackIndex];\n        idStack[idStackIndex] = null;\n        treeContextOverflow = idStack[--idStackIndex];\n        idStack[idStackIndex] = null;\n        treeContextId = idStack[--idStackIndex];\n        idStack[idStackIndex] = null;\n      }\n    }\n    var isHydrating = false;\n    var didSuspendOrErrorDEV = false;\n    var hydrationErrors = null;\n    function didSuspendOrErrorWhileHydratingDEV() {\n      {\n        return didSuspendOrErrorDEV;\n      }\n    }\n    function reenterHydrationStateFromDehydratedSuspenseInstance(fiber, suspenseInstance, treeContext) {\n      {\n        return false;\n      }\n    }\n    function prepareToHydrateHostInstance(fiber, rootContainerInstance, hostContext) {\n      {\n        throw new Error(\"Expected prepareToHydrateHostInstance() to never be called. \" + \"This error is likely caused by a bug in React. Please file an issue.\");\n      }\n    }\n    function prepareToHydrateHostTextInstance(fiber) {\n      {\n        throw new Error(\"Expected prepareToHydrateHostTextInstance() to never be called. \" + \"This error is likely caused by a bug in React. Please file an issue.\");\n      }\n      var shouldUpdate = hydrateTextInstance();\n    }\n    function prepareToHydrateHostSuspenseInstance(fiber) {\n      {\n        throw new Error(\"Expected prepareToHydrateHostSuspenseInstance() to never be called. \" + \"This error is likely caused by a bug in React. Please file an issue.\");\n      }\n    }\n    function popHydrationState(fiber) {\n      {\n        return false;\n      }\n    }\n    function upgradeHydrationErrorsToRecoverable() {\n      if (hydrationErrors !== null) {\n        queueRecoverableErrors(hydrationErrors);\n        hydrationErrors = null;\n      }\n    }\n    function getIsHydrating() {\n      return isHydrating;\n    }\n    function queueHydrationError(error) {\n      if (hydrationErrors === null) {\n        hydrationErrors = [error];\n      } else {\n        hydrationErrors.push(error);\n      }\n    }\n    var ReactCurrentBatchConfig = ReactSharedInternals.ReactCurrentBatchConfig;\n    var NoTransition = null;\n    function requestCurrentTransition() {\n      return ReactCurrentBatchConfig.transition;\n    }\n    function shallowEqual(objA, objB) {\n      if (objectIs(objA, objB)) {\n        return true;\n      }\n      if (typeof objA !== \"object\" || objA === null || typeof objB !== \"object\" || objB === null) {\n        return false;\n      }\n      var keysA = Object.keys(objA);\n      var keysB = Object.keys(objB);\n      if (keysA.length !== keysB.length) {\n        return false;\n      }\n      for (var i = 0; i < keysA.length; i++) {\n        var currentKey = keysA[i];\n        if (!hasOwnProperty.call(objB, currentKey) || !objectIs(objA[currentKey], objB[currentKey])) {\n          return false;\n        }\n      }\n      return true;\n    }\n    function describeFiber(fiber) {\n      var owner = fiber._debugOwner ? fiber._debugOwner.type : null;\n      var source = fiber._debugSource;\n      switch (fiber.tag) {\n        case HostComponent:\n          return describeBuiltInComponentFrame(fiber.type, source, owner);\n        case LazyComponent:\n          return describeBuiltInComponentFrame(\"Lazy\", source, owner);\n        case SuspenseComponent:\n          return describeBuiltInComponentFrame(\"Suspense\", source, owner);\n        case SuspenseListComponent:\n          return describeBuiltInComponentFrame(\"SuspenseList\", source, owner);\n        case FunctionComponent:\n        case IndeterminateComponent:\n        case SimpleMemoComponent:\n          return describeFunctionComponentFrame(fiber.type, source, owner);\n        case ForwardRef:\n          return describeFunctionComponentFrame(fiber.type.render, source, owner);\n        case ClassComponent:\n          return describeClassComponentFrame(fiber.type, source, owner);\n        default:\n          return \"\";\n      }\n    }\n    function getStackByFiberInDevAndProd(workInProgress) {\n      try {\n        var info = \"\";\n        var node = workInProgress;\n        do {\n          info += describeFiber(node);\n          node = node.return;\n        } while (node);\n        return info;\n      } catch (x) {\n        return \"\\nError generating stack: \" + x.message + \"\\n\" + x.stack;\n      }\n    }\n    var ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;\n    var current = null;\n    var isRendering = false;\n    function getCurrentFiberOwnerNameInDevOrNull() {\n      {\n        if (current === null) {\n          return null;\n        }\n        var owner = current._debugOwner;\n        if (owner !== null && typeof owner !== \"undefined\") {\n          return getComponentNameFromFiber(owner);\n        }\n      }\n      return null;\n    }\n    function getCurrentFiberStackInDev() {\n      {\n        if (current === null) {\n          return \"\";\n        }\n        return getStackByFiberInDevAndProd(current);\n      }\n    }\n    function resetCurrentFiber() {\n      {\n        ReactDebugCurrentFrame$1.getCurrentStack = null;\n        current = null;\n        isRendering = false;\n      }\n    }\n    function setCurrentFiber(fiber) {\n      {\n        ReactDebugCurrentFrame$1.getCurrentStack = fiber === null ? null : getCurrentFiberStackInDev;\n        current = fiber;\n        isRendering = false;\n      }\n    }\n    function getCurrentFiber() {\n      {\n        return current;\n      }\n    }\n    function setIsRendering(rendering) {\n      {\n        isRendering = rendering;\n      }\n    }\n    var ReactStrictModeWarnings = {\n      recordUnsafeLifecycleWarnings: function recordUnsafeLifecycleWarnings(fiber, instance) {},\n      flushPendingUnsafeLifecycleWarnings: function flushPendingUnsafeLifecycleWarnings() {},\n      recordLegacyContextWarning: function recordLegacyContextWarning(fiber, instance) {},\n      flushLegacyContextWarning: function flushLegacyContextWarning() {},\n      discardPendingWarnings: function discardPendingWarnings() {}\n    };\n    {\n      var findStrictRoot = function findStrictRoot(fiber) {\n        var maybeStrictRoot = null;\n        var node = fiber;\n        while (node !== null) {\n          if (node.mode & StrictLegacyMode) {\n            maybeStrictRoot = node;\n          }\n          node = node.return;\n        }\n        return maybeStrictRoot;\n      };\n      var setToSortedString = function setToSortedString(set) {\n        var array = [];\n        set.forEach(function (value) {\n          array.push(value);\n        });\n        return array.sort().join(\", \");\n      };\n      var pendingComponentWillMountWarnings = [];\n      var pendingUNSAFE_ComponentWillMountWarnings = [];\n      var pendingComponentWillReceivePropsWarnings = [];\n      var pendingUNSAFE_ComponentWillReceivePropsWarnings = [];\n      var pendingComponentWillUpdateWarnings = [];\n      var pendingUNSAFE_ComponentWillUpdateWarnings = [];\n      var didWarnAboutUnsafeLifecycles = new Set();\n      ReactStrictModeWarnings.recordUnsafeLifecycleWarnings = function (fiber, instance) {\n        if (didWarnAboutUnsafeLifecycles.has(fiber.type)) {\n          return;\n        }\n        if (typeof instance.componentWillMount === \"function\" && instance.componentWillMount.__suppressDeprecationWarning !== true) {\n          pendingComponentWillMountWarnings.push(fiber);\n        }\n        if (fiber.mode & StrictLegacyMode && typeof instance.UNSAFE_componentWillMount === \"function\") {\n          pendingUNSAFE_ComponentWillMountWarnings.push(fiber);\n        }\n        if (typeof instance.componentWillReceiveProps === \"function\" && instance.componentWillReceiveProps.__suppressDeprecationWarning !== true) {\n          pendingComponentWillReceivePropsWarnings.push(fiber);\n        }\n        if (fiber.mode & StrictLegacyMode && typeof instance.UNSAFE_componentWillReceiveProps === \"function\") {\n          pendingUNSAFE_ComponentWillReceivePropsWarnings.push(fiber);\n        }\n        if (typeof instance.componentWillUpdate === \"function\" && instance.componentWillUpdate.__suppressDeprecationWarning !== true) {\n          pendingComponentWillUpdateWarnings.push(fiber);\n        }\n        if (fiber.mode & StrictLegacyMode && typeof instance.UNSAFE_componentWillUpdate === \"function\") {\n          pendingUNSAFE_ComponentWillUpdateWarnings.push(fiber);\n        }\n      };\n      ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings = function () {\n        var componentWillMountUniqueNames = new Set();\n        if (pendingComponentWillMountWarnings.length > 0) {\n          pendingComponentWillMountWarnings.forEach(function (fiber) {\n            componentWillMountUniqueNames.add(getComponentNameFromFiber(fiber) || \"Component\");\n            didWarnAboutUnsafeLifecycles.add(fiber.type);\n          });\n          pendingComponentWillMountWarnings = [];\n        }\n        var UNSAFE_componentWillMountUniqueNames = new Set();\n        if (pendingUNSAFE_ComponentWillMountWarnings.length > 0) {\n          pendingUNSAFE_ComponentWillMountWarnings.forEach(function (fiber) {\n            UNSAFE_componentWillMountUniqueNames.add(getComponentNameFromFiber(fiber) || \"Component\");\n            didWarnAboutUnsafeLifecycles.add(fiber.type);\n          });\n          pendingUNSAFE_ComponentWillMountWarnings = [];\n        }\n        var componentWillReceivePropsUniqueNames = new Set();\n        if (pendingComponentWillReceivePropsWarnings.length > 0) {\n          pendingComponentWillReceivePropsWarnings.forEach(function (fiber) {\n            componentWillReceivePropsUniqueNames.add(getComponentNameFromFiber(fiber) || \"Component\");\n            didWarnAboutUnsafeLifecycles.add(fiber.type);\n          });\n          pendingComponentWillReceivePropsWarnings = [];\n        }\n        var UNSAFE_componentWillReceivePropsUniqueNames = new Set();\n        if (pendingUNSAFE_ComponentWillReceivePropsWarnings.length > 0) {\n          pendingUNSAFE_ComponentWillReceivePropsWarnings.forEach(function (fiber) {\n            UNSAFE_componentWillReceivePropsUniqueNames.add(getComponentNameFromFiber(fiber) || \"Component\");\n            didWarnAboutUnsafeLifecycles.add(fiber.type);\n          });\n          pendingUNSAFE_ComponentWillReceivePropsWarnings = [];\n        }\n        var componentWillUpdateUniqueNames = new Set();\n        if (pendingComponentWillUpdateWarnings.length > 0) {\n          pendingComponentWillUpdateWarnings.forEach(function (fiber) {\n            componentWillUpdateUniqueNames.add(getComponentNameFromFiber(fiber) || \"Component\");\n            didWarnAboutUnsafeLifecycles.add(fiber.type);\n          });\n          pendingComponentWillUpdateWarnings = [];\n        }\n        var UNSAFE_componentWillUpdateUniqueNames = new Set();\n        if (pendingUNSAFE_ComponentWillUpdateWarnings.length > 0) {\n          pendingUNSAFE_ComponentWillUpdateWarnings.forEach(function (fiber) {\n            UNSAFE_componentWillUpdateUniqueNames.add(getComponentNameFromFiber(fiber) || \"Component\");\n            didWarnAboutUnsafeLifecycles.add(fiber.type);\n          });\n          pendingUNSAFE_ComponentWillUpdateWarnings = [];\n        }\n        if (UNSAFE_componentWillMountUniqueNames.size > 0) {\n          var sortedNames = setToSortedString(UNSAFE_componentWillMountUniqueNames);\n          error(\"Using UNSAFE_componentWillMount in strict mode is not recommended and may indicate bugs in your code. \" + \"See https://reactjs.org/link/unsafe-component-lifecycles for details.\\n\\n\" + \"* Move code with side effects to componentDidMount, and set initial state in the constructor.\\n\" + \"\\nPlease update the following components: %s\", sortedNames);\n        }\n        if (UNSAFE_componentWillReceivePropsUniqueNames.size > 0) {\n          var _sortedNames = setToSortedString(UNSAFE_componentWillReceivePropsUniqueNames);\n          error(\"Using UNSAFE_componentWillReceiveProps in strict mode is not recommended \" + \"and may indicate bugs in your code. \" + \"See https://reactjs.org/link/unsafe-component-lifecycles for details.\\n\\n\" + \"* Move data fetching code or side effects to componentDidUpdate.\\n\" + \"* If you're updating state whenever props change, \" + \"refactor your code to use memoization techniques or move it to \" + \"static getDerivedStateFromProps. Learn more at: https://reactjs.org/link/derived-state\\n\" + \"\\nPlease update the following components: %s\", _sortedNames);\n        }\n        if (UNSAFE_componentWillUpdateUniqueNames.size > 0) {\n          var _sortedNames2 = setToSortedString(UNSAFE_componentWillUpdateUniqueNames);\n          error(\"Using UNSAFE_componentWillUpdate in strict mode is not recommended \" + \"and may indicate bugs in your code. \" + \"See https://reactjs.org/link/unsafe-component-lifecycles for details.\\n\\n\" + \"* Move data fetching code or side effects to componentDidUpdate.\\n\" + \"\\nPlease update the following components: %s\", _sortedNames2);\n        }\n        if (componentWillMountUniqueNames.size > 0) {\n          var _sortedNames3 = setToSortedString(componentWillMountUniqueNames);\n          warn(\"componentWillMount has been renamed, and is not recommended for use. \" + \"See https://reactjs.org/link/unsafe-component-lifecycles for details.\\n\\n\" + \"* Move code with side effects to componentDidMount, and set initial state in the constructor.\\n\" + \"* Rename componentWillMount to UNSAFE_componentWillMount to suppress \" + \"this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. \" + \"To rename all deprecated lifecycles to their new names, you can run \" + \"`npx react-codemod rename-unsafe-lifecycles` in your project source folder.\\n\" + \"\\nPlease update the following components: %s\", _sortedNames3);\n        }\n        if (componentWillReceivePropsUniqueNames.size > 0) {\n          var _sortedNames4 = setToSortedString(componentWillReceivePropsUniqueNames);\n          warn(\"componentWillReceiveProps has been renamed, and is not recommended for use. \" + \"See https://reactjs.org/link/unsafe-component-lifecycles for details.\\n\\n\" + \"* Move data fetching code or side effects to componentDidUpdate.\\n\" + \"* If you're updating state whenever props change, refactor your \" + \"code to use memoization techniques or move it to \" + \"static getDerivedStateFromProps. Learn more at: https://reactjs.org/link/derived-state\\n\" + \"* Rename componentWillReceiveProps to UNSAFE_componentWillReceiveProps to suppress \" + \"this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. \" + \"To rename all deprecated lifecycles to their new names, you can run \" + \"`npx react-codemod rename-unsafe-lifecycles` in your project source folder.\\n\" + \"\\nPlease update the following components: %s\", _sortedNames4);\n        }\n        if (componentWillUpdateUniqueNames.size > 0) {\n          var _sortedNames5 = setToSortedString(componentWillUpdateUniqueNames);\n          warn(\"componentWillUpdate has been renamed, and is not recommended for use. \" + \"See https://reactjs.org/link/unsafe-component-lifecycles for details.\\n\\n\" + \"* Move data fetching code or side effects to componentDidUpdate.\\n\" + \"* Rename componentWillUpdate to UNSAFE_componentWillUpdate to suppress \" + \"this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. \" + \"To rename all deprecated lifecycles to their new names, you can run \" + \"`npx react-codemod rename-unsafe-lifecycles` in your project source folder.\\n\" + \"\\nPlease update the following components: %s\", _sortedNames5);\n        }\n      };\n      var pendingLegacyContextWarning = new Map();\n      var didWarnAboutLegacyContext = new Set();\n      ReactStrictModeWarnings.recordLegacyContextWarning = function (fiber, instance) {\n        var strictRoot = findStrictRoot(fiber);\n        if (strictRoot === null) {\n          error(\"Expected to find a StrictMode component in a strict mode tree. \" + \"This error is likely caused by a bug in React. Please file an issue.\");\n          return;\n        }\n        if (didWarnAboutLegacyContext.has(fiber.type)) {\n          return;\n        }\n        var warningsForRoot = pendingLegacyContextWarning.get(strictRoot);\n        if (fiber.type.contextTypes != null || fiber.type.childContextTypes != null || instance !== null && typeof instance.getChildContext === \"function\") {\n          if (warningsForRoot === undefined) {\n            warningsForRoot = [];\n            pendingLegacyContextWarning.set(strictRoot, warningsForRoot);\n          }\n          warningsForRoot.push(fiber);\n        }\n      };\n      ReactStrictModeWarnings.flushLegacyContextWarning = function () {\n        pendingLegacyContextWarning.forEach(function (fiberArray, strictRoot) {\n          if (fiberArray.length === 0) {\n            return;\n          }\n          var firstFiber = fiberArray[0];\n          var uniqueNames = new Set();\n          fiberArray.forEach(function (fiber) {\n            uniqueNames.add(getComponentNameFromFiber(fiber) || \"Component\");\n            didWarnAboutLegacyContext.add(fiber.type);\n          });\n          var sortedNames = setToSortedString(uniqueNames);\n          try {\n            setCurrentFiber(firstFiber);\n            error(\"Legacy context API has been detected within a strict-mode tree.\" + \"\\n\\nThe old API will be supported in all 16.x releases, but applications \" + \"using it should migrate to the new version.\" + \"\\n\\nPlease update the following components: %s\" + \"\\n\\nLearn more about this warning here: https://reactjs.org/link/legacy-context\", sortedNames);\n          } finally {\n            resetCurrentFiber();\n          }\n        });\n      };\n      ReactStrictModeWarnings.discardPendingWarnings = function () {\n        pendingComponentWillMountWarnings = [];\n        pendingUNSAFE_ComponentWillMountWarnings = [];\n        pendingComponentWillReceivePropsWarnings = [];\n        pendingUNSAFE_ComponentWillReceivePropsWarnings = [];\n        pendingComponentWillUpdateWarnings = [];\n        pendingUNSAFE_ComponentWillUpdateWarnings = [];\n        pendingLegacyContextWarning = new Map();\n      };\n    }\n    function typeName(value) {\n      {\n        var hasToStringTag = typeof Symbol === \"function\" && Symbol.toStringTag;\n        var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || \"Object\";\n        return type;\n      }\n    }\n    function willCoercionThrow(value) {\n      {\n        try {\n          testStringCoercion(value);\n          return false;\n        } catch (e) {\n          return true;\n        }\n      }\n    }\n    function testStringCoercion(value) {\n      return \"\" + value;\n    }\n    function checkKeyStringCoercion(value) {\n      {\n        if (willCoercionThrow(value)) {\n          error(\"The provided key is an unsupported type %s.\" + \" This value must be coerced to a string before before using it here.\", typeName(value));\n          return testStringCoercion(value);\n        }\n      }\n    }\n    function checkPropStringCoercion(value, propName) {\n      {\n        if (willCoercionThrow(value)) {\n          error(\"The provided `%s` prop is an unsupported type %s.\" + \" This value must be coerced to a string before before using it here.\", propName, typeName(value));\n          return testStringCoercion(value);\n        }\n      }\n    }\n    function resolveDefaultProps(Component, baseProps) {\n      if (Component && Component.defaultProps) {\n        var props = assign({}, baseProps);\n        var defaultProps = Component.defaultProps;\n        for (var propName in defaultProps) {\n          if (props[propName] === undefined) {\n            props[propName] = defaultProps[propName];\n          }\n        }\n        return props;\n      }\n      return baseProps;\n    }\n    var valueCursor = createCursor(null);\n    var rendererSigil;\n    {\n      rendererSigil = {};\n    }\n    var currentlyRenderingFiber = null;\n    var lastContextDependency = null;\n    var lastFullyObservedContext = null;\n    var isDisallowedContextReadInDEV = false;\n    function resetContextDependencies() {\n      currentlyRenderingFiber = null;\n      lastContextDependency = null;\n      lastFullyObservedContext = null;\n      {\n        isDisallowedContextReadInDEV = false;\n      }\n    }\n    function enterDisallowedContextReadInDEV() {\n      {\n        isDisallowedContextReadInDEV = true;\n      }\n    }\n    function exitDisallowedContextReadInDEV() {\n      {\n        isDisallowedContextReadInDEV = false;\n      }\n    }\n    function pushProvider(providerFiber, context, nextValue) {\n      {\n        push(valueCursor, context._currentValue2, providerFiber);\n        context._currentValue2 = nextValue;\n        {\n          if (context._currentRenderer2 !== undefined && context._currentRenderer2 !== null && context._currentRenderer2 !== rendererSigil) {\n            error(\"Detected multiple renderers concurrently rendering the \" + \"same context provider. This is currently unsupported.\");\n          }\n          context._currentRenderer2 = rendererSigil;\n        }\n      }\n    }\n    function popProvider(context, providerFiber) {\n      var currentValue = valueCursor.current;\n      pop(valueCursor, providerFiber);\n      {\n        {\n          context._currentValue2 = currentValue;\n        }\n      }\n    }\n    function scheduleContextWorkOnParentPath(parent, renderLanes, propagationRoot) {\n      var node = parent;\n      while (node !== null) {\n        var alternate = node.alternate;\n        if (!isSubsetOfLanes(node.childLanes, renderLanes)) {\n          node.childLanes = mergeLanes(node.childLanes, renderLanes);\n          if (alternate !== null) {\n            alternate.childLanes = mergeLanes(alternate.childLanes, renderLanes);\n          }\n        } else if (alternate !== null && !isSubsetOfLanes(alternate.childLanes, renderLanes)) {\n          alternate.childLanes = mergeLanes(alternate.childLanes, renderLanes);\n        }\n        if (node === propagationRoot) {\n          break;\n        }\n        node = node.return;\n      }\n      {\n        if (node !== propagationRoot) {\n          error(\"Expected to find the propagation root when scheduling context work. \" + \"This error is likely caused by a bug in React. Please file an issue.\");\n        }\n      }\n    }\n    function propagateContextChange(workInProgress, context, renderLanes) {\n      {\n        propagateContextChange_eager(workInProgress, context, renderLanes);\n      }\n    }\n    function propagateContextChange_eager(workInProgress, context, renderLanes) {\n      var fiber = workInProgress.child;\n      if (fiber !== null) {\n        fiber.return = workInProgress;\n      }\n      while (fiber !== null) {\n        var nextFiber = void 0;\n        var list = fiber.dependencies;\n        if (list !== null) {\n          nextFiber = fiber.child;\n          var dependency = list.firstContext;\n          while (dependency !== null) {\n            if (dependency.context === context) {\n              if (fiber.tag === ClassComponent) {\n                var lane = pickArbitraryLane(renderLanes);\n                var update = createUpdate(NoTimestamp, lane);\n                update.tag = ForceUpdate;\n                var updateQueue = fiber.updateQueue;\n                if (updateQueue === null) ;else {\n                  var sharedQueue = updateQueue.shared;\n                  var pending = sharedQueue.pending;\n                  if (pending === null) {\n                    update.next = update;\n                  } else {\n                    update.next = pending.next;\n                    pending.next = update;\n                  }\n                  sharedQueue.pending = update;\n                }\n              }\n              fiber.lanes = mergeLanes(fiber.lanes, renderLanes);\n              var alternate = fiber.alternate;\n              if (alternate !== null) {\n                alternate.lanes = mergeLanes(alternate.lanes, renderLanes);\n              }\n              scheduleContextWorkOnParentPath(fiber.return, renderLanes, workInProgress);\n              list.lanes = mergeLanes(list.lanes, renderLanes);\n              break;\n            }\n            dependency = dependency.next;\n          }\n        } else if (fiber.tag === ContextProvider) {\n          nextFiber = fiber.type === workInProgress.type ? null : fiber.child;\n        } else if (fiber.tag === DehydratedFragment) {\n          var parentSuspense = fiber.return;\n          if (parentSuspense === null) {\n            throw new Error(\"We just came from a parent so we must have had a parent. This is a bug in React.\");\n          }\n          parentSuspense.lanes = mergeLanes(parentSuspense.lanes, renderLanes);\n          var _alternate = parentSuspense.alternate;\n          if (_alternate !== null) {\n            _alternate.lanes = mergeLanes(_alternate.lanes, renderLanes);\n          }\n          scheduleContextWorkOnParentPath(parentSuspense, renderLanes, workInProgress);\n          nextFiber = fiber.sibling;\n        } else {\n          nextFiber = fiber.child;\n        }\n        if (nextFiber !== null) {\n          nextFiber.return = fiber;\n        } else {\n          nextFiber = fiber;\n          while (nextFiber !== null) {\n            if (nextFiber === workInProgress) {\n              nextFiber = null;\n              break;\n            }\n            var sibling = nextFiber.sibling;\n            if (sibling !== null) {\n              sibling.return = nextFiber.return;\n              nextFiber = sibling;\n              break;\n            }\n            nextFiber = nextFiber.return;\n          }\n        }\n        fiber = nextFiber;\n      }\n    }\n    function prepareToReadContext(workInProgress, renderLanes) {\n      currentlyRenderingFiber = workInProgress;\n      lastContextDependency = null;\n      lastFullyObservedContext = null;\n      var dependencies = workInProgress.dependencies;\n      if (dependencies !== null) {\n        {\n          var firstContext = dependencies.firstContext;\n          if (firstContext !== null) {\n            if (includesSomeLane(dependencies.lanes, renderLanes)) {\n              markWorkInProgressReceivedUpdate();\n            }\n            dependencies.firstContext = null;\n          }\n        }\n      }\n    }\n    function _readContext(context) {\n      {\n        if (isDisallowedContextReadInDEV) {\n          error(\"Context can only be read while React is rendering. \" + \"In classes, you can read it in the render method or getDerivedStateFromProps. \" + \"In function components, you can read it directly in the function body, but not \" + \"inside Hooks like useReducer() or useMemo().\");\n        }\n      }\n      var value = context._currentValue2;\n      if (lastFullyObservedContext === context) ;else {\n        var contextItem = {\n          context: context,\n          memoizedValue: value,\n          next: null\n        };\n        if (lastContextDependency === null) {\n          if (currentlyRenderingFiber === null) {\n            throw new Error(\"Context can only be read while React is rendering. \" + \"In classes, you can read it in the render method or getDerivedStateFromProps. \" + \"In function components, you can read it directly in the function body, but not \" + \"inside Hooks like useReducer() or useMemo().\");\n          }\n          lastContextDependency = contextItem;\n          currentlyRenderingFiber.dependencies = {\n            lanes: NoLanes,\n            firstContext: contextItem\n          };\n        } else {\n          lastContextDependency = lastContextDependency.next = contextItem;\n        }\n      }\n      return value;\n    }\n    var concurrentQueues = null;\n    function pushConcurrentUpdateQueue(queue) {\n      if (concurrentQueues === null) {\n        concurrentQueues = [queue];\n      } else {\n        concurrentQueues.push(queue);\n      }\n    }\n    function finishQueueingConcurrentUpdates() {\n      if (concurrentQueues !== null) {\n        for (var i = 0; i < concurrentQueues.length; i++) {\n          var queue = concurrentQueues[i];\n          var lastInterleavedUpdate = queue.interleaved;\n          if (lastInterleavedUpdate !== null) {\n            queue.interleaved = null;\n            var firstInterleavedUpdate = lastInterleavedUpdate.next;\n            var lastPendingUpdate = queue.pending;\n            if (lastPendingUpdate !== null) {\n              var firstPendingUpdate = lastPendingUpdate.next;\n              lastPendingUpdate.next = firstInterleavedUpdate;\n              lastInterleavedUpdate.next = firstPendingUpdate;\n            }\n            queue.pending = lastInterleavedUpdate;\n          }\n        }\n        concurrentQueues = null;\n      }\n    }\n    function enqueueConcurrentHookUpdate(fiber, queue, update, lane) {\n      var interleaved = queue.interleaved;\n      if (interleaved === null) {\n        update.next = update;\n        pushConcurrentUpdateQueue(queue);\n      } else {\n        update.next = interleaved.next;\n        interleaved.next = update;\n      }\n      queue.interleaved = update;\n      return markUpdateLaneFromFiberToRoot(fiber, lane);\n    }\n    function enqueueConcurrentHookUpdateAndEagerlyBailout(fiber, queue, update, lane) {\n      var interleaved = queue.interleaved;\n      if (interleaved === null) {\n        update.next = update;\n        pushConcurrentUpdateQueue(queue);\n      } else {\n        update.next = interleaved.next;\n        interleaved.next = update;\n      }\n      queue.interleaved = update;\n    }\n    function enqueueConcurrentClassUpdate(fiber, queue, update, lane) {\n      var interleaved = queue.interleaved;\n      if (interleaved === null) {\n        update.next = update;\n        pushConcurrentUpdateQueue(queue);\n      } else {\n        update.next = interleaved.next;\n        interleaved.next = update;\n      }\n      queue.interleaved = update;\n      return markUpdateLaneFromFiberToRoot(fiber, lane);\n    }\n    function enqueueConcurrentRenderForLane(fiber, lane) {\n      return markUpdateLaneFromFiberToRoot(fiber, lane);\n    }\n    var unsafe_markUpdateLaneFromFiberToRoot = markUpdateLaneFromFiberToRoot;\n    function markUpdateLaneFromFiberToRoot(sourceFiber, lane) {\n      sourceFiber.lanes = mergeLanes(sourceFiber.lanes, lane);\n      var alternate = sourceFiber.alternate;\n      if (alternate !== null) {\n        alternate.lanes = mergeLanes(alternate.lanes, lane);\n      }\n      {\n        if (alternate === null && (sourceFiber.flags & (Placement | Hydrating)) !== NoFlags) {\n          warnAboutUpdateOnNotYetMountedFiberInDEV(sourceFiber);\n        }\n      }\n      var node = sourceFiber;\n      var parent = sourceFiber.return;\n      while (parent !== null) {\n        parent.childLanes = mergeLanes(parent.childLanes, lane);\n        alternate = parent.alternate;\n        if (alternate !== null) {\n          alternate.childLanes = mergeLanes(alternate.childLanes, lane);\n        } else {\n          {\n            if ((parent.flags & (Placement | Hydrating)) !== NoFlags) {\n              warnAboutUpdateOnNotYetMountedFiberInDEV(sourceFiber);\n            }\n          }\n        }\n        node = parent;\n        parent = parent.return;\n      }\n      if (node.tag === HostRoot) {\n        var root = node.stateNode;\n        return root;\n      } else {\n        return null;\n      }\n    }\n    var UpdateState = 0;\n    var ReplaceState = 1;\n    var ForceUpdate = 2;\n    var CaptureUpdate = 3;\n    var hasForceUpdate = false;\n    var didWarnUpdateInsideUpdate;\n    var currentlyProcessingQueue;\n    {\n      didWarnUpdateInsideUpdate = false;\n      currentlyProcessingQueue = null;\n    }\n    function initializeUpdateQueue(fiber) {\n      var queue = {\n        baseState: fiber.memoizedState,\n        firstBaseUpdate: null,\n        lastBaseUpdate: null,\n        shared: {\n          pending: null,\n          interleaved: null,\n          lanes: NoLanes\n        },\n        effects: null\n      };\n      fiber.updateQueue = queue;\n    }\n    function cloneUpdateQueue(current, workInProgress) {\n      var queue = workInProgress.updateQueue;\n      var currentQueue = current.updateQueue;\n      if (queue === currentQueue) {\n        var clone = {\n          baseState: currentQueue.baseState,\n          firstBaseUpdate: currentQueue.firstBaseUpdate,\n          lastBaseUpdate: currentQueue.lastBaseUpdate,\n          shared: currentQueue.shared,\n          effects: currentQueue.effects\n        };\n        workInProgress.updateQueue = clone;\n      }\n    }\n    function createUpdate(eventTime, lane) {\n      var update = {\n        eventTime: eventTime,\n        lane: lane,\n        tag: UpdateState,\n        payload: null,\n        callback: null,\n        next: null\n      };\n      return update;\n    }\n    function enqueueUpdate(fiber, update, lane) {\n      var updateQueue = fiber.updateQueue;\n      if (updateQueue === null) {\n        return null;\n      }\n      var sharedQueue = updateQueue.shared;\n      {\n        if (currentlyProcessingQueue === sharedQueue && !didWarnUpdateInsideUpdate) {\n          error(\"An update (setState, replaceState, or forceUpdate) was scheduled \" + \"from inside an update function. Update functions should be pure, \" + \"with zero side-effects. Consider using componentDidUpdate or a \" + \"callback.\");\n          didWarnUpdateInsideUpdate = true;\n        }\n      }\n      if (isUnsafeClassRenderPhaseUpdate()) {\n        var pending = sharedQueue.pending;\n        if (pending === null) {\n          update.next = update;\n        } else {\n          update.next = pending.next;\n          pending.next = update;\n        }\n        sharedQueue.pending = update;\n        return unsafe_markUpdateLaneFromFiberToRoot(fiber, lane);\n      } else {\n        return enqueueConcurrentClassUpdate(fiber, sharedQueue, update, lane);\n      }\n    }\n    function entangleTransitions(root, fiber, lane) {\n      var updateQueue = fiber.updateQueue;\n      if (updateQueue === null) {\n        return;\n      }\n      var sharedQueue = updateQueue.shared;\n      if (isTransitionLane(lane)) {\n        var queueLanes = sharedQueue.lanes;\n        queueLanes = intersectLanes(queueLanes, root.pendingLanes);\n        var newQueueLanes = mergeLanes(queueLanes, lane);\n        sharedQueue.lanes = newQueueLanes;\n        markRootEntangled(root, newQueueLanes);\n      }\n    }\n    function enqueueCapturedUpdate(workInProgress, capturedUpdate) {\n      var queue = workInProgress.updateQueue;\n      var current = workInProgress.alternate;\n      if (current !== null) {\n        var currentQueue = current.updateQueue;\n        if (queue === currentQueue) {\n          var newFirst = null;\n          var newLast = null;\n          var firstBaseUpdate = queue.firstBaseUpdate;\n          if (firstBaseUpdate !== null) {\n            var update = firstBaseUpdate;\n            do {\n              var clone = {\n                eventTime: update.eventTime,\n                lane: update.lane,\n                tag: update.tag,\n                payload: update.payload,\n                callback: update.callback,\n                next: null\n              };\n              if (newLast === null) {\n                newFirst = newLast = clone;\n              } else {\n                newLast.next = clone;\n                newLast = clone;\n              }\n              update = update.next;\n            } while (update !== null);\n            if (newLast === null) {\n              newFirst = newLast = capturedUpdate;\n            } else {\n              newLast.next = capturedUpdate;\n              newLast = capturedUpdate;\n            }\n          } else {\n            newFirst = newLast = capturedUpdate;\n          }\n          queue = {\n            baseState: currentQueue.baseState,\n            firstBaseUpdate: newFirst,\n            lastBaseUpdate: newLast,\n            shared: currentQueue.shared,\n            effects: currentQueue.effects\n          };\n          workInProgress.updateQueue = queue;\n          return;\n        }\n      }\n      var lastBaseUpdate = queue.lastBaseUpdate;\n      if (lastBaseUpdate === null) {\n        queue.firstBaseUpdate = capturedUpdate;\n      } else {\n        lastBaseUpdate.next = capturedUpdate;\n      }\n      queue.lastBaseUpdate = capturedUpdate;\n    }\n    function getStateFromUpdate(workInProgress, queue, update, prevState, nextProps, instance) {\n      switch (update.tag) {\n        case ReplaceState:\n          {\n            var payload = update.payload;\n            if (typeof payload === \"function\") {\n              {\n                enterDisallowedContextReadInDEV();\n              }\n              var nextState = payload.call(instance, prevState, nextProps);\n              {\n                exitDisallowedContextReadInDEV();\n              }\n              return nextState;\n            }\n            return payload;\n          }\n        case CaptureUpdate:\n          {\n            workInProgress.flags = workInProgress.flags & ~ShouldCapture | DidCapture;\n          }\n        case UpdateState:\n          {\n            var _payload = update.payload;\n            var partialState;\n            if (typeof _payload === \"function\") {\n              {\n                enterDisallowedContextReadInDEV();\n              }\n              partialState = _payload.call(instance, prevState, nextProps);\n              {\n                exitDisallowedContextReadInDEV();\n              }\n            } else {\n              partialState = _payload;\n            }\n            if (partialState === null || partialState === undefined) {\n              return prevState;\n            }\n            return assign({}, prevState, partialState);\n          }\n        case ForceUpdate:\n          {\n            hasForceUpdate = true;\n            return prevState;\n          }\n      }\n      return prevState;\n    }\n    function processUpdateQueue(workInProgress, props, instance, renderLanes) {\n      var queue = workInProgress.updateQueue;\n      hasForceUpdate = false;\n      {\n        currentlyProcessingQueue = queue.shared;\n      }\n      var firstBaseUpdate = queue.firstBaseUpdate;\n      var lastBaseUpdate = queue.lastBaseUpdate;\n      var pendingQueue = queue.shared.pending;\n      if (pendingQueue !== null) {\n        queue.shared.pending = null;\n        var lastPendingUpdate = pendingQueue;\n        var firstPendingUpdate = lastPendingUpdate.next;\n        lastPendingUpdate.next = null;\n        if (lastBaseUpdate === null) {\n          firstBaseUpdate = firstPendingUpdate;\n        } else {\n          lastBaseUpdate.next = firstPendingUpdate;\n        }\n        lastBaseUpdate = lastPendingUpdate;\n        var current = workInProgress.alternate;\n        if (current !== null) {\n          var currentQueue = current.updateQueue;\n          var currentLastBaseUpdate = currentQueue.lastBaseUpdate;\n          if (currentLastBaseUpdate !== lastBaseUpdate) {\n            if (currentLastBaseUpdate === null) {\n              currentQueue.firstBaseUpdate = firstPendingUpdate;\n            } else {\n              currentLastBaseUpdate.next = firstPendingUpdate;\n            }\n            currentQueue.lastBaseUpdate = lastPendingUpdate;\n          }\n        }\n      }\n      if (firstBaseUpdate !== null) {\n        var newState = queue.baseState;\n        var newLanes = NoLanes;\n        var newBaseState = null;\n        var newFirstBaseUpdate = null;\n        var newLastBaseUpdate = null;\n        var update = firstBaseUpdate;\n        do {\n          var updateLane = update.lane;\n          var updateEventTime = update.eventTime;\n          if (!isSubsetOfLanes(renderLanes, updateLane)) {\n            var clone = {\n              eventTime: updateEventTime,\n              lane: updateLane,\n              tag: update.tag,\n              payload: update.payload,\n              callback: update.callback,\n              next: null\n            };\n            if (newLastBaseUpdate === null) {\n              newFirstBaseUpdate = newLastBaseUpdate = clone;\n              newBaseState = newState;\n            } else {\n              newLastBaseUpdate = newLastBaseUpdate.next = clone;\n            }\n            newLanes = mergeLanes(newLanes, updateLane);\n          } else {\n            if (newLastBaseUpdate !== null) {\n              var _clone = {\n                eventTime: updateEventTime,\n                lane: NoLane,\n                tag: update.tag,\n                payload: update.payload,\n                callback: update.callback,\n                next: null\n              };\n              newLastBaseUpdate = newLastBaseUpdate.next = _clone;\n            }\n            newState = getStateFromUpdate(workInProgress, queue, update, newState, props, instance);\n            var callback = update.callback;\n            if (callback !== null && update.lane !== NoLane) {\n              workInProgress.flags |= Callback;\n              var effects = queue.effects;\n              if (effects === null) {\n                queue.effects = [update];\n              } else {\n                effects.push(update);\n              }\n            }\n          }\n          update = update.next;\n          if (update === null) {\n            pendingQueue = queue.shared.pending;\n            if (pendingQueue === null) {\n              break;\n            } else {\n              var _lastPendingUpdate = pendingQueue;\n              var _firstPendingUpdate = _lastPendingUpdate.next;\n              _lastPendingUpdate.next = null;\n              update = _firstPendingUpdate;\n              queue.lastBaseUpdate = _lastPendingUpdate;\n              queue.shared.pending = null;\n            }\n          }\n        } while (true);\n        if (newLastBaseUpdate === null) {\n          newBaseState = newState;\n        }\n        queue.baseState = newBaseState;\n        queue.firstBaseUpdate = newFirstBaseUpdate;\n        queue.lastBaseUpdate = newLastBaseUpdate;\n        var lastInterleaved = queue.shared.interleaved;\n        if (lastInterleaved !== null) {\n          var interleaved = lastInterleaved;\n          do {\n            newLanes = mergeLanes(newLanes, interleaved.lane);\n            interleaved = interleaved.next;\n          } while (interleaved !== lastInterleaved);\n        } else if (firstBaseUpdate === null) {\n          queue.shared.lanes = NoLanes;\n        }\n        markSkippedUpdateLanes(newLanes);\n        workInProgress.lanes = newLanes;\n        workInProgress.memoizedState = newState;\n      }\n      {\n        currentlyProcessingQueue = null;\n      }\n    }\n    function callCallback(callback, context) {\n      if (typeof callback !== \"function\") {\n        throw new Error(\"Invalid argument passed as callback. Expected a function. Instead \" + (\"received: \" + callback));\n      }\n      callback.call(context);\n    }\n    function resetHasForceUpdateBeforeProcessing() {\n      hasForceUpdate = false;\n    }\n    function checkHasForceUpdateAfterProcessing() {\n      return hasForceUpdate;\n    }\n    function commitUpdateQueue(finishedWork, finishedQueue, instance) {\n      var effects = finishedQueue.effects;\n      finishedQueue.effects = null;\n      if (effects !== null) {\n        for (var i = 0; i < effects.length; i++) {\n          var effect = effects[i];\n          var callback = effect.callback;\n          if (callback !== null) {\n            effect.callback = null;\n            callCallback(callback, instance);\n          }\n        }\n      }\n    }\n    var fakeInternalInstance = {};\n    var emptyRefsObject = new React.Component().refs;\n    var didWarnAboutStateAssignmentForComponent;\n    var didWarnAboutUninitializedState;\n    var didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate;\n    var didWarnAboutLegacyLifecyclesAndDerivedState;\n    var didWarnAboutUndefinedDerivedState;\n    var warnOnUndefinedDerivedState;\n    var warnOnInvalidCallback;\n    var didWarnAboutDirectlyAssigningPropsToState;\n    var didWarnAboutContextTypeAndContextTypes;\n    var didWarnAboutInvalidateContextType;\n    {\n      didWarnAboutStateAssignmentForComponent = new Set();\n      didWarnAboutUninitializedState = new Set();\n      didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate = new Set();\n      didWarnAboutLegacyLifecyclesAndDerivedState = new Set();\n      didWarnAboutDirectlyAssigningPropsToState = new Set();\n      didWarnAboutUndefinedDerivedState = new Set();\n      didWarnAboutContextTypeAndContextTypes = new Set();\n      didWarnAboutInvalidateContextType = new Set();\n      var didWarnOnInvalidCallback = new Set();\n      warnOnInvalidCallback = function warnOnInvalidCallback(callback, callerName) {\n        if (callback === null || typeof callback === \"function\") {\n          return;\n        }\n        var key = callerName + \"_\" + callback;\n        if (!didWarnOnInvalidCallback.has(key)) {\n          didWarnOnInvalidCallback.add(key);\n          error(\"%s(...): Expected the last optional `callback` argument to be a \" + \"function. Instead received: %s.\", callerName, callback);\n        }\n      };\n      warnOnUndefinedDerivedState = function warnOnUndefinedDerivedState(type, partialState) {\n        if (partialState === undefined) {\n          var componentName = getComponentNameFromType(type) || \"Component\";\n          if (!didWarnAboutUndefinedDerivedState.has(componentName)) {\n            didWarnAboutUndefinedDerivedState.add(componentName);\n            error(\"%s.getDerivedStateFromProps(): A valid state object (or null) must be returned. \" + \"You have returned undefined.\", componentName);\n          }\n        }\n      };\n      Object.defineProperty(fakeInternalInstance, \"_processChildContext\", {\n        enumerable: false,\n        value: function value() {\n          throw new Error(\"_processChildContext is not available in React 16+. This likely \" + \"means you have multiple copies of React and are attempting to nest \" + \"a React 15 tree inside a React 16 tree using \" + \"unstable_renderSubtreeIntoContainer, which isn't supported. Try \" + \"to make sure you have only one copy of React (and ideally, switch \" + \"to ReactDOM.createPortal).\");\n        }\n      });\n      Object.freeze(fakeInternalInstance);\n    }\n    function applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, nextProps) {\n      var prevState = workInProgress.memoizedState;\n      var partialState = getDerivedStateFromProps(nextProps, prevState);\n      {\n        warnOnUndefinedDerivedState(ctor, partialState);\n      }\n      var memoizedState = partialState === null || partialState === undefined ? prevState : assign({}, prevState, partialState);\n      workInProgress.memoizedState = memoizedState;\n      if (workInProgress.lanes === NoLanes) {\n        var updateQueue = workInProgress.updateQueue;\n        updateQueue.baseState = memoizedState;\n      }\n    }\n    var classComponentUpdater = {\n      isMounted: isMounted,\n      enqueueSetState: function enqueueSetState(inst, payload, callback) {\n        var fiber = get(inst);\n        var eventTime = requestEventTime();\n        var lane = requestUpdateLane(fiber);\n        var update = createUpdate(eventTime, lane);\n        update.payload = payload;\n        if (callback !== undefined && callback !== null) {\n          {\n            warnOnInvalidCallback(callback, \"setState\");\n          }\n          update.callback = callback;\n        }\n        var root = enqueueUpdate(fiber, update, lane);\n        if (root !== null) {\n          scheduleUpdateOnFiber(root, fiber, lane, eventTime);\n          entangleTransitions(root, fiber, lane);\n        }\n      },\n      enqueueReplaceState: function enqueueReplaceState(inst, payload, callback) {\n        var fiber = get(inst);\n        var eventTime = requestEventTime();\n        var lane = requestUpdateLane(fiber);\n        var update = createUpdate(eventTime, lane);\n        update.tag = ReplaceState;\n        update.payload = payload;\n        if (callback !== undefined && callback !== null) {\n          {\n            warnOnInvalidCallback(callback, \"replaceState\");\n          }\n          update.callback = callback;\n        }\n        var root = enqueueUpdate(fiber, update, lane);\n        if (root !== null) {\n          scheduleUpdateOnFiber(root, fiber, lane, eventTime);\n          entangleTransitions(root, fiber, lane);\n        }\n      },\n      enqueueForceUpdate: function enqueueForceUpdate(inst, callback) {\n        var fiber = get(inst);\n        var eventTime = requestEventTime();\n        var lane = requestUpdateLane(fiber);\n        var update = createUpdate(eventTime, lane);\n        update.tag = ForceUpdate;\n        if (callback !== undefined && callback !== null) {\n          {\n            warnOnInvalidCallback(callback, \"forceUpdate\");\n          }\n          update.callback = callback;\n        }\n        var root = enqueueUpdate(fiber, update, lane);\n        if (root !== null) {\n          scheduleUpdateOnFiber(root, fiber, lane, eventTime);\n          entangleTransitions(root, fiber, lane);\n        }\n      }\n    };\n    function checkShouldComponentUpdate(workInProgress, ctor, oldProps, newProps, oldState, newState, nextContext) {\n      var instance = workInProgress.stateNode;\n      if (typeof instance.shouldComponentUpdate === \"function\") {\n        var shouldUpdate = instance.shouldComponentUpdate(newProps, newState, nextContext);\n        {\n          if (shouldUpdate === undefined) {\n            error(\"%s.shouldComponentUpdate(): Returned undefined instead of a \" + \"boolean value. Make sure to return true or false.\", getComponentNameFromType(ctor) || \"Component\");\n          }\n        }\n        return shouldUpdate;\n      }\n      if (ctor.prototype && ctor.prototype.isPureReactComponent) {\n        return !shallowEqual(oldProps, newProps) || !shallowEqual(oldState, newState);\n      }\n      return true;\n    }\n    function checkClassInstance(workInProgress, ctor, newProps) {\n      var instance = workInProgress.stateNode;\n      {\n        var name = getComponentNameFromType(ctor) || \"Component\";\n        var renderPresent = instance.render;\n        if (!renderPresent) {\n          if (ctor.prototype && typeof ctor.prototype.render === \"function\") {\n            error(\"%s(...): No `render` method found on the returned component \" + \"instance: did you accidentally return an object from the constructor?\", name);\n          } else {\n            error(\"%s(...): No `render` method found on the returned component \" + \"instance: you may have forgotten to define `render`.\", name);\n          }\n        }\n        if (instance.getInitialState && !instance.getInitialState.isReactClassApproved && !instance.state) {\n          error(\"getInitialState was defined on %s, a plain JavaScript class. \" + \"This is only supported for classes created using React.createClass. \" + \"Did you mean to define a state property instead?\", name);\n        }\n        if (instance.getDefaultProps && !instance.getDefaultProps.isReactClassApproved) {\n          error(\"getDefaultProps was defined on %s, a plain JavaScript class. \" + \"This is only supported for classes created using React.createClass. \" + \"Use a static property to define defaultProps instead.\", name);\n        }\n        if (instance.propTypes) {\n          error(\"propTypes was defined as an instance property on %s. Use a static \" + \"property to define propTypes instead.\", name);\n        }\n        if (instance.contextType) {\n          error(\"contextType was defined as an instance property on %s. Use a static \" + \"property to define contextType instead.\", name);\n        }\n        {\n          if (instance.contextTypes) {\n            error(\"contextTypes was defined as an instance property on %s. Use a static \" + \"property to define contextTypes instead.\", name);\n          }\n          if (ctor.contextType && ctor.contextTypes && !didWarnAboutContextTypeAndContextTypes.has(ctor)) {\n            didWarnAboutContextTypeAndContextTypes.add(ctor);\n            error(\"%s declares both contextTypes and contextType static properties. \" + \"The legacy contextTypes property will be ignored.\", name);\n          }\n        }\n        if (typeof instance.componentShouldUpdate === \"function\") {\n          error(\"%s has a method called \" + \"componentShouldUpdate(). Did you mean shouldComponentUpdate()? \" + \"The name is phrased as a question because the function is \" + \"expected to return a value.\", name);\n        }\n        if (ctor.prototype && ctor.prototype.isPureReactComponent && typeof instance.shouldComponentUpdate !== \"undefined\") {\n          error(\"%s has a method called shouldComponentUpdate(). \" + \"shouldComponentUpdate should not be used when extending React.PureComponent. \" + \"Please extend React.Component if shouldComponentUpdate is used.\", getComponentNameFromType(ctor) || \"A pure component\");\n        }\n        if (typeof instance.componentDidUnmount === \"function\") {\n          error(\"%s has a method called \" + \"componentDidUnmount(). But there is no such lifecycle method. \" + \"Did you mean componentWillUnmount()?\", name);\n        }\n        if (typeof instance.componentDidReceiveProps === \"function\") {\n          error(\"%s has a method called \" + \"componentDidReceiveProps(). But there is no such lifecycle method. \" + \"If you meant to update the state in response to changing props, \" + \"use componentWillReceiveProps(). If you meant to fetch data or \" + \"run side-effects or mutations after React has updated the UI, use componentDidUpdate().\", name);\n        }\n        if (typeof instance.componentWillRecieveProps === \"function\") {\n          error(\"%s has a method called \" + \"componentWillRecieveProps(). Did you mean componentWillReceiveProps()?\", name);\n        }\n        if (typeof instance.UNSAFE_componentWillRecieveProps === \"function\") {\n          error(\"%s has a method called \" + \"UNSAFE_componentWillRecieveProps(). Did you mean UNSAFE_componentWillReceiveProps()?\", name);\n        }\n        var hasMutatedProps = instance.props !== newProps;\n        if (instance.props !== undefined && hasMutatedProps) {\n          error(\"%s(...): When calling super() in `%s`, make sure to pass \" + \"up the same props that your component's constructor was passed.\", name, name);\n        }\n        if (instance.defaultProps) {\n          error(\"Setting defaultProps as an instance property on %s is not supported and will be ignored.\" + \" Instead, define defaultProps as a static property on %s.\", name, name);\n        }\n        if (typeof instance.getSnapshotBeforeUpdate === \"function\" && typeof instance.componentDidUpdate !== \"function\" && !didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.has(ctor)) {\n          didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.add(ctor);\n          error(\"%s: getSnapshotBeforeUpdate() should be used with componentDidUpdate(). \" + \"This component defines getSnapshotBeforeUpdate() only.\", getComponentNameFromType(ctor));\n        }\n        if (typeof instance.getDerivedStateFromProps === \"function\") {\n          error(\"%s: getDerivedStateFromProps() is defined as an instance method \" + \"and will be ignored. Instead, declare it as a static method.\", name);\n        }\n        if (typeof instance.getDerivedStateFromError === \"function\") {\n          error(\"%s: getDerivedStateFromError() is defined as an instance method \" + \"and will be ignored. Instead, declare it as a static method.\", name);\n        }\n        if (typeof ctor.getSnapshotBeforeUpdate === \"function\") {\n          error(\"%s: getSnapshotBeforeUpdate() is defined as a static method \" + \"and will be ignored. Instead, declare it as an instance method.\", name);\n        }\n        var _state = instance.state;\n        if (_state && (typeof _state !== \"object\" || isArray(_state))) {\n          error(\"%s.state: must be set to an object or null\", name);\n        }\n        if (typeof instance.getChildContext === \"function\" && typeof ctor.childContextTypes !== \"object\") {\n          error(\"%s.getChildContext(): childContextTypes must be defined in order to \" + \"use getChildContext().\", name);\n        }\n      }\n    }\n    function adoptClassInstance(workInProgress, instance) {\n      instance.updater = classComponentUpdater;\n      workInProgress.stateNode = instance;\n      set(instance, workInProgress);\n      {\n        instance._reactInternalInstance = fakeInternalInstance;\n      }\n    }\n    function constructClassInstance(workInProgress, ctor, props) {\n      var isLegacyContextConsumer = false;\n      var unmaskedContext = emptyContextObject;\n      var context = emptyContextObject;\n      var contextType = ctor.contextType;\n      {\n        if (\"contextType\" in ctor) {\n          var isValid = contextType === null || contextType !== undefined && contextType.$$typeof === REACT_CONTEXT_TYPE && contextType._context === undefined;\n          if (!isValid && !didWarnAboutInvalidateContextType.has(ctor)) {\n            didWarnAboutInvalidateContextType.add(ctor);\n            var addendum = \"\";\n            if (contextType === undefined) {\n              addendum = \" However, it is set to undefined. \" + \"This can be caused by a typo or by mixing up named and default imports. \" + \"This can also happen due to a circular dependency, so \" + \"try moving the createContext() call to a separate file.\";\n            } else if (typeof contextType !== \"object\") {\n              addendum = \" However, it is set to a \" + typeof contextType + \".\";\n            } else if (contextType.$$typeof === REACT_PROVIDER_TYPE) {\n              addendum = \" Did you accidentally pass the Context.Provider instead?\";\n            } else if (contextType._context !== undefined) {\n              addendum = \" Did you accidentally pass the Context.Consumer instead?\";\n            } else {\n              addendum = \" However, it is set to an object with keys {\" + Object.keys(contextType).join(\", \") + \"}.\";\n            }\n            error(\"%s defines an invalid contextType. \" + \"contextType should point to the Context object returned by React.createContext().%s\", getComponentNameFromType(ctor) || \"Component\", addendum);\n          }\n        }\n      }\n      if (typeof contextType === \"object\" && contextType !== null) {\n        context = _readContext(contextType);\n      } else {\n        unmaskedContext = getUnmaskedContext(workInProgress, ctor, true);\n        var contextTypes = ctor.contextTypes;\n        isLegacyContextConsumer = contextTypes !== null && contextTypes !== undefined;\n        context = isLegacyContextConsumer ? getMaskedContext(workInProgress, unmaskedContext) : emptyContextObject;\n      }\n      var instance = new ctor(props, context);\n      var state = workInProgress.memoizedState = instance.state !== null && instance.state !== undefined ? instance.state : null;\n      adoptClassInstance(workInProgress, instance);\n      {\n        if (typeof ctor.getDerivedStateFromProps === \"function\" && state === null) {\n          var componentName = getComponentNameFromType(ctor) || \"Component\";\n          if (!didWarnAboutUninitializedState.has(componentName)) {\n            didWarnAboutUninitializedState.add(componentName);\n            error(\"`%s` uses `getDerivedStateFromProps` but its initial state is \" + \"%s. This is not recommended. Instead, define the initial state by \" + \"assigning an object to `this.state` in the constructor of `%s`. \" + \"This ensures that `getDerivedStateFromProps` arguments have a consistent shape.\", componentName, instance.state === null ? \"null\" : \"undefined\", componentName);\n          }\n        }\n        if (typeof ctor.getDerivedStateFromProps === \"function\" || typeof instance.getSnapshotBeforeUpdate === \"function\") {\n          var foundWillMountName = null;\n          var foundWillReceivePropsName = null;\n          var foundWillUpdateName = null;\n          if (typeof instance.componentWillMount === \"function\" && instance.componentWillMount.__suppressDeprecationWarning !== true) {\n            foundWillMountName = \"componentWillMount\";\n          } else if (typeof instance.UNSAFE_componentWillMount === \"function\") {\n            foundWillMountName = \"UNSAFE_componentWillMount\";\n          }\n          if (typeof instance.componentWillReceiveProps === \"function\" && instance.componentWillReceiveProps.__suppressDeprecationWarning !== true) {\n            foundWillReceivePropsName = \"componentWillReceiveProps\";\n          } else if (typeof instance.UNSAFE_componentWillReceiveProps === \"function\") {\n            foundWillReceivePropsName = \"UNSAFE_componentWillReceiveProps\";\n          }\n          if (typeof instance.componentWillUpdate === \"function\" && instance.componentWillUpdate.__suppressDeprecationWarning !== true) {\n            foundWillUpdateName = \"componentWillUpdate\";\n          } else if (typeof instance.UNSAFE_componentWillUpdate === \"function\") {\n            foundWillUpdateName = \"UNSAFE_componentWillUpdate\";\n          }\n          if (foundWillMountName !== null || foundWillReceivePropsName !== null || foundWillUpdateName !== null) {\n            var _componentName = getComponentNameFromType(ctor) || \"Component\";\n            var newApiName = typeof ctor.getDerivedStateFromProps === \"function\" ? \"getDerivedStateFromProps()\" : \"getSnapshotBeforeUpdate()\";\n            if (!didWarnAboutLegacyLifecyclesAndDerivedState.has(_componentName)) {\n              didWarnAboutLegacyLifecyclesAndDerivedState.add(_componentName);\n              error(\"Unsafe legacy lifecycles will not be called for components using new component APIs.\\n\\n\" + \"%s uses %s but also contains the following legacy lifecycles:%s%s%s\\n\\n\" + \"The above lifecycles should be removed. Learn more about this warning here:\\n\" + \"https://reactjs.org/link/unsafe-component-lifecycles\", _componentName, newApiName, foundWillMountName !== null ? \"\\n  \" + foundWillMountName : \"\", foundWillReceivePropsName !== null ? \"\\n  \" + foundWillReceivePropsName : \"\", foundWillUpdateName !== null ? \"\\n  \" + foundWillUpdateName : \"\");\n            }\n          }\n        }\n      }\n      if (isLegacyContextConsumer) {\n        cacheContext(workInProgress, unmaskedContext, context);\n      }\n      return instance;\n    }\n    function callComponentWillMount(workInProgress, instance) {\n      var oldState = instance.state;\n      if (typeof instance.componentWillMount === \"function\") {\n        instance.componentWillMount();\n      }\n      if (typeof instance.UNSAFE_componentWillMount === \"function\") {\n        instance.UNSAFE_componentWillMount();\n      }\n      if (oldState !== instance.state) {\n        {\n          error(\"%s.componentWillMount(): Assigning directly to this.state is \" + \"deprecated (except inside a component's \" + \"constructor). Use setState instead.\", getComponentNameFromFiber(workInProgress) || \"Component\");\n        }\n        classComponentUpdater.enqueueReplaceState(instance, instance.state, null);\n      }\n    }\n    function callComponentWillReceiveProps(workInProgress, instance, newProps, nextContext) {\n      var oldState = instance.state;\n      if (typeof instance.componentWillReceiveProps === \"function\") {\n        instance.componentWillReceiveProps(newProps, nextContext);\n      }\n      if (typeof instance.UNSAFE_componentWillReceiveProps === \"function\") {\n        instance.UNSAFE_componentWillReceiveProps(newProps, nextContext);\n      }\n      if (instance.state !== oldState) {\n        {\n          var componentName = getComponentNameFromFiber(workInProgress) || \"Component\";\n          if (!didWarnAboutStateAssignmentForComponent.has(componentName)) {\n            didWarnAboutStateAssignmentForComponent.add(componentName);\n            error(\"%s.componentWillReceiveProps(): Assigning directly to \" + \"this.state is deprecated (except inside a component's \" + \"constructor). Use setState instead.\", componentName);\n          }\n        }\n        classComponentUpdater.enqueueReplaceState(instance, instance.state, null);\n      }\n    }\n    function mountClassInstance(workInProgress, ctor, newProps, renderLanes) {\n      {\n        checkClassInstance(workInProgress, ctor, newProps);\n      }\n      var instance = workInProgress.stateNode;\n      instance.props = newProps;\n      instance.state = workInProgress.memoizedState;\n      instance.refs = emptyRefsObject;\n      initializeUpdateQueue(workInProgress);\n      var contextType = ctor.contextType;\n      if (typeof contextType === \"object\" && contextType !== null) {\n        instance.context = _readContext(contextType);\n      } else {\n        var unmaskedContext = getUnmaskedContext(workInProgress, ctor, true);\n        instance.context = getMaskedContext(workInProgress, unmaskedContext);\n      }\n      {\n        if (instance.state === newProps) {\n          var componentName = getComponentNameFromType(ctor) || \"Component\";\n          if (!didWarnAboutDirectlyAssigningPropsToState.has(componentName)) {\n            didWarnAboutDirectlyAssigningPropsToState.add(componentName);\n            error(\"%s: It is not recommended to assign props directly to state \" + \"because updates to props won't be reflected in state. \" + \"In most cases, it is better to use props directly.\", componentName);\n          }\n        }\n        if (workInProgress.mode & StrictLegacyMode) {\n          ReactStrictModeWarnings.recordLegacyContextWarning(workInProgress, instance);\n        }\n        {\n          ReactStrictModeWarnings.recordUnsafeLifecycleWarnings(workInProgress, instance);\n        }\n      }\n      instance.state = workInProgress.memoizedState;\n      var getDerivedStateFromProps = ctor.getDerivedStateFromProps;\n      if (typeof getDerivedStateFromProps === \"function\") {\n        applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, newProps);\n        instance.state = workInProgress.memoizedState;\n      }\n      if (typeof ctor.getDerivedStateFromProps !== \"function\" && typeof instance.getSnapshotBeforeUpdate !== \"function\" && (typeof instance.UNSAFE_componentWillMount === \"function\" || typeof instance.componentWillMount === \"function\")) {\n        callComponentWillMount(workInProgress, instance);\n        processUpdateQueue(workInProgress, newProps, instance, renderLanes);\n        instance.state = workInProgress.memoizedState;\n      }\n      if (typeof instance.componentDidMount === \"function\") {\n        var fiberFlags = Update;\n        workInProgress.flags |= fiberFlags;\n      }\n    }\n    function resumeMountClassInstance(workInProgress, ctor, newProps, renderLanes) {\n      var instance = workInProgress.stateNode;\n      var oldProps = workInProgress.memoizedProps;\n      instance.props = oldProps;\n      var oldContext = instance.context;\n      var contextType = ctor.contextType;\n      var nextContext = emptyContextObject;\n      if (typeof contextType === \"object\" && contextType !== null) {\n        nextContext = _readContext(contextType);\n      } else {\n        var nextLegacyUnmaskedContext = getUnmaskedContext(workInProgress, ctor, true);\n        nextContext = getMaskedContext(workInProgress, nextLegacyUnmaskedContext);\n      }\n      var getDerivedStateFromProps = ctor.getDerivedStateFromProps;\n      var hasNewLifecycles = typeof getDerivedStateFromProps === \"function\" || typeof instance.getSnapshotBeforeUpdate === \"function\";\n      if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillReceiveProps === \"function\" || typeof instance.componentWillReceiveProps === \"function\")) {\n        if (oldProps !== newProps || oldContext !== nextContext) {\n          callComponentWillReceiveProps(workInProgress, instance, newProps, nextContext);\n        }\n      }\n      resetHasForceUpdateBeforeProcessing();\n      var oldState = workInProgress.memoizedState;\n      var newState = instance.state = oldState;\n      processUpdateQueue(workInProgress, newProps, instance, renderLanes);\n      newState = workInProgress.memoizedState;\n      if (oldProps === newProps && oldState === newState && !hasContextChanged() && !checkHasForceUpdateAfterProcessing()) {\n        if (typeof instance.componentDidMount === \"function\") {\n          var fiberFlags = Update;\n          workInProgress.flags |= fiberFlags;\n        }\n        return false;\n      }\n      if (typeof getDerivedStateFromProps === \"function\") {\n        applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, newProps);\n        newState = workInProgress.memoizedState;\n      }\n      var shouldUpdate = checkHasForceUpdateAfterProcessing() || checkShouldComponentUpdate(workInProgress, ctor, oldProps, newProps, oldState, newState, nextContext);\n      if (shouldUpdate) {\n        if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillMount === \"function\" || typeof instance.componentWillMount === \"function\")) {\n          if (typeof instance.componentWillMount === \"function\") {\n            instance.componentWillMount();\n          }\n          if (typeof instance.UNSAFE_componentWillMount === \"function\") {\n            instance.UNSAFE_componentWillMount();\n          }\n        }\n        if (typeof instance.componentDidMount === \"function\") {\n          var _fiberFlags = Update;\n          workInProgress.flags |= _fiberFlags;\n        }\n      } else {\n        if (typeof instance.componentDidMount === \"function\") {\n          var _fiberFlags2 = Update;\n          workInProgress.flags |= _fiberFlags2;\n        }\n        workInProgress.memoizedProps = newProps;\n        workInProgress.memoizedState = newState;\n      }\n      instance.props = newProps;\n      instance.state = newState;\n      instance.context = nextContext;\n      return shouldUpdate;\n    }\n    function updateClassInstance(current, workInProgress, ctor, newProps, renderLanes) {\n      var instance = workInProgress.stateNode;\n      cloneUpdateQueue(current, workInProgress);\n      var unresolvedOldProps = workInProgress.memoizedProps;\n      var oldProps = workInProgress.type === workInProgress.elementType ? unresolvedOldProps : resolveDefaultProps(workInProgress.type, unresolvedOldProps);\n      instance.props = oldProps;\n      var unresolvedNewProps = workInProgress.pendingProps;\n      var oldContext = instance.context;\n      var contextType = ctor.contextType;\n      var nextContext = emptyContextObject;\n      if (typeof contextType === \"object\" && contextType !== null) {\n        nextContext = _readContext(contextType);\n      } else {\n        var nextUnmaskedContext = getUnmaskedContext(workInProgress, ctor, true);\n        nextContext = getMaskedContext(workInProgress, nextUnmaskedContext);\n      }\n      var getDerivedStateFromProps = ctor.getDerivedStateFromProps;\n      var hasNewLifecycles = typeof getDerivedStateFromProps === \"function\" || typeof instance.getSnapshotBeforeUpdate === \"function\";\n      if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillReceiveProps === \"function\" || typeof instance.componentWillReceiveProps === \"function\")) {\n        if (unresolvedOldProps !== unresolvedNewProps || oldContext !== nextContext) {\n          callComponentWillReceiveProps(workInProgress, instance, newProps, nextContext);\n        }\n      }\n      resetHasForceUpdateBeforeProcessing();\n      var oldState = workInProgress.memoizedState;\n      var newState = instance.state = oldState;\n      processUpdateQueue(workInProgress, newProps, instance, renderLanes);\n      newState = workInProgress.memoizedState;\n      if (unresolvedOldProps === unresolvedNewProps && oldState === newState && !hasContextChanged() && !checkHasForceUpdateAfterProcessing() && !enableLazyContextPropagation) {\n        if (typeof instance.componentDidUpdate === \"function\") {\n          if (unresolvedOldProps !== current.memoizedProps || oldState !== current.memoizedState) {\n            workInProgress.flags |= Update;\n          }\n        }\n        if (typeof instance.getSnapshotBeforeUpdate === \"function\") {\n          if (unresolvedOldProps !== current.memoizedProps || oldState !== current.memoizedState) {\n            workInProgress.flags |= Snapshot;\n          }\n        }\n        return false;\n      }\n      if (typeof getDerivedStateFromProps === \"function\") {\n        applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, newProps);\n        newState = workInProgress.memoizedState;\n      }\n      var shouldUpdate = checkHasForceUpdateAfterProcessing() || checkShouldComponentUpdate(workInProgress, ctor, oldProps, newProps, oldState, newState, nextContext) || enableLazyContextPropagation;\n      if (shouldUpdate) {\n        if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillUpdate === \"function\" || typeof instance.componentWillUpdate === \"function\")) {\n          if (typeof instance.componentWillUpdate === \"function\") {\n            instance.componentWillUpdate(newProps, newState, nextContext);\n          }\n          if (typeof instance.UNSAFE_componentWillUpdate === \"function\") {\n            instance.UNSAFE_componentWillUpdate(newProps, newState, nextContext);\n          }\n        }\n        if (typeof instance.componentDidUpdate === \"function\") {\n          workInProgress.flags |= Update;\n        }\n        if (typeof instance.getSnapshotBeforeUpdate === \"function\") {\n          workInProgress.flags |= Snapshot;\n        }\n      } else {\n        if (typeof instance.componentDidUpdate === \"function\") {\n          if (unresolvedOldProps !== current.memoizedProps || oldState !== current.memoizedState) {\n            workInProgress.flags |= Update;\n          }\n        }\n        if (typeof instance.getSnapshotBeforeUpdate === \"function\") {\n          if (unresolvedOldProps !== current.memoizedProps || oldState !== current.memoizedState) {\n            workInProgress.flags |= Snapshot;\n          }\n        }\n        workInProgress.memoizedProps = newProps;\n        workInProgress.memoizedState = newState;\n      }\n      instance.props = newProps;\n      instance.state = newState;\n      instance.context = nextContext;\n      return shouldUpdate;\n    }\n    var didWarnAboutMaps;\n    var didWarnAboutGenerators;\n    var didWarnAboutStringRefs;\n    var ownerHasKeyUseWarning;\n    var ownerHasFunctionTypeWarning;\n    var warnForMissingKey = function warnForMissingKey(child, returnFiber) {};\n    {\n      didWarnAboutMaps = false;\n      didWarnAboutGenerators = false;\n      didWarnAboutStringRefs = {};\n      ownerHasKeyUseWarning = {};\n      ownerHasFunctionTypeWarning = {};\n      warnForMissingKey = function warnForMissingKey(child, returnFiber) {\n        if (child === null || typeof child !== \"object\") {\n          return;\n        }\n        if (!child._store || child._store.validated || child.key != null) {\n          return;\n        }\n        if (typeof child._store !== \"object\") {\n          throw new Error(\"React Component in warnForMissingKey should have a _store. \" + \"This error is likely caused by a bug in React. Please file an issue.\");\n        }\n        child._store.validated = true;\n        var componentName = getComponentNameFromFiber(returnFiber) || \"Component\";\n        if (ownerHasKeyUseWarning[componentName]) {\n          return;\n        }\n        ownerHasKeyUseWarning[componentName] = true;\n        error(\"Each child in a list should have a unique \" + '\"key\" prop. See https://reactjs.org/link/warning-keys for ' + \"more information.\");\n      };\n    }\n    function coerceRef(returnFiber, current, element) {\n      var mixedRef = element.ref;\n      if (mixedRef !== null && typeof mixedRef !== \"function\" && typeof mixedRef !== \"object\") {\n        {\n          if ((returnFiber.mode & StrictLegacyMode || warnAboutStringRefs) && !(element._owner && element._self && element._owner.stateNode !== element._self)) {\n            var componentName = getComponentNameFromFiber(returnFiber) || \"Component\";\n            if (!didWarnAboutStringRefs[componentName]) {\n              {\n                error('A string ref, \"%s\", has been found within a strict mode tree. ' + \"String refs are a source of potential bugs and should be avoided. \" + \"We recommend using useRef() or createRef() instead. \" + \"Learn more about using refs safely here: \" + \"https://reactjs.org/link/strict-mode-string-ref\", mixedRef);\n              }\n              didWarnAboutStringRefs[componentName] = true;\n            }\n          }\n        }\n        if (element._owner) {\n          var owner = element._owner;\n          var inst;\n          if (owner) {\n            var ownerFiber = owner;\n            if (ownerFiber.tag !== ClassComponent) {\n              throw new Error(\"Function components cannot have string refs. \" + \"We recommend using useRef() instead. \" + \"Learn more about using refs safely here: \" + \"https://reactjs.org/link/strict-mode-string-ref\");\n            }\n            inst = ownerFiber.stateNode;\n          }\n          if (!inst) {\n            throw new Error(\"Missing owner for string ref \" + mixedRef + \". This error is likely caused by a \" + \"bug in React. Please file an issue.\");\n          }\n          var resolvedInst = inst;\n          {\n            checkPropStringCoercion(mixedRef, \"ref\");\n          }\n          var stringRef = \"\" + mixedRef;\n          if (current !== null && current.ref !== null && typeof current.ref === \"function\" && current.ref._stringRef === stringRef) {\n            return current.ref;\n          }\n          var ref = function ref(value) {\n            var refs = resolvedInst.refs;\n            if (refs === emptyRefsObject) {\n              refs = resolvedInst.refs = {};\n            }\n            if (value === null) {\n              delete refs[stringRef];\n            } else {\n              refs[stringRef] = value;\n            }\n          };\n          ref._stringRef = stringRef;\n          return ref;\n        } else {\n          if (typeof mixedRef !== \"string\") {\n            throw new Error(\"Expected ref to be a function, a string, an object returned by React.createRef(), or null.\");\n          }\n          if (!element._owner) {\n            throw new Error(\"Element ref was specified as a string (\" + mixedRef + \") but no owner was set. This could happen for one of\" + \" the following reasons:\\n\" + \"1. You may be adding a ref to a function component\\n\" + \"2. You may be adding a ref to a component that was not created inside a component's render method\\n\" + \"3. You have multiple copies of React loaded\\n\" + \"See https://reactjs.org/link/refs-must-have-owner for more information.\");\n          }\n        }\n      }\n      return mixedRef;\n    }\n    function throwOnInvalidObjectType(returnFiber, newChild) {\n      var childString = Object.prototype.toString.call(newChild);\n      throw new Error(\"Objects are not valid as a React child (found: \" + (childString === \"[object Object]\" ? \"object with keys {\" + Object.keys(newChild).join(\", \") + \"}\" : childString) + \"). \" + \"If you meant to render a collection of children, use an array \" + \"instead.\");\n    }\n    function warnOnFunctionType(returnFiber) {\n      {\n        var componentName = getComponentNameFromFiber(returnFiber) || \"Component\";\n        if (ownerHasFunctionTypeWarning[componentName]) {\n          return;\n        }\n        ownerHasFunctionTypeWarning[componentName] = true;\n        error(\"Functions are not valid as a React child. This may happen if \" + \"you return a Component instead of <Component /> from render. \" + \"Or maybe you meant to call this function rather than return it.\");\n      }\n    }\n    function resolveLazy(lazyType) {\n      var payload = lazyType._payload;\n      var init = lazyType._init;\n      return init(payload);\n    }\n    function ChildReconciler(shouldTrackSideEffects) {\n      function deleteChild(returnFiber, childToDelete) {\n        if (!shouldTrackSideEffects) {\n          return;\n        }\n        var deletions = returnFiber.deletions;\n        if (deletions === null) {\n          returnFiber.deletions = [childToDelete];\n          returnFiber.flags |= ChildDeletion;\n        } else {\n          deletions.push(childToDelete);\n        }\n      }\n      function deleteRemainingChildren(returnFiber, currentFirstChild) {\n        if (!shouldTrackSideEffects) {\n          return null;\n        }\n        var childToDelete = currentFirstChild;\n        while (childToDelete !== null) {\n          deleteChild(returnFiber, childToDelete);\n          childToDelete = childToDelete.sibling;\n        }\n        return null;\n      }\n      function mapRemainingChildren(returnFiber, currentFirstChild) {\n        var existingChildren = new Map();\n        var existingChild = currentFirstChild;\n        while (existingChild !== null) {\n          if (existingChild.key !== null) {\n            existingChildren.set(existingChild.key, existingChild);\n          } else {\n            existingChildren.set(existingChild.index, existingChild);\n          }\n          existingChild = existingChild.sibling;\n        }\n        return existingChildren;\n      }\n      function useFiber(fiber, pendingProps) {\n        var clone = createWorkInProgress(fiber, pendingProps);\n        clone.index = 0;\n        clone.sibling = null;\n        return clone;\n      }\n      function placeChild(newFiber, lastPlacedIndex, newIndex) {\n        newFiber.index = newIndex;\n        if (!shouldTrackSideEffects) {\n          newFiber.flags |= Forked;\n          return lastPlacedIndex;\n        }\n        var current = newFiber.alternate;\n        if (current !== null) {\n          var oldIndex = current.index;\n          if (oldIndex < lastPlacedIndex) {\n            newFiber.flags |= Placement;\n            return lastPlacedIndex;\n          } else {\n            return oldIndex;\n          }\n        } else {\n          newFiber.flags |= Placement;\n          return lastPlacedIndex;\n        }\n      }\n      function placeSingleChild(newFiber) {\n        if (shouldTrackSideEffects && newFiber.alternate === null) {\n          newFiber.flags |= Placement;\n        }\n        return newFiber;\n      }\n      function updateTextNode(returnFiber, current, textContent, lanes) {\n        if (current === null || current.tag !== HostText) {\n          var created = createFiberFromText(textContent, returnFiber.mode, lanes);\n          created.return = returnFiber;\n          return created;\n        } else {\n          var existing = useFiber(current, textContent);\n          existing.return = returnFiber;\n          return existing;\n        }\n      }\n      function updateElement(returnFiber, current, element, lanes) {\n        var elementType = element.type;\n        if (elementType === REACT_FRAGMENT_TYPE) {\n          return updateFragment(returnFiber, current, element.props.children, lanes, element.key);\n        }\n        if (current !== null) {\n          if (current.elementType === elementType || isCompatibleFamilyForHotReloading(current, element) || typeof elementType === \"object\" && elementType !== null && elementType.$$typeof === REACT_LAZY_TYPE && resolveLazy(elementType) === current.type) {\n            var existing = useFiber(current, element.props);\n            existing.ref = coerceRef(returnFiber, current, element);\n            existing.return = returnFiber;\n            {\n              existing._debugSource = element._source;\n              existing._debugOwner = element._owner;\n            }\n            return existing;\n          }\n        }\n        var created = createFiberFromElement(element, returnFiber.mode, lanes);\n        created.ref = coerceRef(returnFiber, current, element);\n        created.return = returnFiber;\n        return created;\n      }\n      function updatePortal(returnFiber, current, portal, lanes) {\n        if (current === null || current.tag !== HostPortal || current.stateNode.containerInfo !== portal.containerInfo || current.stateNode.implementation !== portal.implementation) {\n          var created = createFiberFromPortal(portal, returnFiber.mode, lanes);\n          created.return = returnFiber;\n          return created;\n        } else {\n          var existing = useFiber(current, portal.children || []);\n          existing.return = returnFiber;\n          return existing;\n        }\n      }\n      function updateFragment(returnFiber, current, fragment, lanes, key) {\n        if (current === null || current.tag !== Fragment) {\n          var created = createFiberFromFragment(fragment, returnFiber.mode, lanes, key);\n          created.return = returnFiber;\n          return created;\n        } else {\n          var existing = useFiber(current, fragment);\n          existing.return = returnFiber;\n          return existing;\n        }\n      }\n      function createChild(returnFiber, newChild, lanes) {\n        if (typeof newChild === \"string\" && newChild !== \"\" || typeof newChild === \"number\") {\n          var created = createFiberFromText(\"\" + newChild, returnFiber.mode, lanes);\n          created.return = returnFiber;\n          return created;\n        }\n        if (typeof newChild === \"object\" && newChild !== null) {\n          switch (newChild.$$typeof) {\n            case REACT_ELEMENT_TYPE:\n              {\n                var _created = createFiberFromElement(newChild, returnFiber.mode, lanes);\n                _created.ref = coerceRef(returnFiber, null, newChild);\n                _created.return = returnFiber;\n                return _created;\n              }\n            case REACT_PORTAL_TYPE:\n              {\n                var _created2 = createFiberFromPortal(newChild, returnFiber.mode, lanes);\n                _created2.return = returnFiber;\n                return _created2;\n              }\n            case REACT_LAZY_TYPE:\n              {\n                var payload = newChild._payload;\n                var init = newChild._init;\n                return createChild(returnFiber, init(payload), lanes);\n              }\n          }\n          if (isArray(newChild) || getIteratorFn(newChild)) {\n            var _created3 = createFiberFromFragment(newChild, returnFiber.mode, lanes, null);\n            _created3.return = returnFiber;\n            return _created3;\n          }\n          throwOnInvalidObjectType(returnFiber, newChild);\n        }\n        {\n          if (typeof newChild === \"function\") {\n            warnOnFunctionType(returnFiber);\n          }\n        }\n        return null;\n      }\n      function updateSlot(returnFiber, oldFiber, newChild, lanes) {\n        var key = oldFiber !== null ? oldFiber.key : null;\n        if (typeof newChild === \"string\" && newChild !== \"\" || typeof newChild === \"number\") {\n          if (key !== null) {\n            return null;\n          }\n          return updateTextNode(returnFiber, oldFiber, \"\" + newChild, lanes);\n        }\n        if (typeof newChild === \"object\" && newChild !== null) {\n          switch (newChild.$$typeof) {\n            case REACT_ELEMENT_TYPE:\n              {\n                if (newChild.key === key) {\n                  return updateElement(returnFiber, oldFiber, newChild, lanes);\n                } else {\n                  return null;\n                }\n              }\n            case REACT_PORTAL_TYPE:\n              {\n                if (newChild.key === key) {\n                  return updatePortal(returnFiber, oldFiber, newChild, lanes);\n                } else {\n                  return null;\n                }\n              }\n            case REACT_LAZY_TYPE:\n              {\n                var payload = newChild._payload;\n                var init = newChild._init;\n                return updateSlot(returnFiber, oldFiber, init(payload), lanes);\n              }\n          }\n          if (isArray(newChild) || getIteratorFn(newChild)) {\n            if (key !== null) {\n              return null;\n            }\n            return updateFragment(returnFiber, oldFiber, newChild, lanes, null);\n          }\n          throwOnInvalidObjectType(returnFiber, newChild);\n        }\n        {\n          if (typeof newChild === \"function\") {\n            warnOnFunctionType(returnFiber);\n          }\n        }\n        return null;\n      }\n      function updateFromMap(existingChildren, returnFiber, newIdx, newChild, lanes) {\n        if (typeof newChild === \"string\" && newChild !== \"\" || typeof newChild === \"number\") {\n          var matchedFiber = existingChildren.get(newIdx) || null;\n          return updateTextNode(returnFiber, matchedFiber, \"\" + newChild, lanes);\n        }\n        if (typeof newChild === \"object\" && newChild !== null) {\n          switch (newChild.$$typeof) {\n            case REACT_ELEMENT_TYPE:\n              {\n                var _matchedFiber = existingChildren.get(newChild.key === null ? newIdx : newChild.key) || null;\n                return updateElement(returnFiber, _matchedFiber, newChild, lanes);\n              }\n            case REACT_PORTAL_TYPE:\n              {\n                var _matchedFiber2 = existingChildren.get(newChild.key === null ? newIdx : newChild.key) || null;\n                return updatePortal(returnFiber, _matchedFiber2, newChild, lanes);\n              }\n            case REACT_LAZY_TYPE:\n              var payload = newChild._payload;\n              var init = newChild._init;\n              return updateFromMap(existingChildren, returnFiber, newIdx, init(payload), lanes);\n          }\n          if (isArray(newChild) || getIteratorFn(newChild)) {\n            var _matchedFiber3 = existingChildren.get(newIdx) || null;\n            return updateFragment(returnFiber, _matchedFiber3, newChild, lanes, null);\n          }\n          throwOnInvalidObjectType(returnFiber, newChild);\n        }\n        {\n          if (typeof newChild === \"function\") {\n            warnOnFunctionType(returnFiber);\n          }\n        }\n        return null;\n      }\n      function warnOnInvalidKey(child, knownKeys, returnFiber) {\n        {\n          if (typeof child !== \"object\" || child === null) {\n            return knownKeys;\n          }\n          switch (child.$$typeof) {\n            case REACT_ELEMENT_TYPE:\n            case REACT_PORTAL_TYPE:\n              warnForMissingKey(child, returnFiber);\n              var key = child.key;\n              if (typeof key !== \"string\") {\n                break;\n              }\n              if (knownKeys === null) {\n                knownKeys = new Set();\n                knownKeys.add(key);\n                break;\n              }\n              if (!knownKeys.has(key)) {\n                knownKeys.add(key);\n                break;\n              }\n              error(\"Encountered two children with the same key, `%s`. \" + \"Keys should be unique so that components maintain their identity \" + \"across updates. Non-unique keys may cause children to be \" + \"duplicated and/or omitted — the behavior is unsupported and \" + \"could change in a future version.\", key);\n              break;\n            case REACT_LAZY_TYPE:\n              var payload = child._payload;\n              var init = child._init;\n              warnOnInvalidKey(init(payload), knownKeys, returnFiber);\n              break;\n          }\n        }\n        return knownKeys;\n      }\n      function reconcileChildrenArray(returnFiber, currentFirstChild, newChildren, lanes) {\n        {\n          var knownKeys = null;\n          for (var i = 0; i < newChildren.length; i++) {\n            var child = newChildren[i];\n            knownKeys = warnOnInvalidKey(child, knownKeys, returnFiber);\n          }\n        }\n        var resultingFirstChild = null;\n        var previousNewFiber = null;\n        var oldFiber = currentFirstChild;\n        var lastPlacedIndex = 0;\n        var newIdx = 0;\n        var nextOldFiber = null;\n        for (; oldFiber !== null && newIdx < newChildren.length; newIdx++) {\n          if (oldFiber.index > newIdx) {\n            nextOldFiber = oldFiber;\n            oldFiber = null;\n          } else {\n            nextOldFiber = oldFiber.sibling;\n          }\n          var newFiber = updateSlot(returnFiber, oldFiber, newChildren[newIdx], lanes);\n          if (newFiber === null) {\n            if (oldFiber === null) {\n              oldFiber = nextOldFiber;\n            }\n            break;\n          }\n          if (shouldTrackSideEffects) {\n            if (oldFiber && newFiber.alternate === null) {\n              deleteChild(returnFiber, oldFiber);\n            }\n          }\n          lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);\n          if (previousNewFiber === null) {\n            resultingFirstChild = newFiber;\n          } else {\n            previousNewFiber.sibling = newFiber;\n          }\n          previousNewFiber = newFiber;\n          oldFiber = nextOldFiber;\n        }\n        if (newIdx === newChildren.length) {\n          deleteRemainingChildren(returnFiber, oldFiber);\n          return resultingFirstChild;\n        }\n        if (oldFiber === null) {\n          for (; newIdx < newChildren.length; newIdx++) {\n            var _newFiber = createChild(returnFiber, newChildren[newIdx], lanes);\n            if (_newFiber === null) {\n              continue;\n            }\n            lastPlacedIndex = placeChild(_newFiber, lastPlacedIndex, newIdx);\n            if (previousNewFiber === null) {\n              resultingFirstChild = _newFiber;\n            } else {\n              previousNewFiber.sibling = _newFiber;\n            }\n            previousNewFiber = _newFiber;\n          }\n          return resultingFirstChild;\n        }\n        var existingChildren = mapRemainingChildren(returnFiber, oldFiber);\n        for (; newIdx < newChildren.length; newIdx++) {\n          var _newFiber2 = updateFromMap(existingChildren, returnFiber, newIdx, newChildren[newIdx], lanes);\n          if (_newFiber2 !== null) {\n            if (shouldTrackSideEffects) {\n              if (_newFiber2.alternate !== null) {\n                existingChildren.delete(_newFiber2.key === null ? newIdx : _newFiber2.key);\n              }\n            }\n            lastPlacedIndex = placeChild(_newFiber2, lastPlacedIndex, newIdx);\n            if (previousNewFiber === null) {\n              resultingFirstChild = _newFiber2;\n            } else {\n              previousNewFiber.sibling = _newFiber2;\n            }\n            previousNewFiber = _newFiber2;\n          }\n        }\n        if (shouldTrackSideEffects) {\n          existingChildren.forEach(function (child) {\n            return deleteChild(returnFiber, child);\n          });\n        }\n        return resultingFirstChild;\n      }\n      function reconcileChildrenIterator(returnFiber, currentFirstChild, newChildrenIterable, lanes) {\n        var iteratorFn = getIteratorFn(newChildrenIterable);\n        if (typeof iteratorFn !== \"function\") {\n          throw new Error(\"An object is not an iterable. This error is likely caused by a bug in \" + \"React. Please file an issue.\");\n        }\n        {\n          if (typeof Symbol === \"function\" && newChildrenIterable[Symbol.toStringTag] === \"Generator\") {\n            if (!didWarnAboutGenerators) {\n              error(\"Using Generators as children is unsupported and will likely yield \" + \"unexpected results because enumerating a generator mutates it. \" + \"You may convert it to an array with `Array.from()` or the \" + \"`[...spread]` operator before rendering. Keep in mind \" + \"you might need to polyfill these features for older browsers.\");\n            }\n            didWarnAboutGenerators = true;\n          }\n          if (newChildrenIterable.entries === iteratorFn) {\n            if (!didWarnAboutMaps) {\n              error(\"Using Maps as children is not supported. \" + \"Use an array of keyed ReactElements instead.\");\n            }\n            didWarnAboutMaps = true;\n          }\n          var _newChildren = iteratorFn.call(newChildrenIterable);\n          if (_newChildren) {\n            var knownKeys = null;\n            var _step = _newChildren.next();\n            for (; !_step.done; _step = _newChildren.next()) {\n              var child = _step.value;\n              knownKeys = warnOnInvalidKey(child, knownKeys, returnFiber);\n            }\n          }\n        }\n        var newChildren = iteratorFn.call(newChildrenIterable);\n        if (newChildren == null) {\n          throw new Error(\"An iterable object provided no iterator.\");\n        }\n        var resultingFirstChild = null;\n        var previousNewFiber = null;\n        var oldFiber = currentFirstChild;\n        var lastPlacedIndex = 0;\n        var newIdx = 0;\n        var nextOldFiber = null;\n        var step = newChildren.next();\n        for (; oldFiber !== null && !step.done; newIdx++, step = newChildren.next()) {\n          if (oldFiber.index > newIdx) {\n            nextOldFiber = oldFiber;\n            oldFiber = null;\n          } else {\n            nextOldFiber = oldFiber.sibling;\n          }\n          var newFiber = updateSlot(returnFiber, oldFiber, step.value, lanes);\n          if (newFiber === null) {\n            if (oldFiber === null) {\n              oldFiber = nextOldFiber;\n            }\n            break;\n          }\n          if (shouldTrackSideEffects) {\n            if (oldFiber && newFiber.alternate === null) {\n              deleteChild(returnFiber, oldFiber);\n            }\n          }\n          lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);\n          if (previousNewFiber === null) {\n            resultingFirstChild = newFiber;\n          } else {\n            previousNewFiber.sibling = newFiber;\n          }\n          previousNewFiber = newFiber;\n          oldFiber = nextOldFiber;\n        }\n        if (step.done) {\n          deleteRemainingChildren(returnFiber, oldFiber);\n          return resultingFirstChild;\n        }\n        if (oldFiber === null) {\n          for (; !step.done; newIdx++, step = newChildren.next()) {\n            var _newFiber3 = createChild(returnFiber, step.value, lanes);\n            if (_newFiber3 === null) {\n              continue;\n            }\n            lastPlacedIndex = placeChild(_newFiber3, lastPlacedIndex, newIdx);\n            if (previousNewFiber === null) {\n              resultingFirstChild = _newFiber3;\n            } else {\n              previousNewFiber.sibling = _newFiber3;\n            }\n            previousNewFiber = _newFiber3;\n          }\n          return resultingFirstChild;\n        }\n        var existingChildren = mapRemainingChildren(returnFiber, oldFiber);\n        for (; !step.done; newIdx++, step = newChildren.next()) {\n          var _newFiber4 = updateFromMap(existingChildren, returnFiber, newIdx, step.value, lanes);\n          if (_newFiber4 !== null) {\n            if (shouldTrackSideEffects) {\n              if (_newFiber4.alternate !== null) {\n                existingChildren.delete(_newFiber4.key === null ? newIdx : _newFiber4.key);\n              }\n            }\n            lastPlacedIndex = placeChild(_newFiber4, lastPlacedIndex, newIdx);\n            if (previousNewFiber === null) {\n              resultingFirstChild = _newFiber4;\n            } else {\n              previousNewFiber.sibling = _newFiber4;\n            }\n            previousNewFiber = _newFiber4;\n          }\n        }\n        if (shouldTrackSideEffects) {\n          existingChildren.forEach(function (child) {\n            return deleteChild(returnFiber, child);\n          });\n        }\n        return resultingFirstChild;\n      }\n      function reconcileSingleTextNode(returnFiber, currentFirstChild, textContent, lanes) {\n        if (currentFirstChild !== null && currentFirstChild.tag === HostText) {\n          deleteRemainingChildren(returnFiber, currentFirstChild.sibling);\n          var existing = useFiber(currentFirstChild, textContent);\n          existing.return = returnFiber;\n          return existing;\n        }\n        deleteRemainingChildren(returnFiber, currentFirstChild);\n        var created = createFiberFromText(textContent, returnFiber.mode, lanes);\n        created.return = returnFiber;\n        return created;\n      }\n      function reconcileSingleElement(returnFiber, currentFirstChild, element, lanes) {\n        var key = element.key;\n        var child = currentFirstChild;\n        while (child !== null) {\n          if (child.key === key) {\n            var elementType = element.type;\n            if (elementType === REACT_FRAGMENT_TYPE) {\n              if (child.tag === Fragment) {\n                deleteRemainingChildren(returnFiber, child.sibling);\n                var existing = useFiber(child, element.props.children);\n                existing.return = returnFiber;\n                {\n                  existing._debugSource = element._source;\n                  existing._debugOwner = element._owner;\n                }\n                return existing;\n              }\n            } else {\n              if (child.elementType === elementType || isCompatibleFamilyForHotReloading(child, element) || typeof elementType === \"object\" && elementType !== null && elementType.$$typeof === REACT_LAZY_TYPE && resolveLazy(elementType) === child.type) {\n                deleteRemainingChildren(returnFiber, child.sibling);\n                var _existing = useFiber(child, element.props);\n                _existing.ref = coerceRef(returnFiber, child, element);\n                _existing.return = returnFiber;\n                {\n                  _existing._debugSource = element._source;\n                  _existing._debugOwner = element._owner;\n                }\n                return _existing;\n              }\n            }\n            deleteRemainingChildren(returnFiber, child);\n            break;\n          } else {\n            deleteChild(returnFiber, child);\n          }\n          child = child.sibling;\n        }\n        if (element.type === REACT_FRAGMENT_TYPE) {\n          var created = createFiberFromFragment(element.props.children, returnFiber.mode, lanes, element.key);\n          created.return = returnFiber;\n          return created;\n        } else {\n          var _created4 = createFiberFromElement(element, returnFiber.mode, lanes);\n          _created4.ref = coerceRef(returnFiber, currentFirstChild, element);\n          _created4.return = returnFiber;\n          return _created4;\n        }\n      }\n      function reconcileSinglePortal(returnFiber, currentFirstChild, portal, lanes) {\n        var key = portal.key;\n        var child = currentFirstChild;\n        while (child !== null) {\n          if (child.key === key) {\n            if (child.tag === HostPortal && child.stateNode.containerInfo === portal.containerInfo && child.stateNode.implementation === portal.implementation) {\n              deleteRemainingChildren(returnFiber, child.sibling);\n              var existing = useFiber(child, portal.children || []);\n              existing.return = returnFiber;\n              return existing;\n            } else {\n              deleteRemainingChildren(returnFiber, child);\n              break;\n            }\n          } else {\n            deleteChild(returnFiber, child);\n          }\n          child = child.sibling;\n        }\n        var created = createFiberFromPortal(portal, returnFiber.mode, lanes);\n        created.return = returnFiber;\n        return created;\n      }\n      function reconcileChildFibers(returnFiber, currentFirstChild, newChild, lanes) {\n        var isUnkeyedTopLevelFragment = typeof newChild === \"object\" && newChild !== null && newChild.type === REACT_FRAGMENT_TYPE && newChild.key === null;\n        if (isUnkeyedTopLevelFragment) {\n          newChild = newChild.props.children;\n        }\n        if (typeof newChild === \"object\" && newChild !== null) {\n          switch (newChild.$$typeof) {\n            case REACT_ELEMENT_TYPE:\n              return placeSingleChild(reconcileSingleElement(returnFiber, currentFirstChild, newChild, lanes));\n            case REACT_PORTAL_TYPE:\n              return placeSingleChild(reconcileSinglePortal(returnFiber, currentFirstChild, newChild, lanes));\n            case REACT_LAZY_TYPE:\n              var payload = newChild._payload;\n              var init = newChild._init;\n              return reconcileChildFibers(returnFiber, currentFirstChild, init(payload), lanes);\n          }\n          if (isArray(newChild)) {\n            return reconcileChildrenArray(returnFiber, currentFirstChild, newChild, lanes);\n          }\n          if (getIteratorFn(newChild)) {\n            return reconcileChildrenIterator(returnFiber, currentFirstChild, newChild, lanes);\n          }\n          throwOnInvalidObjectType(returnFiber, newChild);\n        }\n        if (typeof newChild === \"string\" && newChild !== \"\" || typeof newChild === \"number\") {\n          return placeSingleChild(reconcileSingleTextNode(returnFiber, currentFirstChild, \"\" + newChild, lanes));\n        }\n        {\n          if (typeof newChild === \"function\") {\n            warnOnFunctionType(returnFiber);\n          }\n        }\n        return deleteRemainingChildren(returnFiber, currentFirstChild);\n      }\n      return reconcileChildFibers;\n    }\n    var reconcileChildFibers = ChildReconciler(true);\n    var mountChildFibers = ChildReconciler(false);\n    function cloneChildFibers(current, workInProgress) {\n      if (current !== null && workInProgress.child !== current.child) {\n        throw new Error(\"Resuming work not yet implemented.\");\n      }\n      if (workInProgress.child === null) {\n        return;\n      }\n      var currentChild = workInProgress.child;\n      var newChild = createWorkInProgress(currentChild, currentChild.pendingProps);\n      workInProgress.child = newChild;\n      newChild.return = workInProgress;\n      while (currentChild.sibling !== null) {\n        currentChild = currentChild.sibling;\n        newChild = newChild.sibling = createWorkInProgress(currentChild, currentChild.pendingProps);\n        newChild.return = workInProgress;\n      }\n      newChild.sibling = null;\n    }\n    function resetChildFibers(workInProgress, lanes) {\n      var child = workInProgress.child;\n      while (child !== null) {\n        resetWorkInProgress(child, lanes);\n        child = child.sibling;\n      }\n    }\n    var NO_CONTEXT = {};\n    var contextStackCursor$1 = createCursor(NO_CONTEXT);\n    var contextFiberStackCursor = createCursor(NO_CONTEXT);\n    var rootInstanceStackCursor = createCursor(NO_CONTEXT);\n    function requiredContext(c) {\n      if (c === NO_CONTEXT) {\n        throw new Error(\"Expected host context to exist. This error is likely caused by a bug \" + \"in React. Please file an issue.\");\n      }\n      return c;\n    }\n    function getRootHostContainer() {\n      var rootInstance = requiredContext(rootInstanceStackCursor.current);\n      return rootInstance;\n    }\n    function pushHostContainer(fiber, nextRootInstance) {\n      push(rootInstanceStackCursor, nextRootInstance, fiber);\n      push(contextFiberStackCursor, fiber, fiber);\n      push(contextStackCursor$1, NO_CONTEXT, fiber);\n      var nextRootContext = getRootHostContext();\n      pop(contextStackCursor$1, fiber);\n      push(contextStackCursor$1, nextRootContext, fiber);\n    }\n    function popHostContainer(fiber) {\n      pop(contextStackCursor$1, fiber);\n      pop(contextFiberStackCursor, fiber);\n      pop(rootInstanceStackCursor, fiber);\n    }\n    function getHostContext() {\n      var context = requiredContext(contextStackCursor$1.current);\n      return context;\n    }\n    function pushHostContext(fiber) {\n      var rootInstance = requiredContext(rootInstanceStackCursor.current);\n      var context = requiredContext(contextStackCursor$1.current);\n      var nextContext = getChildHostContext(context, fiber.type);\n      if (context === nextContext) {\n        return;\n      }\n      push(contextFiberStackCursor, fiber, fiber);\n      push(contextStackCursor$1, nextContext, fiber);\n    }\n    function popHostContext(fiber) {\n      if (contextFiberStackCursor.current !== fiber) {\n        return;\n      }\n      pop(contextStackCursor$1, fiber);\n      pop(contextFiberStackCursor, fiber);\n    }\n    var DefaultSuspenseContext = 0;\n    var SubtreeSuspenseContextMask = 1;\n    var InvisibleParentSuspenseContext = 1;\n    var ForceSuspenseFallback = 2;\n    var suspenseStackCursor = createCursor(DefaultSuspenseContext);\n    function hasSuspenseContext(parentContext, flag) {\n      return (parentContext & flag) !== 0;\n    }\n    function setDefaultShallowSuspenseContext(parentContext) {\n      return parentContext & SubtreeSuspenseContextMask;\n    }\n    function setShallowSuspenseContext(parentContext, shallowContext) {\n      return parentContext & SubtreeSuspenseContextMask | shallowContext;\n    }\n    function addSubtreeSuspenseContext(parentContext, subtreeContext) {\n      return parentContext | subtreeContext;\n    }\n    function pushSuspenseContext(fiber, newContext) {\n      push(suspenseStackCursor, newContext, fiber);\n    }\n    function popSuspenseContext(fiber) {\n      pop(suspenseStackCursor, fiber);\n    }\n    function shouldCaptureSuspense(workInProgress, hasInvisibleParent) {\n      var nextState = workInProgress.memoizedState;\n      if (nextState !== null) {\n        if (nextState.dehydrated !== null) {\n          return true;\n        }\n        return false;\n      }\n      var props = workInProgress.memoizedProps;\n      {\n        return true;\n      }\n    }\n    function findFirstSuspended(row) {\n      var node = row;\n      while (node !== null) {\n        if (node.tag === SuspenseComponent) {\n          var state = node.memoizedState;\n          if (state !== null) {\n            var dehydrated = state.dehydrated;\n            if (dehydrated === null || isSuspenseInstancePending() || isSuspenseInstanceFallback()) {\n              return node;\n            }\n          }\n        } else if (node.tag === SuspenseListComponent && node.memoizedProps.revealOrder !== undefined) {\n          var didSuspend = (node.flags & DidCapture) !== NoFlags;\n          if (didSuspend) {\n            return node;\n          }\n        } else if (node.child !== null) {\n          node.child.return = node;\n          node = node.child;\n          continue;\n        }\n        if (node === row) {\n          return null;\n        }\n        while (node.sibling === null) {\n          if (node.return === null || node.return === row) {\n            return null;\n          }\n          node = node.return;\n        }\n        node.sibling.return = node.return;\n        node = node.sibling;\n      }\n      return null;\n    }\n    var NoFlags$1 = 0;\n    var HasEffect = 1;\n    var Insertion = 2;\n    var Layout = 4;\n    var Passive$1 = 8;\n    var workInProgressSources = [];\n    function resetWorkInProgressVersions() {\n      for (var i = 0; i < workInProgressSources.length; i++) {\n        var mutableSource = workInProgressSources[i];\n        {\n          mutableSource._workInProgressVersionSecondary = null;\n        }\n      }\n      workInProgressSources.length = 0;\n    }\n    var ReactCurrentDispatcher$1 = ReactSharedInternals.ReactCurrentDispatcher,\n      ReactCurrentBatchConfig$1 = ReactSharedInternals.ReactCurrentBatchConfig;\n    var didWarnAboutMismatchedHooksForComponent;\n    var didWarnUncachedGetSnapshot;\n    {\n      didWarnAboutMismatchedHooksForComponent = new Set();\n    }\n    var renderLanes = NoLanes;\n    var currentlyRenderingFiber$1 = null;\n    var currentHook = null;\n    var workInProgressHook = null;\n    var didScheduleRenderPhaseUpdate = false;\n    var didScheduleRenderPhaseUpdateDuringThisPass = false;\n    var globalClientIdCounter = 0;\n    var RE_RENDER_LIMIT = 25;\n    var currentHookNameInDev = null;\n    var hookTypesDev = null;\n    var hookTypesUpdateIndexDev = -1;\n    var ignorePreviousDependencies = false;\n    function mountHookTypesDev() {\n      {\n        var hookName = currentHookNameInDev;\n        if (hookTypesDev === null) {\n          hookTypesDev = [hookName];\n        } else {\n          hookTypesDev.push(hookName);\n        }\n      }\n    }\n    function updateHookTypesDev() {\n      {\n        var hookName = currentHookNameInDev;\n        if (hookTypesDev !== null) {\n          hookTypesUpdateIndexDev++;\n          if (hookTypesDev[hookTypesUpdateIndexDev] !== hookName) {\n            warnOnHookMismatchInDev(hookName);\n          }\n        }\n      }\n    }\n    function checkDepsAreArrayDev(deps) {\n      {\n        if (deps !== undefined && deps !== null && !isArray(deps)) {\n          error(\"%s received a final argument that is not an array (instead, received `%s`). When \" + \"specified, the final argument must be an array.\", currentHookNameInDev, typeof deps);\n        }\n      }\n    }\n    function warnOnHookMismatchInDev(currentHookName) {\n      {\n        var componentName = getComponentNameFromFiber(currentlyRenderingFiber$1);\n        if (!didWarnAboutMismatchedHooksForComponent.has(componentName)) {\n          didWarnAboutMismatchedHooksForComponent.add(componentName);\n          if (hookTypesDev !== null) {\n            var table = \"\";\n            var secondColumnStart = 30;\n            for (var i = 0; i <= hookTypesUpdateIndexDev; i++) {\n              var oldHookName = hookTypesDev[i];\n              var newHookName = i === hookTypesUpdateIndexDev ? currentHookName : oldHookName;\n              var row = i + 1 + \". \" + oldHookName;\n              while (row.length < secondColumnStart) {\n                row += \" \";\n              }\n              row += newHookName + \"\\n\";\n              table += row;\n            }\n            error(\"React has detected a change in the order of Hooks called by %s. \" + \"This will lead to bugs and errors if not fixed. \" + \"For more information, read the Rules of Hooks: https://reactjs.org/link/rules-of-hooks\\n\\n\" + \"   Previous render            Next render\\n\" + \"   ------------------------------------------------------\\n\" + \"%s\" + \"   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\", componentName, table);\n          }\n        }\n      }\n    }\n    function throwInvalidHookError() {\n      throw new Error(\"Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for\" + \" one of the following reasons:\\n\" + \"1. You might have mismatching versions of React and the renderer (such as React DOM)\\n\" + \"2. You might be breaking the Rules of Hooks\\n\" + \"3. You might have more than one copy of React in the same app\\n\" + \"See https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.\");\n    }\n    function areHookInputsEqual(nextDeps, prevDeps) {\n      {\n        if (ignorePreviousDependencies) {\n          return false;\n        }\n      }\n      if (prevDeps === null) {\n        {\n          error(\"%s received a final argument during this render, but not during \" + \"the previous render. Even though the final argument is optional, \" + \"its type cannot change between renders.\", currentHookNameInDev);\n        }\n        return false;\n      }\n      {\n        if (nextDeps.length !== prevDeps.length) {\n          error(\"The final argument passed to %s changed size between renders. The \" + \"order and size of this array must remain constant.\\n\\n\" + \"Previous: %s\\n\" + \"Incoming: %s\", currentHookNameInDev, \"[\" + prevDeps.join(\", \") + \"]\", \"[\" + nextDeps.join(\", \") + \"]\");\n        }\n      }\n      for (var i = 0; i < prevDeps.length && i < nextDeps.length; i++) {\n        if (objectIs(nextDeps[i], prevDeps[i])) {\n          continue;\n        }\n        return false;\n      }\n      return true;\n    }\n    function renderWithHooks(current, workInProgress, Component, props, secondArg, nextRenderLanes) {\n      renderLanes = nextRenderLanes;\n      currentlyRenderingFiber$1 = workInProgress;\n      {\n        hookTypesDev = current !== null ? current._debugHookTypes : null;\n        hookTypesUpdateIndexDev = -1;\n        ignorePreviousDependencies = current !== null && current.type !== workInProgress.type;\n      }\n      workInProgress.memoizedState = null;\n      workInProgress.updateQueue = null;\n      workInProgress.lanes = NoLanes;\n      {\n        if (current !== null && current.memoizedState !== null) {\n          ReactCurrentDispatcher$1.current = HooksDispatcherOnUpdateInDEV;\n        } else if (hookTypesDev !== null) {\n          ReactCurrentDispatcher$1.current = HooksDispatcherOnMountWithHookTypesInDEV;\n        } else {\n          ReactCurrentDispatcher$1.current = HooksDispatcherOnMountInDEV;\n        }\n      }\n      var children = Component(props, secondArg);\n      if (didScheduleRenderPhaseUpdateDuringThisPass) {\n        var numberOfReRenders = 0;\n        do {\n          didScheduleRenderPhaseUpdateDuringThisPass = false;\n          if (numberOfReRenders >= RE_RENDER_LIMIT) {\n            throw new Error(\"Too many re-renders. React limits the number of renders to prevent \" + \"an infinite loop.\");\n          }\n          numberOfReRenders += 1;\n          {\n            ignorePreviousDependencies = false;\n          }\n          currentHook = null;\n          workInProgressHook = null;\n          workInProgress.updateQueue = null;\n          {\n            hookTypesUpdateIndexDev = -1;\n          }\n          ReactCurrentDispatcher$1.current = HooksDispatcherOnRerenderInDEV;\n          children = Component(props, secondArg);\n        } while (didScheduleRenderPhaseUpdateDuringThisPass);\n      }\n      ReactCurrentDispatcher$1.current = ContextOnlyDispatcher;\n      {\n        workInProgress._debugHookTypes = hookTypesDev;\n      }\n      var didRenderTooFewHooks = currentHook !== null && currentHook.next !== null;\n      renderLanes = NoLanes;\n      currentlyRenderingFiber$1 = null;\n      currentHook = null;\n      workInProgressHook = null;\n      {\n        currentHookNameInDev = null;\n        hookTypesDev = null;\n        hookTypesUpdateIndexDev = -1;\n        if (current !== null && (current.flags & StaticMask) !== (workInProgress.flags & StaticMask) && (current.mode & ConcurrentMode) !== NoMode) {\n          error(\"Internal React error: Expected static flag was missing. Please \" + \"notify the React team.\");\n        }\n      }\n      didScheduleRenderPhaseUpdate = false;\n      if (didRenderTooFewHooks) {\n        throw new Error(\"Rendered fewer hooks than expected. This may be caused by an accidental \" + \"early return statement.\");\n      }\n      return children;\n    }\n    function bailoutHooks(current, workInProgress, lanes) {\n      workInProgress.updateQueue = current.updateQueue;\n      {\n        workInProgress.flags &= ~(Passive | Update);\n      }\n      current.lanes = removeLanes(current.lanes, lanes);\n    }\n    function resetHooksAfterThrow() {\n      ReactCurrentDispatcher$1.current = ContextOnlyDispatcher;\n      if (didScheduleRenderPhaseUpdate) {\n        var hook = currentlyRenderingFiber$1.memoizedState;\n        while (hook !== null) {\n          var queue = hook.queue;\n          if (queue !== null) {\n            queue.pending = null;\n          }\n          hook = hook.next;\n        }\n        didScheduleRenderPhaseUpdate = false;\n      }\n      renderLanes = NoLanes;\n      currentlyRenderingFiber$1 = null;\n      currentHook = null;\n      workInProgressHook = null;\n      {\n        hookTypesDev = null;\n        hookTypesUpdateIndexDev = -1;\n        currentHookNameInDev = null;\n        isUpdatingOpaqueValueInRenderPhase = false;\n      }\n      didScheduleRenderPhaseUpdateDuringThisPass = false;\n    }\n    function mountWorkInProgressHook() {\n      var hook = {\n        memoizedState: null,\n        baseState: null,\n        baseQueue: null,\n        queue: null,\n        next: null\n      };\n      if (workInProgressHook === null) {\n        currentlyRenderingFiber$1.memoizedState = workInProgressHook = hook;\n      } else {\n        workInProgressHook = workInProgressHook.next = hook;\n      }\n      return workInProgressHook;\n    }\n    function updateWorkInProgressHook() {\n      var nextCurrentHook;\n      if (currentHook === null) {\n        var current = currentlyRenderingFiber$1.alternate;\n        if (current !== null) {\n          nextCurrentHook = current.memoizedState;\n        } else {\n          nextCurrentHook = null;\n        }\n      } else {\n        nextCurrentHook = currentHook.next;\n      }\n      var nextWorkInProgressHook;\n      if (workInProgressHook === null) {\n        nextWorkInProgressHook = currentlyRenderingFiber$1.memoizedState;\n      } else {\n        nextWorkInProgressHook = workInProgressHook.next;\n      }\n      if (nextWorkInProgressHook !== null) {\n        workInProgressHook = nextWorkInProgressHook;\n        nextWorkInProgressHook = workInProgressHook.next;\n        currentHook = nextCurrentHook;\n      } else {\n        if (nextCurrentHook === null) {\n          throw new Error(\"Rendered more hooks than during the previous render.\");\n        }\n        currentHook = nextCurrentHook;\n        var newHook = {\n          memoizedState: currentHook.memoizedState,\n          baseState: currentHook.baseState,\n          baseQueue: currentHook.baseQueue,\n          queue: currentHook.queue,\n          next: null\n        };\n        if (workInProgressHook === null) {\n          currentlyRenderingFiber$1.memoizedState = workInProgressHook = newHook;\n        } else {\n          workInProgressHook = workInProgressHook.next = newHook;\n        }\n      }\n      return workInProgressHook;\n    }\n    function createFunctionComponentUpdateQueue() {\n      return {\n        lastEffect: null,\n        stores: null\n      };\n    }\n    function basicStateReducer(state, action) {\n      return typeof action === \"function\" ? action(state) : action;\n    }\n    function mountReducer(reducer, initialArg, init) {\n      var hook = mountWorkInProgressHook();\n      var initialState;\n      if (init !== undefined) {\n        initialState = init(initialArg);\n      } else {\n        initialState = initialArg;\n      }\n      hook.memoizedState = hook.baseState = initialState;\n      var queue = {\n        pending: null,\n        interleaved: null,\n        lanes: NoLanes,\n        dispatch: null,\n        lastRenderedReducer: reducer,\n        lastRenderedState: initialState\n      };\n      hook.queue = queue;\n      var dispatch = queue.dispatch = dispatchReducerAction.bind(null, currentlyRenderingFiber$1, queue);\n      return [hook.memoizedState, dispatch];\n    }\n    function updateReducer(reducer, initialArg, init) {\n      var hook = updateWorkInProgressHook();\n      var queue = hook.queue;\n      if (queue === null) {\n        throw new Error(\"Should have a queue. This is likely a bug in React. Please file an issue.\");\n      }\n      queue.lastRenderedReducer = reducer;\n      var current = currentHook;\n      var baseQueue = current.baseQueue;\n      var pendingQueue = queue.pending;\n      if (pendingQueue !== null) {\n        if (baseQueue !== null) {\n          var baseFirst = baseQueue.next;\n          var pendingFirst = pendingQueue.next;\n          baseQueue.next = pendingFirst;\n          pendingQueue.next = baseFirst;\n        }\n        {\n          if (current.baseQueue !== baseQueue) {\n            error(\"Internal error: Expected work-in-progress queue to be a clone. \" + \"This is a bug in React.\");\n          }\n        }\n        current.baseQueue = baseQueue = pendingQueue;\n        queue.pending = null;\n      }\n      if (baseQueue !== null) {\n        var first = baseQueue.next;\n        var newState = current.baseState;\n        var newBaseState = null;\n        var newBaseQueueFirst = null;\n        var newBaseQueueLast = null;\n        var update = first;\n        do {\n          var updateLane = update.lane;\n          if (!isSubsetOfLanes(renderLanes, updateLane)) {\n            var clone = {\n              lane: updateLane,\n              action: update.action,\n              hasEagerState: update.hasEagerState,\n              eagerState: update.eagerState,\n              next: null\n            };\n            if (newBaseQueueLast === null) {\n              newBaseQueueFirst = newBaseQueueLast = clone;\n              newBaseState = newState;\n            } else {\n              newBaseQueueLast = newBaseQueueLast.next = clone;\n            }\n            currentlyRenderingFiber$1.lanes = mergeLanes(currentlyRenderingFiber$1.lanes, updateLane);\n            markSkippedUpdateLanes(updateLane);\n          } else {\n            if (newBaseQueueLast !== null) {\n              var _clone = {\n                lane: NoLane,\n                action: update.action,\n                hasEagerState: update.hasEagerState,\n                eagerState: update.eagerState,\n                next: null\n              };\n              newBaseQueueLast = newBaseQueueLast.next = _clone;\n            }\n            if (update.hasEagerState) {\n              newState = update.eagerState;\n            } else {\n              var action = update.action;\n              newState = reducer(newState, action);\n            }\n          }\n          update = update.next;\n        } while (update !== null && update !== first);\n        if (newBaseQueueLast === null) {\n          newBaseState = newState;\n        } else {\n          newBaseQueueLast.next = newBaseQueueFirst;\n        }\n        if (!objectIs(newState, hook.memoizedState)) {\n          markWorkInProgressReceivedUpdate();\n        }\n        hook.memoizedState = newState;\n        hook.baseState = newBaseState;\n        hook.baseQueue = newBaseQueueLast;\n        queue.lastRenderedState = newState;\n      }\n      var lastInterleaved = queue.interleaved;\n      if (lastInterleaved !== null) {\n        var interleaved = lastInterleaved;\n        do {\n          var interleavedLane = interleaved.lane;\n          currentlyRenderingFiber$1.lanes = mergeLanes(currentlyRenderingFiber$1.lanes, interleavedLane);\n          markSkippedUpdateLanes(interleavedLane);\n          interleaved = interleaved.next;\n        } while (interleaved !== lastInterleaved);\n      } else if (baseQueue === null) {\n        queue.lanes = NoLanes;\n      }\n      var dispatch = queue.dispatch;\n      return [hook.memoizedState, dispatch];\n    }\n    function rerenderReducer(reducer, initialArg, init) {\n      var hook = updateWorkInProgressHook();\n      var queue = hook.queue;\n      if (queue === null) {\n        throw new Error(\"Should have a queue. This is likely a bug in React. Please file an issue.\");\n      }\n      queue.lastRenderedReducer = reducer;\n      var dispatch = queue.dispatch;\n      var lastRenderPhaseUpdate = queue.pending;\n      var newState = hook.memoizedState;\n      if (lastRenderPhaseUpdate !== null) {\n        queue.pending = null;\n        var firstRenderPhaseUpdate = lastRenderPhaseUpdate.next;\n        var update = firstRenderPhaseUpdate;\n        do {\n          var action = update.action;\n          newState = reducer(newState, action);\n          update = update.next;\n        } while (update !== firstRenderPhaseUpdate);\n        if (!objectIs(newState, hook.memoizedState)) {\n          markWorkInProgressReceivedUpdate();\n        }\n        hook.memoizedState = newState;\n        if (hook.baseQueue === null) {\n          hook.baseState = newState;\n        }\n        queue.lastRenderedState = newState;\n      }\n      return [newState, dispatch];\n    }\n    function mountMutableSource(source, getSnapshot, subscribe) {\n      {\n        return undefined;\n      }\n    }\n    function updateMutableSource(source, getSnapshot, subscribe) {\n      {\n        return undefined;\n      }\n    }\n    function mountSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {\n      var fiber = currentlyRenderingFiber$1;\n      var hook = mountWorkInProgressHook();\n      var nextSnapshot;\n      {\n        nextSnapshot = getSnapshot();\n        {\n          if (!didWarnUncachedGetSnapshot) {\n            var cachedSnapshot = getSnapshot();\n            if (!objectIs(nextSnapshot, cachedSnapshot)) {\n              error(\"The result of getSnapshot should be cached to avoid an infinite loop\");\n              didWarnUncachedGetSnapshot = true;\n            }\n          }\n        }\n        var root = getWorkInProgressRoot();\n        if (root === null) {\n          throw new Error(\"Expected a work-in-progress root. This is a bug in React. Please file an issue.\");\n        }\n        if (!includesBlockingLane(root, renderLanes)) {\n          pushStoreConsistencyCheck(fiber, getSnapshot, nextSnapshot);\n        }\n      }\n      hook.memoizedState = nextSnapshot;\n      var inst = {\n        value: nextSnapshot,\n        getSnapshot: getSnapshot\n      };\n      hook.queue = inst;\n      mountEffect(subscribeToStore.bind(null, fiber, inst, subscribe), [subscribe]);\n      fiber.flags |= Passive;\n      pushEffect(HasEffect | Passive$1, updateStoreInstance.bind(null, fiber, inst, nextSnapshot, getSnapshot), undefined, null);\n      return nextSnapshot;\n    }\n    function updateSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {\n      var fiber = currentlyRenderingFiber$1;\n      var hook = updateWorkInProgressHook();\n      var nextSnapshot = getSnapshot();\n      {\n        if (!didWarnUncachedGetSnapshot) {\n          var cachedSnapshot = getSnapshot();\n          if (!objectIs(nextSnapshot, cachedSnapshot)) {\n            error(\"The result of getSnapshot should be cached to avoid an infinite loop\");\n            didWarnUncachedGetSnapshot = true;\n          }\n        }\n      }\n      var prevSnapshot = hook.memoizedState;\n      var snapshotChanged = !objectIs(prevSnapshot, nextSnapshot);\n      if (snapshotChanged) {\n        hook.memoizedState = nextSnapshot;\n        markWorkInProgressReceivedUpdate();\n      }\n      var inst = hook.queue;\n      updateEffect(subscribeToStore.bind(null, fiber, inst, subscribe), [subscribe]);\n      if (inst.getSnapshot !== getSnapshot || snapshotChanged || workInProgressHook !== null && workInProgressHook.memoizedState.tag & HasEffect) {\n        fiber.flags |= Passive;\n        pushEffect(HasEffect | Passive$1, updateStoreInstance.bind(null, fiber, inst, nextSnapshot, getSnapshot), undefined, null);\n        var root = getWorkInProgressRoot();\n        if (root === null) {\n          throw new Error(\"Expected a work-in-progress root. This is a bug in React. Please file an issue.\");\n        }\n        if (!includesBlockingLane(root, renderLanes)) {\n          pushStoreConsistencyCheck(fiber, getSnapshot, nextSnapshot);\n        }\n      }\n      return nextSnapshot;\n    }\n    function pushStoreConsistencyCheck(fiber, getSnapshot, renderedSnapshot) {\n      fiber.flags |= StoreConsistency;\n      var check = {\n        getSnapshot: getSnapshot,\n        value: renderedSnapshot\n      };\n      var componentUpdateQueue = currentlyRenderingFiber$1.updateQueue;\n      if (componentUpdateQueue === null) {\n        componentUpdateQueue = createFunctionComponentUpdateQueue();\n        currentlyRenderingFiber$1.updateQueue = componentUpdateQueue;\n        componentUpdateQueue.stores = [check];\n      } else {\n        var stores = componentUpdateQueue.stores;\n        if (stores === null) {\n          componentUpdateQueue.stores = [check];\n        } else {\n          stores.push(check);\n        }\n      }\n    }\n    function updateStoreInstance(fiber, inst, nextSnapshot, getSnapshot) {\n      inst.value = nextSnapshot;\n      inst.getSnapshot = getSnapshot;\n      if (checkIfSnapshotChanged(inst)) {\n        forceStoreRerender(fiber);\n      }\n    }\n    function subscribeToStore(fiber, inst, subscribe) {\n      var handleStoreChange = function handleStoreChange() {\n        if (checkIfSnapshotChanged(inst)) {\n          forceStoreRerender(fiber);\n        }\n      };\n      return subscribe(handleStoreChange);\n    }\n    function checkIfSnapshotChanged(inst) {\n      var latestGetSnapshot = inst.getSnapshot;\n      var prevValue = inst.value;\n      try {\n        var nextValue = latestGetSnapshot();\n        return !objectIs(prevValue, nextValue);\n      } catch (error) {\n        return true;\n      }\n    }\n    function forceStoreRerender(fiber) {\n      var root = enqueueConcurrentRenderForLane(fiber, SyncLane);\n      if (root !== null) {\n        scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);\n      }\n    }\n    function mountState(initialState) {\n      var hook = mountWorkInProgressHook();\n      if (typeof initialState === \"function\") {\n        initialState = initialState();\n      }\n      hook.memoizedState = hook.baseState = initialState;\n      var queue = {\n        pending: null,\n        interleaved: null,\n        lanes: NoLanes,\n        dispatch: null,\n        lastRenderedReducer: basicStateReducer,\n        lastRenderedState: initialState\n      };\n      hook.queue = queue;\n      var dispatch = queue.dispatch = dispatchSetState.bind(null, currentlyRenderingFiber$1, queue);\n      return [hook.memoizedState, dispatch];\n    }\n    function updateState(initialState) {\n      return updateReducer(basicStateReducer);\n    }\n    function rerenderState(initialState) {\n      return rerenderReducer(basicStateReducer);\n    }\n    function pushEffect(tag, create, destroy, deps) {\n      var effect = {\n        tag: tag,\n        create: create,\n        destroy: destroy,\n        deps: deps,\n        next: null\n      };\n      var componentUpdateQueue = currentlyRenderingFiber$1.updateQueue;\n      if (componentUpdateQueue === null) {\n        componentUpdateQueue = createFunctionComponentUpdateQueue();\n        currentlyRenderingFiber$1.updateQueue = componentUpdateQueue;\n        componentUpdateQueue.lastEffect = effect.next = effect;\n      } else {\n        var lastEffect = componentUpdateQueue.lastEffect;\n        if (lastEffect === null) {\n          componentUpdateQueue.lastEffect = effect.next = effect;\n        } else {\n          var firstEffect = lastEffect.next;\n          lastEffect.next = effect;\n          effect.next = firstEffect;\n          componentUpdateQueue.lastEffect = effect;\n        }\n      }\n      return effect;\n    }\n    function mountRef(initialValue) {\n      var hook = mountWorkInProgressHook();\n      {\n        var _ref2 = {\n          current: initialValue\n        };\n        hook.memoizedState = _ref2;\n        return _ref2;\n      }\n    }\n    function updateRef(initialValue) {\n      var hook = updateWorkInProgressHook();\n      return hook.memoizedState;\n    }\n    function mountEffectImpl(fiberFlags, hookFlags, create, deps) {\n      var hook = mountWorkInProgressHook();\n      var nextDeps = deps === undefined ? null : deps;\n      currentlyRenderingFiber$1.flags |= fiberFlags;\n      hook.memoizedState = pushEffect(HasEffect | hookFlags, create, undefined, nextDeps);\n    }\n    function updateEffectImpl(fiberFlags, hookFlags, create, deps) {\n      var hook = updateWorkInProgressHook();\n      var nextDeps = deps === undefined ? null : deps;\n      var destroy = undefined;\n      if (currentHook !== null) {\n        var prevEffect = currentHook.memoizedState;\n        destroy = prevEffect.destroy;\n        if (nextDeps !== null) {\n          var prevDeps = prevEffect.deps;\n          if (areHookInputsEqual(nextDeps, prevDeps)) {\n            hook.memoizedState = pushEffect(hookFlags, create, destroy, nextDeps);\n            return;\n          }\n        }\n      }\n      currentlyRenderingFiber$1.flags |= fiberFlags;\n      hook.memoizedState = pushEffect(HasEffect | hookFlags, create, destroy, nextDeps);\n    }\n    function mountEffect(create, deps) {\n      {\n        return mountEffectImpl(Passive | PassiveStatic, Passive$1, create, deps);\n      }\n    }\n    function updateEffect(create, deps) {\n      return updateEffectImpl(Passive, Passive$1, create, deps);\n    }\n    function mountInsertionEffect(create, deps) {\n      return mountEffectImpl(Update, Insertion, create, deps);\n    }\n    function updateInsertionEffect(create, deps) {\n      return updateEffectImpl(Update, Insertion, create, deps);\n    }\n    function mountLayoutEffect(create, deps) {\n      var fiberFlags = Update;\n      return mountEffectImpl(fiberFlags, Layout, create, deps);\n    }\n    function updateLayoutEffect(create, deps) {\n      return updateEffectImpl(Update, Layout, create, deps);\n    }\n    function imperativeHandleEffect(create, ref) {\n      if (typeof ref === \"function\") {\n        var refCallback = ref;\n        var _inst = create();\n        refCallback(_inst);\n        return function () {\n          refCallback(null);\n        };\n      } else if (ref !== null && ref !== undefined) {\n        var refObject = ref;\n        {\n          if (!refObject.hasOwnProperty(\"current\")) {\n            error(\"Expected useImperativeHandle() first argument to either be a \" + \"ref callback or React.createRef() object. Instead received: %s.\", \"an object with keys {\" + Object.keys(refObject).join(\", \") + \"}\");\n          }\n        }\n        var _inst2 = create();\n        refObject.current = _inst2;\n        return function () {\n          refObject.current = null;\n        };\n      }\n    }\n    function mountImperativeHandle(ref, create, deps) {\n      {\n        if (typeof create !== \"function\") {\n          error(\"Expected useImperativeHandle() second argument to be a function \" + \"that creates a handle. Instead received: %s.\", create !== null ? typeof create : \"null\");\n        }\n      }\n      var effectDeps = deps !== null && deps !== undefined ? deps.concat([ref]) : null;\n      var fiberFlags = Update;\n      return mountEffectImpl(fiberFlags, Layout, imperativeHandleEffect.bind(null, create, ref), effectDeps);\n    }\n    function updateImperativeHandle(ref, create, deps) {\n      {\n        if (typeof create !== \"function\") {\n          error(\"Expected useImperativeHandle() second argument to be a function \" + \"that creates a handle. Instead received: %s.\", create !== null ? typeof create : \"null\");\n        }\n      }\n      var effectDeps = deps !== null && deps !== undefined ? deps.concat([ref]) : null;\n      return updateEffectImpl(Update, Layout, imperativeHandleEffect.bind(null, create, ref), effectDeps);\n    }\n    function mountDebugValue(value, formatterFn) {}\n    var updateDebugValue = mountDebugValue;\n    function mountCallback(callback, deps) {\n      var hook = mountWorkInProgressHook();\n      var nextDeps = deps === undefined ? null : deps;\n      hook.memoizedState = [callback, nextDeps];\n      return callback;\n    }\n    function updateCallback(callback, deps) {\n      var hook = updateWorkInProgressHook();\n      var nextDeps = deps === undefined ? null : deps;\n      var prevState = hook.memoizedState;\n      if (prevState !== null) {\n        if (nextDeps !== null) {\n          var prevDeps = prevState[1];\n          if (areHookInputsEqual(nextDeps, prevDeps)) {\n            return prevState[0];\n          }\n        }\n      }\n      hook.memoizedState = [callback, nextDeps];\n      return callback;\n    }\n    function mountMemo(nextCreate, deps) {\n      var hook = mountWorkInProgressHook();\n      var nextDeps = deps === undefined ? null : deps;\n      var nextValue = nextCreate();\n      hook.memoizedState = [nextValue, nextDeps];\n      return nextValue;\n    }\n    function updateMemo(nextCreate, deps) {\n      var hook = updateWorkInProgressHook();\n      var nextDeps = deps === undefined ? null : deps;\n      var prevState = hook.memoizedState;\n      if (prevState !== null) {\n        if (nextDeps !== null) {\n          var prevDeps = prevState[1];\n          if (areHookInputsEqual(nextDeps, prevDeps)) {\n            return prevState[0];\n          }\n        }\n      }\n      var nextValue = nextCreate();\n      hook.memoizedState = [nextValue, nextDeps];\n      return nextValue;\n    }\n    function mountDeferredValue(value) {\n      var hook = mountWorkInProgressHook();\n      hook.memoizedState = value;\n      return value;\n    }\n    function updateDeferredValue(value) {\n      var hook = updateWorkInProgressHook();\n      var resolvedCurrentHook = currentHook;\n      var prevValue = resolvedCurrentHook.memoizedState;\n      return updateDeferredValueImpl(hook, prevValue, value);\n    }\n    function rerenderDeferredValue(value) {\n      var hook = updateWorkInProgressHook();\n      if (currentHook === null) {\n        hook.memoizedState = value;\n        return value;\n      } else {\n        var prevValue = currentHook.memoizedState;\n        return updateDeferredValueImpl(hook, prevValue, value);\n      }\n    }\n    function updateDeferredValueImpl(hook, prevValue, value) {\n      var shouldDeferValue = !includesOnlyNonUrgentLanes(renderLanes);\n      if (shouldDeferValue) {\n        if (!objectIs(value, prevValue)) {\n          var deferredLane = claimNextTransitionLane();\n          currentlyRenderingFiber$1.lanes = mergeLanes(currentlyRenderingFiber$1.lanes, deferredLane);\n          markSkippedUpdateLanes(deferredLane);\n          hook.baseState = true;\n        }\n        return prevValue;\n      } else {\n        if (hook.baseState) {\n          hook.baseState = false;\n          markWorkInProgressReceivedUpdate();\n        }\n        hook.memoizedState = value;\n        return value;\n      }\n    }\n    function startTransition(setPending, callback, options) {\n      var previousPriority = getCurrentUpdatePriority();\n      setCurrentUpdatePriority(higherEventPriority(previousPriority, ContinuousEventPriority));\n      setPending(true);\n      var prevTransition = ReactCurrentBatchConfig$1.transition;\n      ReactCurrentBatchConfig$1.transition = {};\n      var currentTransition = ReactCurrentBatchConfig$1.transition;\n      {\n        ReactCurrentBatchConfig$1.transition._updatedFibers = new Set();\n      }\n      try {\n        setPending(false);\n        callback();\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig$1.transition = prevTransition;\n        {\n          if (prevTransition === null && currentTransition._updatedFibers) {\n            var updatedFibersCount = currentTransition._updatedFibers.size;\n            if (updatedFibersCount > 10) {\n              warn(\"Detected a large number of updates inside startTransition. \" + \"If this is due to a subscription please re-write it to use React provided hooks. \" + \"Otherwise concurrent mode guarantees are off the table.\");\n            }\n            currentTransition._updatedFibers.clear();\n          }\n        }\n      }\n    }\n    function mountTransition() {\n      var _mountState = mountState(false),\n        isPending = _mountState[0],\n        setPending = _mountState[1];\n      var start = startTransition.bind(null, setPending);\n      var hook = mountWorkInProgressHook();\n      hook.memoizedState = start;\n      return [isPending, start];\n    }\n    function updateTransition() {\n      var _updateState = updateState(),\n        isPending = _updateState[0];\n      var hook = updateWorkInProgressHook();\n      var start = hook.memoizedState;\n      return [isPending, start];\n    }\n    function rerenderTransition() {\n      var _rerenderState = rerenderState(),\n        isPending = _rerenderState[0];\n      var hook = updateWorkInProgressHook();\n      var start = hook.memoizedState;\n      return [isPending, start];\n    }\n    var isUpdatingOpaqueValueInRenderPhase = false;\n    function getIsUpdatingOpaqueValueInRenderPhaseInDEV() {\n      {\n        return isUpdatingOpaqueValueInRenderPhase;\n      }\n    }\n    function mountId() {\n      var hook = mountWorkInProgressHook();\n      var root = getWorkInProgressRoot();\n      var identifierPrefix = root.identifierPrefix;\n      var id;\n      {\n        var globalClientId = globalClientIdCounter++;\n        id = \":\" + identifierPrefix + \"r\" + globalClientId.toString(32) + \":\";\n      }\n      hook.memoizedState = id;\n      return id;\n    }\n    function updateId() {\n      var hook = updateWorkInProgressHook();\n      var id = hook.memoizedState;\n      return id;\n    }\n    function dispatchReducerAction(fiber, queue, action) {\n      {\n        if (typeof arguments[3] === \"function\") {\n          error(\"State updates from the useState() and useReducer() Hooks don't support the \" + \"second callback argument. To execute a side effect after \" + \"rendering, declare it in the component body with useEffect().\");\n        }\n      }\n      var lane = requestUpdateLane(fiber);\n      var update = {\n        lane: lane,\n        action: action,\n        hasEagerState: false,\n        eagerState: null,\n        next: null\n      };\n      if (isRenderPhaseUpdate(fiber)) {\n        enqueueRenderPhaseUpdate(queue, update);\n      } else {\n        var root = enqueueConcurrentHookUpdate(fiber, queue, update, lane);\n        if (root !== null) {\n          var eventTime = requestEventTime();\n          scheduleUpdateOnFiber(root, fiber, lane, eventTime);\n          entangleTransitionUpdate(root, queue, lane);\n        }\n      }\n    }\n    function dispatchSetState(fiber, queue, action) {\n      {\n        if (typeof arguments[3] === \"function\") {\n          error(\"State updates from the useState() and useReducer() Hooks don't support the \" + \"second callback argument. To execute a side effect after \" + \"rendering, declare it in the component body with useEffect().\");\n        }\n      }\n      var lane = requestUpdateLane(fiber);\n      var update = {\n        lane: lane,\n        action: action,\n        hasEagerState: false,\n        eagerState: null,\n        next: null\n      };\n      if (isRenderPhaseUpdate(fiber)) {\n        enqueueRenderPhaseUpdate(queue, update);\n      } else {\n        var alternate = fiber.alternate;\n        if (fiber.lanes === NoLanes && (alternate === null || alternate.lanes === NoLanes)) {\n          var lastRenderedReducer = queue.lastRenderedReducer;\n          if (lastRenderedReducer !== null) {\n            var prevDispatcher;\n            {\n              prevDispatcher = ReactCurrentDispatcher$1.current;\n              ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n            }\n            try {\n              var currentState = queue.lastRenderedState;\n              var eagerState = lastRenderedReducer(currentState, action);\n              update.hasEagerState = true;\n              update.eagerState = eagerState;\n              if (objectIs(eagerState, currentState)) {\n                enqueueConcurrentHookUpdateAndEagerlyBailout(fiber, queue, update, lane);\n                return;\n              }\n            } catch (error) {} finally {\n              {\n                ReactCurrentDispatcher$1.current = prevDispatcher;\n              }\n            }\n          }\n        }\n        var root = enqueueConcurrentHookUpdate(fiber, queue, update, lane);\n        if (root !== null) {\n          var eventTime = requestEventTime();\n          scheduleUpdateOnFiber(root, fiber, lane, eventTime);\n          entangleTransitionUpdate(root, queue, lane);\n        }\n      }\n    }\n    function isRenderPhaseUpdate(fiber) {\n      var alternate = fiber.alternate;\n      return fiber === currentlyRenderingFiber$1 || alternate !== null && alternate === currentlyRenderingFiber$1;\n    }\n    function enqueueRenderPhaseUpdate(queue, update) {\n      didScheduleRenderPhaseUpdateDuringThisPass = didScheduleRenderPhaseUpdate = true;\n      var pending = queue.pending;\n      if (pending === null) {\n        update.next = update;\n      } else {\n        update.next = pending.next;\n        pending.next = update;\n      }\n      queue.pending = update;\n    }\n    function entangleTransitionUpdate(root, queue, lane) {\n      if (isTransitionLane(lane)) {\n        var queueLanes = queue.lanes;\n        queueLanes = intersectLanes(queueLanes, root.pendingLanes);\n        var newQueueLanes = mergeLanes(queueLanes, lane);\n        queue.lanes = newQueueLanes;\n        markRootEntangled(root, newQueueLanes);\n      }\n    }\n    var ContextOnlyDispatcher = {\n      readContext: _readContext,\n      useCallback: throwInvalidHookError,\n      useContext: throwInvalidHookError,\n      useEffect: throwInvalidHookError,\n      useImperativeHandle: throwInvalidHookError,\n      useInsertionEffect: throwInvalidHookError,\n      useLayoutEffect: throwInvalidHookError,\n      useMemo: throwInvalidHookError,\n      useReducer: throwInvalidHookError,\n      useRef: throwInvalidHookError,\n      useState: throwInvalidHookError,\n      useDebugValue: throwInvalidHookError,\n      useDeferredValue: throwInvalidHookError,\n      useTransition: throwInvalidHookError,\n      useMutableSource: throwInvalidHookError,\n      useSyncExternalStore: throwInvalidHookError,\n      useId: throwInvalidHookError,\n      unstable_isNewReconciler: enableNewReconciler\n    };\n    var HooksDispatcherOnMountInDEV = null;\n    var HooksDispatcherOnMountWithHookTypesInDEV = null;\n    var HooksDispatcherOnUpdateInDEV = null;\n    var HooksDispatcherOnRerenderInDEV = null;\n    var InvalidNestedHooksDispatcherOnMountInDEV = null;\n    var InvalidNestedHooksDispatcherOnUpdateInDEV = null;\n    var InvalidNestedHooksDispatcherOnRerenderInDEV = null;\n    {\n      var warnInvalidContextAccess = function warnInvalidContextAccess() {\n        error(\"Context can only be read while React is rendering. \" + \"In classes, you can read it in the render method or getDerivedStateFromProps. \" + \"In function components, you can read it directly in the function body, but not \" + \"inside Hooks like useReducer() or useMemo().\");\n      };\n      var warnInvalidHookAccess = function warnInvalidHookAccess() {\n        error(\"Do not call Hooks inside useEffect(...), useMemo(...), or other built-in Hooks. \" + \"You can only call Hooks at the top level of your React function. \" + \"For more information, see \" + \"https://reactjs.org/link/rules-of-hooks\");\n      };\n      HooksDispatcherOnMountInDEV = {\n        readContext: function readContext(context) {\n          return _readContext(context);\n        },\n        useCallback: function useCallback(callback, deps) {\n          currentHookNameInDev = \"useCallback\";\n          mountHookTypesDev();\n          checkDepsAreArrayDev(deps);\n          return mountCallback(callback, deps);\n        },\n        useContext: function useContext(context) {\n          currentHookNameInDev = \"useContext\";\n          mountHookTypesDev();\n          return _readContext(context);\n        },\n        useEffect: function useEffect(create, deps) {\n          currentHookNameInDev = \"useEffect\";\n          mountHookTypesDev();\n          checkDepsAreArrayDev(deps);\n          return mountEffect(create, deps);\n        },\n        useImperativeHandle: function useImperativeHandle(ref, create, deps) {\n          currentHookNameInDev = \"useImperativeHandle\";\n          mountHookTypesDev();\n          checkDepsAreArrayDev(deps);\n          return mountImperativeHandle(ref, create, deps);\n        },\n        useInsertionEffect: function useInsertionEffect(create, deps) {\n          currentHookNameInDev = \"useInsertionEffect\";\n          mountHookTypesDev();\n          checkDepsAreArrayDev(deps);\n          return mountInsertionEffect(create, deps);\n        },\n        useLayoutEffect: function useLayoutEffect(create, deps) {\n          currentHookNameInDev = \"useLayoutEffect\";\n          mountHookTypesDev();\n          checkDepsAreArrayDev(deps);\n          return mountLayoutEffect(create, deps);\n        },\n        useMemo: function useMemo(create, deps) {\n          currentHookNameInDev = \"useMemo\";\n          mountHookTypesDev();\n          checkDepsAreArrayDev(deps);\n          var prevDispatcher = ReactCurrentDispatcher$1.current;\n          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;\n          try {\n            return mountMemo(create, deps);\n          } finally {\n            ReactCurrentDispatcher$1.current = prevDispatcher;\n          }\n        },\n        useReducer: function useReducer(reducer, initialArg, init) {\n          currentHookNameInDev = \"useReducer\";\n          mountHookTypesDev();\n          var prevDispatcher = ReactCurrentDispatcher$1.current;\n          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;\n          try {\n            return mountReducer(reducer, initialArg, init);\n          } finally {\n            ReactCurrentDispatcher$1.current = prevDispatcher;\n          }\n        },\n        useRef: function useRef(initialValue) {\n          currentHookNameInDev = \"useRef\";\n          mountHookTypesDev();\n          return mountRef(initialValue);\n        },\n        useState: function useState(initialState) {\n          currentHookNameInDev = \"useState\";\n          mountHookTypesDev();\n          var prevDispatcher = ReactCurrentDispatcher$1.current;\n          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;\n          try {\n            return mountState(initialState);\n          } finally {\n            ReactCurrentDispatcher$1.current = prevDispatcher;\n          }\n        },\n        useDebugValue: function useDebugValue(value, formatterFn) {\n          currentHookNameInDev = \"useDebugValue\";\n          mountHookTypesDev();\n          return mountDebugValue();\n        },\n        useDeferredValue: function useDeferredValue(value) {\n          currentHookNameInDev = \"useDeferredValue\";\n          mountHookTypesDev();\n          return mountDeferredValue(value);\n        },\n        useTransition: function useTransition() {\n          currentHookNameInDev = \"useTransition\";\n          mountHookTypesDev();\n          return mountTransition();\n        },\n        useMutableSource: function useMutableSource(source, getSnapshot, subscribe) {\n          currentHookNameInDev = \"useMutableSource\";\n          mountHookTypesDev();\n          return mountMutableSource();\n        },\n        useSyncExternalStore: function useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {\n          currentHookNameInDev = \"useSyncExternalStore\";\n          mountHookTypesDev();\n          return mountSyncExternalStore(subscribe, getSnapshot);\n        },\n        useId: function useId() {\n          currentHookNameInDev = \"useId\";\n          mountHookTypesDev();\n          return mountId();\n        },\n        unstable_isNewReconciler: enableNewReconciler\n      };\n      HooksDispatcherOnMountWithHookTypesInDEV = {\n        readContext: function readContext(context) {\n          return _readContext(context);\n        },\n        useCallback: function useCallback(callback, deps) {\n          currentHookNameInDev = \"useCallback\";\n          updateHookTypesDev();\n          return mountCallback(callback, deps);\n        },\n        useContext: function useContext(context) {\n          currentHookNameInDev = \"useContext\";\n          updateHookTypesDev();\n          return _readContext(context);\n        },\n        useEffect: function useEffect(create, deps) {\n          currentHookNameInDev = \"useEffect\";\n          updateHookTypesDev();\n          return mountEffect(create, deps);\n        },\n        useImperativeHandle: function useImperativeHandle(ref, create, deps) {\n          currentHookNameInDev = \"useImperativeHandle\";\n          updateHookTypesDev();\n          return mountImperativeHandle(ref, create, deps);\n        },\n        useInsertionEffect: function useInsertionEffect(create, deps) {\n          currentHookNameInDev = \"useInsertionEffect\";\n          updateHookTypesDev();\n          return mountInsertionEffect(create, deps);\n        },\n        useLayoutEffect: function useLayoutEffect(create, deps) {\n          currentHookNameInDev = \"useLayoutEffect\";\n          updateHookTypesDev();\n          return mountLayoutEffect(create, deps);\n        },\n        useMemo: function useMemo(create, deps) {\n          currentHookNameInDev = \"useMemo\";\n          updateHookTypesDev();\n          var prevDispatcher = ReactCurrentDispatcher$1.current;\n          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;\n          try {\n            return mountMemo(create, deps);\n          } finally {\n            ReactCurrentDispatcher$1.current = prevDispatcher;\n          }\n        },\n        useReducer: function useReducer(reducer, initialArg, init) {\n          currentHookNameInDev = \"useReducer\";\n          updateHookTypesDev();\n          var prevDispatcher = ReactCurrentDispatcher$1.current;\n          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;\n          try {\n            return mountReducer(reducer, initialArg, init);\n          } finally {\n            ReactCurrentDispatcher$1.current = prevDispatcher;\n          }\n        },\n        useRef: function useRef(initialValue) {\n          currentHookNameInDev = \"useRef\";\n          updateHookTypesDev();\n          return mountRef(initialValue);\n        },\n        useState: function useState(initialState) {\n          currentHookNameInDev = \"useState\";\n          updateHookTypesDev();\n          var prevDispatcher = ReactCurrentDispatcher$1.current;\n          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;\n          try {\n            return mountState(initialState);\n          } finally {\n            ReactCurrentDispatcher$1.current = prevDispatcher;\n          }\n        },\n        useDebugValue: function useDebugValue(value, formatterFn) {\n          currentHookNameInDev = \"useDebugValue\";\n          updateHookTypesDev();\n          return mountDebugValue();\n        },\n        useDeferredValue: function useDeferredValue(value) {\n          currentHookNameInDev = \"useDeferredValue\";\n          updateHookTypesDev();\n          return mountDeferredValue(value);\n        },\n        useTransition: function useTransition() {\n          currentHookNameInDev = \"useTransition\";\n          updateHookTypesDev();\n          return mountTransition();\n        },\n        useMutableSource: function useMutableSource(source, getSnapshot, subscribe) {\n          currentHookNameInDev = \"useMutableSource\";\n          updateHookTypesDev();\n          return mountMutableSource();\n        },\n        useSyncExternalStore: function useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {\n          currentHookNameInDev = \"useSyncExternalStore\";\n          updateHookTypesDev();\n          return mountSyncExternalStore(subscribe, getSnapshot);\n        },\n        useId: function useId() {\n          currentHookNameInDev = \"useId\";\n          updateHookTypesDev();\n          return mountId();\n        },\n        unstable_isNewReconciler: enableNewReconciler\n      };\n      HooksDispatcherOnUpdateInDEV = {\n        readContext: function readContext(context) {\n          return _readContext(context);\n        },\n        useCallback: function useCallback(callback, deps) {\n          currentHookNameInDev = \"useCallback\";\n          updateHookTypesDev();\n          return updateCallback(callback, deps);\n        },\n        useContext: function useContext(context) {\n          currentHookNameInDev = \"useContext\";\n          updateHookTypesDev();\n          return _readContext(context);\n        },\n        useEffect: function useEffect(create, deps) {\n          currentHookNameInDev = \"useEffect\";\n          updateHookTypesDev();\n          return updateEffect(create, deps);\n        },\n        useImperativeHandle: function useImperativeHandle(ref, create, deps) {\n          currentHookNameInDev = \"useImperativeHandle\";\n          updateHookTypesDev();\n          return updateImperativeHandle(ref, create, deps);\n        },\n        useInsertionEffect: function useInsertionEffect(create, deps) {\n          currentHookNameInDev = \"useInsertionEffect\";\n          updateHookTypesDev();\n          return updateInsertionEffect(create, deps);\n        },\n        useLayoutEffect: function useLayoutEffect(create, deps) {\n          currentHookNameInDev = \"useLayoutEffect\";\n          updateHookTypesDev();\n          return updateLayoutEffect(create, deps);\n        },\n        useMemo: function useMemo(create, deps) {\n          currentHookNameInDev = \"useMemo\";\n          updateHookTypesDev();\n          var prevDispatcher = ReactCurrentDispatcher$1.current;\n          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n          try {\n            return updateMemo(create, deps);\n          } finally {\n            ReactCurrentDispatcher$1.current = prevDispatcher;\n          }\n        },\n        useReducer: function useReducer(reducer, initialArg, init) {\n          currentHookNameInDev = \"useReducer\";\n          updateHookTypesDev();\n          var prevDispatcher = ReactCurrentDispatcher$1.current;\n          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n          try {\n            return updateReducer(reducer, initialArg, init);\n          } finally {\n            ReactCurrentDispatcher$1.current = prevDispatcher;\n          }\n        },\n        useRef: function useRef(initialValue) {\n          currentHookNameInDev = \"useRef\";\n          updateHookTypesDev();\n          return updateRef();\n        },\n        useState: function useState(initialState) {\n          currentHookNameInDev = \"useState\";\n          updateHookTypesDev();\n          var prevDispatcher = ReactCurrentDispatcher$1.current;\n          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n          try {\n            return updateState(initialState);\n          } finally {\n            ReactCurrentDispatcher$1.current = prevDispatcher;\n          }\n        },\n        useDebugValue: function useDebugValue(value, formatterFn) {\n          currentHookNameInDev = \"useDebugValue\";\n          updateHookTypesDev();\n          return updateDebugValue();\n        },\n        useDeferredValue: function useDeferredValue(value) {\n          currentHookNameInDev = \"useDeferredValue\";\n          updateHookTypesDev();\n          return updateDeferredValue(value);\n        },\n        useTransition: function useTransition() {\n          currentHookNameInDev = \"useTransition\";\n          updateHookTypesDev();\n          return updateTransition();\n        },\n        useMutableSource: function useMutableSource(source, getSnapshot, subscribe) {\n          currentHookNameInDev = \"useMutableSource\";\n          updateHookTypesDev();\n          return updateMutableSource();\n        },\n        useSyncExternalStore: function useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {\n          currentHookNameInDev = \"useSyncExternalStore\";\n          updateHookTypesDev();\n          return updateSyncExternalStore(subscribe, getSnapshot);\n        },\n        useId: function useId() {\n          currentHookNameInDev = \"useId\";\n          updateHookTypesDev();\n          return updateId();\n        },\n        unstable_isNewReconciler: enableNewReconciler\n      };\n      HooksDispatcherOnRerenderInDEV = {\n        readContext: function readContext(context) {\n          return _readContext(context);\n        },\n        useCallback: function useCallback(callback, deps) {\n          currentHookNameInDev = \"useCallback\";\n          updateHookTypesDev();\n          return updateCallback(callback, deps);\n        },\n        useContext: function useContext(context) {\n          currentHookNameInDev = \"useContext\";\n          updateHookTypesDev();\n          return _readContext(context);\n        },\n        useEffect: function useEffect(create, deps) {\n          currentHookNameInDev = \"useEffect\";\n          updateHookTypesDev();\n          return updateEffect(create, deps);\n        },\n        useImperativeHandle: function useImperativeHandle(ref, create, deps) {\n          currentHookNameInDev = \"useImperativeHandle\";\n          updateHookTypesDev();\n          return updateImperativeHandle(ref, create, deps);\n        },\n        useInsertionEffect: function useInsertionEffect(create, deps) {\n          currentHookNameInDev = \"useInsertionEffect\";\n          updateHookTypesDev();\n          return updateInsertionEffect(create, deps);\n        },\n        useLayoutEffect: function useLayoutEffect(create, deps) {\n          currentHookNameInDev = \"useLayoutEffect\";\n          updateHookTypesDev();\n          return updateLayoutEffect(create, deps);\n        },\n        useMemo: function useMemo(create, deps) {\n          currentHookNameInDev = \"useMemo\";\n          updateHookTypesDev();\n          var prevDispatcher = ReactCurrentDispatcher$1.current;\n          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnRerenderInDEV;\n          try {\n            return updateMemo(create, deps);\n          } finally {\n            ReactCurrentDispatcher$1.current = prevDispatcher;\n          }\n        },\n        useReducer: function useReducer(reducer, initialArg, init) {\n          currentHookNameInDev = \"useReducer\";\n          updateHookTypesDev();\n          var prevDispatcher = ReactCurrentDispatcher$1.current;\n          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnRerenderInDEV;\n          try {\n            return rerenderReducer(reducer, initialArg, init);\n          } finally {\n            ReactCurrentDispatcher$1.current = prevDispatcher;\n          }\n        },\n        useRef: function useRef(initialValue) {\n          currentHookNameInDev = \"useRef\";\n          updateHookTypesDev();\n          return updateRef();\n        },\n        useState: function useState(initialState) {\n          currentHookNameInDev = \"useState\";\n          updateHookTypesDev();\n          var prevDispatcher = ReactCurrentDispatcher$1.current;\n          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnRerenderInDEV;\n          try {\n            return rerenderState(initialState);\n          } finally {\n            ReactCurrentDispatcher$1.current = prevDispatcher;\n          }\n        },\n        useDebugValue: function useDebugValue(value, formatterFn) {\n          currentHookNameInDev = \"useDebugValue\";\n          updateHookTypesDev();\n          return updateDebugValue();\n        },\n        useDeferredValue: function useDeferredValue(value) {\n          currentHookNameInDev = \"useDeferredValue\";\n          updateHookTypesDev();\n          return rerenderDeferredValue(value);\n        },\n        useTransition: function useTransition() {\n          currentHookNameInDev = \"useTransition\";\n          updateHookTypesDev();\n          return rerenderTransition();\n        },\n        useMutableSource: function useMutableSource(source, getSnapshot, subscribe) {\n          currentHookNameInDev = \"useMutableSource\";\n          updateHookTypesDev();\n          return updateMutableSource();\n        },\n        useSyncExternalStore: function useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {\n          currentHookNameInDev = \"useSyncExternalStore\";\n          updateHookTypesDev();\n          return updateSyncExternalStore(subscribe, getSnapshot);\n        },\n        useId: function useId() {\n          currentHookNameInDev = \"useId\";\n          updateHookTypesDev();\n          return updateId();\n        },\n        unstable_isNewReconciler: enableNewReconciler\n      };\n      InvalidNestedHooksDispatcherOnMountInDEV = {\n        readContext: function readContext(context) {\n          warnInvalidContextAccess();\n          return _readContext(context);\n        },\n        useCallback: function useCallback(callback, deps) {\n          currentHookNameInDev = \"useCallback\";\n          warnInvalidHookAccess();\n          mountHookTypesDev();\n          return mountCallback(callback, deps);\n        },\n        useContext: function useContext(context) {\n          currentHookNameInDev = \"useContext\";\n          warnInvalidHookAccess();\n          mountHookTypesDev();\n          return _readContext(context);\n        },\n        useEffect: function useEffect(create, deps) {\n          currentHookNameInDev = \"useEffect\";\n          warnInvalidHookAccess();\n          mountHookTypesDev();\n          return mountEffect(create, deps);\n        },\n        useImperativeHandle: function useImperativeHandle(ref, create, deps) {\n          currentHookNameInDev = \"useImperativeHandle\";\n          warnInvalidHookAccess();\n          mountHookTypesDev();\n          return mountImperativeHandle(ref, create, deps);\n        },\n        useInsertionEffect: function useInsertionEffect(create, deps) {\n          currentHookNameInDev = \"useInsertionEffect\";\n          warnInvalidHookAccess();\n          mountHookTypesDev();\n          return mountInsertionEffect(create, deps);\n        },\n        useLayoutEffect: function useLayoutEffect(create, deps) {\n          currentHookNameInDev = \"useLayoutEffect\";\n          warnInvalidHookAccess();\n          mountHookTypesDev();\n          return mountLayoutEffect(create, deps);\n        },\n        useMemo: function useMemo(create, deps) {\n          currentHookNameInDev = \"useMemo\";\n          warnInvalidHookAccess();\n          mountHookTypesDev();\n          var prevDispatcher = ReactCurrentDispatcher$1.current;\n          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;\n          try {\n            return mountMemo(create, deps);\n          } finally {\n            ReactCurrentDispatcher$1.current = prevDispatcher;\n          }\n        },\n        useReducer: function useReducer(reducer, initialArg, init) {\n          currentHookNameInDev = \"useReducer\";\n          warnInvalidHookAccess();\n          mountHookTypesDev();\n          var prevDispatcher = ReactCurrentDispatcher$1.current;\n          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;\n          try {\n            return mountReducer(reducer, initialArg, init);\n          } finally {\n            ReactCurrentDispatcher$1.current = prevDispatcher;\n          }\n        },\n        useRef: function useRef(initialValue) {\n          currentHookNameInDev = \"useRef\";\n          warnInvalidHookAccess();\n          mountHookTypesDev();\n          return mountRef(initialValue);\n        },\n        useState: function useState(initialState) {\n          currentHookNameInDev = \"useState\";\n          warnInvalidHookAccess();\n          mountHookTypesDev();\n          var prevDispatcher = ReactCurrentDispatcher$1.current;\n          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;\n          try {\n            return mountState(initialState);\n          } finally {\n            ReactCurrentDispatcher$1.current = prevDispatcher;\n          }\n        },\n        useDebugValue: function useDebugValue(value, formatterFn) {\n          currentHookNameInDev = \"useDebugValue\";\n          warnInvalidHookAccess();\n          mountHookTypesDev();\n          return mountDebugValue();\n        },\n        useDeferredValue: function useDeferredValue(value) {\n          currentHookNameInDev = \"useDeferredValue\";\n          warnInvalidHookAccess();\n          mountHookTypesDev();\n          return mountDeferredValue(value);\n        },\n        useTransition: function useTransition() {\n          currentHookNameInDev = \"useTransition\";\n          warnInvalidHookAccess();\n          mountHookTypesDev();\n          return mountTransition();\n        },\n        useMutableSource: function useMutableSource(source, getSnapshot, subscribe) {\n          currentHookNameInDev = \"useMutableSource\";\n          warnInvalidHookAccess();\n          mountHookTypesDev();\n          return mountMutableSource();\n        },\n        useSyncExternalStore: function useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {\n          currentHookNameInDev = \"useSyncExternalStore\";\n          warnInvalidHookAccess();\n          mountHookTypesDev();\n          return mountSyncExternalStore(subscribe, getSnapshot);\n        },\n        useId: function useId() {\n          currentHookNameInDev = \"useId\";\n          warnInvalidHookAccess();\n          mountHookTypesDev();\n          return mountId();\n        },\n        unstable_isNewReconciler: enableNewReconciler\n      };\n      InvalidNestedHooksDispatcherOnUpdateInDEV = {\n        readContext: function readContext(context) {\n          warnInvalidContextAccess();\n          return _readContext(context);\n        },\n        useCallback: function useCallback(callback, deps) {\n          currentHookNameInDev = \"useCallback\";\n          warnInvalidHookAccess();\n          updateHookTypesDev();\n          return updateCallback(callback, deps);\n        },\n        useContext: function useContext(context) {\n          currentHookNameInDev = \"useContext\";\n          warnInvalidHookAccess();\n          updateHookTypesDev();\n          return _readContext(context);\n        },\n        useEffect: function useEffect(create, deps) {\n          currentHookNameInDev = \"useEffect\";\n          warnInvalidHookAccess();\n          updateHookTypesDev();\n          return updateEffect(create, deps);\n        },\n        useImperativeHandle: function useImperativeHandle(ref, create, deps) {\n          currentHookNameInDev = \"useImperativeHandle\";\n          warnInvalidHookAccess();\n          updateHookTypesDev();\n          return updateImperativeHandle(ref, create, deps);\n        },\n        useInsertionEffect: function useInsertionEffect(create, deps) {\n          currentHookNameInDev = \"useInsertionEffect\";\n          warnInvalidHookAccess();\n          updateHookTypesDev();\n          return updateInsertionEffect(create, deps);\n        },\n        useLayoutEffect: function useLayoutEffect(create, deps) {\n          currentHookNameInDev = \"useLayoutEffect\";\n          warnInvalidHookAccess();\n          updateHookTypesDev();\n          return updateLayoutEffect(create, deps);\n        },\n        useMemo: function useMemo(create, deps) {\n          currentHookNameInDev = \"useMemo\";\n          warnInvalidHookAccess();\n          updateHookTypesDev();\n          var prevDispatcher = ReactCurrentDispatcher$1.current;\n          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n          try {\n            return updateMemo(create, deps);\n          } finally {\n            ReactCurrentDispatcher$1.current = prevDispatcher;\n          }\n        },\n        useReducer: function useReducer(reducer, initialArg, init) {\n          currentHookNameInDev = \"useReducer\";\n          warnInvalidHookAccess();\n          updateHookTypesDev();\n          var prevDispatcher = ReactCurrentDispatcher$1.current;\n          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n          try {\n            return updateReducer(reducer, initialArg, init);\n          } finally {\n            ReactCurrentDispatcher$1.current = prevDispatcher;\n          }\n        },\n        useRef: function useRef(initialValue) {\n          currentHookNameInDev = \"useRef\";\n          warnInvalidHookAccess();\n          updateHookTypesDev();\n          return updateRef();\n        },\n        useState: function useState(initialState) {\n          currentHookNameInDev = \"useState\";\n          warnInvalidHookAccess();\n          updateHookTypesDev();\n          var prevDispatcher = ReactCurrentDispatcher$1.current;\n          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n          try {\n            return updateState(initialState);\n          } finally {\n            ReactCurrentDispatcher$1.current = prevDispatcher;\n          }\n        },\n        useDebugValue: function useDebugValue(value, formatterFn) {\n          currentHookNameInDev = \"useDebugValue\";\n          warnInvalidHookAccess();\n          updateHookTypesDev();\n          return updateDebugValue();\n        },\n        useDeferredValue: function useDeferredValue(value) {\n          currentHookNameInDev = \"useDeferredValue\";\n          warnInvalidHookAccess();\n          updateHookTypesDev();\n          return updateDeferredValue(value);\n        },\n        useTransition: function useTransition() {\n          currentHookNameInDev = \"useTransition\";\n          warnInvalidHookAccess();\n          updateHookTypesDev();\n          return updateTransition();\n        },\n        useMutableSource: function useMutableSource(source, getSnapshot, subscribe) {\n          currentHookNameInDev = \"useMutableSource\";\n          warnInvalidHookAccess();\n          updateHookTypesDev();\n          return updateMutableSource();\n        },\n        useSyncExternalStore: function useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {\n          currentHookNameInDev = \"useSyncExternalStore\";\n          warnInvalidHookAccess();\n          updateHookTypesDev();\n          return updateSyncExternalStore(subscribe, getSnapshot);\n        },\n        useId: function useId() {\n          currentHookNameInDev = \"useId\";\n          warnInvalidHookAccess();\n          updateHookTypesDev();\n          return updateId();\n        },\n        unstable_isNewReconciler: enableNewReconciler\n      };\n      InvalidNestedHooksDispatcherOnRerenderInDEV = {\n        readContext: function readContext(context) {\n          warnInvalidContextAccess();\n          return _readContext(context);\n        },\n        useCallback: function useCallback(callback, deps) {\n          currentHookNameInDev = \"useCallback\";\n          warnInvalidHookAccess();\n          updateHookTypesDev();\n          return updateCallback(callback, deps);\n        },\n        useContext: function useContext(context) {\n          currentHookNameInDev = \"useContext\";\n          warnInvalidHookAccess();\n          updateHookTypesDev();\n          return _readContext(context);\n        },\n        useEffect: function useEffect(create, deps) {\n          currentHookNameInDev = \"useEffect\";\n          warnInvalidHookAccess();\n          updateHookTypesDev();\n          return updateEffect(create, deps);\n        },\n        useImperativeHandle: function useImperativeHandle(ref, create, deps) {\n          currentHookNameInDev = \"useImperativeHandle\";\n          warnInvalidHookAccess();\n          updateHookTypesDev();\n          return updateImperativeHandle(ref, create, deps);\n        },\n        useInsertionEffect: function useInsertionEffect(create, deps) {\n          currentHookNameInDev = \"useInsertionEffect\";\n          warnInvalidHookAccess();\n          updateHookTypesDev();\n          return updateInsertionEffect(create, deps);\n        },\n        useLayoutEffect: function useLayoutEffect(create, deps) {\n          currentHookNameInDev = \"useLayoutEffect\";\n          warnInvalidHookAccess();\n          updateHookTypesDev();\n          return updateLayoutEffect(create, deps);\n        },\n        useMemo: function useMemo(create, deps) {\n          currentHookNameInDev = \"useMemo\";\n          warnInvalidHookAccess();\n          updateHookTypesDev();\n          var prevDispatcher = ReactCurrentDispatcher$1.current;\n          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n          try {\n            return updateMemo(create, deps);\n          } finally {\n            ReactCurrentDispatcher$1.current = prevDispatcher;\n          }\n        },\n        useReducer: function useReducer(reducer, initialArg, init) {\n          currentHookNameInDev = \"useReducer\";\n          warnInvalidHookAccess();\n          updateHookTypesDev();\n          var prevDispatcher = ReactCurrentDispatcher$1.current;\n          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n          try {\n            return rerenderReducer(reducer, initialArg, init);\n          } finally {\n            ReactCurrentDispatcher$1.current = prevDispatcher;\n          }\n        },\n        useRef: function useRef(initialValue) {\n          currentHookNameInDev = \"useRef\";\n          warnInvalidHookAccess();\n          updateHookTypesDev();\n          return updateRef();\n        },\n        useState: function useState(initialState) {\n          currentHookNameInDev = \"useState\";\n          warnInvalidHookAccess();\n          updateHookTypesDev();\n          var prevDispatcher = ReactCurrentDispatcher$1.current;\n          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n          try {\n            return rerenderState(initialState);\n          } finally {\n            ReactCurrentDispatcher$1.current = prevDispatcher;\n          }\n        },\n        useDebugValue: function useDebugValue(value, formatterFn) {\n          currentHookNameInDev = \"useDebugValue\";\n          warnInvalidHookAccess();\n          updateHookTypesDev();\n          return updateDebugValue();\n        },\n        useDeferredValue: function useDeferredValue(value) {\n          currentHookNameInDev = \"useDeferredValue\";\n          warnInvalidHookAccess();\n          updateHookTypesDev();\n          return rerenderDeferredValue(value);\n        },\n        useTransition: function useTransition() {\n          currentHookNameInDev = \"useTransition\";\n          warnInvalidHookAccess();\n          updateHookTypesDev();\n          return rerenderTransition();\n        },\n        useMutableSource: function useMutableSource(source, getSnapshot, subscribe) {\n          currentHookNameInDev = \"useMutableSource\";\n          warnInvalidHookAccess();\n          updateHookTypesDev();\n          return updateMutableSource();\n        },\n        useSyncExternalStore: function useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {\n          currentHookNameInDev = \"useSyncExternalStore\";\n          warnInvalidHookAccess();\n          updateHookTypesDev();\n          return updateSyncExternalStore(subscribe, getSnapshot);\n        },\n        useId: function useId() {\n          currentHookNameInDev = \"useId\";\n          warnInvalidHookAccess();\n          updateHookTypesDev();\n          return updateId();\n        },\n        unstable_isNewReconciler: enableNewReconciler\n      };\n    }\n    var now$1 = Scheduler.unstable_now;\n    var commitTime = 0;\n    var layoutEffectStartTime = -1;\n    var profilerStartTime = -1;\n    var passiveEffectStartTime = -1;\n    var currentUpdateIsNested = false;\n    var nestedUpdateScheduled = false;\n    function isCurrentUpdateNested() {\n      return currentUpdateIsNested;\n    }\n    function markNestedUpdateScheduled() {\n      {\n        nestedUpdateScheduled = true;\n      }\n    }\n    function resetNestedUpdateFlag() {\n      {\n        currentUpdateIsNested = false;\n        nestedUpdateScheduled = false;\n      }\n    }\n    function syncNestedUpdateFlag() {\n      {\n        currentUpdateIsNested = nestedUpdateScheduled;\n        nestedUpdateScheduled = false;\n      }\n    }\n    function getCommitTime() {\n      return commitTime;\n    }\n    function recordCommitTime() {\n      commitTime = now$1();\n    }\n    function startProfilerTimer(fiber) {\n      profilerStartTime = now$1();\n      if (fiber.actualStartTime < 0) {\n        fiber.actualStartTime = now$1();\n      }\n    }\n    function stopProfilerTimerIfRunning(fiber) {\n      profilerStartTime = -1;\n    }\n    function stopProfilerTimerIfRunningAndRecordDelta(fiber, overrideBaseTime) {\n      if (profilerStartTime >= 0) {\n        var elapsedTime = now$1() - profilerStartTime;\n        fiber.actualDuration += elapsedTime;\n        if (overrideBaseTime) {\n          fiber.selfBaseDuration = elapsedTime;\n        }\n        profilerStartTime = -1;\n      }\n    }\n    function recordLayoutEffectDuration(fiber) {\n      if (layoutEffectStartTime >= 0) {\n        var elapsedTime = now$1() - layoutEffectStartTime;\n        layoutEffectStartTime = -1;\n        var parentFiber = fiber.return;\n        while (parentFiber !== null) {\n          switch (parentFiber.tag) {\n            case HostRoot:\n              var root = parentFiber.stateNode;\n              root.effectDuration += elapsedTime;\n              return;\n            case Profiler:\n              var parentStateNode = parentFiber.stateNode;\n              parentStateNode.effectDuration += elapsedTime;\n              return;\n          }\n          parentFiber = parentFiber.return;\n        }\n      }\n    }\n    function recordPassiveEffectDuration(fiber) {\n      if (passiveEffectStartTime >= 0) {\n        var elapsedTime = now$1() - passiveEffectStartTime;\n        passiveEffectStartTime = -1;\n        var parentFiber = fiber.return;\n        while (parentFiber !== null) {\n          switch (parentFiber.tag) {\n            case HostRoot:\n              var root = parentFiber.stateNode;\n              if (root !== null) {\n                root.passiveEffectDuration += elapsedTime;\n              }\n              return;\n            case Profiler:\n              var parentStateNode = parentFiber.stateNode;\n              if (parentStateNode !== null) {\n                parentStateNode.passiveEffectDuration += elapsedTime;\n              }\n              return;\n          }\n          parentFiber = parentFiber.return;\n        }\n      }\n    }\n    function startLayoutEffectTimer() {\n      layoutEffectStartTime = now$1();\n    }\n    function startPassiveEffectTimer() {\n      passiveEffectStartTime = now$1();\n    }\n    function transferActualDuration(fiber) {\n      var child = fiber.child;\n      while (child) {\n        fiber.actualDuration += child.actualDuration;\n        child = child.sibling;\n      }\n    }\n    function createCapturedValueAtFiber(value, source) {\n      return {\n        value: value,\n        source: source,\n        stack: getStackByFiberInDevAndProd(source),\n        digest: null\n      };\n    }\n    function createCapturedValue(value, digest, stack) {\n      return {\n        value: value,\n        source: null,\n        stack: stack != null ? stack : null,\n        digest: digest != null ? digest : null\n      };\n    }\n    if (typeof ReactNativePrivateInterface.ReactFiberErrorDialog.showErrorDialog !== \"function\") {\n      throw new Error(\"Expected ReactFiberErrorDialog.showErrorDialog to be a function.\");\n    }\n    function showErrorDialog(boundary, errorInfo) {\n      var capturedError = {\n        componentStack: errorInfo.stack !== null ? errorInfo.stack : \"\",\n        error: errorInfo.value,\n        errorBoundary: boundary !== null && boundary.tag === ClassComponent ? boundary.stateNode : null\n      };\n      return ReactNativePrivateInterface.ReactFiberErrorDialog.showErrorDialog(capturedError);\n    }\n    function logCapturedError(boundary, errorInfo) {\n      try {\n        var logError = showErrorDialog(boundary, errorInfo);\n        if (logError === false) {\n          return;\n        }\n        var error = errorInfo.value;\n        if (true) {\n          var source = errorInfo.source;\n          var stack = errorInfo.stack;\n          var componentStack = stack !== null ? stack : \"\";\n          if (error != null && error._suppressLogging) {\n            if (boundary.tag === ClassComponent) {\n              return;\n            }\n            console[\"error\"](error);\n          }\n          var componentName = source ? getComponentNameFromFiber(source) : null;\n          var componentNameMessage = componentName ? \"The above error occurred in the <\" + componentName + \"> component:\" : \"The above error occurred in one of your React components:\";\n          var errorBoundaryMessage;\n          if (boundary.tag === HostRoot) {\n            errorBoundaryMessage = \"Consider adding an error boundary to your tree to customize error handling behavior.\\n\" + \"Visit https://reactjs.org/link/error-boundaries to learn more about error boundaries.\";\n          } else {\n            var errorBoundaryName = getComponentNameFromFiber(boundary) || \"Anonymous\";\n            errorBoundaryMessage = \"React will try to recreate this component tree from scratch \" + (\"using the error boundary you provided, \" + errorBoundaryName + \".\");\n          }\n          var combinedMessage = componentNameMessage + \"\\n\" + componentStack + \"\\n\\n\" + (\"\" + errorBoundaryMessage);\n          console[\"error\"](combinedMessage);\n        } else {\n          console[\"error\"](error);\n        }\n      } catch (e) {\n        setTimeout(function () {\n          throw e;\n        });\n      }\n    }\n    var PossiblyWeakMap$1 = typeof WeakMap === \"function\" ? WeakMap : Map;\n    function createRootErrorUpdate(fiber, errorInfo, lane) {\n      var update = createUpdate(NoTimestamp, lane);\n      update.tag = CaptureUpdate;\n      update.payload = {\n        element: null\n      };\n      var error = errorInfo.value;\n      update.callback = function () {\n        onUncaughtError(error);\n        logCapturedError(fiber, errorInfo);\n      };\n      return update;\n    }\n    function createClassErrorUpdate(fiber, errorInfo, lane) {\n      var update = createUpdate(NoTimestamp, lane);\n      update.tag = CaptureUpdate;\n      var getDerivedStateFromError = fiber.type.getDerivedStateFromError;\n      if (typeof getDerivedStateFromError === \"function\") {\n        var error$1 = errorInfo.value;\n        update.payload = function () {\n          return getDerivedStateFromError(error$1);\n        };\n        update.callback = function () {\n          {\n            markFailedErrorBoundaryForHotReloading(fiber);\n          }\n          logCapturedError(fiber, errorInfo);\n        };\n      }\n      var inst = fiber.stateNode;\n      if (inst !== null && typeof inst.componentDidCatch === \"function\") {\n        update.callback = function callback() {\n          {\n            markFailedErrorBoundaryForHotReloading(fiber);\n          }\n          logCapturedError(fiber, errorInfo);\n          if (typeof getDerivedStateFromError !== \"function\") {\n            markLegacyErrorBoundaryAsFailed(this);\n          }\n          var error$1 = errorInfo.value;\n          var stack = errorInfo.stack;\n          this.componentDidCatch(error$1, {\n            componentStack: stack !== null ? stack : \"\"\n          });\n          {\n            if (typeof getDerivedStateFromError !== \"function\") {\n              if (!includesSomeLane(fiber.lanes, SyncLane)) {\n                error(\"%s: Error boundaries should implement getDerivedStateFromError(). \" + \"In that method, return a state update to display an error message or fallback UI.\", getComponentNameFromFiber(fiber) || \"Unknown\");\n              }\n            }\n          }\n        };\n      }\n      return update;\n    }\n    function attachPingListener(root, wakeable, lanes) {\n      var pingCache = root.pingCache;\n      var threadIDs;\n      if (pingCache === null) {\n        pingCache = root.pingCache = new PossiblyWeakMap$1();\n        threadIDs = new Set();\n        pingCache.set(wakeable, threadIDs);\n      } else {\n        threadIDs = pingCache.get(wakeable);\n        if (threadIDs === undefined) {\n          threadIDs = new Set();\n          pingCache.set(wakeable, threadIDs);\n        }\n      }\n      if (!threadIDs.has(lanes)) {\n        threadIDs.add(lanes);\n        var ping = pingSuspendedRoot.bind(null, root, wakeable, lanes);\n        {\n          if (isDevToolsPresent) {\n            restorePendingUpdaters(root, lanes);\n          }\n        }\n        wakeable.then(ping, ping);\n      }\n    }\n    function attachRetryListener(suspenseBoundary, root, wakeable, lanes) {\n      var wakeables = suspenseBoundary.updateQueue;\n      if (wakeables === null) {\n        var updateQueue = new Set();\n        updateQueue.add(wakeable);\n        suspenseBoundary.updateQueue = updateQueue;\n      } else {\n        wakeables.add(wakeable);\n      }\n    }\n    function resetSuspendedComponent(sourceFiber, rootRenderLanes) {\n      var tag = sourceFiber.tag;\n      if ((sourceFiber.mode & ConcurrentMode) === NoMode && (tag === FunctionComponent || tag === ForwardRef || tag === SimpleMemoComponent)) {\n        var currentSource = sourceFiber.alternate;\n        if (currentSource) {\n          sourceFiber.updateQueue = currentSource.updateQueue;\n          sourceFiber.memoizedState = currentSource.memoizedState;\n          sourceFiber.lanes = currentSource.lanes;\n        } else {\n          sourceFiber.updateQueue = null;\n          sourceFiber.memoizedState = null;\n        }\n      }\n    }\n    function getNearestSuspenseBoundaryToCapture(returnFiber) {\n      var node = returnFiber;\n      do {\n        if (node.tag === SuspenseComponent && shouldCaptureSuspense(node)) {\n          return node;\n        }\n        node = node.return;\n      } while (node !== null);\n      return null;\n    }\n    function markSuspenseBoundaryShouldCapture(suspenseBoundary, returnFiber, sourceFiber, root, rootRenderLanes) {\n      if ((suspenseBoundary.mode & ConcurrentMode) === NoMode) {\n        if (suspenseBoundary === returnFiber) {\n          suspenseBoundary.flags |= ShouldCapture;\n        } else {\n          suspenseBoundary.flags |= DidCapture;\n          sourceFiber.flags |= ForceUpdateForLegacySuspense;\n          sourceFiber.flags &= ~(LifecycleEffectMask | Incomplete);\n          if (sourceFiber.tag === ClassComponent) {\n            var currentSourceFiber = sourceFiber.alternate;\n            if (currentSourceFiber === null) {\n              sourceFiber.tag = IncompleteClassComponent;\n            } else {\n              var update = createUpdate(NoTimestamp, SyncLane);\n              update.tag = ForceUpdate;\n              enqueueUpdate(sourceFiber, update, SyncLane);\n            }\n          }\n          sourceFiber.lanes = mergeLanes(sourceFiber.lanes, SyncLane);\n        }\n        return suspenseBoundary;\n      }\n      suspenseBoundary.flags |= ShouldCapture;\n      suspenseBoundary.lanes = rootRenderLanes;\n      return suspenseBoundary;\n    }\n    function throwException(root, returnFiber, sourceFiber, value, rootRenderLanes) {\n      sourceFiber.flags |= Incomplete;\n      {\n        if (isDevToolsPresent) {\n          restorePendingUpdaters(root, rootRenderLanes);\n        }\n      }\n      if (value !== null && typeof value === \"object\" && typeof value.then === \"function\") {\n        var wakeable = value;\n        resetSuspendedComponent(sourceFiber);\n        var suspenseBoundary = getNearestSuspenseBoundaryToCapture(returnFiber);\n        if (suspenseBoundary !== null) {\n          suspenseBoundary.flags &= ~ForceClientRender;\n          markSuspenseBoundaryShouldCapture(suspenseBoundary, returnFiber, sourceFiber, root, rootRenderLanes);\n          if (suspenseBoundary.mode & ConcurrentMode) {\n            attachPingListener(root, wakeable, rootRenderLanes);\n          }\n          attachRetryListener(suspenseBoundary, root, wakeable);\n          return;\n        } else {\n          if (!includesSyncLane(rootRenderLanes)) {\n            attachPingListener(root, wakeable, rootRenderLanes);\n            renderDidSuspendDelayIfPossible();\n            return;\n          }\n          var uncaughtSuspenseError = new Error(\"A component suspended while responding to synchronous input. This \" + \"will cause the UI to be replaced with a loading indicator. To \" + \"fix, updates that suspend should be wrapped \" + \"with startTransition.\");\n          value = uncaughtSuspenseError;\n        }\n      }\n      value = createCapturedValueAtFiber(value, sourceFiber);\n      renderDidError(value);\n      var workInProgress = returnFiber;\n      do {\n        switch (workInProgress.tag) {\n          case HostRoot:\n            {\n              var _errorInfo = value;\n              workInProgress.flags |= ShouldCapture;\n              var lane = pickArbitraryLane(rootRenderLanes);\n              workInProgress.lanes = mergeLanes(workInProgress.lanes, lane);\n              var update = createRootErrorUpdate(workInProgress, _errorInfo, lane);\n              enqueueCapturedUpdate(workInProgress, update);\n              return;\n            }\n          case ClassComponent:\n            var errorInfo = value;\n            var ctor = workInProgress.type;\n            var instance = workInProgress.stateNode;\n            if ((workInProgress.flags & DidCapture) === NoFlags && (typeof ctor.getDerivedStateFromError === \"function\" || instance !== null && typeof instance.componentDidCatch === \"function\" && !isAlreadyFailedLegacyErrorBoundary(instance))) {\n              workInProgress.flags |= ShouldCapture;\n              var _lane = pickArbitraryLane(rootRenderLanes);\n              workInProgress.lanes = mergeLanes(workInProgress.lanes, _lane);\n              var _update = createClassErrorUpdate(workInProgress, errorInfo, _lane);\n              enqueueCapturedUpdate(workInProgress, _update);\n              return;\n            }\n            break;\n        }\n        workInProgress = workInProgress.return;\n      } while (workInProgress !== null);\n    }\n    function getSuspendedCache() {\n      {\n        return null;\n      }\n    }\n    var ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;\n    var didReceiveUpdate = false;\n    var didWarnAboutBadClass;\n    var didWarnAboutModulePatternComponent;\n    var didWarnAboutContextTypeOnFunctionComponent;\n    var didWarnAboutGetDerivedStateOnFunctionComponent;\n    var didWarnAboutFunctionRefs;\n    var didWarnAboutReassigningProps;\n    var didWarnAboutRevealOrder;\n    var didWarnAboutTailOptions;\n    {\n      didWarnAboutBadClass = {};\n      didWarnAboutModulePatternComponent = {};\n      didWarnAboutContextTypeOnFunctionComponent = {};\n      didWarnAboutGetDerivedStateOnFunctionComponent = {};\n      didWarnAboutFunctionRefs = {};\n      didWarnAboutReassigningProps = false;\n      didWarnAboutRevealOrder = {};\n      didWarnAboutTailOptions = {};\n    }\n    function reconcileChildren(current, workInProgress, nextChildren, renderLanes) {\n      if (current === null) {\n        workInProgress.child = mountChildFibers(workInProgress, null, nextChildren, renderLanes);\n      } else {\n        workInProgress.child = reconcileChildFibers(workInProgress, current.child, nextChildren, renderLanes);\n      }\n    }\n    function forceUnmountCurrentAndReconcile(current, workInProgress, nextChildren, renderLanes) {\n      workInProgress.child = reconcileChildFibers(workInProgress, current.child, null, renderLanes);\n      workInProgress.child = reconcileChildFibers(workInProgress, null, nextChildren, renderLanes);\n    }\n    function updateForwardRef(current, workInProgress, Component, nextProps, renderLanes) {\n      {\n        if (workInProgress.type !== workInProgress.elementType) {\n          var innerPropTypes = Component.propTypes;\n          if (innerPropTypes) {\n            checkPropTypes(innerPropTypes, nextProps, \"prop\", getComponentNameFromType(Component));\n          }\n        }\n      }\n      var render = Component.render;\n      var ref = workInProgress.ref;\n      var nextChildren;\n      prepareToReadContext(workInProgress, renderLanes);\n      {\n        ReactCurrentOwner$1.current = workInProgress;\n        setIsRendering(true);\n        nextChildren = renderWithHooks(current, workInProgress, render, nextProps, ref, renderLanes);\n        setIsRendering(false);\n      }\n      if (current !== null && !didReceiveUpdate) {\n        bailoutHooks(current, workInProgress, renderLanes);\n        return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n      }\n      workInProgress.flags |= PerformedWork;\n      reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n      return workInProgress.child;\n    }\n    function updateMemoComponent(current, workInProgress, Component, nextProps, renderLanes) {\n      if (current === null) {\n        var type = Component.type;\n        if (isSimpleFunctionComponent(type) && Component.compare === null && Component.defaultProps === undefined) {\n          var resolvedType = type;\n          {\n            resolvedType = resolveFunctionForHotReloading(type);\n          }\n          workInProgress.tag = SimpleMemoComponent;\n          workInProgress.type = resolvedType;\n          {\n            validateFunctionComponentInDev(workInProgress, type);\n          }\n          return updateSimpleMemoComponent(current, workInProgress, resolvedType, nextProps, renderLanes);\n        }\n        {\n          var innerPropTypes = type.propTypes;\n          if (innerPropTypes) {\n            checkPropTypes(innerPropTypes, nextProps, \"prop\", getComponentNameFromType(type));\n          }\n        }\n        var child = createFiberFromTypeAndProps(Component.type, null, nextProps, workInProgress, workInProgress.mode, renderLanes);\n        child.ref = workInProgress.ref;\n        child.return = workInProgress;\n        workInProgress.child = child;\n        return child;\n      }\n      {\n        var _type = Component.type;\n        var _innerPropTypes = _type.propTypes;\n        if (_innerPropTypes) {\n          checkPropTypes(_innerPropTypes, nextProps, \"prop\", getComponentNameFromType(_type));\n        }\n      }\n      var currentChild = current.child;\n      var hasScheduledUpdateOrContext = checkScheduledUpdateOrContext(current, renderLanes);\n      if (!hasScheduledUpdateOrContext) {\n        var prevProps = currentChild.memoizedProps;\n        var compare = Component.compare;\n        compare = compare !== null ? compare : shallowEqual;\n        if (compare(prevProps, nextProps) && current.ref === workInProgress.ref) {\n          return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n        }\n      }\n      workInProgress.flags |= PerformedWork;\n      var newChild = createWorkInProgress(currentChild, nextProps);\n      newChild.ref = workInProgress.ref;\n      newChild.return = workInProgress;\n      workInProgress.child = newChild;\n      return newChild;\n    }\n    function updateSimpleMemoComponent(current, workInProgress, Component, nextProps, renderLanes) {\n      {\n        if (workInProgress.type !== workInProgress.elementType) {\n          var outerMemoType = workInProgress.elementType;\n          if (outerMemoType.$$typeof === REACT_LAZY_TYPE) {\n            var lazyComponent = outerMemoType;\n            var payload = lazyComponent._payload;\n            var init = lazyComponent._init;\n            try {\n              outerMemoType = init(payload);\n            } catch (x) {\n              outerMemoType = null;\n            }\n            var outerPropTypes = outerMemoType && outerMemoType.propTypes;\n            if (outerPropTypes) {\n              checkPropTypes(outerPropTypes, nextProps, \"prop\", getComponentNameFromType(outerMemoType));\n            }\n          }\n        }\n      }\n      if (current !== null) {\n        var prevProps = current.memoizedProps;\n        if (shallowEqual(prevProps, nextProps) && current.ref === workInProgress.ref && workInProgress.type === current.type) {\n          didReceiveUpdate = false;\n          workInProgress.pendingProps = nextProps = prevProps;\n          if (!checkScheduledUpdateOrContext(current, renderLanes)) {\n            workInProgress.lanes = current.lanes;\n            return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n          } else if ((current.flags & ForceUpdateForLegacySuspense) !== NoFlags) {\n            didReceiveUpdate = true;\n          }\n        }\n      }\n      return updateFunctionComponent(current, workInProgress, Component, nextProps, renderLanes);\n    }\n    function updateOffscreenComponent(current, workInProgress, renderLanes) {\n      var nextProps = workInProgress.pendingProps;\n      var nextChildren = nextProps.children;\n      var prevState = current !== null ? current.memoizedState : null;\n      if (nextProps.mode === \"hidden\" || enableLegacyHidden) {\n        if ((workInProgress.mode & ConcurrentMode) === NoMode) {\n          var nextState = {\n            baseLanes: NoLanes,\n            cachePool: null,\n            transitions: null\n          };\n          workInProgress.memoizedState = nextState;\n          pushRenderLanes(workInProgress, renderLanes);\n        } else if (!includesSomeLane(renderLanes, OffscreenLane)) {\n          var spawnedCachePool = null;\n          var nextBaseLanes;\n          if (prevState !== null) {\n            var prevBaseLanes = prevState.baseLanes;\n            nextBaseLanes = mergeLanes(prevBaseLanes, renderLanes);\n          } else {\n            nextBaseLanes = renderLanes;\n          }\n          workInProgress.lanes = workInProgress.childLanes = laneToLanes(OffscreenLane);\n          var _nextState = {\n            baseLanes: nextBaseLanes,\n            cachePool: spawnedCachePool,\n            transitions: null\n          };\n          workInProgress.memoizedState = _nextState;\n          workInProgress.updateQueue = null;\n          pushRenderLanes(workInProgress, nextBaseLanes);\n          return null;\n        } else {\n          var _nextState2 = {\n            baseLanes: NoLanes,\n            cachePool: null,\n            transitions: null\n          };\n          workInProgress.memoizedState = _nextState2;\n          var subtreeRenderLanes = prevState !== null ? prevState.baseLanes : renderLanes;\n          pushRenderLanes(workInProgress, subtreeRenderLanes);\n        }\n      } else {\n        var _subtreeRenderLanes;\n        if (prevState !== null) {\n          _subtreeRenderLanes = mergeLanes(prevState.baseLanes, renderLanes);\n          workInProgress.memoizedState = null;\n        } else {\n          _subtreeRenderLanes = renderLanes;\n        }\n        pushRenderLanes(workInProgress, _subtreeRenderLanes);\n      }\n      reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n      return workInProgress.child;\n    }\n    function updateFragment(current, workInProgress, renderLanes) {\n      var nextChildren = workInProgress.pendingProps;\n      reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n      return workInProgress.child;\n    }\n    function updateMode(current, workInProgress, renderLanes) {\n      var nextChildren = workInProgress.pendingProps.children;\n      reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n      return workInProgress.child;\n    }\n    function updateProfiler(current, workInProgress, renderLanes) {\n      {\n        workInProgress.flags |= Update;\n        {\n          var stateNode = workInProgress.stateNode;\n          stateNode.effectDuration = 0;\n          stateNode.passiveEffectDuration = 0;\n        }\n      }\n      var nextProps = workInProgress.pendingProps;\n      var nextChildren = nextProps.children;\n      reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n      return workInProgress.child;\n    }\n    function markRef(current, workInProgress) {\n      var ref = workInProgress.ref;\n      if (current === null && ref !== null || current !== null && current.ref !== ref) {\n        workInProgress.flags |= Ref;\n      }\n    }\n    function updateFunctionComponent(current, workInProgress, Component, nextProps, renderLanes) {\n      {\n        if (workInProgress.type !== workInProgress.elementType) {\n          var innerPropTypes = Component.propTypes;\n          if (innerPropTypes) {\n            checkPropTypes(innerPropTypes, nextProps, \"prop\", getComponentNameFromType(Component));\n          }\n        }\n      }\n      var context;\n      {\n        var unmaskedContext = getUnmaskedContext(workInProgress, Component, true);\n        context = getMaskedContext(workInProgress, unmaskedContext);\n      }\n      var nextChildren;\n      prepareToReadContext(workInProgress, renderLanes);\n      {\n        ReactCurrentOwner$1.current = workInProgress;\n        setIsRendering(true);\n        nextChildren = renderWithHooks(current, workInProgress, Component, nextProps, context, renderLanes);\n        setIsRendering(false);\n      }\n      if (current !== null && !didReceiveUpdate) {\n        bailoutHooks(current, workInProgress, renderLanes);\n        return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n      }\n      workInProgress.flags |= PerformedWork;\n      reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n      return workInProgress.child;\n    }\n    function updateClassComponent(current, workInProgress, Component, nextProps, renderLanes) {\n      {\n        switch (shouldError(workInProgress)) {\n          case false:\n            {\n              var _instance = workInProgress.stateNode;\n              var ctor = workInProgress.type;\n              var tempInstance = new ctor(workInProgress.memoizedProps, _instance.context);\n              var state = tempInstance.state;\n              _instance.updater.enqueueSetState(_instance, state, null);\n              break;\n            }\n          case true:\n            {\n              workInProgress.flags |= DidCapture;\n              workInProgress.flags |= ShouldCapture;\n              var error$1 = new Error(\"Simulated error coming from DevTools\");\n              var lane = pickArbitraryLane(renderLanes);\n              workInProgress.lanes = mergeLanes(workInProgress.lanes, lane);\n              var update = createClassErrorUpdate(workInProgress, createCapturedValueAtFiber(error$1, workInProgress), lane);\n              enqueueCapturedUpdate(workInProgress, update);\n              break;\n            }\n        }\n        if (workInProgress.type !== workInProgress.elementType) {\n          var innerPropTypes = Component.propTypes;\n          if (innerPropTypes) {\n            checkPropTypes(innerPropTypes, nextProps, \"prop\", getComponentNameFromType(Component));\n          }\n        }\n      }\n      var hasContext;\n      if (isContextProvider(Component)) {\n        hasContext = true;\n        pushContextProvider(workInProgress);\n      } else {\n        hasContext = false;\n      }\n      prepareToReadContext(workInProgress, renderLanes);\n      var instance = workInProgress.stateNode;\n      var shouldUpdate;\n      if (instance === null) {\n        resetSuspendedCurrentOnMountInLegacyMode(current, workInProgress);\n        constructClassInstance(workInProgress, Component, nextProps);\n        mountClassInstance(workInProgress, Component, nextProps, renderLanes);\n        shouldUpdate = true;\n      } else if (current === null) {\n        shouldUpdate = resumeMountClassInstance(workInProgress, Component, nextProps, renderLanes);\n      } else {\n        shouldUpdate = updateClassInstance(current, workInProgress, Component, nextProps, renderLanes);\n      }\n      var nextUnitOfWork = finishClassComponent(current, workInProgress, Component, shouldUpdate, hasContext, renderLanes);\n      {\n        var inst = workInProgress.stateNode;\n        if (shouldUpdate && inst.props !== nextProps) {\n          if (!didWarnAboutReassigningProps) {\n            error(\"It looks like %s is reassigning its own `this.props` while rendering. \" + \"This is not supported and can lead to confusing bugs.\", getComponentNameFromFiber(workInProgress) || \"a component\");\n          }\n          didWarnAboutReassigningProps = true;\n        }\n      }\n      return nextUnitOfWork;\n    }\n    function finishClassComponent(current, workInProgress, Component, shouldUpdate, hasContext, renderLanes) {\n      markRef(current, workInProgress);\n      var didCaptureError = (workInProgress.flags & DidCapture) !== NoFlags;\n      if (!shouldUpdate && !didCaptureError) {\n        if (hasContext) {\n          invalidateContextProvider(workInProgress, Component, false);\n        }\n        return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n      }\n      var instance = workInProgress.stateNode;\n      ReactCurrentOwner$1.current = workInProgress;\n      var nextChildren;\n      if (didCaptureError && typeof Component.getDerivedStateFromError !== \"function\") {\n        nextChildren = null;\n        {\n          stopProfilerTimerIfRunning();\n        }\n      } else {\n        {\n          setIsRendering(true);\n          nextChildren = instance.render();\n          setIsRendering(false);\n        }\n      }\n      workInProgress.flags |= PerformedWork;\n      if (current !== null && didCaptureError) {\n        forceUnmountCurrentAndReconcile(current, workInProgress, nextChildren, renderLanes);\n      } else {\n        reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n      }\n      workInProgress.memoizedState = instance.state;\n      if (hasContext) {\n        invalidateContextProvider(workInProgress, Component, true);\n      }\n      return workInProgress.child;\n    }\n    function pushHostRootContext(workInProgress) {\n      var root = workInProgress.stateNode;\n      if (root.pendingContext) {\n        pushTopLevelContextObject(workInProgress, root.pendingContext, root.pendingContext !== root.context);\n      } else if (root.context) {\n        pushTopLevelContextObject(workInProgress, root.context, false);\n      }\n      pushHostContainer(workInProgress, root.containerInfo);\n    }\n    function updateHostRoot(current, workInProgress, renderLanes) {\n      pushHostRootContext(workInProgress);\n      if (current === null) {\n        throw new Error(\"Should have a current fiber. This is a bug in React.\");\n      }\n      var nextProps = workInProgress.pendingProps;\n      var prevState = workInProgress.memoizedState;\n      var prevChildren = prevState.element;\n      cloneUpdateQueue(current, workInProgress);\n      processUpdateQueue(workInProgress, nextProps, null, renderLanes);\n      var nextState = workInProgress.memoizedState;\n      var root = workInProgress.stateNode;\n      var nextChildren = nextState.element;\n      {\n        if (nextChildren === prevChildren) {\n          return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n        }\n        reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n      }\n      return workInProgress.child;\n    }\n    function updateHostComponent(current, workInProgress, renderLanes) {\n      pushHostContext(workInProgress);\n      var type = workInProgress.type;\n      var nextProps = workInProgress.pendingProps;\n      var prevProps = current !== null ? current.memoizedProps : null;\n      var nextChildren = nextProps.children;\n      if (prevProps !== null && shouldSetTextContent()) {\n        workInProgress.flags |= ContentReset;\n      }\n      markRef(current, workInProgress);\n      reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n      return workInProgress.child;\n    }\n    function updateHostText(current, workInProgress) {\n      return null;\n    }\n    function mountLazyComponent(_current, workInProgress, elementType, renderLanes) {\n      resetSuspendedCurrentOnMountInLegacyMode(_current, workInProgress);\n      var props = workInProgress.pendingProps;\n      var lazyComponent = elementType;\n      var payload = lazyComponent._payload;\n      var init = lazyComponent._init;\n      var Component = init(payload);\n      workInProgress.type = Component;\n      var resolvedTag = workInProgress.tag = resolveLazyComponentTag(Component);\n      var resolvedProps = resolveDefaultProps(Component, props);\n      var child;\n      switch (resolvedTag) {\n        case FunctionComponent:\n          {\n            {\n              validateFunctionComponentInDev(workInProgress, Component);\n              workInProgress.type = Component = resolveFunctionForHotReloading(Component);\n            }\n            child = updateFunctionComponent(null, workInProgress, Component, resolvedProps, renderLanes);\n            return child;\n          }\n        case ClassComponent:\n          {\n            {\n              workInProgress.type = Component = resolveClassForHotReloading(Component);\n            }\n            child = updateClassComponent(null, workInProgress, Component, resolvedProps, renderLanes);\n            return child;\n          }\n        case ForwardRef:\n          {\n            {\n              workInProgress.type = Component = resolveForwardRefForHotReloading(Component);\n            }\n            child = updateForwardRef(null, workInProgress, Component, resolvedProps, renderLanes);\n            return child;\n          }\n        case MemoComponent:\n          {\n            {\n              if (workInProgress.type !== workInProgress.elementType) {\n                var outerPropTypes = Component.propTypes;\n                if (outerPropTypes) {\n                  checkPropTypes(outerPropTypes, resolvedProps, \"prop\", getComponentNameFromType(Component));\n                }\n              }\n            }\n            child = updateMemoComponent(null, workInProgress, Component, resolveDefaultProps(Component.type, resolvedProps), renderLanes);\n            return child;\n          }\n      }\n      var hint = \"\";\n      {\n        if (Component !== null && typeof Component === \"object\" && Component.$$typeof === REACT_LAZY_TYPE) {\n          hint = \" Did you wrap a component in React.lazy() more than once?\";\n        }\n      }\n      throw new Error(\"Element type is invalid. Received a promise that resolves to: \" + Component + \". \" + (\"Lazy element type must resolve to a class or function.\" + hint));\n    }\n    function mountIncompleteClassComponent(_current, workInProgress, Component, nextProps, renderLanes) {\n      resetSuspendedCurrentOnMountInLegacyMode(_current, workInProgress);\n      workInProgress.tag = ClassComponent;\n      var hasContext;\n      if (isContextProvider(Component)) {\n        hasContext = true;\n        pushContextProvider(workInProgress);\n      } else {\n        hasContext = false;\n      }\n      prepareToReadContext(workInProgress, renderLanes);\n      constructClassInstance(workInProgress, Component, nextProps);\n      mountClassInstance(workInProgress, Component, nextProps, renderLanes);\n      return finishClassComponent(null, workInProgress, Component, true, hasContext, renderLanes);\n    }\n    function mountIndeterminateComponent(_current, workInProgress, Component, renderLanes) {\n      resetSuspendedCurrentOnMountInLegacyMode(_current, workInProgress);\n      var props = workInProgress.pendingProps;\n      var context;\n      {\n        var unmaskedContext = getUnmaskedContext(workInProgress, Component, false);\n        context = getMaskedContext(workInProgress, unmaskedContext);\n      }\n      prepareToReadContext(workInProgress, renderLanes);\n      var value;\n      {\n        if (Component.prototype && typeof Component.prototype.render === \"function\") {\n          var componentName = getComponentNameFromType(Component) || \"Unknown\";\n          if (!didWarnAboutBadClass[componentName]) {\n            error(\"The <%s /> component appears to have a render method, but doesn't extend React.Component. \" + \"This is likely to cause errors. Change %s to extend React.Component instead.\", componentName, componentName);\n            didWarnAboutBadClass[componentName] = true;\n          }\n        }\n        if (workInProgress.mode & StrictLegacyMode) {\n          ReactStrictModeWarnings.recordLegacyContextWarning(workInProgress, null);\n        }\n        setIsRendering(true);\n        ReactCurrentOwner$1.current = workInProgress;\n        value = renderWithHooks(null, workInProgress, Component, props, context, renderLanes);\n        setIsRendering(false);\n      }\n      workInProgress.flags |= PerformedWork;\n      {\n        if (typeof value === \"object\" && value !== null && typeof value.render === \"function\" && value.$$typeof === undefined) {\n          var _componentName = getComponentNameFromType(Component) || \"Unknown\";\n          if (!didWarnAboutModulePatternComponent[_componentName]) {\n            error(\"The <%s /> component appears to be a function component that returns a class instance. \" + \"Change %s to a class that extends React.Component instead. \" + \"If you can't use a class try assigning the prototype on the function as a workaround. \" + \"`%s.prototype = React.Component.prototype`. Don't use an arrow function since it \" + \"cannot be called with `new` by React.\", _componentName, _componentName, _componentName);\n            didWarnAboutModulePatternComponent[_componentName] = true;\n          }\n        }\n      }\n      if (typeof value === \"object\" && value !== null && typeof value.render === \"function\" && value.$$typeof === undefined) {\n        {\n          var _componentName2 = getComponentNameFromType(Component) || \"Unknown\";\n          if (!didWarnAboutModulePatternComponent[_componentName2]) {\n            error(\"The <%s /> component appears to be a function component that returns a class instance. \" + \"Change %s to a class that extends React.Component instead. \" + \"If you can't use a class try assigning the prototype on the function as a workaround. \" + \"`%s.prototype = React.Component.prototype`. Don't use an arrow function since it \" + \"cannot be called with `new` by React.\", _componentName2, _componentName2, _componentName2);\n            didWarnAboutModulePatternComponent[_componentName2] = true;\n          }\n        }\n        workInProgress.tag = ClassComponent;\n        workInProgress.memoizedState = null;\n        workInProgress.updateQueue = null;\n        var hasContext = false;\n        if (isContextProvider(Component)) {\n          hasContext = true;\n          pushContextProvider(workInProgress);\n        } else {\n          hasContext = false;\n        }\n        workInProgress.memoizedState = value.state !== null && value.state !== undefined ? value.state : null;\n        initializeUpdateQueue(workInProgress);\n        adoptClassInstance(workInProgress, value);\n        mountClassInstance(workInProgress, Component, props, renderLanes);\n        return finishClassComponent(null, workInProgress, Component, true, hasContext, renderLanes);\n      } else {\n        workInProgress.tag = FunctionComponent;\n        reconcileChildren(null, workInProgress, value, renderLanes);\n        {\n          validateFunctionComponentInDev(workInProgress, Component);\n        }\n        return workInProgress.child;\n      }\n    }\n    function validateFunctionComponentInDev(workInProgress, Component) {\n      {\n        if (Component) {\n          if (Component.childContextTypes) {\n            error(\"%s(...): childContextTypes cannot be defined on a function component.\", Component.displayName || Component.name || \"Component\");\n          }\n        }\n        if (workInProgress.ref !== null) {\n          var info = \"\";\n          var ownerName = getCurrentFiberOwnerNameInDevOrNull();\n          if (ownerName) {\n            info += \"\\n\\nCheck the render method of `\" + ownerName + \"`.\";\n          }\n          var warningKey = ownerName || \"\";\n          var debugSource = workInProgress._debugSource;\n          if (debugSource) {\n            warningKey = debugSource.fileName + \":\" + debugSource.lineNumber;\n          }\n          if (!didWarnAboutFunctionRefs[warningKey]) {\n            didWarnAboutFunctionRefs[warningKey] = true;\n            error(\"Function components cannot be given refs. \" + \"Attempts to access this ref will fail. \" + \"Did you mean to use React.forwardRef()?%s\", info);\n          }\n        }\n        if (typeof Component.getDerivedStateFromProps === \"function\") {\n          var _componentName3 = getComponentNameFromType(Component) || \"Unknown\";\n          if (!didWarnAboutGetDerivedStateOnFunctionComponent[_componentName3]) {\n            error(\"%s: Function components do not support getDerivedStateFromProps.\", _componentName3);\n            didWarnAboutGetDerivedStateOnFunctionComponent[_componentName3] = true;\n          }\n        }\n        if (typeof Component.contextType === \"object\" && Component.contextType !== null) {\n          var _componentName4 = getComponentNameFromType(Component) || \"Unknown\";\n          if (!didWarnAboutContextTypeOnFunctionComponent[_componentName4]) {\n            error(\"%s: Function components do not support contextType.\", _componentName4);\n            didWarnAboutContextTypeOnFunctionComponent[_componentName4] = true;\n          }\n        }\n      }\n    }\n    var SUSPENDED_MARKER = {\n      dehydrated: null,\n      treeContext: null,\n      retryLane: NoLane\n    };\n    function mountSuspenseOffscreenState(renderLanes) {\n      return {\n        baseLanes: renderLanes,\n        cachePool: getSuspendedCache(),\n        transitions: null\n      };\n    }\n    function updateSuspenseOffscreenState(prevOffscreenState, renderLanes) {\n      var cachePool = null;\n      return {\n        baseLanes: mergeLanes(prevOffscreenState.baseLanes, renderLanes),\n        cachePool: cachePool,\n        transitions: prevOffscreenState.transitions\n      };\n    }\n    function shouldRemainOnFallback(suspenseContext, current, workInProgress, renderLanes) {\n      if (current !== null) {\n        var suspenseState = current.memoizedState;\n        if (suspenseState === null) {\n          return false;\n        }\n      }\n      return hasSuspenseContext(suspenseContext, ForceSuspenseFallback);\n    }\n    function getRemainingWorkInPrimaryTree(current, renderLanes) {\n      return removeLanes(current.childLanes, renderLanes);\n    }\n    function updateSuspenseComponent(current, workInProgress, renderLanes) {\n      var nextProps = workInProgress.pendingProps;\n      {\n        if (shouldSuspend(workInProgress)) {\n          workInProgress.flags |= DidCapture;\n        }\n      }\n      var suspenseContext = suspenseStackCursor.current;\n      var showFallback = false;\n      var didSuspend = (workInProgress.flags & DidCapture) !== NoFlags;\n      if (didSuspend || shouldRemainOnFallback(suspenseContext, current)) {\n        showFallback = true;\n        workInProgress.flags &= ~DidCapture;\n      } else {\n        if (current === null || current.memoizedState !== null) {\n          {\n            suspenseContext = addSubtreeSuspenseContext(suspenseContext, InvisibleParentSuspenseContext);\n          }\n        }\n      }\n      suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);\n      pushSuspenseContext(workInProgress, suspenseContext);\n      if (current === null) {\n        var suspenseState = workInProgress.memoizedState;\n        if (suspenseState !== null) {\n          var dehydrated = suspenseState.dehydrated;\n          if (dehydrated !== null) {\n            return mountDehydratedSuspenseComponent(workInProgress);\n          }\n        }\n        var nextPrimaryChildren = nextProps.children;\n        var nextFallbackChildren = nextProps.fallback;\n        if (showFallback) {\n          var fallbackFragment = mountSuspenseFallbackChildren(workInProgress, nextPrimaryChildren, nextFallbackChildren, renderLanes);\n          var primaryChildFragment = workInProgress.child;\n          primaryChildFragment.memoizedState = mountSuspenseOffscreenState(renderLanes);\n          workInProgress.memoizedState = SUSPENDED_MARKER;\n          return fallbackFragment;\n        } else {\n          return mountSuspensePrimaryChildren(workInProgress, nextPrimaryChildren);\n        }\n      } else {\n        var prevState = current.memoizedState;\n        if (prevState !== null) {\n          var _dehydrated = prevState.dehydrated;\n          if (_dehydrated !== null) {\n            return updateDehydratedSuspenseComponent(current, workInProgress, didSuspend, nextProps, _dehydrated, prevState, renderLanes);\n          }\n        }\n        if (showFallback) {\n          var _nextFallbackChildren = nextProps.fallback;\n          var _nextPrimaryChildren = nextProps.children;\n          var fallbackChildFragment = updateSuspenseFallbackChildren(current, workInProgress, _nextPrimaryChildren, _nextFallbackChildren, renderLanes);\n          var _primaryChildFragment2 = workInProgress.child;\n          var prevOffscreenState = current.child.memoizedState;\n          _primaryChildFragment2.memoizedState = prevOffscreenState === null ? mountSuspenseOffscreenState(renderLanes) : updateSuspenseOffscreenState(prevOffscreenState, renderLanes);\n          _primaryChildFragment2.childLanes = getRemainingWorkInPrimaryTree(current, renderLanes);\n          workInProgress.memoizedState = SUSPENDED_MARKER;\n          return fallbackChildFragment;\n        } else {\n          var _nextPrimaryChildren2 = nextProps.children;\n          var _primaryChildFragment3 = updateSuspensePrimaryChildren(current, workInProgress, _nextPrimaryChildren2, renderLanes);\n          workInProgress.memoizedState = null;\n          return _primaryChildFragment3;\n        }\n      }\n    }\n    function mountSuspensePrimaryChildren(workInProgress, primaryChildren, renderLanes) {\n      var mode = workInProgress.mode;\n      var primaryChildProps = {\n        mode: \"visible\",\n        children: primaryChildren\n      };\n      var primaryChildFragment = mountWorkInProgressOffscreenFiber(primaryChildProps, mode);\n      primaryChildFragment.return = workInProgress;\n      workInProgress.child = primaryChildFragment;\n      return primaryChildFragment;\n    }\n    function mountSuspenseFallbackChildren(workInProgress, primaryChildren, fallbackChildren, renderLanes) {\n      var mode = workInProgress.mode;\n      var progressedPrimaryFragment = workInProgress.child;\n      var primaryChildProps = {\n        mode: \"hidden\",\n        children: primaryChildren\n      };\n      var primaryChildFragment;\n      var fallbackChildFragment;\n      if ((mode & ConcurrentMode) === NoMode && progressedPrimaryFragment !== null) {\n        primaryChildFragment = progressedPrimaryFragment;\n        primaryChildFragment.childLanes = NoLanes;\n        primaryChildFragment.pendingProps = primaryChildProps;\n        if (workInProgress.mode & ProfileMode) {\n          primaryChildFragment.actualDuration = 0;\n          primaryChildFragment.actualStartTime = -1;\n          primaryChildFragment.selfBaseDuration = 0;\n          primaryChildFragment.treeBaseDuration = 0;\n        }\n        fallbackChildFragment = createFiberFromFragment(fallbackChildren, mode, renderLanes, null);\n      } else {\n        primaryChildFragment = mountWorkInProgressOffscreenFiber(primaryChildProps, mode);\n        fallbackChildFragment = createFiberFromFragment(fallbackChildren, mode, renderLanes, null);\n      }\n      primaryChildFragment.return = workInProgress;\n      fallbackChildFragment.return = workInProgress;\n      primaryChildFragment.sibling = fallbackChildFragment;\n      workInProgress.child = primaryChildFragment;\n      return fallbackChildFragment;\n    }\n    function mountWorkInProgressOffscreenFiber(offscreenProps, mode, renderLanes) {\n      return createFiberFromOffscreen(offscreenProps, mode, NoLanes, null);\n    }\n    function updateWorkInProgressOffscreenFiber(current, offscreenProps) {\n      return createWorkInProgress(current, offscreenProps);\n    }\n    function updateSuspensePrimaryChildren(current, workInProgress, primaryChildren, renderLanes) {\n      var currentPrimaryChildFragment = current.child;\n      var currentFallbackChildFragment = currentPrimaryChildFragment.sibling;\n      var primaryChildFragment = updateWorkInProgressOffscreenFiber(currentPrimaryChildFragment, {\n        mode: \"visible\",\n        children: primaryChildren\n      });\n      if ((workInProgress.mode & ConcurrentMode) === NoMode) {\n        primaryChildFragment.lanes = renderLanes;\n      }\n      primaryChildFragment.return = workInProgress;\n      primaryChildFragment.sibling = null;\n      if (currentFallbackChildFragment !== null) {\n        var deletions = workInProgress.deletions;\n        if (deletions === null) {\n          workInProgress.deletions = [currentFallbackChildFragment];\n          workInProgress.flags |= ChildDeletion;\n        } else {\n          deletions.push(currentFallbackChildFragment);\n        }\n      }\n      workInProgress.child = primaryChildFragment;\n      return primaryChildFragment;\n    }\n    function updateSuspenseFallbackChildren(current, workInProgress, primaryChildren, fallbackChildren, renderLanes) {\n      var mode = workInProgress.mode;\n      var currentPrimaryChildFragment = current.child;\n      var currentFallbackChildFragment = currentPrimaryChildFragment.sibling;\n      var primaryChildProps = {\n        mode: \"hidden\",\n        children: primaryChildren\n      };\n      var primaryChildFragment;\n      if ((mode & ConcurrentMode) === NoMode && workInProgress.child !== currentPrimaryChildFragment) {\n        var progressedPrimaryFragment = workInProgress.child;\n        primaryChildFragment = progressedPrimaryFragment;\n        primaryChildFragment.childLanes = NoLanes;\n        primaryChildFragment.pendingProps = primaryChildProps;\n        if (workInProgress.mode & ProfileMode) {\n          primaryChildFragment.actualDuration = 0;\n          primaryChildFragment.actualStartTime = -1;\n          primaryChildFragment.selfBaseDuration = currentPrimaryChildFragment.selfBaseDuration;\n          primaryChildFragment.treeBaseDuration = currentPrimaryChildFragment.treeBaseDuration;\n        }\n        workInProgress.deletions = null;\n      } else {\n        primaryChildFragment = updateWorkInProgressOffscreenFiber(currentPrimaryChildFragment, primaryChildProps);\n        primaryChildFragment.subtreeFlags = currentPrimaryChildFragment.subtreeFlags & StaticMask;\n      }\n      var fallbackChildFragment;\n      if (currentFallbackChildFragment !== null) {\n        fallbackChildFragment = createWorkInProgress(currentFallbackChildFragment, fallbackChildren);\n      } else {\n        fallbackChildFragment = createFiberFromFragment(fallbackChildren, mode, renderLanes, null);\n        fallbackChildFragment.flags |= Placement;\n      }\n      fallbackChildFragment.return = workInProgress;\n      primaryChildFragment.return = workInProgress;\n      primaryChildFragment.sibling = fallbackChildFragment;\n      workInProgress.child = primaryChildFragment;\n      return fallbackChildFragment;\n    }\n    function retrySuspenseComponentWithoutHydrating(current, workInProgress, renderLanes, recoverableError) {\n      if (recoverableError !== null) {\n        queueHydrationError(recoverableError);\n      }\n      reconcileChildFibers(workInProgress, current.child, null, renderLanes);\n      var nextProps = workInProgress.pendingProps;\n      var primaryChildren = nextProps.children;\n      var primaryChildFragment = mountSuspensePrimaryChildren(workInProgress, primaryChildren);\n      primaryChildFragment.flags |= Placement;\n      workInProgress.memoizedState = null;\n      return primaryChildFragment;\n    }\n    function mountSuspenseFallbackAfterRetryWithoutHydrating(current, workInProgress, primaryChildren, fallbackChildren, renderLanes) {\n      var fiberMode = workInProgress.mode;\n      var primaryChildProps = {\n        mode: \"visible\",\n        children: primaryChildren\n      };\n      var primaryChildFragment = mountWorkInProgressOffscreenFiber(primaryChildProps, fiberMode);\n      var fallbackChildFragment = createFiberFromFragment(fallbackChildren, fiberMode, renderLanes, null);\n      fallbackChildFragment.flags |= Placement;\n      primaryChildFragment.return = workInProgress;\n      fallbackChildFragment.return = workInProgress;\n      primaryChildFragment.sibling = fallbackChildFragment;\n      workInProgress.child = primaryChildFragment;\n      if ((workInProgress.mode & ConcurrentMode) !== NoMode) {\n        reconcileChildFibers(workInProgress, current.child, null, renderLanes);\n      }\n      return fallbackChildFragment;\n    }\n    function mountDehydratedSuspenseComponent(workInProgress, suspenseInstance, renderLanes) {\n      if ((workInProgress.mode & ConcurrentMode) === NoMode) {\n        {\n          error(\"Cannot hydrate Suspense in legacy mode. Switch from \" + \"ReactDOM.hydrate(element, container) to \" + \"ReactDOMClient.hydrateRoot(container, <App />)\" + \".render(element) or remove the Suspense components from \" + \"the server rendered components.\");\n        }\n        workInProgress.lanes = laneToLanes(SyncLane);\n      } else if (isSuspenseInstanceFallback()) {\n        workInProgress.lanes = laneToLanes(DefaultHydrationLane);\n      } else {\n        workInProgress.lanes = laneToLanes(OffscreenLane);\n      }\n      return null;\n    }\n    function updateDehydratedSuspenseComponent(current, workInProgress, didSuspend, nextProps, suspenseInstance, suspenseState, renderLanes) {\n      if (!didSuspend) {\n        if ((workInProgress.mode & ConcurrentMode) === NoMode) {\n          return retrySuspenseComponentWithoutHydrating(current, workInProgress, renderLanes, null);\n        }\n        if (isSuspenseInstanceFallback()) {\n          var digest, message, stack;\n          {\n            var _getSuspenseInstanceF = getSuspenseInstanceFallbackErrorDetails();\n            digest = _getSuspenseInstanceF.digest;\n            message = _getSuspenseInstanceF.message;\n            stack = _getSuspenseInstanceF.stack;\n          }\n          var error;\n          if (message) {\n            error = new Error(message);\n          } else {\n            error = new Error(\"The server could not finish this Suspense boundary, likely \" + \"due to an error during server rendering. Switched to \" + \"client rendering.\");\n          }\n          var capturedValue = createCapturedValue(error, digest, stack);\n          return retrySuspenseComponentWithoutHydrating(current, workInProgress, renderLanes, capturedValue);\n        }\n        var hasContextChanged = includesSomeLane(renderLanes, current.childLanes);\n        if (didReceiveUpdate || hasContextChanged) {\n          var root = getWorkInProgressRoot();\n          if (root !== null) {\n            var attemptHydrationAtLane = getBumpedLaneForHydration(root, renderLanes);\n            if (attemptHydrationAtLane !== NoLane && attemptHydrationAtLane !== suspenseState.retryLane) {\n              suspenseState.retryLane = attemptHydrationAtLane;\n              var eventTime = NoTimestamp;\n              enqueueConcurrentRenderForLane(current, attemptHydrationAtLane);\n              scheduleUpdateOnFiber(root, current, attemptHydrationAtLane, eventTime);\n            }\n          }\n          renderDidSuspendDelayIfPossible();\n          var _capturedValue = createCapturedValue(new Error(\"This Suspense boundary received an update before it finished \" + \"hydrating. This caused the boundary to switch to client rendering. \" + \"The usual way to fix this is to wrap the original update \" + \"in startTransition.\"));\n          return retrySuspenseComponentWithoutHydrating(current, workInProgress, renderLanes, _capturedValue);\n        } else if (isSuspenseInstancePending()) {\n          workInProgress.flags |= DidCapture;\n          workInProgress.child = current.child;\n          var retry = retryDehydratedSuspenseBoundary.bind(null, current);\n          registerSuspenseInstanceRetry();\n          return null;\n        } else {\n          reenterHydrationStateFromDehydratedSuspenseInstance(workInProgress, suspenseInstance, suspenseState.treeContext);\n          var primaryChildren = nextProps.children;\n          var primaryChildFragment = mountSuspensePrimaryChildren(workInProgress, primaryChildren);\n          primaryChildFragment.flags |= Hydrating;\n          return primaryChildFragment;\n        }\n      } else {\n        if (workInProgress.flags & ForceClientRender) {\n          workInProgress.flags &= ~ForceClientRender;\n          var _capturedValue2 = createCapturedValue(new Error(\"There was an error while hydrating this Suspense boundary. \" + \"Switched to client rendering.\"));\n          return retrySuspenseComponentWithoutHydrating(current, workInProgress, renderLanes, _capturedValue2);\n        } else if (workInProgress.memoizedState !== null) {\n          workInProgress.child = current.child;\n          workInProgress.flags |= DidCapture;\n          return null;\n        } else {\n          var nextPrimaryChildren = nextProps.children;\n          var nextFallbackChildren = nextProps.fallback;\n          var fallbackChildFragment = mountSuspenseFallbackAfterRetryWithoutHydrating(current, workInProgress, nextPrimaryChildren, nextFallbackChildren, renderLanes);\n          var _primaryChildFragment4 = workInProgress.child;\n          _primaryChildFragment4.memoizedState = mountSuspenseOffscreenState(renderLanes);\n          workInProgress.memoizedState = SUSPENDED_MARKER;\n          return fallbackChildFragment;\n        }\n      }\n    }\n    function scheduleSuspenseWorkOnFiber(fiber, renderLanes, propagationRoot) {\n      fiber.lanes = mergeLanes(fiber.lanes, renderLanes);\n      var alternate = fiber.alternate;\n      if (alternate !== null) {\n        alternate.lanes = mergeLanes(alternate.lanes, renderLanes);\n      }\n      scheduleContextWorkOnParentPath(fiber.return, renderLanes, propagationRoot);\n    }\n    function propagateSuspenseContextChange(workInProgress, firstChild, renderLanes) {\n      var node = firstChild;\n      while (node !== null) {\n        if (node.tag === SuspenseComponent) {\n          var state = node.memoizedState;\n          if (state !== null) {\n            scheduleSuspenseWorkOnFiber(node, renderLanes, workInProgress);\n          }\n        } else if (node.tag === SuspenseListComponent) {\n          scheduleSuspenseWorkOnFiber(node, renderLanes, workInProgress);\n        } else if (node.child !== null) {\n          node.child.return = node;\n          node = node.child;\n          continue;\n        }\n        if (node === workInProgress) {\n          return;\n        }\n        while (node.sibling === null) {\n          if (node.return === null || node.return === workInProgress) {\n            return;\n          }\n          node = node.return;\n        }\n        node.sibling.return = node.return;\n        node = node.sibling;\n      }\n    }\n    function findLastContentRow(firstChild) {\n      var row = firstChild;\n      var lastContentRow = null;\n      while (row !== null) {\n        var currentRow = row.alternate;\n        if (currentRow !== null && findFirstSuspended(currentRow) === null) {\n          lastContentRow = row;\n        }\n        row = row.sibling;\n      }\n      return lastContentRow;\n    }\n    function validateRevealOrder(revealOrder) {\n      {\n        if (revealOrder !== undefined && revealOrder !== \"forwards\" && revealOrder !== \"backwards\" && revealOrder !== \"together\" && !didWarnAboutRevealOrder[revealOrder]) {\n          didWarnAboutRevealOrder[revealOrder] = true;\n          if (typeof revealOrder === \"string\") {\n            switch (revealOrder.toLowerCase()) {\n              case \"together\":\n              case \"forwards\":\n              case \"backwards\":\n                {\n                  error('\"%s\" is not a valid value for revealOrder on <SuspenseList />. ' + 'Use lowercase \"%s\" instead.', revealOrder, revealOrder.toLowerCase());\n                  break;\n                }\n              case \"forward\":\n              case \"backward\":\n                {\n                  error('\"%s\" is not a valid value for revealOrder on <SuspenseList />. ' + 'React uses the -s suffix in the spelling. Use \"%ss\" instead.', revealOrder, revealOrder.toLowerCase());\n                  break;\n                }\n              default:\n                error('\"%s\" is not a supported revealOrder on <SuspenseList />. ' + 'Did you mean \"together\", \"forwards\" or \"backwards\"?', revealOrder);\n                break;\n            }\n          } else {\n            error(\"%s is not a supported value for revealOrder on <SuspenseList />. \" + 'Did you mean \"together\", \"forwards\" or \"backwards\"?', revealOrder);\n          }\n        }\n      }\n    }\n    function validateTailOptions(tailMode, revealOrder) {\n      {\n        if (tailMode !== undefined && !didWarnAboutTailOptions[tailMode]) {\n          if (tailMode !== \"collapsed\" && tailMode !== \"hidden\") {\n            didWarnAboutTailOptions[tailMode] = true;\n            error('\"%s\" is not a supported value for tail on <SuspenseList />. ' + 'Did you mean \"collapsed\" or \"hidden\"?', tailMode);\n          } else if (revealOrder !== \"forwards\" && revealOrder !== \"backwards\") {\n            didWarnAboutTailOptions[tailMode] = true;\n            error('<SuspenseList tail=\"%s\" /> is only valid if revealOrder is ' + '\"forwards\" or \"backwards\". ' + 'Did you mean to specify revealOrder=\"forwards\"?', tailMode);\n          }\n        }\n      }\n    }\n    function validateSuspenseListNestedChild(childSlot, index) {\n      {\n        var isAnArray = isArray(childSlot);\n        var isIterable = !isAnArray && typeof getIteratorFn(childSlot) === \"function\";\n        if (isAnArray || isIterable) {\n          var type = isAnArray ? \"array\" : \"iterable\";\n          error(\"A nested %s was passed to row #%s in <SuspenseList />. Wrap it in \" + \"an additional SuspenseList to configure its revealOrder: \" + \"<SuspenseList revealOrder=...> ... \" + \"<SuspenseList revealOrder=...>{%s}</SuspenseList> ... \" + \"</SuspenseList>\", type, index, type);\n          return false;\n        }\n      }\n      return true;\n    }\n    function validateSuspenseListChildren(children, revealOrder) {\n      {\n        if ((revealOrder === \"forwards\" || revealOrder === \"backwards\") && children !== undefined && children !== null && children !== false) {\n          if (isArray(children)) {\n            for (var i = 0; i < children.length; i++) {\n              if (!validateSuspenseListNestedChild(children[i], i)) {\n                return;\n              }\n            }\n          } else {\n            var iteratorFn = getIteratorFn(children);\n            if (typeof iteratorFn === \"function\") {\n              var childrenIterator = iteratorFn.call(children);\n              if (childrenIterator) {\n                var step = childrenIterator.next();\n                var _i = 0;\n                for (; !step.done; step = childrenIterator.next()) {\n                  if (!validateSuspenseListNestedChild(step.value, _i)) {\n                    return;\n                  }\n                  _i++;\n                }\n              }\n            } else {\n              error('A single row was passed to a <SuspenseList revealOrder=\"%s\" />. ' + \"This is not useful since it needs multiple rows. \" + \"Did you mean to pass multiple children or an array?\", revealOrder);\n            }\n          }\n        }\n      }\n    }\n    function initSuspenseListRenderState(workInProgress, isBackwards, tail, lastContentRow, tailMode) {\n      var renderState = workInProgress.memoizedState;\n      if (renderState === null) {\n        workInProgress.memoizedState = {\n          isBackwards: isBackwards,\n          rendering: null,\n          renderingStartTime: 0,\n          last: lastContentRow,\n          tail: tail,\n          tailMode: tailMode\n        };\n      } else {\n        renderState.isBackwards = isBackwards;\n        renderState.rendering = null;\n        renderState.renderingStartTime = 0;\n        renderState.last = lastContentRow;\n        renderState.tail = tail;\n        renderState.tailMode = tailMode;\n      }\n    }\n    function updateSuspenseListComponent(current, workInProgress, renderLanes) {\n      var nextProps = workInProgress.pendingProps;\n      var revealOrder = nextProps.revealOrder;\n      var tailMode = nextProps.tail;\n      var newChildren = nextProps.children;\n      validateRevealOrder(revealOrder);\n      validateTailOptions(tailMode, revealOrder);\n      validateSuspenseListChildren(newChildren, revealOrder);\n      reconcileChildren(current, workInProgress, newChildren, renderLanes);\n      var suspenseContext = suspenseStackCursor.current;\n      var shouldForceFallback = hasSuspenseContext(suspenseContext, ForceSuspenseFallback);\n      if (shouldForceFallback) {\n        suspenseContext = setShallowSuspenseContext(suspenseContext, ForceSuspenseFallback);\n        workInProgress.flags |= DidCapture;\n      } else {\n        var didSuspendBefore = current !== null && (current.flags & DidCapture) !== NoFlags;\n        if (didSuspendBefore) {\n          propagateSuspenseContextChange(workInProgress, workInProgress.child, renderLanes);\n        }\n        suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);\n      }\n      pushSuspenseContext(workInProgress, suspenseContext);\n      if ((workInProgress.mode & ConcurrentMode) === NoMode) {\n        workInProgress.memoizedState = null;\n      } else {\n        switch (revealOrder) {\n          case \"forwards\":\n            {\n              var lastContentRow = findLastContentRow(workInProgress.child);\n              var tail;\n              if (lastContentRow === null) {\n                tail = workInProgress.child;\n                workInProgress.child = null;\n              } else {\n                tail = lastContentRow.sibling;\n                lastContentRow.sibling = null;\n              }\n              initSuspenseListRenderState(workInProgress, false, tail, lastContentRow, tailMode);\n              break;\n            }\n          case \"backwards\":\n            {\n              var _tail = null;\n              var row = workInProgress.child;\n              workInProgress.child = null;\n              while (row !== null) {\n                var currentRow = row.alternate;\n                if (currentRow !== null && findFirstSuspended(currentRow) === null) {\n                  workInProgress.child = row;\n                  break;\n                }\n                var nextRow = row.sibling;\n                row.sibling = _tail;\n                _tail = row;\n                row = nextRow;\n              }\n              initSuspenseListRenderState(workInProgress, true, _tail, null, tailMode);\n              break;\n            }\n          case \"together\":\n            {\n              initSuspenseListRenderState(workInProgress, false, null, null, undefined);\n              break;\n            }\n          default:\n            {\n              workInProgress.memoizedState = null;\n            }\n        }\n      }\n      return workInProgress.child;\n    }\n    function updatePortalComponent(current, workInProgress, renderLanes) {\n      pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);\n      var nextChildren = workInProgress.pendingProps;\n      if (current === null) {\n        workInProgress.child = reconcileChildFibers(workInProgress, null, nextChildren, renderLanes);\n      } else {\n        reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n      }\n      return workInProgress.child;\n    }\n    var hasWarnedAboutUsingNoValuePropOnContextProvider = false;\n    function updateContextProvider(current, workInProgress, renderLanes) {\n      var providerType = workInProgress.type;\n      var context = providerType._context;\n      var newProps = workInProgress.pendingProps;\n      var oldProps = workInProgress.memoizedProps;\n      var newValue = newProps.value;\n      {\n        if (!(\"value\" in newProps)) {\n          if (!hasWarnedAboutUsingNoValuePropOnContextProvider) {\n            hasWarnedAboutUsingNoValuePropOnContextProvider = true;\n            error(\"The `value` prop is required for the `<Context.Provider>`. Did you misspell it or forget to pass it?\");\n          }\n        }\n        var providerPropTypes = workInProgress.type.propTypes;\n        if (providerPropTypes) {\n          checkPropTypes(providerPropTypes, newProps, \"prop\", \"Context.Provider\");\n        }\n      }\n      pushProvider(workInProgress, context, newValue);\n      {\n        if (oldProps !== null) {\n          var oldValue = oldProps.value;\n          if (objectIs(oldValue, newValue)) {\n            if (oldProps.children === newProps.children && !hasContextChanged()) {\n              return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n            }\n          } else {\n            propagateContextChange(workInProgress, context, renderLanes);\n          }\n        }\n      }\n      var newChildren = newProps.children;\n      reconcileChildren(current, workInProgress, newChildren, renderLanes);\n      return workInProgress.child;\n    }\n    var hasWarnedAboutUsingContextAsConsumer = false;\n    function updateContextConsumer(current, workInProgress, renderLanes) {\n      var context = workInProgress.type;\n      {\n        if (context._context === undefined) {\n          if (context !== context.Consumer) {\n            if (!hasWarnedAboutUsingContextAsConsumer) {\n              hasWarnedAboutUsingContextAsConsumer = true;\n              error(\"Rendering <Context> directly is not supported and will be removed in \" + \"a future major release. Did you mean to render <Context.Consumer> instead?\");\n            }\n          }\n        } else {\n          context = context._context;\n        }\n      }\n      var newProps = workInProgress.pendingProps;\n      var render = newProps.children;\n      {\n        if (typeof render !== \"function\") {\n          error(\"A context consumer was rendered with multiple children, or a child \" + \"that isn't a function. A context consumer expects a single child \" + \"that is a function. If you did pass a function, make sure there \" + \"is no trailing or leading whitespace around it.\");\n        }\n      }\n      prepareToReadContext(workInProgress, renderLanes);\n      var newValue = _readContext(context);\n      var newChildren;\n      {\n        ReactCurrentOwner$1.current = workInProgress;\n        setIsRendering(true);\n        newChildren = render(newValue);\n        setIsRendering(false);\n      }\n      workInProgress.flags |= PerformedWork;\n      reconcileChildren(current, workInProgress, newChildren, renderLanes);\n      return workInProgress.child;\n    }\n    function markWorkInProgressReceivedUpdate() {\n      didReceiveUpdate = true;\n    }\n    function resetSuspendedCurrentOnMountInLegacyMode(current, workInProgress) {\n      if ((workInProgress.mode & ConcurrentMode) === NoMode) {\n        if (current !== null) {\n          current.alternate = null;\n          workInProgress.alternate = null;\n          workInProgress.flags |= Placement;\n        }\n      }\n    }\n    function bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes) {\n      if (current !== null) {\n        workInProgress.dependencies = current.dependencies;\n      }\n      {\n        stopProfilerTimerIfRunning();\n      }\n      markSkippedUpdateLanes(workInProgress.lanes);\n      if (!includesSomeLane(renderLanes, workInProgress.childLanes)) {\n        {\n          return null;\n        }\n      }\n      cloneChildFibers(current, workInProgress);\n      return workInProgress.child;\n    }\n    function remountFiber(current, oldWorkInProgress, newWorkInProgress) {\n      {\n        var returnFiber = oldWorkInProgress.return;\n        if (returnFiber === null) {\n          throw new Error(\"Cannot swap the root fiber.\");\n        }\n        current.alternate = null;\n        oldWorkInProgress.alternate = null;\n        newWorkInProgress.index = oldWorkInProgress.index;\n        newWorkInProgress.sibling = oldWorkInProgress.sibling;\n        newWorkInProgress.return = oldWorkInProgress.return;\n        newWorkInProgress.ref = oldWorkInProgress.ref;\n        if (oldWorkInProgress === returnFiber.child) {\n          returnFiber.child = newWorkInProgress;\n        } else {\n          var prevSibling = returnFiber.child;\n          if (prevSibling === null) {\n            throw new Error(\"Expected parent to have a child.\");\n          }\n          while (prevSibling.sibling !== oldWorkInProgress) {\n            prevSibling = prevSibling.sibling;\n            if (prevSibling === null) {\n              throw new Error(\"Expected to find the previous sibling.\");\n            }\n          }\n          prevSibling.sibling = newWorkInProgress;\n        }\n        var deletions = returnFiber.deletions;\n        if (deletions === null) {\n          returnFiber.deletions = [current];\n          returnFiber.flags |= ChildDeletion;\n        } else {\n          deletions.push(current);\n        }\n        newWorkInProgress.flags |= Placement;\n        return newWorkInProgress;\n      }\n    }\n    function checkScheduledUpdateOrContext(current, renderLanes) {\n      var updateLanes = current.lanes;\n      if (includesSomeLane(updateLanes, renderLanes)) {\n        return true;\n      }\n      return false;\n    }\n    function attemptEarlyBailoutIfNoScheduledUpdate(current, workInProgress, renderLanes) {\n      switch (workInProgress.tag) {\n        case HostRoot:\n          pushHostRootContext(workInProgress);\n          var root = workInProgress.stateNode;\n          break;\n        case HostComponent:\n          pushHostContext(workInProgress);\n          break;\n        case ClassComponent:\n          {\n            var Component = workInProgress.type;\n            if (isContextProvider(Component)) {\n              pushContextProvider(workInProgress);\n            }\n            break;\n          }\n        case HostPortal:\n          pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);\n          break;\n        case ContextProvider:\n          {\n            var newValue = workInProgress.memoizedProps.value;\n            var context = workInProgress.type._context;\n            pushProvider(workInProgress, context, newValue);\n            break;\n          }\n        case Profiler:\n          {\n            var hasChildWork = includesSomeLane(renderLanes, workInProgress.childLanes);\n            if (hasChildWork) {\n              workInProgress.flags |= Update;\n            }\n            {\n              var stateNode = workInProgress.stateNode;\n              stateNode.effectDuration = 0;\n              stateNode.passiveEffectDuration = 0;\n            }\n          }\n          break;\n        case SuspenseComponent:\n          {\n            var state = workInProgress.memoizedState;\n            if (state !== null) {\n              if (state.dehydrated !== null) {\n                pushSuspenseContext(workInProgress, setDefaultShallowSuspenseContext(suspenseStackCursor.current));\n                workInProgress.flags |= DidCapture;\n                return null;\n              }\n              var primaryChildFragment = workInProgress.child;\n              var primaryChildLanes = primaryChildFragment.childLanes;\n              if (includesSomeLane(renderLanes, primaryChildLanes)) {\n                return updateSuspenseComponent(current, workInProgress, renderLanes);\n              } else {\n                pushSuspenseContext(workInProgress, setDefaultShallowSuspenseContext(suspenseStackCursor.current));\n                var child = bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n                if (child !== null) {\n                  return child.sibling;\n                } else {\n                  return null;\n                }\n              }\n            } else {\n              pushSuspenseContext(workInProgress, setDefaultShallowSuspenseContext(suspenseStackCursor.current));\n            }\n            break;\n          }\n        case SuspenseListComponent:\n          {\n            var didSuspendBefore = (current.flags & DidCapture) !== NoFlags;\n            var _hasChildWork = includesSomeLane(renderLanes, workInProgress.childLanes);\n            if (didSuspendBefore) {\n              if (_hasChildWork) {\n                return updateSuspenseListComponent(current, workInProgress, renderLanes);\n              }\n              workInProgress.flags |= DidCapture;\n            }\n            var renderState = workInProgress.memoizedState;\n            if (renderState !== null) {\n              renderState.rendering = null;\n              renderState.tail = null;\n              renderState.lastEffect = null;\n            }\n            pushSuspenseContext(workInProgress, suspenseStackCursor.current);\n            if (_hasChildWork) {\n              break;\n            } else {\n              return null;\n            }\n          }\n        case OffscreenComponent:\n        case LegacyHiddenComponent:\n          {\n            workInProgress.lanes = NoLanes;\n            return updateOffscreenComponent(current, workInProgress, renderLanes);\n          }\n      }\n      return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n    }\n    function beginWork(current, workInProgress, renderLanes) {\n      {\n        if (workInProgress._debugNeedsRemount && current !== null) {\n          return remountFiber(current, workInProgress, createFiberFromTypeAndProps(workInProgress.type, workInProgress.key, workInProgress.pendingProps, workInProgress._debugOwner || null, workInProgress.mode, workInProgress.lanes));\n        }\n      }\n      if (current !== null) {\n        var oldProps = current.memoizedProps;\n        var newProps = workInProgress.pendingProps;\n        if (oldProps !== newProps || hasContextChanged() || workInProgress.type !== current.type) {\n          didReceiveUpdate = true;\n        } else {\n          var hasScheduledUpdateOrContext = checkScheduledUpdateOrContext(current, renderLanes);\n          if (!hasScheduledUpdateOrContext && (workInProgress.flags & DidCapture) === NoFlags) {\n            didReceiveUpdate = false;\n            return attemptEarlyBailoutIfNoScheduledUpdate(current, workInProgress, renderLanes);\n          }\n          if ((current.flags & ForceUpdateForLegacySuspense) !== NoFlags) {\n            didReceiveUpdate = true;\n          } else {\n            didReceiveUpdate = false;\n          }\n        }\n      } else {\n        didReceiveUpdate = false;\n      }\n      workInProgress.lanes = NoLanes;\n      switch (workInProgress.tag) {\n        case IndeterminateComponent:\n          {\n            return mountIndeterminateComponent(current, workInProgress, workInProgress.type, renderLanes);\n          }\n        case LazyComponent:\n          {\n            var elementType = workInProgress.elementType;\n            return mountLazyComponent(current, workInProgress, elementType, renderLanes);\n          }\n        case FunctionComponent:\n          {\n            var Component = workInProgress.type;\n            var unresolvedProps = workInProgress.pendingProps;\n            var resolvedProps = workInProgress.elementType === Component ? unresolvedProps : resolveDefaultProps(Component, unresolvedProps);\n            return updateFunctionComponent(current, workInProgress, Component, resolvedProps, renderLanes);\n          }\n        case ClassComponent:\n          {\n            var _Component = workInProgress.type;\n            var _unresolvedProps = workInProgress.pendingProps;\n            var _resolvedProps = workInProgress.elementType === _Component ? _unresolvedProps : resolveDefaultProps(_Component, _unresolvedProps);\n            return updateClassComponent(current, workInProgress, _Component, _resolvedProps, renderLanes);\n          }\n        case HostRoot:\n          return updateHostRoot(current, workInProgress, renderLanes);\n        case HostComponent:\n          return updateHostComponent(current, workInProgress, renderLanes);\n        case HostText:\n          return updateHostText();\n        case SuspenseComponent:\n          return updateSuspenseComponent(current, workInProgress, renderLanes);\n        case HostPortal:\n          return updatePortalComponent(current, workInProgress, renderLanes);\n        case ForwardRef:\n          {\n            var type = workInProgress.type;\n            var _unresolvedProps2 = workInProgress.pendingProps;\n            var _resolvedProps2 = workInProgress.elementType === type ? _unresolvedProps2 : resolveDefaultProps(type, _unresolvedProps2);\n            return updateForwardRef(current, workInProgress, type, _resolvedProps2, renderLanes);\n          }\n        case Fragment:\n          return updateFragment(current, workInProgress, renderLanes);\n        case Mode:\n          return updateMode(current, workInProgress, renderLanes);\n        case Profiler:\n          return updateProfiler(current, workInProgress, renderLanes);\n        case ContextProvider:\n          return updateContextProvider(current, workInProgress, renderLanes);\n        case ContextConsumer:\n          return updateContextConsumer(current, workInProgress, renderLanes);\n        case MemoComponent:\n          {\n            var _type2 = workInProgress.type;\n            var _unresolvedProps3 = workInProgress.pendingProps;\n            var _resolvedProps3 = resolveDefaultProps(_type2, _unresolvedProps3);\n            {\n              if (workInProgress.type !== workInProgress.elementType) {\n                var outerPropTypes = _type2.propTypes;\n                if (outerPropTypes) {\n                  checkPropTypes(outerPropTypes, _resolvedProps3, \"prop\", getComponentNameFromType(_type2));\n                }\n              }\n            }\n            _resolvedProps3 = resolveDefaultProps(_type2.type, _resolvedProps3);\n            return updateMemoComponent(current, workInProgress, _type2, _resolvedProps3, renderLanes);\n          }\n        case SimpleMemoComponent:\n          {\n            return updateSimpleMemoComponent(current, workInProgress, workInProgress.type, workInProgress.pendingProps, renderLanes);\n          }\n        case IncompleteClassComponent:\n          {\n            var _Component2 = workInProgress.type;\n            var _unresolvedProps4 = workInProgress.pendingProps;\n            var _resolvedProps4 = workInProgress.elementType === _Component2 ? _unresolvedProps4 : resolveDefaultProps(_Component2, _unresolvedProps4);\n            return mountIncompleteClassComponent(current, workInProgress, _Component2, _resolvedProps4, renderLanes);\n          }\n        case SuspenseListComponent:\n          {\n            return updateSuspenseListComponent(current, workInProgress, renderLanes);\n          }\n        case ScopeComponent:\n          {\n            break;\n          }\n        case OffscreenComponent:\n          {\n            return updateOffscreenComponent(current, workInProgress, renderLanes);\n          }\n      }\n      throw new Error(\"Unknown unit of work tag (\" + workInProgress.tag + \"). This error is likely caused by a bug in \" + \"React. Please file an issue.\");\n    }\n    function markUpdate(workInProgress) {\n      workInProgress.flags |= Update;\n    }\n    function markRef$1(workInProgress) {\n      workInProgress.flags |= Ref;\n    }\n    function hadNoMutationsEffects(current, completedWork) {\n      var didBailout = current !== null && current.child === completedWork.child;\n      if (didBailout) {\n        return true;\n      }\n      if ((completedWork.flags & ChildDeletion) !== NoFlags) {\n        return false;\n      }\n      var child = completedWork.child;\n      while (child !== null) {\n        if ((child.flags & MutationMask) !== NoFlags || (child.subtreeFlags & MutationMask) !== NoFlags) {\n          return false;\n        }\n        child = child.sibling;\n      }\n      return true;\n    }\n    var _appendAllChildren;\n    var updateHostContainer;\n    var updateHostComponent$1;\n    var updateHostText$1;\n    {\n      _appendAllChildren = function appendAllChildren(parent, workInProgress, needsVisibilityToggle, isHidden) {\n        var node = workInProgress.child;\n        while (node !== null) {\n          if (node.tag === HostComponent) {\n            var instance = node.stateNode;\n            if (needsVisibilityToggle && isHidden) {\n              var props = node.memoizedProps;\n              var type = node.type;\n              instance = cloneHiddenInstance(instance);\n            }\n            appendInitialChild(parent, instance);\n          } else if (node.tag === HostText) {\n            var _instance = node.stateNode;\n            if (needsVisibilityToggle && isHidden) {\n              var text = node.memoizedProps;\n              _instance = cloneHiddenTextInstance();\n            }\n            appendInitialChild(parent, _instance);\n          } else if (node.tag === HostPortal) ;else if (node.tag === OffscreenComponent && node.memoizedState !== null) {\n            var child = node.child;\n            if (child !== null) {\n              child.return = node;\n            }\n            _appendAllChildren(parent, node, true, true);\n          } else if (node.child !== null) {\n            node.child.return = node;\n            node = node.child;\n            continue;\n          }\n          node = node;\n          if (node === workInProgress) {\n            return;\n          }\n          while (node.sibling === null) {\n            if (node.return === null || node.return === workInProgress) {\n              return;\n            }\n            node = node.return;\n          }\n          node.sibling.return = node.return;\n          node = node.sibling;\n        }\n      };\n      var appendAllChildrenToContainer = function appendAllChildrenToContainer(containerChildSet, workInProgress, needsVisibilityToggle, isHidden) {\n        var node = workInProgress.child;\n        while (node !== null) {\n          if (node.tag === HostComponent) {\n            var instance = node.stateNode;\n            if (needsVisibilityToggle && isHidden) {\n              var props = node.memoizedProps;\n              var type = node.type;\n              instance = cloneHiddenInstance(instance);\n            }\n            appendChildToContainerChildSet(containerChildSet, instance);\n          } else if (node.tag === HostText) {\n            var _instance2 = node.stateNode;\n            if (needsVisibilityToggle && isHidden) {\n              var text = node.memoizedProps;\n              _instance2 = cloneHiddenTextInstance();\n            }\n            appendChildToContainerChildSet(containerChildSet, _instance2);\n          } else if (node.tag === HostPortal) ;else if (node.tag === OffscreenComponent && node.memoizedState !== null) {\n            var child = node.child;\n            if (child !== null) {\n              child.return = node;\n            }\n            appendAllChildrenToContainer(containerChildSet, node, true, true);\n          } else if (node.child !== null) {\n            node.child.return = node;\n            node = node.child;\n            continue;\n          }\n          node = node;\n          if (node === workInProgress) {\n            return;\n          }\n          while (node.sibling === null) {\n            if (node.return === null || node.return === workInProgress) {\n              return;\n            }\n            node = node.return;\n          }\n          node.sibling.return = node.return;\n          node = node.sibling;\n        }\n      };\n      updateHostContainer = function updateHostContainer(current, workInProgress) {\n        var portalOrRoot = workInProgress.stateNode;\n        var childrenUnchanged = hadNoMutationsEffects(current, workInProgress);\n        if (childrenUnchanged) ;else {\n          var container = portalOrRoot.containerInfo;\n          var newChildSet = createContainerChildSet(container);\n          appendAllChildrenToContainer(newChildSet, workInProgress, false, false);\n          portalOrRoot.pendingChildren = newChildSet;\n          markUpdate(workInProgress);\n          finalizeContainerChildren(container, newChildSet);\n        }\n      };\n      updateHostComponent$1 = function updateHostComponent$1(current, workInProgress, type, newProps, rootContainerInstance) {\n        var currentInstance = current.stateNode;\n        var oldProps = current.memoizedProps;\n        var childrenUnchanged = hadNoMutationsEffects(current, workInProgress);\n        if (childrenUnchanged && oldProps === newProps) {\n          workInProgress.stateNode = currentInstance;\n          return;\n        }\n        var recyclableInstance = workInProgress.stateNode;\n        var currentHostContext = getHostContext();\n        var updatePayload = null;\n        if (oldProps !== newProps) {\n          updatePayload = prepareUpdate(recyclableInstance, type, oldProps, newProps);\n        }\n        if (childrenUnchanged && updatePayload === null) {\n          workInProgress.stateNode = currentInstance;\n          return;\n        }\n        var newInstance = cloneInstance(currentInstance, updatePayload, type, oldProps, newProps, workInProgress, childrenUnchanged);\n        workInProgress.stateNode = newInstance;\n        if (childrenUnchanged) {\n          markUpdate(workInProgress);\n        } else {\n          _appendAllChildren(newInstance, workInProgress, false, false);\n        }\n      };\n      updateHostText$1 = function updateHostText$1(current, workInProgress, oldText, newText) {\n        if (oldText !== newText) {\n          var rootContainerInstance = getRootHostContainer();\n          var currentHostContext = getHostContext();\n          workInProgress.stateNode = createTextInstance(newText, rootContainerInstance, currentHostContext, workInProgress);\n          markUpdate(workInProgress);\n        } else {\n          workInProgress.stateNode = current.stateNode;\n        }\n      };\n    }\n    function cutOffTailIfNeeded(renderState, hasRenderedATailFallback) {\n      switch (renderState.tailMode) {\n        case \"hidden\":\n          {\n            var tailNode = renderState.tail;\n            var lastTailNode = null;\n            while (tailNode !== null) {\n              if (tailNode.alternate !== null) {\n                lastTailNode = tailNode;\n              }\n              tailNode = tailNode.sibling;\n            }\n            if (lastTailNode === null) {\n              renderState.tail = null;\n            } else {\n              lastTailNode.sibling = null;\n            }\n            break;\n          }\n        case \"collapsed\":\n          {\n            var _tailNode = renderState.tail;\n            var _lastTailNode = null;\n            while (_tailNode !== null) {\n              if (_tailNode.alternate !== null) {\n                _lastTailNode = _tailNode;\n              }\n              _tailNode = _tailNode.sibling;\n            }\n            if (_lastTailNode === null) {\n              if (!hasRenderedATailFallback && renderState.tail !== null) {\n                renderState.tail.sibling = null;\n              } else {\n                renderState.tail = null;\n              }\n            } else {\n              _lastTailNode.sibling = null;\n            }\n            break;\n          }\n      }\n    }\n    function bubbleProperties(completedWork) {\n      var didBailout = completedWork.alternate !== null && completedWork.alternate.child === completedWork.child;\n      var newChildLanes = NoLanes;\n      var subtreeFlags = NoFlags;\n      if (!didBailout) {\n        if ((completedWork.mode & ProfileMode) !== NoMode) {\n          var actualDuration = completedWork.actualDuration;\n          var treeBaseDuration = completedWork.selfBaseDuration;\n          var child = completedWork.child;\n          while (child !== null) {\n            newChildLanes = mergeLanes(newChildLanes, mergeLanes(child.lanes, child.childLanes));\n            subtreeFlags |= child.subtreeFlags;\n            subtreeFlags |= child.flags;\n            actualDuration += child.actualDuration;\n            treeBaseDuration += child.treeBaseDuration;\n            child = child.sibling;\n          }\n          completedWork.actualDuration = actualDuration;\n          completedWork.treeBaseDuration = treeBaseDuration;\n        } else {\n          var _child = completedWork.child;\n          while (_child !== null) {\n            newChildLanes = mergeLanes(newChildLanes, mergeLanes(_child.lanes, _child.childLanes));\n            subtreeFlags |= _child.subtreeFlags;\n            subtreeFlags |= _child.flags;\n            _child.return = completedWork;\n            _child = _child.sibling;\n          }\n        }\n        completedWork.subtreeFlags |= subtreeFlags;\n      } else {\n        if ((completedWork.mode & ProfileMode) !== NoMode) {\n          var _treeBaseDuration = completedWork.selfBaseDuration;\n          var _child2 = completedWork.child;\n          while (_child2 !== null) {\n            newChildLanes = mergeLanes(newChildLanes, mergeLanes(_child2.lanes, _child2.childLanes));\n            subtreeFlags |= _child2.subtreeFlags & StaticMask;\n            subtreeFlags |= _child2.flags & StaticMask;\n            _treeBaseDuration += _child2.treeBaseDuration;\n            _child2 = _child2.sibling;\n          }\n          completedWork.treeBaseDuration = _treeBaseDuration;\n        } else {\n          var _child3 = completedWork.child;\n          while (_child3 !== null) {\n            newChildLanes = mergeLanes(newChildLanes, mergeLanes(_child3.lanes, _child3.childLanes));\n            subtreeFlags |= _child3.subtreeFlags & StaticMask;\n            subtreeFlags |= _child3.flags & StaticMask;\n            _child3.return = completedWork;\n            _child3 = _child3.sibling;\n          }\n        }\n        completedWork.subtreeFlags |= subtreeFlags;\n      }\n      completedWork.childLanes = newChildLanes;\n      return didBailout;\n    }\n    function completeDehydratedSuspenseBoundary(current, workInProgress, nextState) {\n      var wasHydrated = popHydrationState();\n      if (nextState !== null && nextState.dehydrated !== null) {\n        if (current === null) {\n          if (!wasHydrated) {\n            throw new Error(\"A dehydrated suspense component was completed without a hydrated node. \" + \"This is probably a bug in React.\");\n          }\n          prepareToHydrateHostSuspenseInstance();\n          bubbleProperties(workInProgress);\n          {\n            if ((workInProgress.mode & ProfileMode) !== NoMode) {\n              var isTimedOutSuspense = nextState !== null;\n              if (isTimedOutSuspense) {\n                var primaryChildFragment = workInProgress.child;\n                if (primaryChildFragment !== null) {\n                  workInProgress.treeBaseDuration -= primaryChildFragment.treeBaseDuration;\n                }\n              }\n            }\n          }\n          return false;\n        } else {\n          if ((workInProgress.flags & DidCapture) === NoFlags) {\n            workInProgress.memoizedState = null;\n          }\n          workInProgress.flags |= Update;\n          bubbleProperties(workInProgress);\n          {\n            if ((workInProgress.mode & ProfileMode) !== NoMode) {\n              var _isTimedOutSuspense = nextState !== null;\n              if (_isTimedOutSuspense) {\n                var _primaryChildFragment = workInProgress.child;\n                if (_primaryChildFragment !== null) {\n                  workInProgress.treeBaseDuration -= _primaryChildFragment.treeBaseDuration;\n                }\n              }\n            }\n          }\n          return false;\n        }\n      } else {\n        upgradeHydrationErrorsToRecoverable();\n        return true;\n      }\n    }\n    function completeWork(current, workInProgress, renderLanes) {\n      var newProps = workInProgress.pendingProps;\n      popTreeContext(workInProgress);\n      switch (workInProgress.tag) {\n        case IndeterminateComponent:\n        case LazyComponent:\n        case SimpleMemoComponent:\n        case FunctionComponent:\n        case ForwardRef:\n        case Fragment:\n        case Mode:\n        case Profiler:\n        case ContextConsumer:\n        case MemoComponent:\n          bubbleProperties(workInProgress);\n          return null;\n        case ClassComponent:\n          {\n            var Component = workInProgress.type;\n            if (isContextProvider(Component)) {\n              popContext(workInProgress);\n            }\n            bubbleProperties(workInProgress);\n            return null;\n          }\n        case HostRoot:\n          {\n            var fiberRoot = workInProgress.stateNode;\n            popHostContainer(workInProgress);\n            popTopLevelContextObject(workInProgress);\n            resetWorkInProgressVersions();\n            if (fiberRoot.pendingContext) {\n              fiberRoot.context = fiberRoot.pendingContext;\n              fiberRoot.pendingContext = null;\n            }\n            if (current === null || current.child === null) {\n              var wasHydrated = popHydrationState();\n              if (wasHydrated) {\n                markUpdate(workInProgress);\n              } else {\n                if (current !== null) {\n                  var prevState = current.memoizedState;\n                  if (!prevState.isDehydrated || (workInProgress.flags & ForceClientRender) !== NoFlags) {\n                    workInProgress.flags |= Snapshot;\n                    upgradeHydrationErrorsToRecoverable();\n                  }\n                }\n              }\n            }\n            updateHostContainer(current, workInProgress);\n            bubbleProperties(workInProgress);\n            return null;\n          }\n        case HostComponent:\n          {\n            popHostContext(workInProgress);\n            var rootContainerInstance = getRootHostContainer();\n            var type = workInProgress.type;\n            if (current !== null && workInProgress.stateNode != null) {\n              updateHostComponent$1(current, workInProgress, type, newProps, rootContainerInstance);\n              if (current.ref !== workInProgress.ref) {\n                markRef$1(workInProgress);\n              }\n            } else {\n              if (!newProps) {\n                if (workInProgress.stateNode === null) {\n                  throw new Error(\"We must have new props for new mounts. This error is likely \" + \"caused by a bug in React. Please file an issue.\");\n                }\n                bubbleProperties(workInProgress);\n                return null;\n              }\n              var currentHostContext = getHostContext();\n              var _wasHydrated = popHydrationState();\n              if (_wasHydrated) {\n                if (prepareToHydrateHostInstance()) {\n                  markUpdate(workInProgress);\n                }\n              } else {\n                var instance = createInstance(type, newProps, rootContainerInstance, currentHostContext, workInProgress);\n                _appendAllChildren(instance, workInProgress, false, false);\n                workInProgress.stateNode = instance;\n              }\n              if (workInProgress.ref !== null) {\n                markRef$1(workInProgress);\n              }\n            }\n            bubbleProperties(workInProgress);\n            return null;\n          }\n        case HostText:\n          {\n            var newText = newProps;\n            if (current && workInProgress.stateNode != null) {\n              var oldText = current.memoizedProps;\n              updateHostText$1(current, workInProgress, oldText, newText);\n            } else {\n              if (typeof newText !== \"string\") {\n                if (workInProgress.stateNode === null) {\n                  throw new Error(\"We must have new props for new mounts. This error is likely \" + \"caused by a bug in React. Please file an issue.\");\n                }\n              }\n              var _rootContainerInstance = getRootHostContainer();\n              var _currentHostContext = getHostContext();\n              var _wasHydrated2 = popHydrationState();\n              if (_wasHydrated2) {\n                if (prepareToHydrateHostTextInstance()) {\n                  markUpdate(workInProgress);\n                }\n              } else {\n                workInProgress.stateNode = createTextInstance(newText, _rootContainerInstance, _currentHostContext, workInProgress);\n              }\n            }\n            bubbleProperties(workInProgress);\n            return null;\n          }\n        case SuspenseComponent:\n          {\n            popSuspenseContext(workInProgress);\n            var nextState = workInProgress.memoizedState;\n            if (current === null || current.memoizedState !== null && current.memoizedState.dehydrated !== null) {\n              var fallthroughToNormalSuspensePath = completeDehydratedSuspenseBoundary(current, workInProgress, nextState);\n              if (!fallthroughToNormalSuspensePath) {\n                if (workInProgress.flags & ShouldCapture) {\n                  return workInProgress;\n                } else {\n                  return null;\n                }\n              }\n            }\n            if ((workInProgress.flags & DidCapture) !== NoFlags) {\n              workInProgress.lanes = renderLanes;\n              if ((workInProgress.mode & ProfileMode) !== NoMode) {\n                transferActualDuration(workInProgress);\n              }\n              return workInProgress;\n            }\n            var nextDidTimeout = nextState !== null;\n            var prevDidTimeout = current !== null && current.memoizedState !== null;\n            if (nextDidTimeout !== prevDidTimeout) {\n              if (nextDidTimeout) {\n                var _offscreenFiber2 = workInProgress.child;\n                _offscreenFiber2.flags |= Visibility;\n                if ((workInProgress.mode & ConcurrentMode) !== NoMode) {\n                  var hasInvisibleChildContext = current === null && (workInProgress.memoizedProps.unstable_avoidThisFallback !== true || !enableSuspenseAvoidThisFallback);\n                  if (hasInvisibleChildContext || hasSuspenseContext(suspenseStackCursor.current, InvisibleParentSuspenseContext)) {\n                    renderDidSuspend();\n                  } else {\n                    renderDidSuspendDelayIfPossible();\n                  }\n                }\n              }\n            }\n            var wakeables = workInProgress.updateQueue;\n            if (wakeables !== null) {\n              workInProgress.flags |= Update;\n            }\n            bubbleProperties(workInProgress);\n            {\n              if ((workInProgress.mode & ProfileMode) !== NoMode) {\n                if (nextDidTimeout) {\n                  var primaryChildFragment = workInProgress.child;\n                  if (primaryChildFragment !== null) {\n                    workInProgress.treeBaseDuration -= primaryChildFragment.treeBaseDuration;\n                  }\n                }\n              }\n            }\n            return null;\n          }\n        case HostPortal:\n          popHostContainer(workInProgress);\n          updateHostContainer(current, workInProgress);\n          if (current === null) {\n            preparePortalMount(workInProgress.stateNode.containerInfo);\n          }\n          bubbleProperties(workInProgress);\n          return null;\n        case ContextProvider:\n          var context = workInProgress.type._context;\n          popProvider(context, workInProgress);\n          bubbleProperties(workInProgress);\n          return null;\n        case IncompleteClassComponent:\n          {\n            var _Component = workInProgress.type;\n            if (isContextProvider(_Component)) {\n              popContext(workInProgress);\n            }\n            bubbleProperties(workInProgress);\n            return null;\n          }\n        case SuspenseListComponent:\n          {\n            popSuspenseContext(workInProgress);\n            var renderState = workInProgress.memoizedState;\n            if (renderState === null) {\n              bubbleProperties(workInProgress);\n              return null;\n            }\n            var didSuspendAlready = (workInProgress.flags & DidCapture) !== NoFlags;\n            var renderedTail = renderState.rendering;\n            if (renderedTail === null) {\n              if (!didSuspendAlready) {\n                var cannotBeSuspended = renderHasNotSuspendedYet() && (current === null || (current.flags & DidCapture) === NoFlags);\n                if (!cannotBeSuspended) {\n                  var row = workInProgress.child;\n                  while (row !== null) {\n                    var suspended = findFirstSuspended(row);\n                    if (suspended !== null) {\n                      didSuspendAlready = true;\n                      workInProgress.flags |= DidCapture;\n                      cutOffTailIfNeeded(renderState, false);\n                      var newThenables = suspended.updateQueue;\n                      if (newThenables !== null) {\n                        workInProgress.updateQueue = newThenables;\n                        workInProgress.flags |= Update;\n                      }\n                      workInProgress.subtreeFlags = NoFlags;\n                      resetChildFibers(workInProgress, renderLanes);\n                      pushSuspenseContext(workInProgress, setShallowSuspenseContext(suspenseStackCursor.current, ForceSuspenseFallback));\n                      return workInProgress.child;\n                    }\n                    row = row.sibling;\n                  }\n                }\n                if (renderState.tail !== null && now() > getRenderTargetTime()) {\n                  workInProgress.flags |= DidCapture;\n                  didSuspendAlready = true;\n                  cutOffTailIfNeeded(renderState, false);\n                  workInProgress.lanes = SomeRetryLane;\n                }\n              } else {\n                cutOffTailIfNeeded(renderState, false);\n              }\n            } else {\n              if (!didSuspendAlready) {\n                var _suspended = findFirstSuspended(renderedTail);\n                if (_suspended !== null) {\n                  workInProgress.flags |= DidCapture;\n                  didSuspendAlready = true;\n                  var _newThenables = _suspended.updateQueue;\n                  if (_newThenables !== null) {\n                    workInProgress.updateQueue = _newThenables;\n                    workInProgress.flags |= Update;\n                  }\n                  cutOffTailIfNeeded(renderState, true);\n                  if (renderState.tail === null && renderState.tailMode === \"hidden\" && !renderedTail.alternate && !getIsHydrating()) {\n                    bubbleProperties(workInProgress);\n                    return null;\n                  }\n                } else if (now() * 2 - renderState.renderingStartTime > getRenderTargetTime() && renderLanes !== OffscreenLane) {\n                  workInProgress.flags |= DidCapture;\n                  didSuspendAlready = true;\n                  cutOffTailIfNeeded(renderState, false);\n                  workInProgress.lanes = SomeRetryLane;\n                }\n              }\n              if (renderState.isBackwards) {\n                renderedTail.sibling = workInProgress.child;\n                workInProgress.child = renderedTail;\n              } else {\n                var previousSibling = renderState.last;\n                if (previousSibling !== null) {\n                  previousSibling.sibling = renderedTail;\n                } else {\n                  workInProgress.child = renderedTail;\n                }\n                renderState.last = renderedTail;\n              }\n            }\n            if (renderState.tail !== null) {\n              var next = renderState.tail;\n              renderState.rendering = next;\n              renderState.tail = next.sibling;\n              renderState.renderingStartTime = now();\n              next.sibling = null;\n              var suspenseContext = suspenseStackCursor.current;\n              if (didSuspendAlready) {\n                suspenseContext = setShallowSuspenseContext(suspenseContext, ForceSuspenseFallback);\n              } else {\n                suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);\n              }\n              pushSuspenseContext(workInProgress, suspenseContext);\n              return next;\n            }\n            bubbleProperties(workInProgress);\n            return null;\n          }\n        case ScopeComponent:\n          {\n            break;\n          }\n        case OffscreenComponent:\n        case LegacyHiddenComponent:\n          {\n            popRenderLanes(workInProgress);\n            var _nextState = workInProgress.memoizedState;\n            var nextIsHidden = _nextState !== null;\n            if (current !== null) {\n              var _prevState = current.memoizedState;\n              var prevIsHidden = _prevState !== null;\n              if (prevIsHidden !== nextIsHidden && !enableLegacyHidden) {\n                workInProgress.flags |= Visibility;\n              }\n            }\n            if (!nextIsHidden || (workInProgress.mode & ConcurrentMode) === NoMode) {\n              bubbleProperties(workInProgress);\n            } else {\n              if (includesSomeLane(subtreeRenderLanes, OffscreenLane)) {\n                bubbleProperties(workInProgress);\n              }\n            }\n            return null;\n          }\n        case CacheComponent:\n          {\n            return null;\n          }\n        case TracingMarkerComponent:\n          {\n            return null;\n          }\n      }\n      throw new Error(\"Unknown unit of work tag (\" + workInProgress.tag + \"). This error is likely caused by a bug in \" + \"React. Please file an issue.\");\n    }\n    function unwindWork(current, workInProgress, renderLanes) {\n      popTreeContext(workInProgress);\n      switch (workInProgress.tag) {\n        case ClassComponent:\n          {\n            var Component = workInProgress.type;\n            if (isContextProvider(Component)) {\n              popContext(workInProgress);\n            }\n            var flags = workInProgress.flags;\n            if (flags & ShouldCapture) {\n              workInProgress.flags = flags & ~ShouldCapture | DidCapture;\n              if ((workInProgress.mode & ProfileMode) !== NoMode) {\n                transferActualDuration(workInProgress);\n              }\n              return workInProgress;\n            }\n            return null;\n          }\n        case HostRoot:\n          {\n            var root = workInProgress.stateNode;\n            popHostContainer(workInProgress);\n            popTopLevelContextObject(workInProgress);\n            resetWorkInProgressVersions();\n            var _flags = workInProgress.flags;\n            if ((_flags & ShouldCapture) !== NoFlags && (_flags & DidCapture) === NoFlags) {\n              workInProgress.flags = _flags & ~ShouldCapture | DidCapture;\n              return workInProgress;\n            }\n            return null;\n          }\n        case HostComponent:\n          {\n            popHostContext(workInProgress);\n            return null;\n          }\n        case SuspenseComponent:\n          {\n            popSuspenseContext(workInProgress);\n            var suspenseState = workInProgress.memoizedState;\n            if (suspenseState !== null && suspenseState.dehydrated !== null) {\n              if (workInProgress.alternate === null) {\n                throw new Error(\"Threw in newly mounted dehydrated component. This is likely a bug in \" + \"React. Please file an issue.\");\n              }\n            }\n            var _flags2 = workInProgress.flags;\n            if (_flags2 & ShouldCapture) {\n              workInProgress.flags = _flags2 & ~ShouldCapture | DidCapture;\n              if ((workInProgress.mode & ProfileMode) !== NoMode) {\n                transferActualDuration(workInProgress);\n              }\n              return workInProgress;\n            }\n            return null;\n          }\n        case SuspenseListComponent:\n          {\n            popSuspenseContext(workInProgress);\n            return null;\n          }\n        case HostPortal:\n          popHostContainer(workInProgress);\n          return null;\n        case ContextProvider:\n          var context = workInProgress.type._context;\n          popProvider(context, workInProgress);\n          return null;\n        case OffscreenComponent:\n        case LegacyHiddenComponent:\n          popRenderLanes(workInProgress);\n          return null;\n        case CacheComponent:\n          return null;\n        default:\n          return null;\n      }\n    }\n    function unwindInterruptedWork(current, interruptedWork, renderLanes) {\n      popTreeContext(interruptedWork);\n      switch (interruptedWork.tag) {\n        case ClassComponent:\n          {\n            var childContextTypes = interruptedWork.type.childContextTypes;\n            if (childContextTypes !== null && childContextTypes !== undefined) {\n              popContext(interruptedWork);\n            }\n            break;\n          }\n        case HostRoot:\n          {\n            var root = interruptedWork.stateNode;\n            popHostContainer(interruptedWork);\n            popTopLevelContextObject(interruptedWork);\n            resetWorkInProgressVersions();\n            break;\n          }\n        case HostComponent:\n          {\n            popHostContext(interruptedWork);\n            break;\n          }\n        case HostPortal:\n          popHostContainer(interruptedWork);\n          break;\n        case SuspenseComponent:\n          popSuspenseContext(interruptedWork);\n          break;\n        case SuspenseListComponent:\n          popSuspenseContext(interruptedWork);\n          break;\n        case ContextProvider:\n          var context = interruptedWork.type._context;\n          popProvider(context, interruptedWork);\n          break;\n        case OffscreenComponent:\n        case LegacyHiddenComponent:\n          popRenderLanes(interruptedWork);\n          break;\n      }\n    }\n    var didWarnAboutUndefinedSnapshotBeforeUpdate = null;\n    {\n      didWarnAboutUndefinedSnapshotBeforeUpdate = new Set();\n    }\n    var PossiblyWeakSet = typeof WeakSet === \"function\" ? WeakSet : Set;\n    var nextEffect = null;\n    var inProgressLanes = null;\n    var inProgressRoot = null;\n    function reportUncaughtErrorInDEV(error) {\n      {\n        invokeGuardedCallback(null, function () {\n          throw error;\n        });\n        clearCaughtError();\n      }\n    }\n    var callComponentWillUnmountWithTimer = function callComponentWillUnmountWithTimer(current, instance) {\n      instance.props = current.memoizedProps;\n      instance.state = current.memoizedState;\n      if (current.mode & ProfileMode) {\n        try {\n          startLayoutEffectTimer();\n          instance.componentWillUnmount();\n        } finally {\n          recordLayoutEffectDuration(current);\n        }\n      } else {\n        instance.componentWillUnmount();\n      }\n    };\n    function safelyCallComponentWillUnmount(current, nearestMountedAncestor, instance) {\n      try {\n        callComponentWillUnmountWithTimer(current, instance);\n      } catch (error) {\n        captureCommitPhaseError(current, nearestMountedAncestor, error);\n      }\n    }\n    function safelyDetachRef(current, nearestMountedAncestor) {\n      var ref = current.ref;\n      if (ref !== null) {\n        if (typeof ref === \"function\") {\n          var retVal;\n          try {\n            if (enableProfilerTimer && enableProfilerCommitHooks && current.mode & ProfileMode) {\n              try {\n                startLayoutEffectTimer();\n                retVal = ref(null);\n              } finally {\n                recordLayoutEffectDuration(current);\n              }\n            } else {\n              retVal = ref(null);\n            }\n          } catch (error) {\n            captureCommitPhaseError(current, nearestMountedAncestor, error);\n          }\n          {\n            if (typeof retVal === \"function\") {\n              error(\"Unexpected return value from a callback ref in %s. \" + \"A callback ref should not return a function.\", getComponentNameFromFiber(current));\n            }\n          }\n        } else {\n          ref.current = null;\n        }\n      }\n    }\n    function safelyCallDestroy(current, nearestMountedAncestor, destroy) {\n      try {\n        destroy();\n      } catch (error) {\n        captureCommitPhaseError(current, nearestMountedAncestor, error);\n      }\n    }\n    var focusedInstanceHandle = null;\n    var shouldFireAfterActiveInstanceBlur = false;\n    function commitBeforeMutationEffects(root, firstChild) {\n      focusedInstanceHandle = prepareForCommit(root.containerInfo);\n      nextEffect = firstChild;\n      commitBeforeMutationEffects_begin();\n      var shouldFire = shouldFireAfterActiveInstanceBlur;\n      shouldFireAfterActiveInstanceBlur = false;\n      focusedInstanceHandle = null;\n      return shouldFire;\n    }\n    function commitBeforeMutationEffects_begin() {\n      while (nextEffect !== null) {\n        var fiber = nextEffect;\n        var child = fiber.child;\n        if ((fiber.subtreeFlags & BeforeMutationMask) !== NoFlags && child !== null) {\n          child.return = fiber;\n          nextEffect = child;\n        } else {\n          commitBeforeMutationEffects_complete();\n        }\n      }\n    }\n    function commitBeforeMutationEffects_complete() {\n      while (nextEffect !== null) {\n        var fiber = nextEffect;\n        setCurrentFiber(fiber);\n        try {\n          commitBeforeMutationEffectsOnFiber(fiber);\n        } catch (error) {\n          captureCommitPhaseError(fiber, fiber.return, error);\n        }\n        resetCurrentFiber();\n        var sibling = fiber.sibling;\n        if (sibling !== null) {\n          sibling.return = fiber.return;\n          nextEffect = sibling;\n          return;\n        }\n        nextEffect = fiber.return;\n      }\n    }\n    function commitBeforeMutationEffectsOnFiber(finishedWork) {\n      var current = finishedWork.alternate;\n      var flags = finishedWork.flags;\n      if ((flags & Snapshot) !== NoFlags) {\n        setCurrentFiber(finishedWork);\n        switch (finishedWork.tag) {\n          case FunctionComponent:\n          case ForwardRef:\n          case SimpleMemoComponent:\n            {\n              break;\n            }\n          case ClassComponent:\n            {\n              if (current !== null) {\n                var prevProps = current.memoizedProps;\n                var prevState = current.memoizedState;\n                var instance = finishedWork.stateNode;\n                {\n                  if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {\n                    if (instance.props !== finishedWork.memoizedProps) {\n                      error(\"Expected %s props to match memoized props before \" + \"getSnapshotBeforeUpdate. \" + \"This might either be because of a bug in React, or because \" + \"a component reassigns its own `this.props`. \" + \"Please file an issue.\", getComponentNameFromFiber(finishedWork) || \"instance\");\n                    }\n                    if (instance.state !== finishedWork.memoizedState) {\n                      error(\"Expected %s state to match memoized state before \" + \"getSnapshotBeforeUpdate. \" + \"This might either be because of a bug in React, or because \" + \"a component reassigns its own `this.state`. \" + \"Please file an issue.\", getComponentNameFromFiber(finishedWork) || \"instance\");\n                    }\n                  }\n                }\n                var snapshot = instance.getSnapshotBeforeUpdate(finishedWork.elementType === finishedWork.type ? prevProps : resolveDefaultProps(finishedWork.type, prevProps), prevState);\n                {\n                  var didWarnSet = didWarnAboutUndefinedSnapshotBeforeUpdate;\n                  if (snapshot === undefined && !didWarnSet.has(finishedWork.type)) {\n                    didWarnSet.add(finishedWork.type);\n                    error(\"%s.getSnapshotBeforeUpdate(): A snapshot value (or null) \" + \"must be returned. You have returned undefined.\", getComponentNameFromFiber(finishedWork));\n                  }\n                }\n                instance.__reactInternalSnapshotBeforeUpdate = snapshot;\n              }\n              break;\n            }\n          case HostRoot:\n            {\n              break;\n            }\n          case HostComponent:\n          case HostText:\n          case HostPortal:\n          case IncompleteClassComponent:\n            break;\n          default:\n            {\n              throw new Error(\"This unit of work tag should not have side-effects. This error is \" + \"likely caused by a bug in React. Please file an issue.\");\n            }\n        }\n        resetCurrentFiber();\n      }\n    }\n    function commitHookEffectListUnmount(flags, finishedWork, nearestMountedAncestor) {\n      var updateQueue = finishedWork.updateQueue;\n      var lastEffect = updateQueue !== null ? updateQueue.lastEffect : null;\n      if (lastEffect !== null) {\n        var firstEffect = lastEffect.next;\n        var effect = firstEffect;\n        do {\n          if ((effect.tag & flags) === flags) {\n            var destroy = effect.destroy;\n            effect.destroy = undefined;\n            if (destroy !== undefined) {\n              {\n                if ((flags & Insertion) !== NoFlags$1) {\n                  setIsRunningInsertionEffect(true);\n                }\n              }\n              safelyCallDestroy(finishedWork, nearestMountedAncestor, destroy);\n              {\n                if ((flags & Insertion) !== NoFlags$1) {\n                  setIsRunningInsertionEffect(false);\n                }\n              }\n            }\n          }\n          effect = effect.next;\n        } while (effect !== firstEffect);\n      }\n    }\n    function commitHookEffectListMount(flags, finishedWork) {\n      var updateQueue = finishedWork.updateQueue;\n      var lastEffect = updateQueue !== null ? updateQueue.lastEffect : null;\n      if (lastEffect !== null) {\n        var firstEffect = lastEffect.next;\n        var effect = firstEffect;\n        do {\n          if ((effect.tag & flags) === flags) {\n            var create = effect.create;\n            {\n              if ((flags & Insertion) !== NoFlags$1) {\n                setIsRunningInsertionEffect(true);\n              }\n            }\n            effect.destroy = create();\n            {\n              if ((flags & Insertion) !== NoFlags$1) {\n                setIsRunningInsertionEffect(false);\n              }\n            }\n            {\n              var destroy = effect.destroy;\n              if (destroy !== undefined && typeof destroy !== \"function\") {\n                var hookName = void 0;\n                if ((effect.tag & Layout) !== NoFlags) {\n                  hookName = \"useLayoutEffect\";\n                } else if ((effect.tag & Insertion) !== NoFlags) {\n                  hookName = \"useInsertionEffect\";\n                } else {\n                  hookName = \"useEffect\";\n                }\n                var addendum = void 0;\n                if (destroy === null) {\n                  addendum = \" You returned null. If your effect does not require clean \" + \"up, return undefined (or nothing).\";\n                } else if (typeof destroy.then === \"function\") {\n                  addendum = \"\\n\\nIt looks like you wrote \" + hookName + \"(async () => ...) or returned a Promise. \" + \"Instead, write the async function inside your effect \" + \"and call it immediately:\\n\\n\" + hookName + \"(() => {\\n\" + \"  async function fetchData() {\\n\" + \"    // You can await here\\n\" + \"    const response = await MyAPI.getData(someId);\\n\" + \"    // ...\\n\" + \"  }\\n\" + \"  fetchData();\\n\" + \"}, [someId]); // Or [] if effect doesn't need props or state\\n\\n\" + \"Learn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching\";\n                } else {\n                  addendum = \" You returned: \" + destroy;\n                }\n                error(\"%s must not return anything besides a function, \" + \"which is used for clean-up.%s\", hookName, addendum);\n              }\n            }\n          }\n          effect = effect.next;\n        } while (effect !== firstEffect);\n      }\n    }\n    function commitPassiveEffectDurations(finishedRoot, finishedWork) {\n      {\n        if ((finishedWork.flags & Update) !== NoFlags) {\n          switch (finishedWork.tag) {\n            case Profiler:\n              {\n                var passiveEffectDuration = finishedWork.stateNode.passiveEffectDuration;\n                var _finishedWork$memoize = finishedWork.memoizedProps,\n                  id = _finishedWork$memoize.id,\n                  onPostCommit = _finishedWork$memoize.onPostCommit;\n                var commitTime = getCommitTime();\n                var phase = finishedWork.alternate === null ? \"mount\" : \"update\";\n                {\n                  if (isCurrentUpdateNested()) {\n                    phase = \"nested-update\";\n                  }\n                }\n                if (typeof onPostCommit === \"function\") {\n                  onPostCommit(id, phase, passiveEffectDuration, commitTime);\n                }\n                var parentFiber = finishedWork.return;\n                outer: while (parentFiber !== null) {\n                  switch (parentFiber.tag) {\n                    case HostRoot:\n                      var root = parentFiber.stateNode;\n                      root.passiveEffectDuration += passiveEffectDuration;\n                      break outer;\n                    case Profiler:\n                      var parentStateNode = parentFiber.stateNode;\n                      parentStateNode.passiveEffectDuration += passiveEffectDuration;\n                      break outer;\n                  }\n                  parentFiber = parentFiber.return;\n                }\n                break;\n              }\n          }\n        }\n      }\n    }\n    function commitLayoutEffectOnFiber(finishedRoot, current, finishedWork, committedLanes) {\n      if ((finishedWork.flags & LayoutMask) !== NoFlags) {\n        switch (finishedWork.tag) {\n          case FunctionComponent:\n          case ForwardRef:\n          case SimpleMemoComponent:\n            {\n              {\n                if (finishedWork.mode & ProfileMode) {\n                  try {\n                    startLayoutEffectTimer();\n                    commitHookEffectListMount(Layout | HasEffect, finishedWork);\n                  } finally {\n                    recordLayoutEffectDuration(finishedWork);\n                  }\n                } else {\n                  commitHookEffectListMount(Layout | HasEffect, finishedWork);\n                }\n              }\n              break;\n            }\n          case ClassComponent:\n            {\n              var instance = finishedWork.stateNode;\n              if (finishedWork.flags & Update) {\n                {\n                  if (current === null) {\n                    {\n                      if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {\n                        if (instance.props !== finishedWork.memoizedProps) {\n                          error(\"Expected %s props to match memoized props before \" + \"componentDidMount. \" + \"This might either be because of a bug in React, or because \" + \"a component reassigns its own `this.props`. \" + \"Please file an issue.\", getComponentNameFromFiber(finishedWork) || \"instance\");\n                        }\n                        if (instance.state !== finishedWork.memoizedState) {\n                          error(\"Expected %s state to match memoized state before \" + \"componentDidMount. \" + \"This might either be because of a bug in React, or because \" + \"a component reassigns its own `this.state`. \" + \"Please file an issue.\", getComponentNameFromFiber(finishedWork) || \"instance\");\n                        }\n                      }\n                    }\n                    if (finishedWork.mode & ProfileMode) {\n                      try {\n                        startLayoutEffectTimer();\n                        instance.componentDidMount();\n                      } finally {\n                        recordLayoutEffectDuration(finishedWork);\n                      }\n                    } else {\n                      instance.componentDidMount();\n                    }\n                  } else {\n                    var prevProps = finishedWork.elementType === finishedWork.type ? current.memoizedProps : resolveDefaultProps(finishedWork.type, current.memoizedProps);\n                    var prevState = current.memoizedState;\n                    {\n                      if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {\n                        if (instance.props !== finishedWork.memoizedProps) {\n                          error(\"Expected %s props to match memoized props before \" + \"componentDidUpdate. \" + \"This might either be because of a bug in React, or because \" + \"a component reassigns its own `this.props`. \" + \"Please file an issue.\", getComponentNameFromFiber(finishedWork) || \"instance\");\n                        }\n                        if (instance.state !== finishedWork.memoizedState) {\n                          error(\"Expected %s state to match memoized state before \" + \"componentDidUpdate. \" + \"This might either be because of a bug in React, or because \" + \"a component reassigns its own `this.state`. \" + \"Please file an issue.\", getComponentNameFromFiber(finishedWork) || \"instance\");\n                        }\n                      }\n                    }\n                    if (finishedWork.mode & ProfileMode) {\n                      try {\n                        startLayoutEffectTimer();\n                        instance.componentDidUpdate(prevProps, prevState, instance.__reactInternalSnapshotBeforeUpdate);\n                      } finally {\n                        recordLayoutEffectDuration(finishedWork);\n                      }\n                    } else {\n                      instance.componentDidUpdate(prevProps, prevState, instance.__reactInternalSnapshotBeforeUpdate);\n                    }\n                  }\n                }\n              }\n              var updateQueue = finishedWork.updateQueue;\n              if (updateQueue !== null) {\n                {\n                  if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {\n                    if (instance.props !== finishedWork.memoizedProps) {\n                      error(\"Expected %s props to match memoized props before \" + \"processing the update queue. \" + \"This might either be because of a bug in React, or because \" + \"a component reassigns its own `this.props`. \" + \"Please file an issue.\", getComponentNameFromFiber(finishedWork) || \"instance\");\n                    }\n                    if (instance.state !== finishedWork.memoizedState) {\n                      error(\"Expected %s state to match memoized state before \" + \"processing the update queue. \" + \"This might either be because of a bug in React, or because \" + \"a component reassigns its own `this.state`. \" + \"Please file an issue.\", getComponentNameFromFiber(finishedWork) || \"instance\");\n                    }\n                  }\n                }\n                commitUpdateQueue(finishedWork, updateQueue, instance);\n              }\n              break;\n            }\n          case HostRoot:\n            {\n              var _updateQueue = finishedWork.updateQueue;\n              if (_updateQueue !== null) {\n                var _instance = null;\n                if (finishedWork.child !== null) {\n                  switch (finishedWork.child.tag) {\n                    case HostComponent:\n                      _instance = getPublicInstance(finishedWork.child.stateNode);\n                      break;\n                    case ClassComponent:\n                      _instance = finishedWork.child.stateNode;\n                      break;\n                  }\n                }\n                commitUpdateQueue(finishedWork, _updateQueue, _instance);\n              }\n              break;\n            }\n          case HostComponent:\n            {\n              var _instance2 = finishedWork.stateNode;\n              if (current === null && finishedWork.flags & Update) {\n                var type = finishedWork.type;\n                var props = finishedWork.memoizedProps;\n                commitMount();\n              }\n              break;\n            }\n          case HostText:\n            {\n              break;\n            }\n          case HostPortal:\n            {\n              break;\n            }\n          case Profiler:\n            {\n              {\n                var _finishedWork$memoize2 = finishedWork.memoizedProps,\n                  onCommit = _finishedWork$memoize2.onCommit,\n                  onRender = _finishedWork$memoize2.onRender;\n                var effectDuration = finishedWork.stateNode.effectDuration;\n                var commitTime = getCommitTime();\n                var phase = current === null ? \"mount\" : \"update\";\n                {\n                  if (isCurrentUpdateNested()) {\n                    phase = \"nested-update\";\n                  }\n                }\n                if (typeof onRender === \"function\") {\n                  onRender(finishedWork.memoizedProps.id, phase, finishedWork.actualDuration, finishedWork.treeBaseDuration, finishedWork.actualStartTime, commitTime);\n                }\n                {\n                  if (typeof onCommit === \"function\") {\n                    onCommit(finishedWork.memoizedProps.id, phase, effectDuration, commitTime);\n                  }\n                  enqueuePendingPassiveProfilerEffect(finishedWork);\n                  var parentFiber = finishedWork.return;\n                  outer: while (parentFiber !== null) {\n                    switch (parentFiber.tag) {\n                      case HostRoot:\n                        var root = parentFiber.stateNode;\n                        root.effectDuration += effectDuration;\n                        break outer;\n                      case Profiler:\n                        var parentStateNode = parentFiber.stateNode;\n                        parentStateNode.effectDuration += effectDuration;\n                        break outer;\n                    }\n                    parentFiber = parentFiber.return;\n                  }\n                }\n              }\n              break;\n            }\n          case SuspenseComponent:\n            {\n              break;\n            }\n          case SuspenseListComponent:\n          case IncompleteClassComponent:\n          case ScopeComponent:\n          case OffscreenComponent:\n          case LegacyHiddenComponent:\n          case TracingMarkerComponent:\n            {\n              break;\n            }\n          default:\n            throw new Error(\"This unit of work tag should not have side-effects. This error is \" + \"likely caused by a bug in React. Please file an issue.\");\n        }\n      }\n      {\n        {\n          if (finishedWork.flags & Ref) {\n            commitAttachRef(finishedWork);\n          }\n        }\n      }\n    }\n    function commitAttachRef(finishedWork) {\n      var ref = finishedWork.ref;\n      if (ref !== null) {\n        var instance = finishedWork.stateNode;\n        var instanceToUse;\n        switch (finishedWork.tag) {\n          case HostComponent:\n            instanceToUse = getPublicInstance(instance);\n            break;\n          default:\n            instanceToUse = instance;\n        }\n        if (typeof ref === \"function\") {\n          var retVal;\n          if (finishedWork.mode & ProfileMode) {\n            try {\n              startLayoutEffectTimer();\n              retVal = ref(instanceToUse);\n            } finally {\n              recordLayoutEffectDuration(finishedWork);\n            }\n          } else {\n            retVal = ref(instanceToUse);\n          }\n          {\n            if (typeof retVal === \"function\") {\n              error(\"Unexpected return value from a callback ref in %s. \" + \"A callback ref should not return a function.\", getComponentNameFromFiber(finishedWork));\n            }\n          }\n        } else {\n          {\n            if (!ref.hasOwnProperty(\"current\")) {\n              error(\"Unexpected ref object provided for %s. \" + \"Use either a ref-setter function or React.createRef().\", getComponentNameFromFiber(finishedWork));\n            }\n          }\n          ref.current = instanceToUse;\n        }\n      }\n    }\n    function detachFiberMutation(fiber) {\n      var alternate = fiber.alternate;\n      if (alternate !== null) {\n        alternate.return = null;\n      }\n      fiber.return = null;\n    }\n    function detachFiberAfterEffects(fiber) {\n      var alternate = fiber.alternate;\n      if (alternate !== null) {\n        fiber.alternate = null;\n        detachFiberAfterEffects(alternate);\n      }\n      {\n        fiber.child = null;\n        fiber.deletions = null;\n        fiber.sibling = null;\n        if (fiber.tag === HostComponent) {\n          var hostInstance = fiber.stateNode;\n        }\n        fiber.stateNode = null;\n        {\n          fiber._debugOwner = null;\n        }\n        {\n          fiber.return = null;\n          fiber.dependencies = null;\n          fiber.memoizedProps = null;\n          fiber.memoizedState = null;\n          fiber.pendingProps = null;\n          fiber.stateNode = null;\n          fiber.updateQueue = null;\n        }\n      }\n    }\n    function emptyPortalContainer(current) {\n      var portal = current.stateNode;\n      var containerInfo = portal.containerInfo;\n      var emptyChildSet = createContainerChildSet(containerInfo);\n    }\n    function commitPlacement(finishedWork) {\n      {\n        return;\n      }\n    }\n    function commitDeletionEffects(root, returnFiber, deletedFiber) {\n      {\n        commitDeletionEffectsOnFiber(root, returnFiber, deletedFiber);\n      }\n      detachFiberMutation(deletedFiber);\n    }\n    function recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, parent) {\n      var child = parent.child;\n      while (child !== null) {\n        commitDeletionEffectsOnFiber(finishedRoot, nearestMountedAncestor, child);\n        child = child.sibling;\n      }\n    }\n    function commitDeletionEffectsOnFiber(finishedRoot, nearestMountedAncestor, deletedFiber) {\n      onCommitUnmount(deletedFiber);\n      switch (deletedFiber.tag) {\n        case HostComponent:\n          {\n            {\n              safelyDetachRef(deletedFiber, nearestMountedAncestor);\n            }\n          }\n        case HostText:\n          {\n            {\n              recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);\n            }\n            return;\n          }\n        case DehydratedFragment:\n          {\n            return;\n          }\n        case HostPortal:\n          {\n            {\n              emptyPortalContainer(deletedFiber);\n              recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);\n            }\n            return;\n          }\n        case FunctionComponent:\n        case ForwardRef:\n        case MemoComponent:\n        case SimpleMemoComponent:\n          {\n            {\n              var updateQueue = deletedFiber.updateQueue;\n              if (updateQueue !== null) {\n                var lastEffect = updateQueue.lastEffect;\n                if (lastEffect !== null) {\n                  var firstEffect = lastEffect.next;\n                  var effect = firstEffect;\n                  do {\n                    var _effect = effect,\n                      destroy = _effect.destroy,\n                      tag = _effect.tag;\n                    if (destroy !== undefined) {\n                      if ((tag & Insertion) !== NoFlags$1) {\n                        safelyCallDestroy(deletedFiber, nearestMountedAncestor, destroy);\n                      } else if ((tag & Layout) !== NoFlags$1) {\n                        if (deletedFiber.mode & ProfileMode) {\n                          startLayoutEffectTimer();\n                          safelyCallDestroy(deletedFiber, nearestMountedAncestor, destroy);\n                          recordLayoutEffectDuration(deletedFiber);\n                        } else {\n                          safelyCallDestroy(deletedFiber, nearestMountedAncestor, destroy);\n                        }\n                      }\n                    }\n                    effect = effect.next;\n                  } while (effect !== firstEffect);\n                }\n              }\n            }\n            recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);\n            return;\n          }\n        case ClassComponent:\n          {\n            {\n              safelyDetachRef(deletedFiber, nearestMountedAncestor);\n              var instance = deletedFiber.stateNode;\n              if (typeof instance.componentWillUnmount === \"function\") {\n                safelyCallComponentWillUnmount(deletedFiber, nearestMountedAncestor, instance);\n              }\n            }\n            recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);\n            return;\n          }\n        case ScopeComponent:\n          {\n            recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);\n            return;\n          }\n        case OffscreenComponent:\n          {\n            {\n              recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);\n            }\n            break;\n          }\n        default:\n          {\n            recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);\n            return;\n          }\n      }\n    }\n    function commitSuspenseCallback(finishedWork) {\n      var newState = finishedWork.memoizedState;\n    }\n    function attachSuspenseRetryListeners(finishedWork) {\n      var wakeables = finishedWork.updateQueue;\n      if (wakeables !== null) {\n        finishedWork.updateQueue = null;\n        var retryCache = finishedWork.stateNode;\n        if (retryCache === null) {\n          retryCache = finishedWork.stateNode = new PossiblyWeakSet();\n        }\n        wakeables.forEach(function (wakeable) {\n          var retry = resolveRetryWakeable.bind(null, finishedWork, wakeable);\n          if (!retryCache.has(wakeable)) {\n            retryCache.add(wakeable);\n            {\n              if (isDevToolsPresent) {\n                if (inProgressLanes !== null && inProgressRoot !== null) {\n                  restorePendingUpdaters(inProgressRoot, inProgressLanes);\n                } else {\n                  throw Error(\"Expected finished root and lanes to be set. This is a bug in React.\");\n                }\n              }\n            }\n            wakeable.then(retry, retry);\n          }\n        });\n      }\n    }\n    function commitMutationEffects(root, finishedWork, committedLanes) {\n      inProgressLanes = committedLanes;\n      inProgressRoot = root;\n      setCurrentFiber(finishedWork);\n      commitMutationEffectsOnFiber(finishedWork, root);\n      setCurrentFiber(finishedWork);\n      inProgressLanes = null;\n      inProgressRoot = null;\n    }\n    function recursivelyTraverseMutationEffects(root, parentFiber, lanes) {\n      var deletions = parentFiber.deletions;\n      if (deletions !== null) {\n        for (var i = 0; i < deletions.length; i++) {\n          var childToDelete = deletions[i];\n          try {\n            commitDeletionEffects(root, parentFiber, childToDelete);\n          } catch (error) {\n            captureCommitPhaseError(childToDelete, parentFiber, error);\n          }\n        }\n      }\n      var prevDebugFiber = getCurrentFiber();\n      if (parentFiber.subtreeFlags & MutationMask) {\n        var child = parentFiber.child;\n        while (child !== null) {\n          setCurrentFiber(child);\n          commitMutationEffectsOnFiber(child, root);\n          child = child.sibling;\n        }\n      }\n      setCurrentFiber(prevDebugFiber);\n    }\n    function commitMutationEffectsOnFiber(finishedWork, root, lanes) {\n      var current = finishedWork.alternate;\n      var flags = finishedWork.flags;\n      switch (finishedWork.tag) {\n        case FunctionComponent:\n        case ForwardRef:\n        case MemoComponent:\n        case SimpleMemoComponent:\n          {\n            recursivelyTraverseMutationEffects(root, finishedWork);\n            commitReconciliationEffects(finishedWork);\n            if (flags & Update) {\n              try {\n                commitHookEffectListUnmount(Insertion | HasEffect, finishedWork, finishedWork.return);\n                commitHookEffectListMount(Insertion | HasEffect, finishedWork);\n              } catch (error) {\n                captureCommitPhaseError(finishedWork, finishedWork.return, error);\n              }\n              if (finishedWork.mode & ProfileMode) {\n                try {\n                  startLayoutEffectTimer();\n                  commitHookEffectListUnmount(Layout | HasEffect, finishedWork, finishedWork.return);\n                } catch (error) {\n                  captureCommitPhaseError(finishedWork, finishedWork.return, error);\n                }\n                recordLayoutEffectDuration(finishedWork);\n              } else {\n                try {\n                  commitHookEffectListUnmount(Layout | HasEffect, finishedWork, finishedWork.return);\n                } catch (error) {\n                  captureCommitPhaseError(finishedWork, finishedWork.return, error);\n                }\n              }\n            }\n            return;\n          }\n        case ClassComponent:\n          {\n            recursivelyTraverseMutationEffects(root, finishedWork);\n            commitReconciliationEffects(finishedWork);\n            if (flags & Ref) {\n              if (current !== null) {\n                safelyDetachRef(current, current.return);\n              }\n            }\n            return;\n          }\n        case HostComponent:\n          {\n            recursivelyTraverseMutationEffects(root, finishedWork);\n            commitReconciliationEffects(finishedWork);\n            if (flags & Ref) {\n              if (current !== null) {\n                safelyDetachRef(current, current.return);\n              }\n            }\n            return;\n          }\n        case HostText:\n          {\n            recursivelyTraverseMutationEffects(root, finishedWork);\n            commitReconciliationEffects(finishedWork);\n            return;\n          }\n        case HostRoot:\n          {\n            recursivelyTraverseMutationEffects(root, finishedWork);\n            commitReconciliationEffects(finishedWork);\n            if (flags & Update) {\n              {\n                var containerInfo = root.containerInfo;\n                var pendingChildren = root.pendingChildren;\n                try {\n                  replaceContainerChildren(containerInfo, pendingChildren);\n                } catch (error) {\n                  captureCommitPhaseError(finishedWork, finishedWork.return, error);\n                }\n              }\n            }\n            return;\n          }\n        case HostPortal:\n          {\n            recursivelyTraverseMutationEffects(root, finishedWork);\n            commitReconciliationEffects(finishedWork);\n            if (flags & Update) {\n              {\n                var portal = finishedWork.stateNode;\n                var _containerInfo = portal.containerInfo;\n                var _pendingChildren = portal.pendingChildren;\n                try {\n                  replaceContainerChildren(_containerInfo, _pendingChildren);\n                } catch (error) {\n                  captureCommitPhaseError(finishedWork, finishedWork.return, error);\n                }\n              }\n            }\n            return;\n          }\n        case SuspenseComponent:\n          {\n            recursivelyTraverseMutationEffects(root, finishedWork);\n            commitReconciliationEffects(finishedWork);\n            var offscreenFiber = finishedWork.child;\n            if (offscreenFiber.flags & Visibility) {\n              var offscreenInstance = offscreenFiber.stateNode;\n              var newState = offscreenFiber.memoizedState;\n              var isHidden = newState !== null;\n              offscreenInstance.isHidden = isHidden;\n              if (isHidden) {\n                var wasHidden = offscreenFiber.alternate !== null && offscreenFiber.alternate.memoizedState !== null;\n                if (!wasHidden) {\n                  markCommitTimeOfFallback();\n                }\n              }\n            }\n            if (flags & Update) {\n              try {\n                commitSuspenseCallback(finishedWork);\n              } catch (error) {\n                captureCommitPhaseError(finishedWork, finishedWork.return, error);\n              }\n              attachSuspenseRetryListeners(finishedWork);\n            }\n            return;\n          }\n        case OffscreenComponent:\n          {\n            var _wasHidden = current !== null && current.memoizedState !== null;\n            {\n              recursivelyTraverseMutationEffects(root, finishedWork);\n            }\n            commitReconciliationEffects(finishedWork);\n            if (flags & Visibility) {\n              var _offscreenInstance = finishedWork.stateNode;\n              var _newState = finishedWork.memoizedState;\n              var _isHidden = _newState !== null;\n              _offscreenInstance.isHidden = _isHidden;\n            }\n            return;\n          }\n        case SuspenseListComponent:\n          {\n            recursivelyTraverseMutationEffects(root, finishedWork);\n            commitReconciliationEffects(finishedWork);\n            if (flags & Update) {\n              attachSuspenseRetryListeners(finishedWork);\n            }\n            return;\n          }\n        case ScopeComponent:\n          {\n            return;\n          }\n        default:\n          {\n            recursivelyTraverseMutationEffects(root, finishedWork);\n            commitReconciliationEffects(finishedWork);\n            return;\n          }\n      }\n    }\n    function commitReconciliationEffects(finishedWork) {\n      var flags = finishedWork.flags;\n      if (flags & Placement) {\n        try {\n          commitPlacement(finishedWork);\n        } catch (error) {\n          captureCommitPhaseError(finishedWork, finishedWork.return, error);\n        }\n        finishedWork.flags &= ~Placement;\n      }\n      if (flags & Hydrating) {\n        finishedWork.flags &= ~Hydrating;\n      }\n    }\n    function commitLayoutEffects(finishedWork, root, committedLanes) {\n      inProgressLanes = committedLanes;\n      inProgressRoot = root;\n      nextEffect = finishedWork;\n      commitLayoutEffects_begin(finishedWork, root, committedLanes);\n      inProgressLanes = null;\n      inProgressRoot = null;\n    }\n    function commitLayoutEffects_begin(subtreeRoot, root, committedLanes) {\n      var isModernRoot = (subtreeRoot.mode & ConcurrentMode) !== NoMode;\n      while (nextEffect !== null) {\n        var fiber = nextEffect;\n        var firstChild = fiber.child;\n        if ((fiber.subtreeFlags & LayoutMask) !== NoFlags && firstChild !== null) {\n          firstChild.return = fiber;\n          nextEffect = firstChild;\n        } else {\n          commitLayoutMountEffects_complete(subtreeRoot, root, committedLanes);\n        }\n      }\n    }\n    function commitLayoutMountEffects_complete(subtreeRoot, root, committedLanes) {\n      while (nextEffect !== null) {\n        var fiber = nextEffect;\n        if ((fiber.flags & LayoutMask) !== NoFlags) {\n          var current = fiber.alternate;\n          setCurrentFiber(fiber);\n          try {\n            commitLayoutEffectOnFiber(root, current, fiber, committedLanes);\n          } catch (error) {\n            captureCommitPhaseError(fiber, fiber.return, error);\n          }\n          resetCurrentFiber();\n        }\n        if (fiber === subtreeRoot) {\n          nextEffect = null;\n          return;\n        }\n        var sibling = fiber.sibling;\n        if (sibling !== null) {\n          sibling.return = fiber.return;\n          nextEffect = sibling;\n          return;\n        }\n        nextEffect = fiber.return;\n      }\n    }\n    function commitPassiveMountEffects(root, finishedWork, committedLanes, committedTransitions) {\n      nextEffect = finishedWork;\n      commitPassiveMountEffects_begin(finishedWork, root, committedLanes, committedTransitions);\n    }\n    function commitPassiveMountEffects_begin(subtreeRoot, root, committedLanes, committedTransitions) {\n      while (nextEffect !== null) {\n        var fiber = nextEffect;\n        var firstChild = fiber.child;\n        if ((fiber.subtreeFlags & PassiveMask) !== NoFlags && firstChild !== null) {\n          firstChild.return = fiber;\n          nextEffect = firstChild;\n        } else {\n          commitPassiveMountEffects_complete(subtreeRoot, root, committedLanes, committedTransitions);\n        }\n      }\n    }\n    function commitPassiveMountEffects_complete(subtreeRoot, root, committedLanes, committedTransitions) {\n      while (nextEffect !== null) {\n        var fiber = nextEffect;\n        if ((fiber.flags & Passive) !== NoFlags) {\n          setCurrentFiber(fiber);\n          try {\n            commitPassiveMountOnFiber(root, fiber, committedLanes, committedTransitions);\n          } catch (error) {\n            captureCommitPhaseError(fiber, fiber.return, error);\n          }\n          resetCurrentFiber();\n        }\n        if (fiber === subtreeRoot) {\n          nextEffect = null;\n          return;\n        }\n        var sibling = fiber.sibling;\n        if (sibling !== null) {\n          sibling.return = fiber.return;\n          nextEffect = sibling;\n          return;\n        }\n        nextEffect = fiber.return;\n      }\n    }\n    function commitPassiveMountOnFiber(finishedRoot, finishedWork, committedLanes, committedTransitions) {\n      switch (finishedWork.tag) {\n        case FunctionComponent:\n        case ForwardRef:\n        case SimpleMemoComponent:\n          {\n            if (finishedWork.mode & ProfileMode) {\n              startPassiveEffectTimer();\n              try {\n                commitHookEffectListMount(Passive$1 | HasEffect, finishedWork);\n              } finally {\n                recordPassiveEffectDuration(finishedWork);\n              }\n            } else {\n              commitHookEffectListMount(Passive$1 | HasEffect, finishedWork);\n            }\n            break;\n          }\n      }\n    }\n    function commitPassiveUnmountEffects(firstChild) {\n      nextEffect = firstChild;\n      commitPassiveUnmountEffects_begin();\n    }\n    function commitPassiveUnmountEffects_begin() {\n      while (nextEffect !== null) {\n        var fiber = nextEffect;\n        var child = fiber.child;\n        if ((nextEffect.flags & ChildDeletion) !== NoFlags) {\n          var deletions = fiber.deletions;\n          if (deletions !== null) {\n            for (var i = 0; i < deletions.length; i++) {\n              var fiberToDelete = deletions[i];\n              nextEffect = fiberToDelete;\n              commitPassiveUnmountEffectsInsideOfDeletedTree_begin(fiberToDelete, fiber);\n            }\n            {\n              var previousFiber = fiber.alternate;\n              if (previousFiber !== null) {\n                var detachedChild = previousFiber.child;\n                if (detachedChild !== null) {\n                  previousFiber.child = null;\n                  do {\n                    var detachedSibling = detachedChild.sibling;\n                    detachedChild.sibling = null;\n                    detachedChild = detachedSibling;\n                  } while (detachedChild !== null);\n                }\n              }\n            }\n            nextEffect = fiber;\n          }\n        }\n        if ((fiber.subtreeFlags & PassiveMask) !== NoFlags && child !== null) {\n          child.return = fiber;\n          nextEffect = child;\n        } else {\n          commitPassiveUnmountEffects_complete();\n        }\n      }\n    }\n    function commitPassiveUnmountEffects_complete() {\n      while (nextEffect !== null) {\n        var fiber = nextEffect;\n        if ((fiber.flags & Passive) !== NoFlags) {\n          setCurrentFiber(fiber);\n          commitPassiveUnmountOnFiber(fiber);\n          resetCurrentFiber();\n        }\n        var sibling = fiber.sibling;\n        if (sibling !== null) {\n          sibling.return = fiber.return;\n          nextEffect = sibling;\n          return;\n        }\n        nextEffect = fiber.return;\n      }\n    }\n    function commitPassiveUnmountOnFiber(finishedWork) {\n      switch (finishedWork.tag) {\n        case FunctionComponent:\n        case ForwardRef:\n        case SimpleMemoComponent:\n          {\n            if (finishedWork.mode & ProfileMode) {\n              startPassiveEffectTimer();\n              commitHookEffectListUnmount(Passive$1 | HasEffect, finishedWork, finishedWork.return);\n              recordPassiveEffectDuration(finishedWork);\n            } else {\n              commitHookEffectListUnmount(Passive$1 | HasEffect, finishedWork, finishedWork.return);\n            }\n            break;\n          }\n      }\n    }\n    function commitPassiveUnmountEffectsInsideOfDeletedTree_begin(deletedSubtreeRoot, nearestMountedAncestor) {\n      while (nextEffect !== null) {\n        var fiber = nextEffect;\n        setCurrentFiber(fiber);\n        commitPassiveUnmountInsideDeletedTreeOnFiber(fiber, nearestMountedAncestor);\n        resetCurrentFiber();\n        var child = fiber.child;\n        if (child !== null) {\n          child.return = fiber;\n          nextEffect = child;\n        } else {\n          commitPassiveUnmountEffectsInsideOfDeletedTree_complete(deletedSubtreeRoot);\n        }\n      }\n    }\n    function commitPassiveUnmountEffectsInsideOfDeletedTree_complete(deletedSubtreeRoot) {\n      while (nextEffect !== null) {\n        var fiber = nextEffect;\n        var sibling = fiber.sibling;\n        var returnFiber = fiber.return;\n        {\n          detachFiberAfterEffects(fiber);\n          if (fiber === deletedSubtreeRoot) {\n            nextEffect = null;\n            return;\n          }\n        }\n        if (sibling !== null) {\n          sibling.return = returnFiber;\n          nextEffect = sibling;\n          return;\n        }\n        nextEffect = returnFiber;\n      }\n    }\n    function commitPassiveUnmountInsideDeletedTreeOnFiber(current, nearestMountedAncestor) {\n      switch (current.tag) {\n        case FunctionComponent:\n        case ForwardRef:\n        case SimpleMemoComponent:\n          {\n            if (current.mode & ProfileMode) {\n              startPassiveEffectTimer();\n              commitHookEffectListUnmount(Passive$1, current, nearestMountedAncestor);\n              recordPassiveEffectDuration(current);\n            } else {\n              commitHookEffectListUnmount(Passive$1, current, nearestMountedAncestor);\n            }\n            break;\n          }\n      }\n    }\n    var COMPONENT_TYPE = 0;\n    var HAS_PSEUDO_CLASS_TYPE = 1;\n    var ROLE_TYPE = 2;\n    var TEST_NAME_TYPE = 3;\n    var TEXT_TYPE = 4;\n    if (typeof Symbol === \"function\" && Symbol.for) {\n      var symbolFor = Symbol.for;\n      COMPONENT_TYPE = symbolFor(\"selector.component\");\n      HAS_PSEUDO_CLASS_TYPE = symbolFor(\"selector.has_pseudo_class\");\n      ROLE_TYPE = symbolFor(\"selector.role\");\n      TEST_NAME_TYPE = symbolFor(\"selector.test_id\");\n      TEXT_TYPE = symbolFor(\"selector.text\");\n    }\n    var ReactCurrentActQueue = ReactSharedInternals.ReactCurrentActQueue;\n    function isLegacyActEnvironment(fiber) {\n      {\n        var isReactActEnvironmentGlobal = typeof IS_REACT_ACT_ENVIRONMENT !== \"undefined\" ? IS_REACT_ACT_ENVIRONMENT : undefined;\n        return warnsIfNotActing;\n      }\n    }\n    function isConcurrentActEnvironment() {\n      {\n        var isReactActEnvironmentGlobal = typeof IS_REACT_ACT_ENVIRONMENT !== \"undefined\" ? IS_REACT_ACT_ENVIRONMENT : undefined;\n        if (!isReactActEnvironmentGlobal && ReactCurrentActQueue.current !== null) {\n          error(\"The current testing environment is not configured to support \" + \"act(...)\");\n        }\n        return isReactActEnvironmentGlobal;\n      }\n    }\n    var ceil = Math.ceil;\n    var ReactCurrentDispatcher$2 = ReactSharedInternals.ReactCurrentDispatcher,\n      ReactCurrentOwner$2 = ReactSharedInternals.ReactCurrentOwner,\n      ReactCurrentBatchConfig$2 = ReactSharedInternals.ReactCurrentBatchConfig,\n      ReactCurrentActQueue$1 = ReactSharedInternals.ReactCurrentActQueue;\n    var NoContext = 0;\n    var BatchedContext = 1;\n    var RenderContext = 2;\n    var CommitContext = 4;\n    var RootInProgress = 0;\n    var RootFatalErrored = 1;\n    var RootErrored = 2;\n    var RootSuspended = 3;\n    var RootSuspendedWithDelay = 4;\n    var RootCompleted = 5;\n    var RootDidNotComplete = 6;\n    var executionContext = NoContext;\n    var workInProgressRoot = null;\n    var workInProgress = null;\n    var workInProgressRootRenderLanes = NoLanes;\n    var subtreeRenderLanes = NoLanes;\n    var subtreeRenderLanesCursor = createCursor(NoLanes);\n    var workInProgressRootExitStatus = RootInProgress;\n    var workInProgressRootFatalError = null;\n    var workInProgressRootIncludedLanes = NoLanes;\n    var workInProgressRootSkippedLanes = NoLanes;\n    var workInProgressRootInterleavedUpdatedLanes = NoLanes;\n    var workInProgressRootPingedLanes = NoLanes;\n    var workInProgressRootConcurrentErrors = null;\n    var workInProgressRootRecoverableErrors = null;\n    var globalMostRecentFallbackTime = 0;\n    var FALLBACK_THROTTLE_MS = 500;\n    var workInProgressRootRenderTargetTime = Infinity;\n    var RENDER_TIMEOUT_MS = 500;\n    var workInProgressTransitions = null;\n    function resetRenderTimer() {\n      workInProgressRootRenderTargetTime = now() + RENDER_TIMEOUT_MS;\n    }\n    function getRenderTargetTime() {\n      return workInProgressRootRenderTargetTime;\n    }\n    var hasUncaughtError = false;\n    var firstUncaughtError = null;\n    var legacyErrorBoundariesThatAlreadyFailed = null;\n    var rootDoesHavePassiveEffects = false;\n    var rootWithPendingPassiveEffects = null;\n    var pendingPassiveEffectsLanes = NoLanes;\n    var pendingPassiveProfilerEffects = [];\n    var pendingPassiveTransitions = null;\n    var NESTED_UPDATE_LIMIT = 50;\n    var nestedUpdateCount = 0;\n    var rootWithNestedUpdates = null;\n    var isFlushingPassiveEffects = false;\n    var didScheduleUpdateDuringPassiveEffects = false;\n    var NESTED_PASSIVE_UPDATE_LIMIT = 50;\n    var nestedPassiveUpdateCount = 0;\n    var rootWithPassiveNestedUpdates = null;\n    var currentEventTime = NoTimestamp;\n    var currentEventTransitionLane = NoLanes;\n    var isRunningInsertionEffect = false;\n    function getWorkInProgressRoot() {\n      return workInProgressRoot;\n    }\n    function requestEventTime() {\n      if ((executionContext & (RenderContext | CommitContext)) !== NoContext) {\n        return now();\n      }\n      if (currentEventTime !== NoTimestamp) {\n        return currentEventTime;\n      }\n      currentEventTime = now();\n      return currentEventTime;\n    }\n    function requestUpdateLane(fiber) {\n      var mode = fiber.mode;\n      if ((mode & ConcurrentMode) === NoMode) {\n        return SyncLane;\n      } else if ((executionContext & RenderContext) !== NoContext && workInProgressRootRenderLanes !== NoLanes) {\n        return pickArbitraryLane(workInProgressRootRenderLanes);\n      }\n      var isTransition = requestCurrentTransition() !== NoTransition;\n      if (isTransition) {\n        if (ReactCurrentBatchConfig$2.transition !== null) {\n          var transition = ReactCurrentBatchConfig$2.transition;\n          if (!transition._updatedFibers) {\n            transition._updatedFibers = new Set();\n          }\n          transition._updatedFibers.add(fiber);\n        }\n        if (currentEventTransitionLane === NoLane) {\n          currentEventTransitionLane = claimNextTransitionLane();\n        }\n        return currentEventTransitionLane;\n      }\n      var updateLane = getCurrentUpdatePriority();\n      if (updateLane !== NoLane) {\n        return updateLane;\n      }\n      var eventLane = getCurrentEventPriority();\n      return eventLane;\n    }\n    function requestRetryLane(fiber) {\n      var mode = fiber.mode;\n      if ((mode & ConcurrentMode) === NoMode) {\n        return SyncLane;\n      }\n      return claimNextRetryLane();\n    }\n    function scheduleUpdateOnFiber(root, fiber, lane, eventTime) {\n      checkForNestedUpdates();\n      {\n        if (isRunningInsertionEffect) {\n          error(\"useInsertionEffect must not schedule updates.\");\n        }\n      }\n      {\n        if (isFlushingPassiveEffects) {\n          didScheduleUpdateDuringPassiveEffects = true;\n        }\n      }\n      markRootUpdated(root, lane, eventTime);\n      if ((executionContext & RenderContext) !== NoLanes && root === workInProgressRoot) {\n        warnAboutRenderPhaseUpdatesInDEV(fiber);\n      } else {\n        {\n          if (isDevToolsPresent) {\n            addFiberToLanesMap(root, fiber, lane);\n          }\n        }\n        warnIfUpdatesNotWrappedWithActDEV(fiber);\n        if (root === workInProgressRoot) {\n          if ((executionContext & RenderContext) === NoContext) {\n            workInProgressRootInterleavedUpdatedLanes = mergeLanes(workInProgressRootInterleavedUpdatedLanes, lane);\n          }\n          if (workInProgressRootExitStatus === RootSuspendedWithDelay) {\n            markRootSuspended$1(root, workInProgressRootRenderLanes);\n          }\n        }\n        ensureRootIsScheduled(root, eventTime);\n        if (lane === SyncLane && executionContext === NoContext && (fiber.mode & ConcurrentMode) === NoMode && !ReactCurrentActQueue$1.isBatchingLegacy) {\n          resetRenderTimer();\n          flushSyncCallbacksOnlyInLegacyMode();\n        }\n      }\n    }\n    function isUnsafeClassRenderPhaseUpdate(fiber) {\n      return (executionContext & RenderContext) !== NoContext;\n    }\n    function ensureRootIsScheduled(root, currentTime) {\n      var existingCallbackNode = root.callbackNode;\n      markStarvedLanesAsExpired(root, currentTime);\n      var nextLanes = getNextLanes(root, root === workInProgressRoot ? workInProgressRootRenderLanes : NoLanes);\n      if (nextLanes === NoLanes) {\n        if (existingCallbackNode !== null) {\n          cancelCallback$1(existingCallbackNode);\n        }\n        root.callbackNode = null;\n        root.callbackPriority = NoLane;\n        return;\n      }\n      var newCallbackPriority = getHighestPriorityLane(nextLanes);\n      var existingCallbackPriority = root.callbackPriority;\n      if (existingCallbackPriority === newCallbackPriority && !(ReactCurrentActQueue$1.current !== null && existingCallbackNode !== fakeActCallbackNode)) {\n        {\n          if (existingCallbackNode == null && existingCallbackPriority !== SyncLane) {\n            error(\"Expected scheduled callback to exist. This error is likely caused by a bug in React. Please file an issue.\");\n          }\n        }\n        return;\n      }\n      if (existingCallbackNode != null) {\n        cancelCallback$1(existingCallbackNode);\n      }\n      var newCallbackNode;\n      if (newCallbackPriority === SyncLane) {\n        if (root.tag === LegacyRoot) {\n          if (ReactCurrentActQueue$1.isBatchingLegacy !== null) {\n            ReactCurrentActQueue$1.didScheduleLegacyUpdate = true;\n          }\n          scheduleLegacySyncCallback(performSyncWorkOnRoot.bind(null, root));\n        } else {\n          scheduleSyncCallback(performSyncWorkOnRoot.bind(null, root));\n        }\n        {\n          scheduleCallback$1(ImmediatePriority, flushSyncCallbacks);\n        }\n        newCallbackNode = null;\n      } else {\n        var schedulerPriorityLevel;\n        switch (lanesToEventPriority(nextLanes)) {\n          case DiscreteEventPriority:\n            schedulerPriorityLevel = ImmediatePriority;\n            break;\n          case ContinuousEventPriority:\n            schedulerPriorityLevel = UserBlockingPriority;\n            break;\n          case DefaultEventPriority:\n            schedulerPriorityLevel = NormalPriority;\n            break;\n          case IdleEventPriority:\n            schedulerPriorityLevel = IdlePriority;\n            break;\n          default:\n            schedulerPriorityLevel = NormalPriority;\n            break;\n        }\n        newCallbackNode = scheduleCallback$1(schedulerPriorityLevel, performConcurrentWorkOnRoot.bind(null, root));\n      }\n      root.callbackPriority = newCallbackPriority;\n      root.callbackNode = newCallbackNode;\n    }\n    function performConcurrentWorkOnRoot(root, didTimeout) {\n      {\n        resetNestedUpdateFlag();\n      }\n      currentEventTime = NoTimestamp;\n      currentEventTransitionLane = NoLanes;\n      if ((executionContext & (RenderContext | CommitContext)) !== NoContext) {\n        throw new Error(\"Should not already be working.\");\n      }\n      var originalCallbackNode = root.callbackNode;\n      var didFlushPassiveEffects = flushPassiveEffects();\n      if (didFlushPassiveEffects) {\n        if (root.callbackNode !== originalCallbackNode) {\n          return null;\n        }\n      }\n      var lanes = getNextLanes(root, root === workInProgressRoot ? workInProgressRootRenderLanes : NoLanes);\n      if (lanes === NoLanes) {\n        return null;\n      }\n      var shouldTimeSlice = !includesBlockingLane(root, lanes) && !includesExpiredLane(root, lanes) && !didTimeout;\n      var exitStatus = shouldTimeSlice ? renderRootConcurrent(root, lanes) : renderRootSync(root, lanes);\n      if (exitStatus !== RootInProgress) {\n        if (exitStatus === RootErrored) {\n          var errorRetryLanes = getLanesToRetrySynchronouslyOnError(root);\n          if (errorRetryLanes !== NoLanes) {\n            lanes = errorRetryLanes;\n            exitStatus = recoverFromConcurrentError(root, errorRetryLanes);\n          }\n        }\n        if (exitStatus === RootFatalErrored) {\n          var fatalError = workInProgressRootFatalError;\n          prepareFreshStack(root, NoLanes);\n          markRootSuspended$1(root, lanes);\n          ensureRootIsScheduled(root, now());\n          throw fatalError;\n        }\n        if (exitStatus === RootDidNotComplete) {\n          markRootSuspended$1(root, lanes);\n        } else {\n          var renderWasConcurrent = !includesBlockingLane(root, lanes);\n          var finishedWork = root.current.alternate;\n          if (renderWasConcurrent && !isRenderConsistentWithExternalStores(finishedWork)) {\n            exitStatus = renderRootSync(root, lanes);\n            if (exitStatus === RootErrored) {\n              var _errorRetryLanes = getLanesToRetrySynchronouslyOnError(root);\n              if (_errorRetryLanes !== NoLanes) {\n                lanes = _errorRetryLanes;\n                exitStatus = recoverFromConcurrentError(root, _errorRetryLanes);\n              }\n            }\n            if (exitStatus === RootFatalErrored) {\n              var _fatalError = workInProgressRootFatalError;\n              prepareFreshStack(root, NoLanes);\n              markRootSuspended$1(root, lanes);\n              ensureRootIsScheduled(root, now());\n              throw _fatalError;\n            }\n          }\n          root.finishedWork = finishedWork;\n          root.finishedLanes = lanes;\n          finishConcurrentRender(root, exitStatus, lanes);\n        }\n      }\n      ensureRootIsScheduled(root, now());\n      if (root.callbackNode === originalCallbackNode) {\n        return performConcurrentWorkOnRoot.bind(null, root);\n      }\n      return null;\n    }\n    function recoverFromConcurrentError(root, errorRetryLanes) {\n      var errorsFromFirstAttempt = workInProgressRootConcurrentErrors;\n      if (isRootDehydrated(root)) {\n        var rootWorkInProgress = prepareFreshStack(root, errorRetryLanes);\n        rootWorkInProgress.flags |= ForceClientRender;\n        {\n          errorHydratingContainer(root.containerInfo);\n        }\n      }\n      var exitStatus = renderRootSync(root, errorRetryLanes);\n      if (exitStatus !== RootErrored) {\n        var errorsFromSecondAttempt = workInProgressRootRecoverableErrors;\n        workInProgressRootRecoverableErrors = errorsFromFirstAttempt;\n        if (errorsFromSecondAttempt !== null) {\n          queueRecoverableErrors(errorsFromSecondAttempt);\n        }\n      }\n      return exitStatus;\n    }\n    function queueRecoverableErrors(errors) {\n      if (workInProgressRootRecoverableErrors === null) {\n        workInProgressRootRecoverableErrors = errors;\n      } else {\n        workInProgressRootRecoverableErrors.push.apply(workInProgressRootRecoverableErrors, errors);\n      }\n    }\n    function finishConcurrentRender(root, exitStatus, lanes) {\n      switch (exitStatus) {\n        case RootInProgress:\n        case RootFatalErrored:\n          {\n            throw new Error(\"Root did not complete. This is a bug in React.\");\n          }\n        case RootErrored:\n          {\n            commitRoot(root, workInProgressRootRecoverableErrors, workInProgressTransitions);\n            break;\n          }\n        case RootSuspended:\n          {\n            markRootSuspended$1(root, lanes);\n            if (includesOnlyRetries(lanes) && !shouldForceFlushFallbacksInDEV()) {\n              var msUntilTimeout = globalMostRecentFallbackTime + FALLBACK_THROTTLE_MS - now();\n              if (msUntilTimeout > 10) {\n                var nextLanes = getNextLanes(root, NoLanes);\n                if (nextLanes !== NoLanes) {\n                  break;\n                }\n                var suspendedLanes = root.suspendedLanes;\n                if (!isSubsetOfLanes(suspendedLanes, lanes)) {\n                  var eventTime = requestEventTime();\n                  markRootPinged(root, suspendedLanes);\n                  break;\n                }\n                root.timeoutHandle = scheduleTimeout(commitRoot.bind(null, root, workInProgressRootRecoverableErrors, workInProgressTransitions), msUntilTimeout);\n                break;\n              }\n            }\n            commitRoot(root, workInProgressRootRecoverableErrors, workInProgressTransitions);\n            break;\n          }\n        case RootSuspendedWithDelay:\n          {\n            markRootSuspended$1(root, lanes);\n            if (includesOnlyTransitions(lanes)) {\n              break;\n            }\n            if (!shouldForceFlushFallbacksInDEV()) {\n              var mostRecentEventTime = getMostRecentEventTime(root, lanes);\n              var eventTimeMs = mostRecentEventTime;\n              var timeElapsedMs = now() - eventTimeMs;\n              var _msUntilTimeout = jnd(timeElapsedMs) - timeElapsedMs;\n              if (_msUntilTimeout > 10) {\n                root.timeoutHandle = scheduleTimeout(commitRoot.bind(null, root, workInProgressRootRecoverableErrors, workInProgressTransitions), _msUntilTimeout);\n                break;\n              }\n            }\n            commitRoot(root, workInProgressRootRecoverableErrors, workInProgressTransitions);\n            break;\n          }\n        case RootCompleted:\n          {\n            commitRoot(root, workInProgressRootRecoverableErrors, workInProgressTransitions);\n            break;\n          }\n        default:\n          {\n            throw new Error(\"Unknown root exit status.\");\n          }\n      }\n    }\n    function isRenderConsistentWithExternalStores(finishedWork) {\n      var node = finishedWork;\n      while (true) {\n        if (node.flags & StoreConsistency) {\n          var updateQueue = node.updateQueue;\n          if (updateQueue !== null) {\n            var checks = updateQueue.stores;\n            if (checks !== null) {\n              for (var i = 0; i < checks.length; i++) {\n                var check = checks[i];\n                var getSnapshot = check.getSnapshot;\n                var renderedValue = check.value;\n                try {\n                  if (!objectIs(getSnapshot(), renderedValue)) {\n                    return false;\n                  }\n                } catch (error) {\n                  return false;\n                }\n              }\n            }\n          }\n        }\n        var child = node.child;\n        if (node.subtreeFlags & StoreConsistency && child !== null) {\n          child.return = node;\n          node = child;\n          continue;\n        }\n        if (node === finishedWork) {\n          return true;\n        }\n        while (node.sibling === null) {\n          if (node.return === null || node.return === finishedWork) {\n            return true;\n          }\n          node = node.return;\n        }\n        node.sibling.return = node.return;\n        node = node.sibling;\n      }\n      return true;\n    }\n    function markRootSuspended$1(root, suspendedLanes) {\n      suspendedLanes = removeLanes(suspendedLanes, workInProgressRootPingedLanes);\n      suspendedLanes = removeLanes(suspendedLanes, workInProgressRootInterleavedUpdatedLanes);\n      markRootSuspended(root, suspendedLanes);\n    }\n    function performSyncWorkOnRoot(root) {\n      {\n        syncNestedUpdateFlag();\n      }\n      if ((executionContext & (RenderContext | CommitContext)) !== NoContext) {\n        throw new Error(\"Should not already be working.\");\n      }\n      flushPassiveEffects();\n      var lanes = getNextLanes(root, NoLanes);\n      if (!includesSomeLane(lanes, SyncLane)) {\n        ensureRootIsScheduled(root, now());\n        return null;\n      }\n      var exitStatus = renderRootSync(root, lanes);\n      if (root.tag !== LegacyRoot && exitStatus === RootErrored) {\n        var errorRetryLanes = getLanesToRetrySynchronouslyOnError(root);\n        if (errorRetryLanes !== NoLanes) {\n          lanes = errorRetryLanes;\n          exitStatus = recoverFromConcurrentError(root, errorRetryLanes);\n        }\n      }\n      if (exitStatus === RootFatalErrored) {\n        var fatalError = workInProgressRootFatalError;\n        prepareFreshStack(root, NoLanes);\n        markRootSuspended$1(root, lanes);\n        ensureRootIsScheduled(root, now());\n        throw fatalError;\n      }\n      if (exitStatus === RootDidNotComplete) {\n        throw new Error(\"Root did not complete. This is a bug in React.\");\n      }\n      var finishedWork = root.current.alternate;\n      root.finishedWork = finishedWork;\n      root.finishedLanes = lanes;\n      commitRoot(root, workInProgressRootRecoverableErrors, workInProgressTransitions);\n      ensureRootIsScheduled(root, now());\n      return null;\n    }\n    function batchedUpdates$1(fn, a) {\n      var prevExecutionContext = executionContext;\n      executionContext |= BatchedContext;\n      try {\n        return fn(a);\n      } finally {\n        executionContext = prevExecutionContext;\n        if (executionContext === NoContext && !ReactCurrentActQueue$1.isBatchingLegacy) {\n          resetRenderTimer();\n          flushSyncCallbacksOnlyInLegacyMode();\n        }\n      }\n    }\n    function flushSync(fn) {\n      if (rootWithPendingPassiveEffects !== null && rootWithPendingPassiveEffects.tag === LegacyRoot && (executionContext & (RenderContext | CommitContext)) === NoContext) {\n        flushPassiveEffects();\n      }\n      var prevExecutionContext = executionContext;\n      executionContext |= BatchedContext;\n      var prevTransition = ReactCurrentBatchConfig$2.transition;\n      var previousPriority = getCurrentUpdatePriority();\n      try {\n        ReactCurrentBatchConfig$2.transition = null;\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        if (fn) {\n          return fn();\n        } else {\n          return undefined;\n        }\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig$2.transition = prevTransition;\n        executionContext = prevExecutionContext;\n        if ((executionContext & (RenderContext | CommitContext)) === NoContext) {\n          flushSyncCallbacks();\n        }\n      }\n    }\n    function pushRenderLanes(fiber, lanes) {\n      push(subtreeRenderLanesCursor, subtreeRenderLanes, fiber);\n      subtreeRenderLanes = mergeLanes(subtreeRenderLanes, lanes);\n      workInProgressRootIncludedLanes = mergeLanes(workInProgressRootIncludedLanes, lanes);\n    }\n    function popRenderLanes(fiber) {\n      subtreeRenderLanes = subtreeRenderLanesCursor.current;\n      pop(subtreeRenderLanesCursor, fiber);\n    }\n    function prepareFreshStack(root, lanes) {\n      root.finishedWork = null;\n      root.finishedLanes = NoLanes;\n      var timeoutHandle = root.timeoutHandle;\n      if (timeoutHandle !== noTimeout) {\n        root.timeoutHandle = noTimeout;\n        cancelTimeout(timeoutHandle);\n      }\n      if (workInProgress !== null) {\n        var interruptedWork = workInProgress.return;\n        while (interruptedWork !== null) {\n          var current = interruptedWork.alternate;\n          unwindInterruptedWork(current, interruptedWork);\n          interruptedWork = interruptedWork.return;\n        }\n      }\n      workInProgressRoot = root;\n      var rootWorkInProgress = createWorkInProgress(root.current, null);\n      workInProgress = rootWorkInProgress;\n      workInProgressRootRenderLanes = subtreeRenderLanes = workInProgressRootIncludedLanes = lanes;\n      workInProgressRootExitStatus = RootInProgress;\n      workInProgressRootFatalError = null;\n      workInProgressRootSkippedLanes = NoLanes;\n      workInProgressRootInterleavedUpdatedLanes = NoLanes;\n      workInProgressRootPingedLanes = NoLanes;\n      workInProgressRootConcurrentErrors = null;\n      workInProgressRootRecoverableErrors = null;\n      finishQueueingConcurrentUpdates();\n      {\n        ReactStrictModeWarnings.discardPendingWarnings();\n      }\n      return rootWorkInProgress;\n    }\n    function handleError(root, thrownValue) {\n      do {\n        var erroredWork = workInProgress;\n        try {\n          resetContextDependencies();\n          resetHooksAfterThrow();\n          resetCurrentFiber();\n          ReactCurrentOwner$2.current = null;\n          if (erroredWork === null || erroredWork.return === null) {\n            workInProgressRootExitStatus = RootFatalErrored;\n            workInProgressRootFatalError = thrownValue;\n            workInProgress = null;\n            return;\n          }\n          if (enableProfilerTimer && erroredWork.mode & ProfileMode) {\n            stopProfilerTimerIfRunningAndRecordDelta(erroredWork, true);\n          }\n          if (enableSchedulingProfiler) {\n            markComponentRenderStopped();\n            if (thrownValue !== null && typeof thrownValue === \"object\" && typeof thrownValue.then === \"function\") {\n              var wakeable = thrownValue;\n              markComponentSuspended(erroredWork, wakeable, workInProgressRootRenderLanes);\n            } else {\n              markComponentErrored(erroredWork, thrownValue, workInProgressRootRenderLanes);\n            }\n          }\n          throwException(root, erroredWork.return, erroredWork, thrownValue, workInProgressRootRenderLanes);\n          completeUnitOfWork(erroredWork);\n        } catch (yetAnotherThrownValue) {\n          thrownValue = yetAnotherThrownValue;\n          if (workInProgress === erroredWork && erroredWork !== null) {\n            erroredWork = erroredWork.return;\n            workInProgress = erroredWork;\n          } else {\n            erroredWork = workInProgress;\n          }\n          continue;\n        }\n        return;\n      } while (true);\n    }\n    function pushDispatcher() {\n      var prevDispatcher = ReactCurrentDispatcher$2.current;\n      ReactCurrentDispatcher$2.current = ContextOnlyDispatcher;\n      if (prevDispatcher === null) {\n        return ContextOnlyDispatcher;\n      } else {\n        return prevDispatcher;\n      }\n    }\n    function popDispatcher(prevDispatcher) {\n      ReactCurrentDispatcher$2.current = prevDispatcher;\n    }\n    function markCommitTimeOfFallback() {\n      globalMostRecentFallbackTime = now();\n    }\n    function markSkippedUpdateLanes(lane) {\n      workInProgressRootSkippedLanes = mergeLanes(lane, workInProgressRootSkippedLanes);\n    }\n    function renderDidSuspend() {\n      if (workInProgressRootExitStatus === RootInProgress) {\n        workInProgressRootExitStatus = RootSuspended;\n      }\n    }\n    function renderDidSuspendDelayIfPossible() {\n      if (workInProgressRootExitStatus === RootInProgress || workInProgressRootExitStatus === RootSuspended || workInProgressRootExitStatus === RootErrored) {\n        workInProgressRootExitStatus = RootSuspendedWithDelay;\n      }\n      if (workInProgressRoot !== null && (includesNonIdleWork(workInProgressRootSkippedLanes) || includesNonIdleWork(workInProgressRootInterleavedUpdatedLanes))) {\n        markRootSuspended$1(workInProgressRoot, workInProgressRootRenderLanes);\n      }\n    }\n    function renderDidError(error) {\n      if (workInProgressRootExitStatus !== RootSuspendedWithDelay) {\n        workInProgressRootExitStatus = RootErrored;\n      }\n      if (workInProgressRootConcurrentErrors === null) {\n        workInProgressRootConcurrentErrors = [error];\n      } else {\n        workInProgressRootConcurrentErrors.push(error);\n      }\n    }\n    function renderHasNotSuspendedYet() {\n      return workInProgressRootExitStatus === RootInProgress;\n    }\n    function renderRootSync(root, lanes) {\n      var prevExecutionContext = executionContext;\n      executionContext |= RenderContext;\n      var prevDispatcher = pushDispatcher();\n      if (workInProgressRoot !== root || workInProgressRootRenderLanes !== lanes) {\n        {\n          if (isDevToolsPresent) {\n            var memoizedUpdaters = root.memoizedUpdaters;\n            if (memoizedUpdaters.size > 0) {\n              restorePendingUpdaters(root, workInProgressRootRenderLanes);\n              memoizedUpdaters.clear();\n            }\n            movePendingFibersToMemoized(root, lanes);\n          }\n        }\n        workInProgressTransitions = getTransitionsForLanes();\n        prepareFreshStack(root, lanes);\n      }\n      do {\n        try {\n          workLoopSync();\n          break;\n        } catch (thrownValue) {\n          handleError(root, thrownValue);\n        }\n      } while (true);\n      resetContextDependencies();\n      executionContext = prevExecutionContext;\n      popDispatcher(prevDispatcher);\n      if (workInProgress !== null) {\n        throw new Error(\"Cannot commit an incomplete root. This error is likely caused by a \" + \"bug in React. Please file an issue.\");\n      }\n      workInProgressRoot = null;\n      workInProgressRootRenderLanes = NoLanes;\n      return workInProgressRootExitStatus;\n    }\n    function workLoopSync() {\n      while (workInProgress !== null) {\n        performUnitOfWork(workInProgress);\n      }\n    }\n    function renderRootConcurrent(root, lanes) {\n      var prevExecutionContext = executionContext;\n      executionContext |= RenderContext;\n      var prevDispatcher = pushDispatcher();\n      if (workInProgressRoot !== root || workInProgressRootRenderLanes !== lanes) {\n        {\n          if (isDevToolsPresent) {\n            var memoizedUpdaters = root.memoizedUpdaters;\n            if (memoizedUpdaters.size > 0) {\n              restorePendingUpdaters(root, workInProgressRootRenderLanes);\n              memoizedUpdaters.clear();\n            }\n            movePendingFibersToMemoized(root, lanes);\n          }\n        }\n        workInProgressTransitions = getTransitionsForLanes();\n        resetRenderTimer();\n        prepareFreshStack(root, lanes);\n      }\n      do {\n        try {\n          workLoopConcurrent();\n          break;\n        } catch (thrownValue) {\n          handleError(root, thrownValue);\n        }\n      } while (true);\n      resetContextDependencies();\n      popDispatcher(prevDispatcher);\n      executionContext = prevExecutionContext;\n      if (workInProgress !== null) {\n        return RootInProgress;\n      } else {\n        workInProgressRoot = null;\n        workInProgressRootRenderLanes = NoLanes;\n        return workInProgressRootExitStatus;\n      }\n    }\n    function workLoopConcurrent() {\n      while (workInProgress !== null && !shouldYield()) {\n        performUnitOfWork(workInProgress);\n      }\n    }\n    function performUnitOfWork(unitOfWork) {\n      var current = unitOfWork.alternate;\n      setCurrentFiber(unitOfWork);\n      var next;\n      if ((unitOfWork.mode & ProfileMode) !== NoMode) {\n        startProfilerTimer(unitOfWork);\n        next = beginWork$1(current, unitOfWork, subtreeRenderLanes);\n        stopProfilerTimerIfRunningAndRecordDelta(unitOfWork, true);\n      } else {\n        next = beginWork$1(current, unitOfWork, subtreeRenderLanes);\n      }\n      resetCurrentFiber();\n      unitOfWork.memoizedProps = unitOfWork.pendingProps;\n      if (next === null) {\n        completeUnitOfWork(unitOfWork);\n      } else {\n        workInProgress = next;\n      }\n      ReactCurrentOwner$2.current = null;\n    }\n    function completeUnitOfWork(unitOfWork) {\n      var completedWork = unitOfWork;\n      do {\n        var current = completedWork.alternate;\n        var returnFiber = completedWork.return;\n        if ((completedWork.flags & Incomplete) === NoFlags) {\n          setCurrentFiber(completedWork);\n          var next = void 0;\n          if ((completedWork.mode & ProfileMode) === NoMode) {\n            next = completeWork(current, completedWork, subtreeRenderLanes);\n          } else {\n            startProfilerTimer(completedWork);\n            next = completeWork(current, completedWork, subtreeRenderLanes);\n            stopProfilerTimerIfRunningAndRecordDelta(completedWork, false);\n          }\n          resetCurrentFiber();\n          if (next !== null) {\n            workInProgress = next;\n            return;\n          }\n        } else {\n          var _next = unwindWork(current, completedWork);\n          if (_next !== null) {\n            _next.flags &= HostEffectMask;\n            workInProgress = _next;\n            return;\n          }\n          if ((completedWork.mode & ProfileMode) !== NoMode) {\n            stopProfilerTimerIfRunningAndRecordDelta(completedWork, false);\n            var actualDuration = completedWork.actualDuration;\n            var child = completedWork.child;\n            while (child !== null) {\n              actualDuration += child.actualDuration;\n              child = child.sibling;\n            }\n            completedWork.actualDuration = actualDuration;\n          }\n          if (returnFiber !== null) {\n            returnFiber.flags |= Incomplete;\n            returnFiber.subtreeFlags = NoFlags;\n            returnFiber.deletions = null;\n          } else {\n            workInProgressRootExitStatus = RootDidNotComplete;\n            workInProgress = null;\n            return;\n          }\n        }\n        var siblingFiber = completedWork.sibling;\n        if (siblingFiber !== null) {\n          workInProgress = siblingFiber;\n          return;\n        }\n        completedWork = returnFiber;\n        workInProgress = completedWork;\n      } while (completedWork !== null);\n      if (workInProgressRootExitStatus === RootInProgress) {\n        workInProgressRootExitStatus = RootCompleted;\n      }\n    }\n    function commitRoot(root, recoverableErrors, transitions) {\n      var previousUpdateLanePriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig$2.transition;\n      try {\n        ReactCurrentBatchConfig$2.transition = null;\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        commitRootImpl(root, recoverableErrors, transitions, previousUpdateLanePriority);\n      } finally {\n        ReactCurrentBatchConfig$2.transition = prevTransition;\n        setCurrentUpdatePriority(previousUpdateLanePriority);\n      }\n      return null;\n    }\n    function commitRootImpl(root, recoverableErrors, transitions, renderPriorityLevel) {\n      do {\n        flushPassiveEffects();\n      } while (rootWithPendingPassiveEffects !== null);\n      flushRenderPhaseStrictModeWarningsInDEV();\n      if ((executionContext & (RenderContext | CommitContext)) !== NoContext) {\n        throw new Error(\"Should not already be working.\");\n      }\n      var finishedWork = root.finishedWork;\n      var lanes = root.finishedLanes;\n      if (finishedWork === null) {\n        return null;\n      } else {\n        {\n          if (lanes === NoLanes) {\n            error(\"root.finishedLanes should not be empty during a commit. This is a \" + \"bug in React.\");\n          }\n        }\n      }\n      root.finishedWork = null;\n      root.finishedLanes = NoLanes;\n      if (finishedWork === root.current) {\n        throw new Error(\"Cannot commit the same tree as before. This error is likely caused by \" + \"a bug in React. Please file an issue.\");\n      }\n      root.callbackNode = null;\n      root.callbackPriority = NoLane;\n      var remainingLanes = mergeLanes(finishedWork.lanes, finishedWork.childLanes);\n      markRootFinished(root, remainingLanes);\n      if (root === workInProgressRoot) {\n        workInProgressRoot = null;\n        workInProgress = null;\n        workInProgressRootRenderLanes = NoLanes;\n      }\n      if ((finishedWork.subtreeFlags & PassiveMask) !== NoFlags || (finishedWork.flags & PassiveMask) !== NoFlags) {\n        if (!rootDoesHavePassiveEffects) {\n          rootDoesHavePassiveEffects = true;\n          pendingPassiveTransitions = transitions;\n          scheduleCallback$1(NormalPriority, function () {\n            flushPassiveEffects();\n            return null;\n          });\n        }\n      }\n      var subtreeHasEffects = (finishedWork.subtreeFlags & (BeforeMutationMask | MutationMask | LayoutMask | PassiveMask)) !== NoFlags;\n      var rootHasEffect = (finishedWork.flags & (BeforeMutationMask | MutationMask | LayoutMask | PassiveMask)) !== NoFlags;\n      if (subtreeHasEffects || rootHasEffect) {\n        var prevTransition = ReactCurrentBatchConfig$2.transition;\n        ReactCurrentBatchConfig$2.transition = null;\n        var previousPriority = getCurrentUpdatePriority();\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        var prevExecutionContext = executionContext;\n        executionContext |= CommitContext;\n        ReactCurrentOwner$2.current = null;\n        var shouldFireAfterActiveInstanceBlur = commitBeforeMutationEffects(root, finishedWork);\n        {\n          recordCommitTime();\n        }\n        commitMutationEffects(root, finishedWork, lanes);\n        resetAfterCommit(root.containerInfo);\n        root.current = finishedWork;\n        commitLayoutEffects(finishedWork, root, lanes);\n        requestPaint();\n        executionContext = prevExecutionContext;\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig$2.transition = prevTransition;\n      } else {\n        root.current = finishedWork;\n        {\n          recordCommitTime();\n        }\n      }\n      if (rootDoesHavePassiveEffects) {\n        rootDoesHavePassiveEffects = false;\n        rootWithPendingPassiveEffects = root;\n        pendingPassiveEffectsLanes = lanes;\n      } else {\n        {\n          nestedPassiveUpdateCount = 0;\n          rootWithPassiveNestedUpdates = null;\n        }\n      }\n      remainingLanes = root.pendingLanes;\n      if (remainingLanes === NoLanes) {\n        legacyErrorBoundariesThatAlreadyFailed = null;\n      }\n      onCommitRoot(finishedWork.stateNode, renderPriorityLevel);\n      {\n        if (isDevToolsPresent) {\n          root.memoizedUpdaters.clear();\n        }\n      }\n      ensureRootIsScheduled(root, now());\n      if (recoverableErrors !== null) {\n        var onRecoverableError = root.onRecoverableError;\n        for (var i = 0; i < recoverableErrors.length; i++) {\n          var recoverableError = recoverableErrors[i];\n          var componentStack = recoverableError.stack;\n          var digest = recoverableError.digest;\n          onRecoverableError(recoverableError.value, {\n            componentStack: componentStack,\n            digest: digest\n          });\n        }\n      }\n      if (hasUncaughtError) {\n        hasUncaughtError = false;\n        var error$1 = firstUncaughtError;\n        firstUncaughtError = null;\n        throw error$1;\n      }\n      if (includesSomeLane(pendingPassiveEffectsLanes, SyncLane) && root.tag !== LegacyRoot) {\n        flushPassiveEffects();\n      }\n      remainingLanes = root.pendingLanes;\n      if (includesSomeLane(remainingLanes, SyncLane)) {\n        {\n          markNestedUpdateScheduled();\n        }\n        if (root === rootWithNestedUpdates) {\n          nestedUpdateCount++;\n        } else {\n          nestedUpdateCount = 0;\n          rootWithNestedUpdates = root;\n        }\n      } else {\n        nestedUpdateCount = 0;\n      }\n      flushSyncCallbacks();\n      return null;\n    }\n    function flushPassiveEffects() {\n      if (rootWithPendingPassiveEffects !== null) {\n        var renderPriority = lanesToEventPriority(pendingPassiveEffectsLanes);\n        var priority = lowerEventPriority(DefaultEventPriority, renderPriority);\n        var prevTransition = ReactCurrentBatchConfig$2.transition;\n        var previousPriority = getCurrentUpdatePriority();\n        try {\n          ReactCurrentBatchConfig$2.transition = null;\n          setCurrentUpdatePriority(priority);\n          return flushPassiveEffectsImpl();\n        } finally {\n          setCurrentUpdatePriority(previousPriority);\n          ReactCurrentBatchConfig$2.transition = prevTransition;\n        }\n      }\n      return false;\n    }\n    function enqueuePendingPassiveProfilerEffect(fiber) {\n      {\n        pendingPassiveProfilerEffects.push(fiber);\n        if (!rootDoesHavePassiveEffects) {\n          rootDoesHavePassiveEffects = true;\n          scheduleCallback$1(NormalPriority, function () {\n            flushPassiveEffects();\n            return null;\n          });\n        }\n      }\n    }\n    function flushPassiveEffectsImpl() {\n      if (rootWithPendingPassiveEffects === null) {\n        return false;\n      }\n      var transitions = pendingPassiveTransitions;\n      pendingPassiveTransitions = null;\n      var root = rootWithPendingPassiveEffects;\n      var lanes = pendingPassiveEffectsLanes;\n      rootWithPendingPassiveEffects = null;\n      pendingPassiveEffectsLanes = NoLanes;\n      if ((executionContext & (RenderContext | CommitContext)) !== NoContext) {\n        throw new Error(\"Cannot flush passive effects while already rendering.\");\n      }\n      {\n        isFlushingPassiveEffects = true;\n        didScheduleUpdateDuringPassiveEffects = false;\n      }\n      var prevExecutionContext = executionContext;\n      executionContext |= CommitContext;\n      commitPassiveUnmountEffects(root.current);\n      commitPassiveMountEffects(root, root.current, lanes, transitions);\n      {\n        var profilerEffects = pendingPassiveProfilerEffects;\n        pendingPassiveProfilerEffects = [];\n        for (var i = 0; i < profilerEffects.length; i++) {\n          var _fiber = profilerEffects[i];\n          commitPassiveEffectDurations(root, _fiber);\n        }\n      }\n      executionContext = prevExecutionContext;\n      flushSyncCallbacks();\n      {\n        if (didScheduleUpdateDuringPassiveEffects) {\n          if (root === rootWithPassiveNestedUpdates) {\n            nestedPassiveUpdateCount++;\n          } else {\n            nestedPassiveUpdateCount = 0;\n            rootWithPassiveNestedUpdates = root;\n          }\n        } else {\n          nestedPassiveUpdateCount = 0;\n        }\n        isFlushingPassiveEffects = false;\n        didScheduleUpdateDuringPassiveEffects = false;\n      }\n      onPostCommitRoot(root);\n      {\n        var stateNode = root.current.stateNode;\n        stateNode.effectDuration = 0;\n        stateNode.passiveEffectDuration = 0;\n      }\n      return true;\n    }\n    function isAlreadyFailedLegacyErrorBoundary(instance) {\n      return legacyErrorBoundariesThatAlreadyFailed !== null && legacyErrorBoundariesThatAlreadyFailed.has(instance);\n    }\n    function markLegacyErrorBoundaryAsFailed(instance) {\n      if (legacyErrorBoundariesThatAlreadyFailed === null) {\n        legacyErrorBoundariesThatAlreadyFailed = new Set([instance]);\n      } else {\n        legacyErrorBoundariesThatAlreadyFailed.add(instance);\n      }\n    }\n    function prepareToThrowUncaughtError(error) {\n      if (!hasUncaughtError) {\n        hasUncaughtError = true;\n        firstUncaughtError = error;\n      }\n    }\n    var onUncaughtError = prepareToThrowUncaughtError;\n    function captureCommitPhaseErrorOnRoot(rootFiber, sourceFiber, error) {\n      var errorInfo = createCapturedValueAtFiber(error, sourceFiber);\n      var update = createRootErrorUpdate(rootFiber, errorInfo, SyncLane);\n      var root = enqueueUpdate(rootFiber, update, SyncLane);\n      var eventTime = requestEventTime();\n      if (root !== null) {\n        markRootUpdated(root, SyncLane, eventTime);\n        ensureRootIsScheduled(root, eventTime);\n      }\n    }\n    function captureCommitPhaseError(sourceFiber, nearestMountedAncestor, error$1) {\n      {\n        reportUncaughtErrorInDEV(error$1);\n        setIsRunningInsertionEffect(false);\n      }\n      if (sourceFiber.tag === HostRoot) {\n        captureCommitPhaseErrorOnRoot(sourceFiber, sourceFiber, error$1);\n        return;\n      }\n      var fiber = null;\n      {\n        fiber = sourceFiber.return;\n      }\n      while (fiber !== null) {\n        if (fiber.tag === HostRoot) {\n          captureCommitPhaseErrorOnRoot(fiber, sourceFiber, error$1);\n          return;\n        } else if (fiber.tag === ClassComponent) {\n          var ctor = fiber.type;\n          var instance = fiber.stateNode;\n          if (typeof ctor.getDerivedStateFromError === \"function\" || typeof instance.componentDidCatch === \"function\" && !isAlreadyFailedLegacyErrorBoundary(instance)) {\n            var errorInfo = createCapturedValueAtFiber(error$1, sourceFiber);\n            var update = createClassErrorUpdate(fiber, errorInfo, SyncLane);\n            var root = enqueueUpdate(fiber, update, SyncLane);\n            var eventTime = requestEventTime();\n            if (root !== null) {\n              markRootUpdated(root, SyncLane, eventTime);\n              ensureRootIsScheduled(root, eventTime);\n            }\n            return;\n          }\n        }\n        fiber = fiber.return;\n      }\n      {\n        error(\"Internal React error: Attempted to capture a commit phase error \" + \"inside a detached tree. This indicates a bug in React. Likely \" + \"causes include deleting the same fiber more than once, committing an \" + \"already-finished tree, or an inconsistent return pointer.\\n\\n\" + \"Error message:\\n\\n%s\", error$1);\n      }\n    }\n    function pingSuspendedRoot(root, wakeable, pingedLanes) {\n      var pingCache = root.pingCache;\n      if (pingCache !== null) {\n        pingCache.delete(wakeable);\n      }\n      var eventTime = requestEventTime();\n      markRootPinged(root, pingedLanes);\n      warnIfSuspenseResolutionNotWrappedWithActDEV(root);\n      if (workInProgressRoot === root && isSubsetOfLanes(workInProgressRootRenderLanes, pingedLanes)) {\n        if (workInProgressRootExitStatus === RootSuspendedWithDelay || workInProgressRootExitStatus === RootSuspended && includesOnlyRetries(workInProgressRootRenderLanes) && now() - globalMostRecentFallbackTime < FALLBACK_THROTTLE_MS) {\n          prepareFreshStack(root, NoLanes);\n        } else {\n          workInProgressRootPingedLanes = mergeLanes(workInProgressRootPingedLanes, pingedLanes);\n        }\n      }\n      ensureRootIsScheduled(root, eventTime);\n    }\n    function retryTimedOutBoundary(boundaryFiber, retryLane) {\n      if (retryLane === NoLane) {\n        retryLane = requestRetryLane(boundaryFiber);\n      }\n      var eventTime = requestEventTime();\n      var root = enqueueConcurrentRenderForLane(boundaryFiber, retryLane);\n      if (root !== null) {\n        markRootUpdated(root, retryLane, eventTime);\n        ensureRootIsScheduled(root, eventTime);\n      }\n    }\n    function retryDehydratedSuspenseBoundary(boundaryFiber) {\n      var suspenseState = boundaryFiber.memoizedState;\n      var retryLane = NoLane;\n      if (suspenseState !== null) {\n        retryLane = suspenseState.retryLane;\n      }\n      retryTimedOutBoundary(boundaryFiber, retryLane);\n    }\n    function resolveRetryWakeable(boundaryFiber, wakeable) {\n      var retryLane = NoLane;\n      var retryCache;\n      switch (boundaryFiber.tag) {\n        case SuspenseComponent:\n          retryCache = boundaryFiber.stateNode;\n          var suspenseState = boundaryFiber.memoizedState;\n          if (suspenseState !== null) {\n            retryLane = suspenseState.retryLane;\n          }\n          break;\n        case SuspenseListComponent:\n          retryCache = boundaryFiber.stateNode;\n          break;\n        default:\n          throw new Error(\"Pinged unknown suspense boundary type. \" + \"This is probably a bug in React.\");\n      }\n      if (retryCache !== null) {\n        retryCache.delete(wakeable);\n      }\n      retryTimedOutBoundary(boundaryFiber, retryLane);\n    }\n    function jnd(timeElapsed) {\n      return timeElapsed < 120 ? 120 : timeElapsed < 480 ? 480 : timeElapsed < 1080 ? 1080 : timeElapsed < 1920 ? 1920 : timeElapsed < 3000 ? 3000 : timeElapsed < 4320 ? 4320 : ceil(timeElapsed / 1960) * 1960;\n    }\n    function checkForNestedUpdates() {\n      if (nestedUpdateCount > NESTED_UPDATE_LIMIT) {\n        nestedUpdateCount = 0;\n        rootWithNestedUpdates = null;\n        throw new Error(\"Maximum update depth exceeded. This can happen when a component \" + \"repeatedly calls setState inside componentWillUpdate or \" + \"componentDidUpdate. React limits the number of nested updates to \" + \"prevent infinite loops.\");\n      }\n      {\n        if (nestedPassiveUpdateCount > NESTED_PASSIVE_UPDATE_LIMIT) {\n          nestedPassiveUpdateCount = 0;\n          rootWithPassiveNestedUpdates = null;\n          error(\"Maximum update depth exceeded. This can happen when a component \" + \"calls setState inside useEffect, but useEffect either doesn't \" + \"have a dependency array, or one of the dependencies changes on \" + \"every render.\");\n        }\n      }\n    }\n    function flushRenderPhaseStrictModeWarningsInDEV() {\n      {\n        ReactStrictModeWarnings.flushLegacyContextWarning();\n        {\n          ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings();\n        }\n      }\n    }\n    var didWarnStateUpdateForNotYetMountedComponent = null;\n    function warnAboutUpdateOnNotYetMountedFiberInDEV(fiber) {\n      {\n        if ((executionContext & RenderContext) !== NoContext) {\n          return;\n        }\n        if (!(fiber.mode & ConcurrentMode)) {\n          return;\n        }\n        var tag = fiber.tag;\n        if (tag !== IndeterminateComponent && tag !== HostRoot && tag !== ClassComponent && tag !== FunctionComponent && tag !== ForwardRef && tag !== MemoComponent && tag !== SimpleMemoComponent) {\n          return;\n        }\n        var componentName = getComponentNameFromFiber(fiber) || \"ReactComponent\";\n        if (didWarnStateUpdateForNotYetMountedComponent !== null) {\n          if (didWarnStateUpdateForNotYetMountedComponent.has(componentName)) {\n            return;\n          }\n          didWarnStateUpdateForNotYetMountedComponent.add(componentName);\n        } else {\n          didWarnStateUpdateForNotYetMountedComponent = new Set([componentName]);\n        }\n        var previousFiber = current;\n        try {\n          setCurrentFiber(fiber);\n          error(\"Can't perform a React state update on a component that hasn't mounted yet. \" + \"This indicates that you have a side-effect in your render function that \" + \"asynchronously later calls tries to update the component. Move this work to \" + \"useEffect instead.\");\n        } finally {\n          if (previousFiber) {\n            setCurrentFiber(fiber);\n          } else {\n            resetCurrentFiber();\n          }\n        }\n      }\n    }\n    var beginWork$1;\n    {\n      var dummyFiber = null;\n      beginWork$1 = function beginWork$1(current, unitOfWork, lanes) {\n        var originalWorkInProgressCopy = assignFiberPropertiesInDEV(dummyFiber, unitOfWork);\n        try {\n          return beginWork(current, unitOfWork, lanes);\n        } catch (originalError) {\n          if (didSuspendOrErrorWhileHydratingDEV() || originalError !== null && typeof originalError === \"object\" && typeof originalError.then === \"function\") {\n            throw originalError;\n          }\n          resetContextDependencies();\n          resetHooksAfterThrow();\n          unwindInterruptedWork(current, unitOfWork);\n          assignFiberPropertiesInDEV(unitOfWork, originalWorkInProgressCopy);\n          if (unitOfWork.mode & ProfileMode) {\n            startProfilerTimer(unitOfWork);\n          }\n          invokeGuardedCallback(null, beginWork, null, current, unitOfWork, lanes);\n          if (hasCaughtError()) {\n            var replayError = clearCaughtError();\n            if (typeof replayError === \"object\" && replayError !== null && replayError._suppressLogging && typeof originalError === \"object\" && originalError !== null && !originalError._suppressLogging) {\n              originalError._suppressLogging = true;\n            }\n          }\n          throw originalError;\n        }\n      };\n    }\n    var didWarnAboutUpdateInRender = false;\n    var didWarnAboutUpdateInRenderForAnotherComponent;\n    {\n      didWarnAboutUpdateInRenderForAnotherComponent = new Set();\n    }\n    function warnAboutRenderPhaseUpdatesInDEV(fiber) {\n      {\n        if (isRendering && !getIsUpdatingOpaqueValueInRenderPhaseInDEV()) {\n          switch (fiber.tag) {\n            case FunctionComponent:\n            case ForwardRef:\n            case SimpleMemoComponent:\n              {\n                var renderingComponentName = workInProgress && getComponentNameFromFiber(workInProgress) || \"Unknown\";\n                var dedupeKey = renderingComponentName;\n                if (!didWarnAboutUpdateInRenderForAnotherComponent.has(dedupeKey)) {\n                  didWarnAboutUpdateInRenderForAnotherComponent.add(dedupeKey);\n                  var setStateComponentName = getComponentNameFromFiber(fiber) || \"Unknown\";\n                  error(\"Cannot update a component (`%s`) while rendering a \" + \"different component (`%s`). To locate the bad setState() call inside `%s`, \" + \"follow the stack trace as described in https://reactjs.org/link/setstate-in-render\", setStateComponentName, renderingComponentName, renderingComponentName);\n                }\n                break;\n              }\n            case ClassComponent:\n              {\n                if (!didWarnAboutUpdateInRender) {\n                  error(\"Cannot update during an existing state transition (such as \" + \"within `render`). Render methods should be a pure \" + \"function of props and state.\");\n                  didWarnAboutUpdateInRender = true;\n                }\n                break;\n              }\n          }\n        }\n      }\n    }\n    function restorePendingUpdaters(root, lanes) {\n      {\n        if (isDevToolsPresent) {\n          var memoizedUpdaters = root.memoizedUpdaters;\n          memoizedUpdaters.forEach(function (schedulingFiber) {\n            addFiberToLanesMap(root, schedulingFiber, lanes);\n          });\n        }\n      }\n    }\n    var fakeActCallbackNode = {};\n    function scheduleCallback$1(priorityLevel, callback) {\n      {\n        var actQueue = ReactCurrentActQueue$1.current;\n        if (actQueue !== null) {\n          actQueue.push(callback);\n          return fakeActCallbackNode;\n        } else {\n          return scheduleCallback(priorityLevel, callback);\n        }\n      }\n    }\n    function cancelCallback$1(callbackNode) {\n      if (callbackNode === fakeActCallbackNode) {\n        return;\n      }\n      return cancelCallback(callbackNode);\n    }\n    function shouldForceFlushFallbacksInDEV() {\n      return ReactCurrentActQueue$1.current !== null;\n    }\n    function warnIfUpdatesNotWrappedWithActDEV(fiber) {\n      {\n        if (fiber.mode & ConcurrentMode) {\n          if (!isConcurrentActEnvironment()) {\n            return;\n          }\n        } else {\n          if (!isLegacyActEnvironment()) {\n            return;\n          }\n          if (executionContext !== NoContext) {\n            return;\n          }\n          if (fiber.tag !== FunctionComponent && fiber.tag !== ForwardRef && fiber.tag !== SimpleMemoComponent) {\n            return;\n          }\n        }\n        if (ReactCurrentActQueue$1.current === null) {\n          var previousFiber = current;\n          try {\n            setCurrentFiber(fiber);\n            error(\"An update to %s inside a test was not wrapped in act(...).\\n\\n\" + \"When testing, code that causes React state updates should be \" + \"wrapped into act(...):\\n\\n\" + \"act(() => {\\n\" + \"  /* fire events that update state */\\n\" + \"});\\n\" + \"/* assert on the output */\\n\\n\" + \"This ensures that you're testing the behavior the user would see \" + \"in the browser.\" + \" Learn more at https://reactjs.org/link/wrap-tests-with-act\", getComponentNameFromFiber(fiber));\n          } finally {\n            if (previousFiber) {\n              setCurrentFiber(fiber);\n            } else {\n              resetCurrentFiber();\n            }\n          }\n        }\n      }\n    }\n    function warnIfSuspenseResolutionNotWrappedWithActDEV(root) {\n      {\n        if (root.tag !== LegacyRoot && isConcurrentActEnvironment() && ReactCurrentActQueue$1.current === null) {\n          error(\"A suspended resource finished loading inside a test, but the event \" + \"was not wrapped in act(...).\\n\\n\" + \"When testing, code that resolves suspended data should be wrapped \" + \"into act(...):\\n\\n\" + \"act(() => {\\n\" + \"  /* finish loading suspended data */\\n\" + \"});\\n\" + \"/* assert on the output */\\n\\n\" + \"This ensures that you're testing the behavior the user would see \" + \"in the browser.\" + \" Learn more at https://reactjs.org/link/wrap-tests-with-act\");\n        }\n      }\n    }\n    function setIsRunningInsertionEffect(isRunning) {\n      {\n        isRunningInsertionEffect = isRunning;\n      }\n    }\n    var resolveFamily = null;\n    var failedBoundaries = null;\n    var setRefreshHandler = function setRefreshHandler(handler) {\n      {\n        resolveFamily = handler;\n      }\n    };\n    function resolveFunctionForHotReloading(type) {\n      {\n        if (resolveFamily === null) {\n          return type;\n        }\n        var family = resolveFamily(type);\n        if (family === undefined) {\n          return type;\n        }\n        return family.current;\n      }\n    }\n    function resolveClassForHotReloading(type) {\n      return resolveFunctionForHotReloading(type);\n    }\n    function resolveForwardRefForHotReloading(type) {\n      {\n        if (resolveFamily === null) {\n          return type;\n        }\n        var family = resolveFamily(type);\n        if (family === undefined) {\n          if (type !== null && type !== undefined && typeof type.render === \"function\") {\n            var currentRender = resolveFunctionForHotReloading(type.render);\n            if (type.render !== currentRender) {\n              var syntheticType = {\n                $$typeof: REACT_FORWARD_REF_TYPE,\n                render: currentRender\n              };\n              if (type.displayName !== undefined) {\n                syntheticType.displayName = type.displayName;\n              }\n              return syntheticType;\n            }\n          }\n          return type;\n        }\n        return family.current;\n      }\n    }\n    function isCompatibleFamilyForHotReloading(fiber, element) {\n      {\n        if (resolveFamily === null) {\n          return false;\n        }\n        var prevType = fiber.elementType;\n        var nextType = element.type;\n        var needsCompareFamilies = false;\n        var $$typeofNextType = typeof nextType === \"object\" && nextType !== null ? nextType.$$typeof : null;\n        switch (fiber.tag) {\n          case ClassComponent:\n            {\n              if (typeof nextType === \"function\") {\n                needsCompareFamilies = true;\n              }\n              break;\n            }\n          case FunctionComponent:\n            {\n              if (typeof nextType === \"function\") {\n                needsCompareFamilies = true;\n              } else if ($$typeofNextType === REACT_LAZY_TYPE) {\n                needsCompareFamilies = true;\n              }\n              break;\n            }\n          case ForwardRef:\n            {\n              if ($$typeofNextType === REACT_FORWARD_REF_TYPE) {\n                needsCompareFamilies = true;\n              } else if ($$typeofNextType === REACT_LAZY_TYPE) {\n                needsCompareFamilies = true;\n              }\n              break;\n            }\n          case MemoComponent:\n          case SimpleMemoComponent:\n            {\n              if ($$typeofNextType === REACT_MEMO_TYPE) {\n                needsCompareFamilies = true;\n              } else if ($$typeofNextType === REACT_LAZY_TYPE) {\n                needsCompareFamilies = true;\n              }\n              break;\n            }\n          default:\n            return false;\n        }\n        if (needsCompareFamilies) {\n          var prevFamily = resolveFamily(prevType);\n          if (prevFamily !== undefined && prevFamily === resolveFamily(nextType)) {\n            return true;\n          }\n        }\n        return false;\n      }\n    }\n    function markFailedErrorBoundaryForHotReloading(fiber) {\n      {\n        if (resolveFamily === null) {\n          return;\n        }\n        if (typeof WeakSet !== \"function\") {\n          return;\n        }\n        if (failedBoundaries === null) {\n          failedBoundaries = new WeakSet();\n        }\n        failedBoundaries.add(fiber);\n      }\n    }\n    var scheduleRefresh = function scheduleRefresh(root, update) {\n      {\n        if (resolveFamily === null) {\n          return;\n        }\n        var staleFamilies = update.staleFamilies,\n          updatedFamilies = update.updatedFamilies;\n        flushPassiveEffects();\n        flushSync(function () {\n          scheduleFibersWithFamiliesRecursively(root.current, updatedFamilies, staleFamilies);\n        });\n      }\n    };\n    var scheduleRoot = function scheduleRoot(root, element) {\n      {\n        if (root.context !== emptyContextObject) {\n          return;\n        }\n        flushPassiveEffects();\n        flushSync(function () {\n          updateContainer(element, root, null, null);\n        });\n      }\n    };\n    function scheduleFibersWithFamiliesRecursively(fiber, updatedFamilies, staleFamilies) {\n      {\n        var alternate = fiber.alternate,\n          child = fiber.child,\n          sibling = fiber.sibling,\n          tag = fiber.tag,\n          type = fiber.type;\n        var candidateType = null;\n        switch (tag) {\n          case FunctionComponent:\n          case SimpleMemoComponent:\n          case ClassComponent:\n            candidateType = type;\n            break;\n          case ForwardRef:\n            candidateType = type.render;\n            break;\n        }\n        if (resolveFamily === null) {\n          throw new Error(\"Expected resolveFamily to be set during hot reload.\");\n        }\n        var needsRender = false;\n        var needsRemount = false;\n        if (candidateType !== null) {\n          var family = resolveFamily(candidateType);\n          if (family !== undefined) {\n            if (staleFamilies.has(family)) {\n              needsRemount = true;\n            } else if (updatedFamilies.has(family)) {\n              if (tag === ClassComponent) {\n                needsRemount = true;\n              } else {\n                needsRender = true;\n              }\n            }\n          }\n        }\n        if (failedBoundaries !== null) {\n          if (failedBoundaries.has(fiber) || alternate !== null && failedBoundaries.has(alternate)) {\n            needsRemount = true;\n          }\n        }\n        if (needsRemount) {\n          fiber._debugNeedsRemount = true;\n        }\n        if (needsRemount || needsRender) {\n          var _root = enqueueConcurrentRenderForLane(fiber, SyncLane);\n          if (_root !== null) {\n            scheduleUpdateOnFiber(_root, fiber, SyncLane, NoTimestamp);\n          }\n        }\n        if (child !== null && !needsRemount) {\n          scheduleFibersWithFamiliesRecursively(child, updatedFamilies, staleFamilies);\n        }\n        if (sibling !== null) {\n          scheduleFibersWithFamiliesRecursively(sibling, updatedFamilies, staleFamilies);\n        }\n      }\n    }\n    var findHostInstancesForRefresh = function findHostInstancesForRefresh(root, families) {\n      {\n        var hostInstances = new Set();\n        var types = new Set(families.map(function (family) {\n          return family.current;\n        }));\n        findHostInstancesForMatchingFibersRecursively(root.current, types, hostInstances);\n        return hostInstances;\n      }\n    };\n    function findHostInstancesForMatchingFibersRecursively(fiber, types, hostInstances) {\n      {\n        var child = fiber.child,\n          sibling = fiber.sibling,\n          tag = fiber.tag,\n          type = fiber.type;\n        var candidateType = null;\n        switch (tag) {\n          case FunctionComponent:\n          case SimpleMemoComponent:\n          case ClassComponent:\n            candidateType = type;\n            break;\n          case ForwardRef:\n            candidateType = type.render;\n            break;\n        }\n        var didMatch = false;\n        if (candidateType !== null) {\n          if (types.has(candidateType)) {\n            didMatch = true;\n          }\n        }\n        if (didMatch) {\n          findHostInstancesForFiberShallowly(fiber, hostInstances);\n        } else {\n          if (child !== null) {\n            findHostInstancesForMatchingFibersRecursively(child, types, hostInstances);\n          }\n        }\n        if (sibling !== null) {\n          findHostInstancesForMatchingFibersRecursively(sibling, types, hostInstances);\n        }\n      }\n    }\n    function findHostInstancesForFiberShallowly(fiber, hostInstances) {\n      {\n        var foundHostInstances = findChildHostInstancesForFiberShallowly(fiber, hostInstances);\n        if (foundHostInstances) {\n          return;\n        }\n        var node = fiber;\n        while (true) {\n          switch (node.tag) {\n            case HostComponent:\n              hostInstances.add(node.stateNode);\n              return;\n            case HostPortal:\n              hostInstances.add(node.stateNode.containerInfo);\n              return;\n            case HostRoot:\n              hostInstances.add(node.stateNode.containerInfo);\n              return;\n          }\n          if (node.return === null) {\n            throw new Error(\"Expected to reach root first.\");\n          }\n          node = node.return;\n        }\n      }\n    }\n    function findChildHostInstancesForFiberShallowly(fiber, hostInstances) {\n      {\n        var node = fiber;\n        var foundHostInstances = false;\n        while (true) {\n          if (node.tag === HostComponent) {\n            foundHostInstances = true;\n            hostInstances.add(node.stateNode);\n          } else if (node.child !== null) {\n            node.child.return = node;\n            node = node.child;\n            continue;\n          }\n          if (node === fiber) {\n            return foundHostInstances;\n          }\n          while (node.sibling === null) {\n            if (node.return === null || node.return === fiber) {\n              return foundHostInstances;\n            }\n            node = node.return;\n          }\n          node.sibling.return = node.return;\n          node = node.sibling;\n        }\n      }\n      return false;\n    }\n    var hasBadMapPolyfill;\n    {\n      hasBadMapPolyfill = false;\n      try {\n        var nonExtensibleObject = Object.preventExtensions({});\n        new Map([[nonExtensibleObject, null]]);\n        new Set([nonExtensibleObject]);\n      } catch (e) {\n        hasBadMapPolyfill = true;\n      }\n    }\n    function FiberNode(tag, pendingProps, key, mode) {\n      this.tag = tag;\n      this.key = key;\n      this.elementType = null;\n      this.type = null;\n      this.stateNode = null;\n      this.return = null;\n      this.child = null;\n      this.sibling = null;\n      this.index = 0;\n      this.ref = null;\n      this.pendingProps = pendingProps;\n      this.memoizedProps = null;\n      this.updateQueue = null;\n      this.memoizedState = null;\n      this.dependencies = null;\n      this.mode = mode;\n      this.flags = NoFlags;\n      this.subtreeFlags = NoFlags;\n      this.deletions = null;\n      this.lanes = NoLanes;\n      this.childLanes = NoLanes;\n      this.alternate = null;\n      {\n        this.actualDuration = Number.NaN;\n        this.actualStartTime = Number.NaN;\n        this.selfBaseDuration = Number.NaN;\n        this.treeBaseDuration = Number.NaN;\n        this.actualDuration = 0;\n        this.actualStartTime = -1;\n        this.selfBaseDuration = 0;\n        this.treeBaseDuration = 0;\n      }\n      {\n        this._debugSource = null;\n        this._debugOwner = null;\n        this._debugNeedsRemount = false;\n        this._debugHookTypes = null;\n        if (!hasBadMapPolyfill && typeof Object.preventExtensions === \"function\") {\n          Object.preventExtensions(this);\n        }\n      }\n    }\n    var createFiber = function createFiber(tag, pendingProps, key, mode) {\n      return new FiberNode(tag, pendingProps, key, mode);\n    };\n    function shouldConstruct(Component) {\n      var prototype = Component.prototype;\n      return !!(prototype && prototype.isReactComponent);\n    }\n    function isSimpleFunctionComponent(type) {\n      return typeof type === \"function\" && !shouldConstruct(type) && type.defaultProps === undefined;\n    }\n    function resolveLazyComponentTag(Component) {\n      if (typeof Component === \"function\") {\n        return shouldConstruct(Component) ? ClassComponent : FunctionComponent;\n      } else if (Component !== undefined && Component !== null) {\n        var $$typeof = Component.$$typeof;\n        if ($$typeof === REACT_FORWARD_REF_TYPE) {\n          return ForwardRef;\n        }\n        if ($$typeof === REACT_MEMO_TYPE) {\n          return MemoComponent;\n        }\n      }\n      return IndeterminateComponent;\n    }\n    function createWorkInProgress(current, pendingProps) {\n      var workInProgress = current.alternate;\n      if (workInProgress === null) {\n        workInProgress = createFiber(current.tag, pendingProps, current.key, current.mode);\n        workInProgress.elementType = current.elementType;\n        workInProgress.type = current.type;\n        workInProgress.stateNode = current.stateNode;\n        {\n          workInProgress._debugSource = current._debugSource;\n          workInProgress._debugOwner = current._debugOwner;\n          workInProgress._debugHookTypes = current._debugHookTypes;\n        }\n        workInProgress.alternate = current;\n        current.alternate = workInProgress;\n      } else {\n        workInProgress.pendingProps = pendingProps;\n        workInProgress.type = current.type;\n        workInProgress.flags = NoFlags;\n        workInProgress.subtreeFlags = NoFlags;\n        workInProgress.deletions = null;\n        {\n          workInProgress.actualDuration = 0;\n          workInProgress.actualStartTime = -1;\n        }\n      }\n      workInProgress.flags = current.flags & StaticMask;\n      workInProgress.childLanes = current.childLanes;\n      workInProgress.lanes = current.lanes;\n      workInProgress.child = current.child;\n      workInProgress.memoizedProps = current.memoizedProps;\n      workInProgress.memoizedState = current.memoizedState;\n      workInProgress.updateQueue = current.updateQueue;\n      var currentDependencies = current.dependencies;\n      workInProgress.dependencies = currentDependencies === null ? null : {\n        lanes: currentDependencies.lanes,\n        firstContext: currentDependencies.firstContext\n      };\n      workInProgress.sibling = current.sibling;\n      workInProgress.index = current.index;\n      workInProgress.ref = current.ref;\n      {\n        workInProgress.selfBaseDuration = current.selfBaseDuration;\n        workInProgress.treeBaseDuration = current.treeBaseDuration;\n      }\n      {\n        workInProgress._debugNeedsRemount = current._debugNeedsRemount;\n        switch (workInProgress.tag) {\n          case IndeterminateComponent:\n          case FunctionComponent:\n          case SimpleMemoComponent:\n            workInProgress.type = resolveFunctionForHotReloading(current.type);\n            break;\n          case ClassComponent:\n            workInProgress.type = resolveClassForHotReloading(current.type);\n            break;\n          case ForwardRef:\n            workInProgress.type = resolveForwardRefForHotReloading(current.type);\n            break;\n        }\n      }\n      return workInProgress;\n    }\n    function resetWorkInProgress(workInProgress, renderLanes) {\n      workInProgress.flags &= StaticMask | Placement;\n      var current = workInProgress.alternate;\n      if (current === null) {\n        workInProgress.childLanes = NoLanes;\n        workInProgress.lanes = renderLanes;\n        workInProgress.child = null;\n        workInProgress.subtreeFlags = NoFlags;\n        workInProgress.memoizedProps = null;\n        workInProgress.memoizedState = null;\n        workInProgress.updateQueue = null;\n        workInProgress.dependencies = null;\n        workInProgress.stateNode = null;\n        {\n          workInProgress.selfBaseDuration = 0;\n          workInProgress.treeBaseDuration = 0;\n        }\n      } else {\n        workInProgress.childLanes = current.childLanes;\n        workInProgress.lanes = current.lanes;\n        workInProgress.child = current.child;\n        workInProgress.subtreeFlags = NoFlags;\n        workInProgress.deletions = null;\n        workInProgress.memoizedProps = current.memoizedProps;\n        workInProgress.memoizedState = current.memoizedState;\n        workInProgress.updateQueue = current.updateQueue;\n        workInProgress.type = current.type;\n        var currentDependencies = current.dependencies;\n        workInProgress.dependencies = currentDependencies === null ? null : {\n          lanes: currentDependencies.lanes,\n          firstContext: currentDependencies.firstContext\n        };\n        {\n          workInProgress.selfBaseDuration = current.selfBaseDuration;\n          workInProgress.treeBaseDuration = current.treeBaseDuration;\n        }\n      }\n      return workInProgress;\n    }\n    function createHostRootFiber(tag, isStrictMode, concurrentUpdatesByDefaultOverride) {\n      var mode;\n      if (tag === ConcurrentRoot) {\n        mode = ConcurrentMode;\n        if (isStrictMode === true) {\n          mode |= StrictLegacyMode;\n        }\n      } else {\n        mode = NoMode;\n      }\n      if (isDevToolsPresent) {\n        mode |= ProfileMode;\n      }\n      return createFiber(HostRoot, null, null, mode);\n    }\n    function createFiberFromTypeAndProps(type, key, pendingProps, owner, mode, lanes) {\n      var fiberTag = IndeterminateComponent;\n      var resolvedType = type;\n      if (typeof type === \"function\") {\n        if (shouldConstruct(type)) {\n          fiberTag = ClassComponent;\n          {\n            resolvedType = resolveClassForHotReloading(resolvedType);\n          }\n        } else {\n          {\n            resolvedType = resolveFunctionForHotReloading(resolvedType);\n          }\n        }\n      } else if (typeof type === \"string\") {\n        fiberTag = HostComponent;\n      } else {\n        getTag: switch (type) {\n          case REACT_FRAGMENT_TYPE:\n            return createFiberFromFragment(pendingProps.children, mode, lanes, key);\n          case REACT_STRICT_MODE_TYPE:\n            fiberTag = Mode;\n            mode |= StrictLegacyMode;\n            break;\n          case REACT_PROFILER_TYPE:\n            return createFiberFromProfiler(pendingProps, mode, lanes, key);\n          case REACT_SUSPENSE_TYPE:\n            return createFiberFromSuspense(pendingProps, mode, lanes, key);\n          case REACT_SUSPENSE_LIST_TYPE:\n            return createFiberFromSuspenseList(pendingProps, mode, lanes, key);\n          case REACT_OFFSCREEN_TYPE:\n            return createFiberFromOffscreen(pendingProps, mode, lanes, key);\n          case REACT_LEGACY_HIDDEN_TYPE:\n          case REACT_SCOPE_TYPE:\n          case REACT_CACHE_TYPE:\n          case REACT_TRACING_MARKER_TYPE:\n          case REACT_DEBUG_TRACING_MODE_TYPE:\n          default:\n            {\n              if (typeof type === \"object\" && type !== null) {\n                switch (type.$$typeof) {\n                  case REACT_PROVIDER_TYPE:\n                    fiberTag = ContextProvider;\n                    break getTag;\n                  case REACT_CONTEXT_TYPE:\n                    fiberTag = ContextConsumer;\n                    break getTag;\n                  case REACT_FORWARD_REF_TYPE:\n                    fiberTag = ForwardRef;\n                    {\n                      resolvedType = resolveForwardRefForHotReloading(resolvedType);\n                    }\n                    break getTag;\n                  case REACT_MEMO_TYPE:\n                    fiberTag = MemoComponent;\n                    break getTag;\n                  case REACT_LAZY_TYPE:\n                    fiberTag = LazyComponent;\n                    resolvedType = null;\n                    break getTag;\n                }\n              }\n              var info = \"\";\n              {\n                if (type === undefined || typeof type === \"object\" && type !== null && Object.keys(type).length === 0) {\n                  info += \" You likely forgot to export your component from the file \" + \"it's defined in, or you might have mixed up default and \" + \"named imports.\";\n                }\n                var ownerName = owner ? getComponentNameFromFiber(owner) : null;\n                if (ownerName) {\n                  info += \"\\n\\nCheck the render method of `\" + ownerName + \"`.\";\n                }\n              }\n              throw new Error(\"Element type is invalid: expected a string (for built-in \" + \"components) or a class/function (for composite components) \" + (\"but got: \" + (type == null ? type : typeof type) + \".\" + info));\n            }\n        }\n      }\n      var fiber = createFiber(fiberTag, pendingProps, key, mode);\n      fiber.elementType = type;\n      fiber.type = resolvedType;\n      fiber.lanes = lanes;\n      {\n        fiber._debugOwner = owner;\n      }\n      return fiber;\n    }\n    function createFiberFromElement(element, mode, lanes) {\n      var owner = null;\n      {\n        owner = element._owner;\n      }\n      var type = element.type;\n      var key = element.key;\n      var pendingProps = element.props;\n      var fiber = createFiberFromTypeAndProps(type, key, pendingProps, owner, mode, lanes);\n      {\n        fiber._debugSource = element._source;\n        fiber._debugOwner = element._owner;\n      }\n      return fiber;\n    }\n    function createFiberFromFragment(elements, mode, lanes, key) {\n      var fiber = createFiber(Fragment, elements, key, mode);\n      fiber.lanes = lanes;\n      return fiber;\n    }\n    function createFiberFromProfiler(pendingProps, mode, lanes, key) {\n      {\n        if (typeof pendingProps.id !== \"string\") {\n          error('Profiler must specify an \"id\" of type `string` as a prop. Received the type `%s` instead.', typeof pendingProps.id);\n        }\n      }\n      var fiber = createFiber(Profiler, pendingProps, key, mode | ProfileMode);\n      fiber.elementType = REACT_PROFILER_TYPE;\n      fiber.lanes = lanes;\n      {\n        fiber.stateNode = {\n          effectDuration: 0,\n          passiveEffectDuration: 0\n        };\n      }\n      return fiber;\n    }\n    function createFiberFromSuspense(pendingProps, mode, lanes, key) {\n      var fiber = createFiber(SuspenseComponent, pendingProps, key, mode);\n      fiber.elementType = REACT_SUSPENSE_TYPE;\n      fiber.lanes = lanes;\n      return fiber;\n    }\n    function createFiberFromSuspenseList(pendingProps, mode, lanes, key) {\n      var fiber = createFiber(SuspenseListComponent, pendingProps, key, mode);\n      fiber.elementType = REACT_SUSPENSE_LIST_TYPE;\n      fiber.lanes = lanes;\n      return fiber;\n    }\n    function createFiberFromOffscreen(pendingProps, mode, lanes, key) {\n      var fiber = createFiber(OffscreenComponent, pendingProps, key, mode);\n      fiber.elementType = REACT_OFFSCREEN_TYPE;\n      fiber.lanes = lanes;\n      var primaryChildInstance = {\n        isHidden: false\n      };\n      fiber.stateNode = primaryChildInstance;\n      return fiber;\n    }\n    function createFiberFromText(content, mode, lanes) {\n      var fiber = createFiber(HostText, content, null, mode);\n      fiber.lanes = lanes;\n      return fiber;\n    }\n    function createFiberFromPortal(portal, mode, lanes) {\n      var pendingProps = portal.children !== null ? portal.children : [];\n      var fiber = createFiber(HostPortal, pendingProps, portal.key, mode);\n      fiber.lanes = lanes;\n      fiber.stateNode = {\n        containerInfo: portal.containerInfo,\n        pendingChildren: null,\n        implementation: portal.implementation\n      };\n      return fiber;\n    }\n    function assignFiberPropertiesInDEV(target, source) {\n      if (target === null) {\n        target = createFiber(IndeterminateComponent, null, null, NoMode);\n      }\n      target.tag = source.tag;\n      target.key = source.key;\n      target.elementType = source.elementType;\n      target.type = source.type;\n      target.stateNode = source.stateNode;\n      target.return = source.return;\n      target.child = source.child;\n      target.sibling = source.sibling;\n      target.index = source.index;\n      target.ref = source.ref;\n      target.pendingProps = source.pendingProps;\n      target.memoizedProps = source.memoizedProps;\n      target.updateQueue = source.updateQueue;\n      target.memoizedState = source.memoizedState;\n      target.dependencies = source.dependencies;\n      target.mode = source.mode;\n      target.flags = source.flags;\n      target.subtreeFlags = source.subtreeFlags;\n      target.deletions = source.deletions;\n      target.lanes = source.lanes;\n      target.childLanes = source.childLanes;\n      target.alternate = source.alternate;\n      {\n        target.actualDuration = source.actualDuration;\n        target.actualStartTime = source.actualStartTime;\n        target.selfBaseDuration = source.selfBaseDuration;\n        target.treeBaseDuration = source.treeBaseDuration;\n      }\n      target._debugSource = source._debugSource;\n      target._debugOwner = source._debugOwner;\n      target._debugNeedsRemount = source._debugNeedsRemount;\n      target._debugHookTypes = source._debugHookTypes;\n      return target;\n    }\n    function FiberRootNode(containerInfo, tag, hydrate, identifierPrefix, onRecoverableError) {\n      this.tag = tag;\n      this.containerInfo = containerInfo;\n      this.pendingChildren = null;\n      this.current = null;\n      this.pingCache = null;\n      this.finishedWork = null;\n      this.timeoutHandle = noTimeout;\n      this.context = null;\n      this.pendingContext = null;\n      this.callbackNode = null;\n      this.callbackPriority = NoLane;\n      this.eventTimes = createLaneMap(NoLanes);\n      this.expirationTimes = createLaneMap(NoTimestamp);\n      this.pendingLanes = NoLanes;\n      this.suspendedLanes = NoLanes;\n      this.pingedLanes = NoLanes;\n      this.expiredLanes = NoLanes;\n      this.mutableReadLanes = NoLanes;\n      this.finishedLanes = NoLanes;\n      this.entangledLanes = NoLanes;\n      this.entanglements = createLaneMap(NoLanes);\n      this.identifierPrefix = identifierPrefix;\n      this.onRecoverableError = onRecoverableError;\n      {\n        this.effectDuration = 0;\n        this.passiveEffectDuration = 0;\n      }\n      {\n        this.memoizedUpdaters = new Set();\n        var pendingUpdatersLaneMap = this.pendingUpdatersLaneMap = [];\n        for (var _i = 0; _i < TotalLanes; _i++) {\n          pendingUpdatersLaneMap.push(new Set());\n        }\n      }\n      {\n        switch (tag) {\n          case ConcurrentRoot:\n            this._debugRootType = hydrate ? \"hydrateRoot()\" : \"createRoot()\";\n            break;\n          case LegacyRoot:\n            this._debugRootType = hydrate ? \"hydrate()\" : \"render()\";\n            break;\n        }\n      }\n    }\n    function createFiberRoot(containerInfo, tag, hydrate, initialChildren, hydrationCallbacks, isStrictMode, concurrentUpdatesByDefaultOverride, identifierPrefix, onRecoverableError, transitionCallbacks) {\n      var root = new FiberRootNode(containerInfo, tag, hydrate, identifierPrefix, onRecoverableError);\n      var uninitializedFiber = createHostRootFiber(tag, isStrictMode);\n      root.current = uninitializedFiber;\n      uninitializedFiber.stateNode = root;\n      {\n        var _initialState = {\n          element: initialChildren,\n          isDehydrated: hydrate,\n          cache: null,\n          transitions: null,\n          pendingSuspenseBoundaries: null\n        };\n        uninitializedFiber.memoizedState = _initialState;\n      }\n      initializeUpdateQueue(uninitializedFiber);\n      return root;\n    }\n    var ReactVersion = \"18.2.0-next-9e3b772b8-20220608\";\n    function createPortal(children, containerInfo, implementation) {\n      var key = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n      {\n        checkKeyStringCoercion(key);\n      }\n      return {\n        $$typeof: REACT_PORTAL_TYPE,\n        key: key == null ? null : \"\" + key,\n        children: children,\n        containerInfo: containerInfo,\n        implementation: implementation\n      };\n    }\n    var didWarnAboutNestedUpdates;\n    var didWarnAboutFindNodeInStrictMode;\n    {\n      didWarnAboutNestedUpdates = false;\n      didWarnAboutFindNodeInStrictMode = {};\n    }\n    function getContextForSubtree(parentComponent) {\n      if (!parentComponent) {\n        return emptyContextObject;\n      }\n      var fiber = get(parentComponent);\n      var parentContext = findCurrentUnmaskedContext(fiber);\n      if (fiber.tag === ClassComponent) {\n        var Component = fiber.type;\n        if (isContextProvider(Component)) {\n          return processChildContext(fiber, Component, parentContext);\n        }\n      }\n      return parentContext;\n    }\n    function findHostInstanceWithWarning(component, methodName) {\n      {\n        var fiber = get(component);\n        if (fiber === undefined) {\n          if (typeof component.render === \"function\") {\n            throw new Error(\"Unable to find node on an unmounted component.\");\n          } else {\n            var keys = Object.keys(component).join(\",\");\n            throw new Error(\"Argument appears to not be a ReactComponent. Keys: \" + keys);\n          }\n        }\n        var hostFiber = findCurrentHostFiber(fiber);\n        if (hostFiber === null) {\n          return null;\n        }\n        if (hostFiber.mode & StrictLegacyMode) {\n          var componentName = getComponentNameFromFiber(fiber) || \"Component\";\n          if (!didWarnAboutFindNodeInStrictMode[componentName]) {\n            didWarnAboutFindNodeInStrictMode[componentName] = true;\n            var previousFiber = current;\n            try {\n              setCurrentFiber(hostFiber);\n              if (fiber.mode & StrictLegacyMode) {\n                error(\"%s is deprecated in StrictMode. \" + \"%s was passed an instance of %s which is inside StrictMode. \" + \"Instead, add a ref directly to the element you want to reference. \" + \"Learn more about using refs safely here: \" + \"https://reactjs.org/link/strict-mode-find-node\", methodName, methodName, componentName);\n              } else {\n                error(\"%s is deprecated in StrictMode. \" + \"%s was passed an instance of %s which renders StrictMode children. \" + \"Instead, add a ref directly to the element you want to reference. \" + \"Learn more about using refs safely here: \" + \"https://reactjs.org/link/strict-mode-find-node\", methodName, methodName, componentName);\n              }\n            } finally {\n              if (previousFiber) {\n                setCurrentFiber(previousFiber);\n              } else {\n                resetCurrentFiber();\n              }\n            }\n          }\n        }\n        return hostFiber.stateNode;\n      }\n    }\n    function createContainer(containerInfo, tag, hydrationCallbacks, isStrictMode, concurrentUpdatesByDefaultOverride, identifierPrefix, onRecoverableError, transitionCallbacks) {\n      var hydrate = false;\n      var initialChildren = null;\n      return createFiberRoot(containerInfo, tag, hydrate, initialChildren, hydrationCallbacks, isStrictMode, concurrentUpdatesByDefaultOverride, identifierPrefix, onRecoverableError);\n    }\n    function updateContainer(element, container, parentComponent, callback) {\n      {\n        onScheduleRoot(container, element);\n      }\n      var current$1 = container.current;\n      var eventTime = requestEventTime();\n      var lane = requestUpdateLane(current$1);\n      var context = getContextForSubtree(parentComponent);\n      if (container.context === null) {\n        container.context = context;\n      } else {\n        container.pendingContext = context;\n      }\n      {\n        if (isRendering && current !== null && !didWarnAboutNestedUpdates) {\n          didWarnAboutNestedUpdates = true;\n          error(\"Render methods should be a pure function of props and state; \" + \"triggering nested component updates from render is not allowed. \" + \"If necessary, trigger nested updates in componentDidUpdate.\\n\\n\" + \"Check the render method of %s.\", getComponentNameFromFiber(current) || \"Unknown\");\n        }\n      }\n      var update = createUpdate(eventTime, lane);\n      update.payload = {\n        element: element\n      };\n      callback = callback === undefined ? null : callback;\n      if (callback !== null) {\n        {\n          if (typeof callback !== \"function\") {\n            error(\"render(...): Expected the last optional `callback` argument to be a \" + \"function. Instead received: %s.\", callback);\n          }\n        }\n        update.callback = callback;\n      }\n      var root = enqueueUpdate(current$1, update, lane);\n      if (root !== null) {\n        scheduleUpdateOnFiber(root, current$1, lane, eventTime);\n        entangleTransitions(root, current$1, lane);\n      }\n      return lane;\n    }\n    function getPublicRootInstance(container) {\n      var containerFiber = container.current;\n      if (!containerFiber.child) {\n        return null;\n      }\n      switch (containerFiber.child.tag) {\n        case HostComponent:\n          return getPublicInstance(containerFiber.child.stateNode);\n        default:\n          return containerFiber.child.stateNode;\n      }\n    }\n    var shouldErrorImpl = function shouldErrorImpl(fiber) {\n      return null;\n    };\n    function shouldError(fiber) {\n      return shouldErrorImpl(fiber);\n    }\n    var shouldSuspendImpl = function shouldSuspendImpl(fiber) {\n      return false;\n    };\n    function shouldSuspend(fiber) {\n      return shouldSuspendImpl(fiber);\n    }\n    var overrideHookState = null;\n    var overrideHookStateDeletePath = null;\n    var overrideHookStateRenamePath = null;\n    var overrideProps = null;\n    var overridePropsDeletePath = null;\n    var overridePropsRenamePath = null;\n    var scheduleUpdate = null;\n    var setErrorHandler = null;\n    var setSuspenseHandler = null;\n    {\n      var copyWithDeleteImpl = function copyWithDeleteImpl(obj, path, index) {\n        var key = path[index];\n        var updated = isArray(obj) ? obj.slice() : assign({}, obj);\n        if (index + 1 === path.length) {\n          if (isArray(updated)) {\n            updated.splice(key, 1);\n          } else {\n            delete updated[key];\n          }\n          return updated;\n        }\n        updated[key] = copyWithDeleteImpl(obj[key], path, index + 1);\n        return updated;\n      };\n      var copyWithDelete = function copyWithDelete(obj, path) {\n        return copyWithDeleteImpl(obj, path, 0);\n      };\n      var copyWithRenameImpl = function copyWithRenameImpl(obj, oldPath, newPath, index) {\n        var oldKey = oldPath[index];\n        var updated = isArray(obj) ? obj.slice() : assign({}, obj);\n        if (index + 1 === oldPath.length) {\n          var newKey = newPath[index];\n          updated[newKey] = updated[oldKey];\n          if (isArray(updated)) {\n            updated.splice(oldKey, 1);\n          } else {\n            delete updated[oldKey];\n          }\n        } else {\n          updated[oldKey] = copyWithRenameImpl(obj[oldKey], oldPath, newPath, index + 1);\n        }\n        return updated;\n      };\n      var copyWithRename = function copyWithRename(obj, oldPath, newPath) {\n        if (oldPath.length !== newPath.length) {\n          warn(\"copyWithRename() expects paths of the same length\");\n          return;\n        } else {\n          for (var i = 0; i < newPath.length - 1; i++) {\n            if (oldPath[i] !== newPath[i]) {\n              warn(\"copyWithRename() expects paths to be the same except for the deepest key\");\n              return;\n            }\n          }\n        }\n        return copyWithRenameImpl(obj, oldPath, newPath, 0);\n      };\n      var copyWithSetImpl = function copyWithSetImpl(obj, path, index, value) {\n        if (index >= path.length) {\n          return value;\n        }\n        var key = path[index];\n        var updated = isArray(obj) ? obj.slice() : assign({}, obj);\n        updated[key] = copyWithSetImpl(obj[key], path, index + 1, value);\n        return updated;\n      };\n      var copyWithSet = function copyWithSet(obj, path, value) {\n        return copyWithSetImpl(obj, path, 0, value);\n      };\n      var findHook = function findHook(fiber, id) {\n        var currentHook = fiber.memoizedState;\n        while (currentHook !== null && id > 0) {\n          currentHook = currentHook.next;\n          id--;\n        }\n        return currentHook;\n      };\n      overrideHookState = function overrideHookState(fiber, id, path, value) {\n        var hook = findHook(fiber, id);\n        if (hook !== null) {\n          var newState = copyWithSet(hook.memoizedState, path, value);\n          hook.memoizedState = newState;\n          hook.baseState = newState;\n          fiber.memoizedProps = assign({}, fiber.memoizedProps);\n          var root = enqueueConcurrentRenderForLane(fiber, SyncLane);\n          if (root !== null) {\n            scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);\n          }\n        }\n      };\n      overrideHookStateDeletePath = function overrideHookStateDeletePath(fiber, id, path) {\n        var hook = findHook(fiber, id);\n        if (hook !== null) {\n          var newState = copyWithDelete(hook.memoizedState, path);\n          hook.memoizedState = newState;\n          hook.baseState = newState;\n          fiber.memoizedProps = assign({}, fiber.memoizedProps);\n          var root = enqueueConcurrentRenderForLane(fiber, SyncLane);\n          if (root !== null) {\n            scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);\n          }\n        }\n      };\n      overrideHookStateRenamePath = function overrideHookStateRenamePath(fiber, id, oldPath, newPath) {\n        var hook = findHook(fiber, id);\n        if (hook !== null) {\n          var newState = copyWithRename(hook.memoizedState, oldPath, newPath);\n          hook.memoizedState = newState;\n          hook.baseState = newState;\n          fiber.memoizedProps = assign({}, fiber.memoizedProps);\n          var root = enqueueConcurrentRenderForLane(fiber, SyncLane);\n          if (root !== null) {\n            scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);\n          }\n        }\n      };\n      overrideProps = function overrideProps(fiber, path, value) {\n        fiber.pendingProps = copyWithSet(fiber.memoizedProps, path, value);\n        if (fiber.alternate) {\n          fiber.alternate.pendingProps = fiber.pendingProps;\n        }\n        var root = enqueueConcurrentRenderForLane(fiber, SyncLane);\n        if (root !== null) {\n          scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);\n        }\n      };\n      overridePropsDeletePath = function overridePropsDeletePath(fiber, path) {\n        fiber.pendingProps = copyWithDelete(fiber.memoizedProps, path);\n        if (fiber.alternate) {\n          fiber.alternate.pendingProps = fiber.pendingProps;\n        }\n        var root = enqueueConcurrentRenderForLane(fiber, SyncLane);\n        if (root !== null) {\n          scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);\n        }\n      };\n      overridePropsRenamePath = function overridePropsRenamePath(fiber, oldPath, newPath) {\n        fiber.pendingProps = copyWithRename(fiber.memoizedProps, oldPath, newPath);\n        if (fiber.alternate) {\n          fiber.alternate.pendingProps = fiber.pendingProps;\n        }\n        var root = enqueueConcurrentRenderForLane(fiber, SyncLane);\n        if (root !== null) {\n          scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);\n        }\n      };\n      scheduleUpdate = function scheduleUpdate(fiber) {\n        var root = enqueueConcurrentRenderForLane(fiber, SyncLane);\n        if (root !== null) {\n          scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);\n        }\n      };\n      setErrorHandler = function setErrorHandler(newShouldErrorImpl) {\n        shouldErrorImpl = newShouldErrorImpl;\n      };\n      setSuspenseHandler = function setSuspenseHandler(newShouldSuspendImpl) {\n        shouldSuspendImpl = newShouldSuspendImpl;\n      };\n    }\n    function findHostInstanceByFiber(fiber) {\n      var hostFiber = findCurrentHostFiber(fiber);\n      if (hostFiber === null) {\n        return null;\n      }\n      return hostFiber.stateNode;\n    }\n    function emptyFindFiberByHostInstance(instance) {\n      return null;\n    }\n    function getCurrentFiberForDevTools() {\n      return current;\n    }\n    function injectIntoDevTools(devToolsConfig) {\n      var findFiberByHostInstance = devToolsConfig.findFiberByHostInstance;\n      var ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\n      return injectInternals({\n        bundleType: devToolsConfig.bundleType,\n        version: devToolsConfig.version,\n        rendererPackageName: devToolsConfig.rendererPackageName,\n        rendererConfig: devToolsConfig.rendererConfig,\n        overrideHookState: overrideHookState,\n        overrideHookStateDeletePath: overrideHookStateDeletePath,\n        overrideHookStateRenamePath: overrideHookStateRenamePath,\n        overrideProps: overrideProps,\n        overridePropsDeletePath: overridePropsDeletePath,\n        overridePropsRenamePath: overridePropsRenamePath,\n        setErrorHandler: setErrorHandler,\n        setSuspenseHandler: setSuspenseHandler,\n        scheduleUpdate: scheduleUpdate,\n        currentDispatcherRef: ReactCurrentDispatcher,\n        findHostInstanceByFiber: findHostInstanceByFiber,\n        findFiberByHostInstance: findFiberByHostInstance || emptyFindFiberByHostInstance,\n        findHostInstancesForRefresh: findHostInstancesForRefresh,\n        scheduleRefresh: scheduleRefresh,\n        scheduleRoot: scheduleRoot,\n        setRefreshHandler: setRefreshHandler,\n        getCurrentFiber: getCurrentFiberForDevTools,\n        reconcilerVersion: ReactVersion\n      });\n    }\n    var instanceCache = new Map();\n    function getInstanceFromTag(tag) {\n      return instanceCache.get(tag) || null;\n    }\n    var emptyObject$1 = {};\n    {\n      Object.freeze(emptyObject$1);\n    }\n    var createHierarchy;\n    var getHostNode;\n    var getHostProps;\n    var lastNonHostInstance;\n    var getOwnerHierarchy;\n    var _traverseOwnerTreeUp;\n    {\n      createHierarchy = function createHierarchy(fiberHierarchy) {\n        return fiberHierarchy.map(function (fiber) {\n          return {\n            name: getComponentNameFromType(fiber.type),\n            getInspectorData: function getInspectorData(findNodeHandle) {\n              return {\n                props: getHostProps(fiber),\n                source: fiber._debugSource,\n                measure: function measure(callback) {\n                  var hostFiber = findCurrentHostFiber(fiber);\n                  var shadowNode = hostFiber != null && hostFiber.stateNode !== null && hostFiber.stateNode.node;\n                  if (shadowNode) {\n                    nativeFabricUIManager.measure(shadowNode, callback);\n                  } else {\n                    return ReactNativePrivateInterface.UIManager.measure(getHostNode(fiber, findNodeHandle), callback);\n                  }\n                }\n              };\n            }\n          };\n        });\n      };\n      getHostNode = function getHostNode(fiber, findNodeHandle) {\n        var hostNode;\n        while (fiber) {\n          if (fiber.stateNode !== null && fiber.tag === HostComponent) {\n            hostNode = findNodeHandle(fiber.stateNode);\n          }\n          if (hostNode) {\n            return hostNode;\n          }\n          fiber = fiber.child;\n        }\n        return null;\n      };\n      getHostProps = function getHostProps(fiber) {\n        var host = findCurrentHostFiber(fiber);\n        if (host) {\n          return host.memoizedProps || emptyObject$1;\n        }\n        return emptyObject$1;\n      };\n      exports.getInspectorDataForInstance = function (closestInstance) {\n        if (!closestInstance) {\n          return {\n            hierarchy: [],\n            props: emptyObject$1,\n            selectedIndex: null,\n            source: null\n          };\n        }\n        var fiber = findCurrentFiberUsingSlowPath(closestInstance);\n        var fiberHierarchy = getOwnerHierarchy(fiber);\n        var instance = lastNonHostInstance(fiberHierarchy);\n        var hierarchy = createHierarchy(fiberHierarchy);\n        var props = getHostProps(instance);\n        var source = instance._debugSource;\n        var selectedIndex = fiberHierarchy.indexOf(instance);\n        return {\n          hierarchy: hierarchy,\n          props: props,\n          selectedIndex: selectedIndex,\n          source: source\n        };\n      };\n      getOwnerHierarchy = function getOwnerHierarchy(instance) {\n        var hierarchy = [];\n        _traverseOwnerTreeUp(hierarchy, instance);\n        return hierarchy;\n      };\n      lastNonHostInstance = function lastNonHostInstance(hierarchy) {\n        for (var i = hierarchy.length - 1; i > 1; i--) {\n          var instance = hierarchy[i];\n          if (instance.tag !== HostComponent) {\n            return instance;\n          }\n        }\n        return hierarchy[0];\n      };\n      _traverseOwnerTreeUp = function traverseOwnerTreeUp(hierarchy, instance) {\n        if (instance) {\n          hierarchy.unshift(instance);\n          _traverseOwnerTreeUp(hierarchy, instance._debugOwner);\n        }\n      };\n    }\n    var getInspectorDataForViewTag;\n    var getInspectorDataForViewAtPoint;\n    {\n      getInspectorDataForViewTag = function getInspectorDataForViewTag(viewTag) {\n        var closestInstance = getInstanceFromTag(viewTag);\n        if (!closestInstance) {\n          return {\n            hierarchy: [],\n            props: emptyObject$1,\n            selectedIndex: null,\n            source: null\n          };\n        }\n        var fiber = findCurrentFiberUsingSlowPath(closestInstance);\n        var fiberHierarchy = getOwnerHierarchy(fiber);\n        var instance = lastNonHostInstance(fiberHierarchy);\n        var hierarchy = createHierarchy(fiberHierarchy);\n        var props = getHostProps(instance);\n        var source = instance._debugSource;\n        var selectedIndex = fiberHierarchy.indexOf(instance);\n        return {\n          hierarchy: hierarchy,\n          props: props,\n          selectedIndex: selectedIndex,\n          source: source\n        };\n      };\n      getInspectorDataForViewAtPoint = function getInspectorDataForViewAtPoint(findNodeHandle, inspectedView, locationX, locationY, callback) {\n        var closestInstance = null;\n        if (inspectedView._internalInstanceHandle != null) {\n          nativeFabricUIManager.findNodeAtPoint(inspectedView._internalInstanceHandle.stateNode.node, locationX, locationY, function (internalInstanceHandle) {\n            if (internalInstanceHandle == null) {\n              callback(assign({\n                pointerY: locationY,\n                frame: {\n                  left: 0,\n                  top: 0,\n                  width: 0,\n                  height: 0\n                }\n              }, exports.getInspectorDataForInstance(closestInstance)));\n            }\n            closestInstance = internalInstanceHandle.stateNode.canonical._internalInstanceHandle;\n            var nativeViewTag = internalInstanceHandle.stateNode.canonical._nativeTag;\n            nativeFabricUIManager.measure(internalInstanceHandle.stateNode.node, function (x, y, width, height, pageX, pageY) {\n              var inspectorData = exports.getInspectorDataForInstance(closestInstance);\n              callback(assign({}, inspectorData, {\n                pointerY: locationY,\n                frame: {\n                  left: pageX,\n                  top: pageY,\n                  width: width,\n                  height: height\n                },\n                touchedViewTag: nativeViewTag\n              }));\n            });\n          });\n        } else if (inspectedView._internalFiberInstanceHandleDEV != null) {\n          ReactNativePrivateInterface.UIManager.findSubviewIn(findNodeHandle(inspectedView), [locationX, locationY], function (nativeViewTag, left, top, width, height) {\n            var inspectorData = exports.getInspectorDataForInstance(getInstanceFromTag(nativeViewTag));\n            callback(assign({}, inspectorData, {\n              pointerY: locationY,\n              frame: {\n                left: left,\n                top: top,\n                width: width,\n                height: height\n              },\n              touchedViewTag: nativeViewTag\n            }));\n          });\n        } else {\n          error(\"getInspectorDataForViewAtPoint expects to receive a host component\");\n          return;\n        }\n      };\n    }\n    var ReactCurrentOwner$3 = ReactSharedInternals.ReactCurrentOwner;\n    function findHostInstance_DEPRECATED(componentOrHandle) {\n      {\n        var owner = ReactCurrentOwner$3.current;\n        if (owner !== null && owner.stateNode !== null) {\n          if (!owner.stateNode._warnedAboutRefsInRender) {\n            error(\"%s is accessing findNodeHandle inside its render(). \" + \"render() should be a pure function of props and state. It should \" + \"never access something that requires stale data from the previous \" + \"render, such as refs. Move this logic to componentDidMount and \" + \"componentDidUpdate instead.\", getComponentNameFromType(owner.type) || \"A component\");\n          }\n          owner.stateNode._warnedAboutRefsInRender = true;\n        }\n      }\n      if (componentOrHandle == null) {\n        return null;\n      }\n      if (componentOrHandle._nativeTag) {\n        return componentOrHandle;\n      }\n      if (componentOrHandle.canonical && componentOrHandle.canonical._nativeTag) {\n        return componentOrHandle.canonical;\n      }\n      var hostInstance;\n      {\n        hostInstance = findHostInstanceWithWarning(componentOrHandle, \"findHostInstance_DEPRECATED\");\n      }\n      if (hostInstance == null) {\n        return hostInstance;\n      }\n      if (hostInstance.canonical) {\n        return hostInstance.canonical;\n      }\n      return hostInstance;\n    }\n    function findNodeHandle(componentOrHandle) {\n      {\n        var owner = ReactCurrentOwner$3.current;\n        if (owner !== null && owner.stateNode !== null) {\n          if (!owner.stateNode._warnedAboutRefsInRender) {\n            error(\"%s is accessing findNodeHandle inside its render(). \" + \"render() should be a pure function of props and state. It should \" + \"never access something that requires stale data from the previous \" + \"render, such as refs. Move this logic to componentDidMount and \" + \"componentDidUpdate instead.\", getComponentNameFromType(owner.type) || \"A component\");\n          }\n          owner.stateNode._warnedAboutRefsInRender = true;\n        }\n      }\n      if (componentOrHandle == null) {\n        return null;\n      }\n      if (typeof componentOrHandle === \"number\") {\n        return componentOrHandle;\n      }\n      if (componentOrHandle._nativeTag) {\n        return componentOrHandle._nativeTag;\n      }\n      if (componentOrHandle.canonical && componentOrHandle.canonical._nativeTag) {\n        return componentOrHandle.canonical._nativeTag;\n      }\n      var hostInstance;\n      {\n        hostInstance = findHostInstanceWithWarning(componentOrHandle, \"findNodeHandle\");\n      }\n      if (hostInstance == null) {\n        return hostInstance;\n      }\n      if (hostInstance.canonical) {\n        return hostInstance.canonical._nativeTag;\n      }\n      return hostInstance._nativeTag;\n    }\n    function dispatchCommand(handle, command, args) {\n      if (handle._nativeTag == null) {\n        {\n          error(\"dispatchCommand was called with a ref that isn't a \" + \"native component. Use React.forwardRef to get access to the underlying native component\");\n        }\n        return;\n      }\n      if (handle._internalInstanceHandle != null) {\n        var stateNode = handle._internalInstanceHandle.stateNode;\n        if (stateNode != null) {\n          nativeFabricUIManager.dispatchCommand(stateNode.node, command, args);\n        }\n      } else {\n        ReactNativePrivateInterface.UIManager.dispatchViewManagerCommand(handle._nativeTag, command, args);\n      }\n    }\n    function sendAccessibilityEvent(handle, eventType) {\n      if (handle._nativeTag == null) {\n        {\n          error(\"sendAccessibilityEvent was called with a ref that isn't a \" + \"native component. Use React.forwardRef to get access to the underlying native component\");\n        }\n        return;\n      }\n      if (handle._internalInstanceHandle != null) {\n        var stateNode = handle._internalInstanceHandle.stateNode;\n        if (stateNode != null) {\n          nativeFabricUIManager.sendAccessibilityEvent(stateNode.node, eventType);\n        }\n      } else {\n        ReactNativePrivateInterface.legacySendAccessibilityEvent(handle._nativeTag, eventType);\n      }\n    }\n    function onRecoverableError(error$1) {\n      error(error$1);\n    }\n    function render(element, containerTag, callback, concurrentRoot) {\n      var root = roots.get(containerTag);\n      if (!root) {\n        root = createContainer(containerTag, concurrentRoot ? ConcurrentRoot : LegacyRoot, null, false, null, \"\", onRecoverableError);\n        roots.set(containerTag, root);\n      }\n      updateContainer(element, root, null, callback);\n      return getPublicRootInstance(root);\n    }\n    function unmountComponentAtNode(containerTag) {\n      this.stopSurface(containerTag);\n    }\n    function stopSurface(containerTag) {\n      var root = roots.get(containerTag);\n      if (root) {\n        updateContainer(null, root, null, function () {\n          roots.delete(containerTag);\n        });\n      }\n    }\n    function createPortal$1(children, containerTag) {\n      var key = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n      return createPortal(children, containerTag, null, key);\n    }\n    setBatchingImplementation(batchedUpdates$1);\n    var roots = new Map();\n    injectIntoDevTools({\n      findFiberByHostInstance: getInstanceFromInstance,\n      bundleType: 1,\n      version: ReactVersion,\n      rendererPackageName: \"react-native-renderer\",\n      rendererConfig: {\n        getInspectorDataForViewTag: getInspectorDataForViewTag,\n        getInspectorDataForViewAtPoint: getInspectorDataForViewAtPoint.bind(null, findNodeHandle)\n      }\n    });\n    exports.createPortal = createPortal$1;\n    exports.dispatchCommand = dispatchCommand;\n    exports.findHostInstance_DEPRECATED = findHostInstance_DEPRECATED;\n    exports.findNodeHandle = findNodeHandle;\n    exports.render = render;\n    exports.sendAccessibilityEvent = sendAccessibilityEvent;\n    exports.stopSurface = stopSurface;\n    exports.unmountComponentAtNode = unmountComponentAtNode;\n    if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop === 'function') {\n      __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());\n    }\n  })();\n}","map":{"version":3,"names":["__DEV__","__REACT_DEVTOOLS_GLOBAL_HOOK__","registerInternalModuleStart","Error","React","require","ReactNativePrivateInterface","Scheduler","ReactSharedInternals","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","warn","format","_len","arguments","length","args","Array","_key","printWarning","error","_len2","_key2","level","ReactDebugCurrentFrame","stack","getStackAddendum","concat","argsWithFormat","map","item","String","unshift","Function","prototype","apply","call","console","invokeGuardedCallbackProd","name","func","context","a","b","c","d","e","f","funcArgs","slice","onError","invokeGuardedCallbackImpl","window","dispatchEvent","document","createEvent","fakeNode","createElement","invokeGuardedCallbackDev","evt","didCall","didError","windowEvent","event","windowEventDescriptor","Object","getOwnPropertyDescriptor","restoreAfterDispatch","removeEventListener","evtType","callCallback","hasOwnProperty","didSetError","isCrossOriginError","handleWindowError","colno","lineno","defaultPrevented","_suppressLogging","inner","addEventListener","initEvent","defineProperty","invokeGuardedCallbackImpl$1","hasError","caughtError","hasRethrowError","rethrowError","reporter","invokeGuardedCallback","invokeGuardedCallbackAndCatchFirstError","clearCaughtError","rethrowCaughtError","hasCaughtError","isArrayImpl","isArray","getFiberCurrentPropsFromNode","getInstanceFromNode","getNodeFromInstance","setComponentTree","getFiberCurrentPropsFromNodeImpl","getInstanceFromNodeImpl","getNodeFromInstanceImpl","validateEventDispatches","dispatchListeners","_dispatchListeners","dispatchInstances","_dispatchInstances","listenersIsArr","listenersLen","instancesIsArr","instancesLen","executeDispatch","listener","inst","type","currentTarget","undefined","executeDispatchesInOrder","i","isPropagationStopped","executeDispatchesInOrderStopAtTrueImpl","executeDispatchesInOrderStopAtTrue","ret","executeDirectDispatch","dispatchListener","dispatchInstance","res","hasDispatches","assign","EVENT_POOL_SIZE","EventInterface","target","eventPhase","bubbles","cancelable","timeStamp","Date","now","isTrusted","functionThatReturnsTrue","functionThatReturnsFalse","SyntheticEvent","dispatchConfig","targetInst","nativeEvent","nativeEventTarget","preventDefault","stopPropagation","isDefaultPrevented","_targetInst","Interface","constructor","propName","normalize","returnValue","cancelBubble","persist","isPersistent","destructor","getPooledWarningPropertyDefinition","extend","Super","E","Class","addEventPoolingTo","getVal","set","val","action","isFunction","get","result","configurable","createOrGetPooledEvent","nativeInst","EventConstructor","eventPool","instance","pop","releasePooledEvent","push","getPooled","release","ResponderSyntheticEvent","touchHistory","TOP_TOUCH_START","TOP_TOUCH_MOVE","TOP_TOUCH_END","TOP_TOUCH_CANCEL","TOP_SCROLL","TOP_SELECTION_CHANGE","isStartish","topLevelType","isMoveish","isEndish","startDependencies","moveDependencies","endDependencies","MAX_TOUCH_BANK","touchBank","numberActiveTouches","indexOfSingleActiveTouch","mostRecentTimeStamp","timestampForTouch","touch","timestamp","createTouchRecord","touchActive","startPageX","pageX","startPageY","pageY","startTimeStamp","currentPageX","currentPageY","currentTimeStamp","previousPageX","previousPageY","previousTimeStamp","resetTouchRecord","touchRecord","getTouchIdentifier","_ref","identifier","recordTouchStart","recordTouchMove","printTouch","printTouchBank","recordTouchEnd","JSON","stringify","printed","instrumentationCallback","ResponderTouchHistoryStore","instrument","callback","recordTouchTrack","changedTouches","forEach","touches","touchTrackToCheck","activeRecord","accumulate","current","next","accumulateInto","forEachAccumulated","arr","cb","scope","FunctionComponent","ClassComponent","IndeterminateComponent","HostRoot","HostPortal","HostComponent","HostText","Fragment","Mode","ContextConsumer","ContextProvider","ForwardRef","Profiler","SuspenseComponent","MemoComponent","SimpleMemoComponent","LazyComponent","IncompleteClassComponent","DehydratedFragment","SuspenseListComponent","ScopeComponent","OffscreenComponent","LegacyHiddenComponent","CacheComponent","TracingMarkerComponent","responderInst","trackedTouchCount","changeResponder","nextResponderInst","blockHostResponder","oldResponderInst","ResponderEventPlugin","GlobalResponderHandler","onChange","eventTypes","startShouldSetResponder","phasedRegistrationNames","bubbled","captured","dependencies","scrollShouldSetResponder","selectionChangeShouldSetResponder","moveShouldSetResponder","responderStart","registrationName","responderMove","responderEnd","responderRelease","responderTerminationRequest","responderGrant","responderReject","responderTerminate","getParent","return","tag","getLowestCommonAncestor","instA","instB","depthA","tempA","depthB","tempB","depth","alternate","isAncestor","traverseTwoPhase","fn","arg","path","getListener","stateNode","props","listenerAtPhase","propagationPhase","accumulateDirectionalDispatches","phase","accumulateDispatches","ignoredDirection","accumulateDirectDispatchesSingle","accumulateDirectDispatches","events","accumulateTwoPhaseDispatchesSingleSkipTarget","parentInst","accumulateTwoPhaseDispatchesSkipTarget","accumulateTwoPhaseDispatchesSingle","accumulateTwoPhaseDispatches","setResponderAndExtractTransfer","shouldSetEventType","bubbleShouldSetFrom","skipOverBubbleShouldSetFrom","shouldSetEvent","wantsResponderInst","extracted","grantEvent","terminationRequestEvent","shouldSwitch","terminateEvent","rejectEvent","canTriggerTransfer","topLevelInst","responderIgnoreScroll","noResponderTouches","activeTouch","_getResponder","extractEvents","eventSystemFlags","isResponderTouchStart","isResponderTouchMove","isResponderTouchEnd","incrementalTouch","gesture","isResponderTerminate","isResponderRelease","finalTouch","finalEvent","injection","injectGlobalResponderHandler","eventPluginOrder","namesToPlugins","recomputePluginOrdering","pluginName","pluginModule","pluginIndex","indexOf","plugins","publishedEvents","eventName","publishEventForPlugin","eventNameDispatchConfigs","phaseName","phasedRegistrationName","publishRegistrationName","registrationNameModules","registrationNameDependencies","lowerCasedName","toLowerCase","injectEventPluginOrder","injectedEventPluginOrder","injectEventPluginsByName","injectedNamesToPlugins","isOrderingDirty","getListeners","dispatchToImperativeListeners","canonical","_eventListeners","listeners","requestedPhaseIsCapture","mangledImperativeRegistrationName","replace","eventListeners","listenerObj","isCaptureEvent","options","capture","listenerFnWrapper","syntheticEvent","eventInst","CustomEvent","detail","setSyntheticEvent","once","removeEventListener_unstable","invalidated","customBubblingEventTypes","ReactNativeViewConfigRegistry","customDirectEventTypes","listenersAtPhase","accumulateListenersAndInstances","listenersLength","accumulateDirectionalDispatches$1","getParent$1","traverseTwoPhase$1","skipBubbling","accumulateTwoPhaseDispatchesSingle$1","accumulateTwoPhaseDispatches$1","accumulateCapturePhaseDispatches","accumulateDispatches$1","accumulateDirectDispatchesSingle$1","accumulateDirectDispatches$1","ReactNativeBridgeEventPlugin","bubbleDispatchConfig","directDispatchConfig","ReactNativeEventPluginOrder","getInstanceFromInstance","instanceHandle","getTagFromInstance","nativeInstance","_nativeTag","getFiberCurrentPropsFromNode$1","currentProps","ReactFabricGlobalResponderHandler","from","to","blockNativeResponder","fromOrTo","fromOrToStateNode","isFabric","_internalInstanceHandle","nativeFabricUIManager","setIsJSResponder","node","UIManager","setJSResponder","clearJSResponder","key","_reactInternals","value","enableSchedulingProfiler","enableProfilerTimer","enableProfilerCommitHooks","warnAboutStringRefs","enableSuspenseAvoidThisFallback","enableNewReconciler","enableLazyContextPropagation","enableLegacyHidden","REACT_ELEMENT_TYPE","Symbol","for","REACT_PORTAL_TYPE","REACT_FRAGMENT_TYPE","REACT_STRICT_MODE_TYPE","REACT_PROFILER_TYPE","REACT_PROVIDER_TYPE","REACT_CONTEXT_TYPE","REACT_FORWARD_REF_TYPE","REACT_SUSPENSE_TYPE","REACT_SUSPENSE_LIST_TYPE","REACT_MEMO_TYPE","REACT_LAZY_TYPE","REACT_SCOPE_TYPE","REACT_DEBUG_TRACING_MODE_TYPE","REACT_OFFSCREEN_TYPE","REACT_LEGACY_HIDDEN_TYPE","REACT_CACHE_TYPE","REACT_TRACING_MARKER_TYPE","MAYBE_ITERATOR_SYMBOL","iterator","FAUX_ITERATOR_SYMBOL","getIteratorFn","maybeIterable","maybeIterator","getWrappedName","outerType","innerType","wrapperName","displayName","functionName","getContextName","getComponentNameFromType","$$typeof","provider","_context","render","outerName","lazyComponent","payload","_payload","init","_init","x","getWrappedName$1","getContextName$1","getComponentNameFromFiber","fiber","NoFlags","PerformedWork","Placement","Update","ChildDeletion","ContentReset","Callback","DidCapture","ForceClientRender","Ref","Snapshot","Passive","Hydrating","Visibility","StoreConsistency","LifecycleEffectMask","HostEffectMask","Incomplete","ShouldCapture","ForceUpdateForLegacySuspense","Forked","RefStatic","LayoutStatic","PassiveStatic","BeforeMutationMask","MutationMask","LayoutMask","PassiveMask","StaticMask","ReactCurrentOwner","getNearestMountedFiber","nearestMounted","nextNode","flags","isFiberMounted","isMounted","component","owner","ownerFiber","_warnedAboutRefsInRender","assertIsMounted","findCurrentFiberUsingSlowPath","parentA","parentB","nextParent","child","sibling","didFindChild","_child","findCurrentHostFiber","parent","currentParent","findCurrentHostFiberImpl","match","mountSafeCallback_NOT_REALLY_SAFE","__isMounted","warnForStyleProps","validAttributes","style","emptyObject","removedKeys","removedKeyCount","deepDifferOptions","unsafelyIgnoreFunctions","defaultDiffer","prevProp","nextProp","deepDiffer","restoreDeletedValuesInNestedArray","updatePayload","obj","propKey","attributeConfig","diff","process","nextValue","diffNestedArrayProperty","prevArray","nextArray","minLength","diffNestedProperty","clearNestedProperty","addNestedProperty","diffProperties","flattenStyle","addProperties","clearProperties","prevProps","nextProps","shouldUpdate","_nextValue","_propKey","create","batchedUpdatesImpl","bookkeeping","isInsideEventHandler","batchedUpdates","setBatchingImplementation","_batchedUpdatesImpl","_discreteUpdatesImpl","eventQueue","executeDispatchesAndRelease","executeDispatchesAndReleaseTopLevel","runEventsInBatch","processingEventQueue","extractPluginEvents","legacyPlugins","possiblePlugin","extractedEvents","runExtractedPluginEventsInBatch","targetFiber","eventTarget","RawEventEmitter","emit","scheduleCallback","unstable_scheduleCallback","cancelCallback","unstable_cancelCallback","shouldYield","unstable_shouldYield","requestPaint","unstable_requestPaint","unstable_now","ImmediatePriority","unstable_ImmediatePriority","UserBlockingPriority","unstable_UserBlockingPriority","NormalPriority","unstable_NormalPriority","IdlePriority","unstable_IdlePriority","rendererID","injectedHook","hasLoggedError","isDevToolsPresent","injectInternals","internals","hook","isDisabled","supportsFiber","getLaneLabelMap","injectProfilingHooks","inject","err","checkDCE","onScheduleRoot","root","children","onScheduleFiberRoot","onCommitRoot","eventPriority","onCommitFiberRoot","schedulerPriority","DiscreteEventPriority","ContinuousEventPriority","DefaultEventPriority","IdleEventPriority","onPostCommitRoot","onPostCommitFiberRoot","onCommitUnmount","onCommitFiberUnmount","profilingHooks","markComponentRenderStopped","markComponentErrored","thrownValue","lanes","markComponentSuspended","wakeable","NoMode","ConcurrentMode","ProfileMode","StrictLegacyMode","clz32","Math","clz32Fallback","log","LN2","asUint","TotalLanes","NoLanes","NoLane","SyncLane","InputContinuousHydrationLane","InputContinuousLane","DefaultHydrationLane","DefaultLane","TransitionHydrationLane","TransitionLanes","TransitionLane1","TransitionLane2","TransitionLane3","TransitionLane4","TransitionLane5","TransitionLane6","TransitionLane7","TransitionLane8","TransitionLane9","TransitionLane10","TransitionLane11","TransitionLane12","TransitionLane13","TransitionLane14","TransitionLane15","TransitionLane16","RetryLanes","RetryLane1","RetryLane2","RetryLane3","RetryLane4","RetryLane5","SomeRetryLane","SelectiveHydrationLane","NonIdleLanes","IdleHydrationLane","IdleLane","OffscreenLane","NoTimestamp","nextTransitionLane","nextRetryLane","getHighestPriorityLanes","getHighestPriorityLane","getNextLanes","wipLanes","pendingLanes","nextLanes","suspendedLanes","pingedLanes","nonIdlePendingLanes","nonIdleUnblockedLanes","nonIdlePingedLanes","unblockedLanes","nextLane","wipLane","entangledLanes","entanglements","index","pickArbitraryLaneIndex","lane","getMostRecentEventTime","eventTimes","mostRecentEventTime","eventTime","computeExpirationTime","currentTime","markStarvedLanesAsExpired","expirationTimes","expirationTime","expiredLanes","getLanesToRetrySynchronouslyOnError","everythingButOffscreen","includesSyncLane","includesNonIdleWork","includesOnlyRetries","includesOnlyNonUrgentLanes","UrgentLanes","includesOnlyTransitions","includesBlockingLane","SyncDefaultLanes","includesExpiredLane","isTransitionLane","claimNextTransitionLane","claimNextRetryLane","pickArbitraryLane","laneToIndex","includesSomeLane","isSubsetOfLanes","subset","mergeLanes","removeLanes","intersectLanes","laneToLanes","createLaneMap","initial","laneMap","markRootUpdated","updateLane","markRootSuspended","markRootPinged","markRootFinished","remainingLanes","noLongerPendingLanes","mutableReadLanes","markRootEntangled","rootEntangledLanes","getBumpedLaneForHydration","renderLanes","renderLane","addFiberToLanesMap","pendingUpdatersLaneMap","updaters","add","movePendingFibersToMemoized","memoizedUpdaters","size","has","clear","getTransitionsForLanes","currentUpdatePriority","getCurrentUpdatePriority","setCurrentUpdatePriority","newPriority","higherEventPriority","lowerEventPriority","isHigherEventPriority","lanesToEventPriority","shim","commitMount","shim$1","isSuspenseInstancePending","isSuspenseInstanceFallback","getSuspenseInstanceFallbackErrorDetails","registerSuspenseInstanceRetry","hydrateTextInstance","errorHydratingContainer","_nativeFabricUIManage","createNode","cloneNode","cloneNodeWithNewChildren","cloneNodeWithNewChildrenAndProps","cloneNodeWithNewProps","createChildNodeSet","createChildSet","appendChildNode","appendChild","appendChildNodeToSet","appendChildToSet","completeRoot","registerEventHandler","fabricMeasure","measure","fabricMeasureInWindow","measureInWindow","fabricMeasureLayout","measureLayout","FabricDefaultPriority","unstable_DefaultEventPriority","FabricDiscretePriority","unstable_DiscreteEventPriority","fabricGetCurrentEventPriority","unstable_getCurrentEventPriority","_setNativeProps","setNativeProps","getViewConfigForType","nextReactTag","ReactFabricHostComponent","viewConfig","internalInstanceHandle","_proto","blur","TextInputState","blurTextInput","focus","focusTextInput","relativeToNativeNode","onSuccess","onFail","toStateNode","fromStateNode","nativeProps","addEventListener_unstable","eventType","optionsObj","passive","signal","namedEventListeners","filter","appendInitialChild","parentInstance","createInstance","rootContainerInstance","hostContext","deepFreezeAndThrowOnMutationInDev","uiViewClassName","createTextInstance","text","isInAParentText","getRootHostContext","getChildHostContext","parentHostContext","prevIsInAParentText","getPublicInstance","prepareForCommit","containerInfo","prepareUpdate","oldProps","newProps","resetAfterCommit","shouldSetTextContent","getCurrentEventPriority","currentEventPriority","warnsIfNotActing","scheduleTimeout","setTimeout","cancelTimeout","clearTimeout","noTimeout","cloneInstance","keepChildren","recyclableInstance","clone","cloneHiddenInstance","display","cloneHiddenTextInstance","createContainerChildSet","container","appendChildToContainerChildSet","childSet","finalizeContainerChildren","newChildren","replaceContainerChildren","preparePortalMount","portalInstance","ReactCurrentDispatcher","describeBuiltInComponentFrame","source","ownerFn","ownerName","describeComponentFrame","componentFrameCache","PossiblyWeakMap","WeakMap","Map","BEFORE_SLASH_RE","sourceInfo","fileName","test","pathBeforeSlash","folderName","lineNumber","describeClassComponentFrame","ctor","describeFunctionComponentFrame","describeUnknownElementTypeFrameInDEV","loggedTypeFailures","setCurrentlyValidatingElement","element","_owner","_source","setExtraStackFrame","checkPropTypes","typeSpecs","values","location","componentName","bind","typeSpecName","error$1","ex","message","valueStack","fiberStack","createCursor","defaultValue","cursor","warnedAboutMissingGetChildContext","emptyContextObject","freeze","contextStackCursor","didPerformWorkStackCursor","previousContext","getUnmaskedContext","workInProgress","Component","didPushOwnContextIfProvider","isContextProvider","cacheContext","unmaskedContext","maskedContext","__reactInternalMemoizedUnmaskedChildContext","__reactInternalMemoizedMaskedChildContext","getMaskedContext","contextTypes","hasContextChanged","childContextTypes","popContext","popTopLevelContextObject","pushTopLevelContextObject","didChange","processChildContext","parentContext","getChildContext","childContext","contextKey","pushContextProvider","memoizedMergedChildContext","__reactInternalMemoizedMergedChildContext","invalidateContextProvider","mergedContext","findCurrentUnmaskedContext","LegacyRoot","ConcurrentRoot","is","y","objectIs","syncQueue","includesLegacySyncCallbacks","isFlushingSyncQueue","scheduleSyncCallback","scheduleLegacySyncCallback","flushSyncCallbacksOnlyInLegacyMode","flushSyncCallbacks","previousUpdatePriority","isSync","queue","isRootDehydrated","currentState","memoizedState","isDehydrated","forkStack","forkStackIndex","treeForkProvider","treeForkCount","idStack","idStackIndex","treeContextProvider","treeContextId","treeContextOverflow","popTreeContext","isHydrating","didSuspendOrErrorDEV","hydrationErrors","didSuspendOrErrorWhileHydratingDEV","reenterHydrationStateFromDehydratedSuspenseInstance","suspenseInstance","treeContext","prepareToHydrateHostInstance","prepareToHydrateHostTextInstance","prepareToHydrateHostSuspenseInstance","popHydrationState","upgradeHydrationErrorsToRecoverable","queueRecoverableErrors","getIsHydrating","queueHydrationError","ReactCurrentBatchConfig","NoTransition","requestCurrentTransition","transition","shallowEqual","objA","objB","keysA","keys","keysB","currentKey","describeFiber","_debugOwner","_debugSource","getStackByFiberInDevAndProd","info","ReactDebugCurrentFrame$1","isRendering","getCurrentFiberOwnerNameInDevOrNull","getCurrentFiberStackInDev","resetCurrentFiber","getCurrentStack","setCurrentFiber","getCurrentFiber","setIsRendering","rendering","ReactStrictModeWarnings","recordUnsafeLifecycleWarnings","flushPendingUnsafeLifecycleWarnings","recordLegacyContextWarning","flushLegacyContextWarning","discardPendingWarnings","findStrictRoot","maybeStrictRoot","mode","setToSortedString","array","sort","join","pendingComponentWillMountWarnings","pendingUNSAFE_ComponentWillMountWarnings","pendingComponentWillReceivePropsWarnings","pendingUNSAFE_ComponentWillReceivePropsWarnings","pendingComponentWillUpdateWarnings","pendingUNSAFE_ComponentWillUpdateWarnings","didWarnAboutUnsafeLifecycles","Set","componentWillMount","__suppressDeprecationWarning","UNSAFE_componentWillMount","componentWillReceiveProps","UNSAFE_componentWillReceiveProps","componentWillUpdate","UNSAFE_componentWillUpdate","componentWillMountUniqueNames","UNSAFE_componentWillMountUniqueNames","componentWillReceivePropsUniqueNames","UNSAFE_componentWillReceivePropsUniqueNames","componentWillUpdateUniqueNames","UNSAFE_componentWillUpdateUniqueNames","sortedNames","_sortedNames","_sortedNames2","_sortedNames3","_sortedNames4","_sortedNames5","pendingLegacyContextWarning","didWarnAboutLegacyContext","strictRoot","warningsForRoot","fiberArray","firstFiber","uniqueNames","typeName","hasToStringTag","toStringTag","willCoercionThrow","testStringCoercion","checkKeyStringCoercion","checkPropStringCoercion","resolveDefaultProps","baseProps","defaultProps","valueCursor","rendererSigil","currentlyRenderingFiber","lastContextDependency","lastFullyObservedContext","isDisallowedContextReadInDEV","resetContextDependencies","enterDisallowedContextReadInDEV","exitDisallowedContextReadInDEV","pushProvider","providerFiber","_currentValue2","_currentRenderer2","popProvider","currentValue","scheduleContextWorkOnParentPath","propagationRoot","childLanes","propagateContextChange","propagateContextChange_eager","nextFiber","list","dependency","firstContext","update","createUpdate","ForceUpdate","updateQueue","sharedQueue","shared","pending","parentSuspense","_alternate","prepareToReadContext","markWorkInProgressReceivedUpdate","readContext","contextItem","memoizedValue","concurrentQueues","pushConcurrentUpdateQueue","finishQueueingConcurrentUpdates","lastInterleavedUpdate","interleaved","firstInterleavedUpdate","lastPendingUpdate","firstPendingUpdate","enqueueConcurrentHookUpdate","markUpdateLaneFromFiberToRoot","enqueueConcurrentHookUpdateAndEagerlyBailout","enqueueConcurrentClassUpdate","enqueueConcurrentRenderForLane","unsafe_markUpdateLaneFromFiberToRoot","sourceFiber","warnAboutUpdateOnNotYetMountedFiberInDEV","UpdateState","ReplaceState","CaptureUpdate","hasForceUpdate","didWarnUpdateInsideUpdate","currentlyProcessingQueue","initializeUpdateQueue","baseState","firstBaseUpdate","lastBaseUpdate","effects","cloneUpdateQueue","currentQueue","enqueueUpdate","isUnsafeClassRenderPhaseUpdate","entangleTransitions","queueLanes","newQueueLanes","enqueueCapturedUpdate","capturedUpdate","newFirst","newLast","getStateFromUpdate","prevState","nextState","partialState","processUpdateQueue","pendingQueue","currentLastBaseUpdate","newState","newLanes","newBaseState","newFirstBaseUpdate","newLastBaseUpdate","updateEventTime","_clone","_lastPendingUpdate","_firstPendingUpdate","lastInterleaved","markSkippedUpdateLanes","resetHasForceUpdateBeforeProcessing","checkHasForceUpdateAfterProcessing","commitUpdateQueue","finishedWork","finishedQueue","effect","fakeInternalInstance","emptyRefsObject","refs","didWarnAboutStateAssignmentForComponent","didWarnAboutUninitializedState","didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate","didWarnAboutLegacyLifecyclesAndDerivedState","didWarnAboutUndefinedDerivedState","warnOnUndefinedDerivedState","warnOnInvalidCallback","didWarnAboutDirectlyAssigningPropsToState","didWarnAboutContextTypeAndContextTypes","didWarnAboutInvalidateContextType","didWarnOnInvalidCallback","callerName","enumerable","applyDerivedStateFromProps","getDerivedStateFromProps","classComponentUpdater","enqueueSetState","requestEventTime","requestUpdateLane","scheduleUpdateOnFiber","enqueueReplaceState","enqueueForceUpdate","checkShouldComponentUpdate","oldState","nextContext","shouldComponentUpdate","isPureReactComponent","checkClassInstance","renderPresent","getInitialState","isReactClassApproved","state","getDefaultProps","propTypes","contextType","componentShouldUpdate","componentDidUnmount","componentDidReceiveProps","componentWillRecieveProps","UNSAFE_componentWillRecieveProps","hasMutatedProps","getSnapshotBeforeUpdate","componentDidUpdate","getDerivedStateFromError","_state","adoptClassInstance","updater","_reactInternalInstance","constructClassInstance","isLegacyContextConsumer","isValid","addendum","foundWillMountName","foundWillReceivePropsName","foundWillUpdateName","_componentName","newApiName","callComponentWillMount","callComponentWillReceiveProps","mountClassInstance","componentDidMount","fiberFlags","resumeMountClassInstance","memoizedProps","oldContext","nextLegacyUnmaskedContext","hasNewLifecycles","_fiberFlags","_fiberFlags2","updateClassInstance","unresolvedOldProps","elementType","unresolvedNewProps","pendingProps","nextUnmaskedContext","didWarnAboutMaps","didWarnAboutGenerators","didWarnAboutStringRefs","ownerHasKeyUseWarning","ownerHasFunctionTypeWarning","warnForMissingKey","returnFiber","_store","validated","coerceRef","mixedRef","ref","_self","resolvedInst","stringRef","_stringRef","throwOnInvalidObjectType","newChild","childString","toString","warnOnFunctionType","resolveLazy","lazyType","ChildReconciler","shouldTrackSideEffects","deleteChild","childToDelete","deletions","deleteRemainingChildren","currentFirstChild","mapRemainingChildren","existingChildren","existingChild","useFiber","createWorkInProgress","placeChild","newFiber","lastPlacedIndex","newIndex","oldIndex","placeSingleChild","updateTextNode","textContent","created","createFiberFromText","existing","updateElement","updateFragment","isCompatibleFamilyForHotReloading","createFiberFromElement","updatePortal","portal","implementation","createFiberFromPortal","fragment","createFiberFromFragment","createChild","_created","_created2","_created3","updateSlot","oldFiber","updateFromMap","newIdx","matchedFiber","_matchedFiber","_matchedFiber2","_matchedFiber3","warnOnInvalidKey","knownKeys","reconcileChildrenArray","resultingFirstChild","previousNewFiber","nextOldFiber","_newFiber","_newFiber2","delete","reconcileChildrenIterator","newChildrenIterable","iteratorFn","entries","_newChildren","_step","done","step","_newFiber3","_newFiber4","reconcileSingleTextNode","reconcileSingleElement","_existing","_created4","reconcileSinglePortal","reconcileChildFibers","isUnkeyedTopLevelFragment","mountChildFibers","cloneChildFibers","currentChild","resetChildFibers","resetWorkInProgress","NO_CONTEXT","contextStackCursor$1","contextFiberStackCursor","rootInstanceStackCursor","requiredContext","getRootHostContainer","rootInstance","pushHostContainer","nextRootInstance","nextRootContext","popHostContainer","getHostContext","pushHostContext","popHostContext","DefaultSuspenseContext","SubtreeSuspenseContextMask","InvisibleParentSuspenseContext","ForceSuspenseFallback","suspenseStackCursor","hasSuspenseContext","flag","setDefaultShallowSuspenseContext","setShallowSuspenseContext","shallowContext","addSubtreeSuspenseContext","subtreeContext","pushSuspenseContext","newContext","popSuspenseContext","shouldCaptureSuspense","hasInvisibleParent","dehydrated","findFirstSuspended","row","revealOrder","didSuspend","NoFlags$1","HasEffect","Insertion","Layout","Passive$1","workInProgressSources","resetWorkInProgressVersions","mutableSource","_workInProgressVersionSecondary","ReactCurrentDispatcher$1","ReactCurrentBatchConfig$1","didWarnAboutMismatchedHooksForComponent","didWarnUncachedGetSnapshot","currentlyRenderingFiber$1","currentHook","workInProgressHook","didScheduleRenderPhaseUpdate","didScheduleRenderPhaseUpdateDuringThisPass","globalClientIdCounter","RE_RENDER_LIMIT","currentHookNameInDev","hookTypesDev","hookTypesUpdateIndexDev","ignorePreviousDependencies","mountHookTypesDev","hookName","updateHookTypesDev","warnOnHookMismatchInDev","checkDepsAreArrayDev","deps","currentHookName","table","secondColumnStart","oldHookName","newHookName","throwInvalidHookError","areHookInputsEqual","nextDeps","prevDeps","renderWithHooks","secondArg","nextRenderLanes","_debugHookTypes","HooksDispatcherOnUpdateInDEV","HooksDispatcherOnMountWithHookTypesInDEV","HooksDispatcherOnMountInDEV","numberOfReRenders","HooksDispatcherOnRerenderInDEV","ContextOnlyDispatcher","didRenderTooFewHooks","bailoutHooks","resetHooksAfterThrow","isUpdatingOpaqueValueInRenderPhase","mountWorkInProgressHook","baseQueue","updateWorkInProgressHook","nextCurrentHook","nextWorkInProgressHook","newHook","createFunctionComponentUpdateQueue","lastEffect","stores","basicStateReducer","mountReducer","reducer","initialArg","initialState","dispatch","lastRenderedReducer","lastRenderedState","dispatchReducerAction","updateReducer","baseFirst","pendingFirst","first","newBaseQueueFirst","newBaseQueueLast","hasEagerState","eagerState","interleavedLane","rerenderReducer","lastRenderPhaseUpdate","firstRenderPhaseUpdate","mountMutableSource","getSnapshot","subscribe","updateMutableSource","mountSyncExternalStore","getServerSnapshot","nextSnapshot","cachedSnapshot","getWorkInProgressRoot","pushStoreConsistencyCheck","mountEffect","subscribeToStore","pushEffect","updateStoreInstance","updateSyncExternalStore","prevSnapshot","snapshotChanged","updateEffect","renderedSnapshot","check","componentUpdateQueue","checkIfSnapshotChanged","forceStoreRerender","handleStoreChange","latestGetSnapshot","prevValue","mountState","dispatchSetState","updateState","rerenderState","destroy","firstEffect","mountRef","initialValue","_ref2","updateRef","mountEffectImpl","hookFlags","updateEffectImpl","prevEffect","mountInsertionEffect","updateInsertionEffect","mountLayoutEffect","updateLayoutEffect","imperativeHandleEffect","refCallback","_inst","refObject","_inst2","mountImperativeHandle","effectDeps","updateImperativeHandle","mountDebugValue","formatterFn","updateDebugValue","mountCallback","updateCallback","mountMemo","nextCreate","updateMemo","mountDeferredValue","updateDeferredValue","resolvedCurrentHook","updateDeferredValueImpl","rerenderDeferredValue","shouldDeferValue","deferredLane","startTransition","setPending","previousPriority","prevTransition","currentTransition","_updatedFibers","updatedFibersCount","mountTransition","_mountState","isPending","start","updateTransition","_updateState","rerenderTransition","_rerenderState","getIsUpdatingOpaqueValueInRenderPhaseInDEV","mountId","identifierPrefix","id","globalClientId","updateId","isRenderPhaseUpdate","enqueueRenderPhaseUpdate","entangleTransitionUpdate","prevDispatcher","InvalidNestedHooksDispatcherOnUpdateInDEV","useCallback","useContext","useEffect","useImperativeHandle","useInsertionEffect","useLayoutEffect","useMemo","useReducer","useRef","useState","useDebugValue","useDeferredValue","useTransition","useMutableSource","useSyncExternalStore","useId","unstable_isNewReconciler","InvalidNestedHooksDispatcherOnMountInDEV","InvalidNestedHooksDispatcherOnRerenderInDEV","warnInvalidContextAccess","warnInvalidHookAccess","now$1","commitTime","layoutEffectStartTime","profilerStartTime","passiveEffectStartTime","currentUpdateIsNested","nestedUpdateScheduled","isCurrentUpdateNested","markNestedUpdateScheduled","resetNestedUpdateFlag","syncNestedUpdateFlag","getCommitTime","recordCommitTime","startProfilerTimer","actualStartTime","stopProfilerTimerIfRunning","stopProfilerTimerIfRunningAndRecordDelta","overrideBaseTime","elapsedTime","actualDuration","selfBaseDuration","recordLayoutEffectDuration","parentFiber","effectDuration","parentStateNode","recordPassiveEffectDuration","passiveEffectDuration","startLayoutEffectTimer","startPassiveEffectTimer","transferActualDuration","createCapturedValueAtFiber","digest","createCapturedValue","ReactFiberErrorDialog","showErrorDialog","boundary","errorInfo","capturedError","componentStack","errorBoundary","logCapturedError","logError","componentNameMessage","errorBoundaryMessage","errorBoundaryName","combinedMessage","PossiblyWeakMap$1","createRootErrorUpdate","onUncaughtError","createClassErrorUpdate","markFailedErrorBoundaryForHotReloading","componentDidCatch","markLegacyErrorBoundaryAsFailed","attachPingListener","pingCache","threadIDs","ping","pingSuspendedRoot","restorePendingUpdaters","then","attachRetryListener","suspenseBoundary","wakeables","resetSuspendedComponent","rootRenderLanes","currentSource","getNearestSuspenseBoundaryToCapture","markSuspenseBoundaryShouldCapture","currentSourceFiber","throwException","renderDidSuspendDelayIfPossible","uncaughtSuspenseError","renderDidError","_errorInfo","isAlreadyFailedLegacyErrorBoundary","_lane","_update","getSuspendedCache","ReactCurrentOwner$1","didReceiveUpdate","didWarnAboutBadClass","didWarnAboutModulePatternComponent","didWarnAboutContextTypeOnFunctionComponent","didWarnAboutGetDerivedStateOnFunctionComponent","didWarnAboutFunctionRefs","didWarnAboutReassigningProps","didWarnAboutRevealOrder","didWarnAboutTailOptions","reconcileChildren","nextChildren","forceUnmountCurrentAndReconcile","updateForwardRef","innerPropTypes","bailoutOnAlreadyFinishedWork","updateMemoComponent","isSimpleFunctionComponent","compare","resolvedType","resolveFunctionForHotReloading","validateFunctionComponentInDev","updateSimpleMemoComponent","createFiberFromTypeAndProps","_type","_innerPropTypes","hasScheduledUpdateOrContext","checkScheduledUpdateOrContext","outerMemoType","outerPropTypes","updateFunctionComponent","updateOffscreenComponent","baseLanes","cachePool","transitions","pushRenderLanes","spawnedCachePool","nextBaseLanes","prevBaseLanes","_nextState","_nextState2","subtreeRenderLanes","_subtreeRenderLanes","updateMode","updateProfiler","markRef","updateClassComponent","shouldError","_instance","tempInstance","hasContext","resetSuspendedCurrentOnMountInLegacyMode","nextUnitOfWork","finishClassComponent","didCaptureError","pushHostRootContext","pendingContext","updateHostRoot","prevChildren","updateHostComponent","updateHostText","mountLazyComponent","_current","resolvedTag","resolveLazyComponentTag","resolvedProps","resolveClassForHotReloading","resolveForwardRefForHotReloading","hint","mountIncompleteClassComponent","mountIndeterminateComponent","_componentName2","warningKey","debugSource","_componentName3","_componentName4","SUSPENDED_MARKER","retryLane","mountSuspenseOffscreenState","updateSuspenseOffscreenState","prevOffscreenState","shouldRemainOnFallback","suspenseContext","suspenseState","getRemainingWorkInPrimaryTree","updateSuspenseComponent","shouldSuspend","showFallback","mountDehydratedSuspenseComponent","nextPrimaryChildren","nextFallbackChildren","fallback","fallbackFragment","mountSuspenseFallbackChildren","primaryChildFragment","mountSuspensePrimaryChildren","_dehydrated","updateDehydratedSuspenseComponent","_nextFallbackChildren","_nextPrimaryChildren","fallbackChildFragment","updateSuspenseFallbackChildren","_primaryChildFragment2","_nextPrimaryChildren2","_primaryChildFragment3","updateSuspensePrimaryChildren","primaryChildren","primaryChildProps","mountWorkInProgressOffscreenFiber","fallbackChildren","progressedPrimaryFragment","treeBaseDuration","offscreenProps","createFiberFromOffscreen","updateWorkInProgressOffscreenFiber","currentPrimaryChildFragment","currentFallbackChildFragment","subtreeFlags","retrySuspenseComponentWithoutHydrating","recoverableError","mountSuspenseFallbackAfterRetryWithoutHydrating","fiberMode","_getSuspenseInstanceF","capturedValue","attemptHydrationAtLane","_capturedValue","retry","retryDehydratedSuspenseBoundary","_capturedValue2","_primaryChildFragment4","scheduleSuspenseWorkOnFiber","propagateSuspenseContextChange","firstChild","findLastContentRow","lastContentRow","currentRow","validateRevealOrder","validateTailOptions","tailMode","validateSuspenseListNestedChild","childSlot","isAnArray","isIterable","validateSuspenseListChildren","childrenIterator","_i","initSuspenseListRenderState","isBackwards","tail","renderState","renderingStartTime","last","updateSuspenseListComponent","shouldForceFallback","didSuspendBefore","_tail","nextRow","updatePortalComponent","hasWarnedAboutUsingNoValuePropOnContextProvider","updateContextProvider","providerType","newValue","providerPropTypes","oldValue","hasWarnedAboutUsingContextAsConsumer","updateContextConsumer","Consumer","remountFiber","oldWorkInProgress","newWorkInProgress","prevSibling","updateLanes","attemptEarlyBailoutIfNoScheduledUpdate","hasChildWork","primaryChildLanes","_hasChildWork","beginWork","_debugNeedsRemount","unresolvedProps","_Component","_unresolvedProps","_resolvedProps","_unresolvedProps2","_resolvedProps2","_type2","_unresolvedProps3","_resolvedProps3","_Component2","_unresolvedProps4","_resolvedProps4","markUpdate","markRef$1","hadNoMutationsEffects","completedWork","didBailout","appendAllChildren","updateHostContainer","updateHostComponent$1","updateHostText$1","needsVisibilityToggle","isHidden","appendAllChildrenToContainer","containerChildSet","_instance2","portalOrRoot","childrenUnchanged","newChildSet","pendingChildren","currentInstance","currentHostContext","newInstance","oldText","newText","cutOffTailIfNeeded","hasRenderedATailFallback","tailNode","lastTailNode","_tailNode","_lastTailNode","bubbleProperties","newChildLanes","_treeBaseDuration","_child2","_child3","completeDehydratedSuspenseBoundary","wasHydrated","isTimedOutSuspense","_isTimedOutSuspense","_primaryChildFragment","completeWork","fiberRoot","_wasHydrated","_rootContainerInstance","_currentHostContext","_wasHydrated2","fallthroughToNormalSuspensePath","nextDidTimeout","prevDidTimeout","_offscreenFiber2","hasInvisibleChildContext","unstable_avoidThisFallback","renderDidSuspend","didSuspendAlready","renderedTail","cannotBeSuspended","renderHasNotSuspendedYet","suspended","newThenables","getRenderTargetTime","_suspended","_newThenables","previousSibling","popRenderLanes","nextIsHidden","_prevState","prevIsHidden","unwindWork","_flags","_flags2","unwindInterruptedWork","interruptedWork","didWarnAboutUndefinedSnapshotBeforeUpdate","PossiblyWeakSet","WeakSet","nextEffect","inProgressLanes","inProgressRoot","reportUncaughtErrorInDEV","callComponentWillUnmountWithTimer","componentWillUnmount","safelyCallComponentWillUnmount","nearestMountedAncestor","captureCommitPhaseError","safelyDetachRef","retVal","safelyCallDestroy","focusedInstanceHandle","shouldFireAfterActiveInstanceBlur","commitBeforeMutationEffects","commitBeforeMutationEffects_begin","shouldFire","commitBeforeMutationEffects_complete","commitBeforeMutationEffectsOnFiber","snapshot","didWarnSet","__reactInternalSnapshotBeforeUpdate","commitHookEffectListUnmount","setIsRunningInsertionEffect","commitHookEffectListMount","commitPassiveEffectDurations","finishedRoot","_finishedWork$memoize","onPostCommit","outer","commitLayoutEffectOnFiber","committedLanes","_updateQueue","_finishedWork$memoize2","onCommit","onRender","enqueuePendingPassiveProfilerEffect","commitAttachRef","instanceToUse","detachFiberMutation","detachFiberAfterEffects","hostInstance","emptyPortalContainer","emptyChildSet","commitPlacement","commitDeletionEffects","deletedFiber","commitDeletionEffectsOnFiber","recursivelyTraverseDeletionEffects","_effect","commitSuspenseCallback","attachSuspenseRetryListeners","retryCache","resolveRetryWakeable","commitMutationEffects","commitMutationEffectsOnFiber","recursivelyTraverseMutationEffects","prevDebugFiber","commitReconciliationEffects","_containerInfo","_pendingChildren","offscreenFiber","offscreenInstance","wasHidden","markCommitTimeOfFallback","_wasHidden","_offscreenInstance","_newState","_isHidden","commitLayoutEffects","commitLayoutEffects_begin","subtreeRoot","isModernRoot","commitLayoutMountEffects_complete","commitPassiveMountEffects","committedTransitions","commitPassiveMountEffects_begin","commitPassiveMountEffects_complete","commitPassiveMountOnFiber","commitPassiveUnmountEffects","commitPassiveUnmountEffects_begin","fiberToDelete","commitPassiveUnmountEffectsInsideOfDeletedTree_begin","previousFiber","detachedChild","detachedSibling","commitPassiveUnmountEffects_complete","commitPassiveUnmountOnFiber","deletedSubtreeRoot","commitPassiveUnmountInsideDeletedTreeOnFiber","commitPassiveUnmountEffectsInsideOfDeletedTree_complete","COMPONENT_TYPE","HAS_PSEUDO_CLASS_TYPE","ROLE_TYPE","TEST_NAME_TYPE","TEXT_TYPE","symbolFor","ReactCurrentActQueue","isLegacyActEnvironment","isReactActEnvironmentGlobal","IS_REACT_ACT_ENVIRONMENT","isConcurrentActEnvironment","ceil","ReactCurrentDispatcher$2","ReactCurrentOwner$2","ReactCurrentBatchConfig$2","ReactCurrentActQueue$1","NoContext","BatchedContext","RenderContext","CommitContext","RootInProgress","RootFatalErrored","RootErrored","RootSuspended","RootSuspendedWithDelay","RootCompleted","RootDidNotComplete","executionContext","workInProgressRoot","workInProgressRootRenderLanes","subtreeRenderLanesCursor","workInProgressRootExitStatus","workInProgressRootFatalError","workInProgressRootIncludedLanes","workInProgressRootSkippedLanes","workInProgressRootInterleavedUpdatedLanes","workInProgressRootPingedLanes","workInProgressRootConcurrentErrors","workInProgressRootRecoverableErrors","globalMostRecentFallbackTime","FALLBACK_THROTTLE_MS","workInProgressRootRenderTargetTime","Infinity","RENDER_TIMEOUT_MS","workInProgressTransitions","resetRenderTimer","hasUncaughtError","firstUncaughtError","legacyErrorBoundariesThatAlreadyFailed","rootDoesHavePassiveEffects","rootWithPendingPassiveEffects","pendingPassiveEffectsLanes","pendingPassiveProfilerEffects","pendingPassiveTransitions","NESTED_UPDATE_LIMIT","nestedUpdateCount","rootWithNestedUpdates","isFlushingPassiveEffects","didScheduleUpdateDuringPassiveEffects","NESTED_PASSIVE_UPDATE_LIMIT","nestedPassiveUpdateCount","rootWithPassiveNestedUpdates","currentEventTime","currentEventTransitionLane","isRunningInsertionEffect","isTransition","eventLane","requestRetryLane","checkForNestedUpdates","warnAboutRenderPhaseUpdatesInDEV","warnIfUpdatesNotWrappedWithActDEV","markRootSuspended$1","ensureRootIsScheduled","isBatchingLegacy","existingCallbackNode","callbackNode","cancelCallback$1","callbackPriority","newCallbackPriority","existingCallbackPriority","fakeActCallbackNode","newCallbackNode","didScheduleLegacyUpdate","performSyncWorkOnRoot","scheduleCallback$1","schedulerPriorityLevel","performConcurrentWorkOnRoot","didTimeout","originalCallbackNode","didFlushPassiveEffects","flushPassiveEffects","shouldTimeSlice","exitStatus","renderRootConcurrent","renderRootSync","errorRetryLanes","recoverFromConcurrentError","fatalError","prepareFreshStack","renderWasConcurrent","isRenderConsistentWithExternalStores","_errorRetryLanes","_fatalError","finishedLanes","finishConcurrentRender","errorsFromFirstAttempt","rootWorkInProgress","errorsFromSecondAttempt","errors","commitRoot","shouldForceFlushFallbacksInDEV","msUntilTimeout","timeoutHandle","eventTimeMs","timeElapsedMs","_msUntilTimeout","jnd","checks","renderedValue","batchedUpdates$1","prevExecutionContext","flushSync","handleError","erroredWork","completeUnitOfWork","yetAnotherThrownValue","pushDispatcher","popDispatcher","workLoopSync","performUnitOfWork","workLoopConcurrent","unitOfWork","beginWork$1","_next","siblingFiber","recoverableErrors","previousUpdateLanePriority","commitRootImpl","renderPriorityLevel","flushRenderPhaseStrictModeWarningsInDEV","subtreeHasEffects","rootHasEffect","onRecoverableError","renderPriority","priority","flushPassiveEffectsImpl","profilerEffects","_fiber","prepareToThrowUncaughtError","captureCommitPhaseErrorOnRoot","rootFiber","warnIfSuspenseResolutionNotWrappedWithActDEV","retryTimedOutBoundary","boundaryFiber","timeElapsed","didWarnStateUpdateForNotYetMountedComponent","dummyFiber","originalWorkInProgressCopy","assignFiberPropertiesInDEV","originalError","replayError","didWarnAboutUpdateInRender","didWarnAboutUpdateInRenderForAnotherComponent","renderingComponentName","dedupeKey","setStateComponentName","schedulingFiber","priorityLevel","actQueue","isRunning","resolveFamily","failedBoundaries","setRefreshHandler","handler","family","currentRender","syntheticType","prevType","nextType","needsCompareFamilies","$$typeofNextType","prevFamily","scheduleRefresh","staleFamilies","updatedFamilies","scheduleFibersWithFamiliesRecursively","scheduleRoot","updateContainer","candidateType","needsRender","needsRemount","_root","findHostInstancesForRefresh","families","hostInstances","types","findHostInstancesForMatchingFibersRecursively","didMatch","findHostInstancesForFiberShallowly","foundHostInstances","findChildHostInstancesForFiberShallowly","hasBadMapPolyfill","nonExtensibleObject","preventExtensions","FiberNode","Number","NaN","createFiber","shouldConstruct","isReactComponent","currentDependencies","createHostRootFiber","isStrictMode","concurrentUpdatesByDefaultOverride","fiberTag","getTag","createFiberFromProfiler","createFiberFromSuspense","createFiberFromSuspenseList","elements","primaryChildInstance","content","FiberRootNode","hydrate","_debugRootType","createFiberRoot","initialChildren","hydrationCallbacks","transitionCallbacks","uninitializedFiber","_initialState","cache","pendingSuspenseBoundaries","ReactVersion","createPortal","didWarnAboutNestedUpdates","didWarnAboutFindNodeInStrictMode","getContextForSubtree","parentComponent","findHostInstanceWithWarning","methodName","hostFiber","createContainer","current$1","getPublicRootInstance","containerFiber","shouldErrorImpl","shouldSuspendImpl","overrideHookState","overrideHookStateDeletePath","overrideHookStateRenamePath","overrideProps","overridePropsDeletePath","overridePropsRenamePath","scheduleUpdate","setErrorHandler","setSuspenseHandler","copyWithDeleteImpl","updated","splice","copyWithDelete","copyWithRenameImpl","oldPath","newPath","oldKey","newKey","copyWithRename","copyWithSetImpl","copyWithSet","findHook","newShouldErrorImpl","newShouldSuspendImpl","findHostInstanceByFiber","emptyFindFiberByHostInstance","getCurrentFiberForDevTools","injectIntoDevTools","devToolsConfig","findFiberByHostInstance","bundleType","version","rendererPackageName","rendererConfig","currentDispatcherRef","reconcilerVersion","instanceCache","getInstanceFromTag","emptyObject$1","createHierarchy","getHostNode","getHostProps","lastNonHostInstance","getOwnerHierarchy","traverseOwnerTreeUp","fiberHierarchy","getInspectorData","findNodeHandle","shadowNode","hostNode","host","exports","getInspectorDataForInstance","closestInstance","hierarchy","selectedIndex","getInspectorDataForViewTag","getInspectorDataForViewAtPoint","viewTag","inspectedView","locationX","locationY","findNodeAtPoint","pointerY","frame","left","top","width","height","nativeViewTag","inspectorData","touchedViewTag","_internalFiberInstanceHandleDEV","findSubviewIn","ReactCurrentOwner$3","findHostInstance_DEPRECATED","componentOrHandle","dispatchCommand","handle","command","dispatchViewManagerCommand","sendAccessibilityEvent","legacySendAccessibilityEvent","containerTag","concurrentRoot","roots","unmountComponentAtNode","stopSurface","createPortal$1","registerInternalModuleStop"],"sources":["C:/Users/arzug/Documents/GitHub/travel-brew/node_modules/react-native/Libraries/Renderer/implementations/ReactFabric-dev.js"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @noflow\n * @nolint\n * @providesModule ReactFabric-dev\n * @preventMunge\n * @generated SignedSource<<343bc15819bccf8610b6ff32fcb59b21>>\n */\n\n'use strict';\n\nif (__DEV__) {\n  (function() {\n\n          'use strict';\n\n/* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\nif (\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart ===\n    'function'\n) {\n  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());\n}\n          \"use strict\";\n\nvar React = require(\"react\");\nrequire(\"react-native/Libraries/ReactPrivate/ReactNativePrivateInitializeCore\");\nvar ReactNativePrivateInterface = require(\"react-native/Libraries/ReactPrivate/ReactNativePrivateInterface\");\nvar Scheduler = require(\"scheduler\");\n\nvar ReactSharedInternals =\n  React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\n// by calls to these methods by a Babel plugin.\n//\n// In PROD (or in packages without access to React internals),\n// they are left as they are instead.\n\nfunction warn(format) {\n  {\n    {\n      for (\n        var _len = arguments.length,\n          args = new Array(_len > 1 ? _len - 1 : 0),\n          _key = 1;\n        _key < _len;\n        _key++\n      ) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      printWarning(\"warn\", format, args);\n    }\n  }\n}\nfunction error(format) {\n  {\n    {\n      for (\n        var _len2 = arguments.length,\n          args = new Array(_len2 > 1 ? _len2 - 1 : 0),\n          _key2 = 1;\n        _key2 < _len2;\n        _key2++\n      ) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      printWarning(\"error\", format, args);\n    }\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  {\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\n\n    if (stack !== \"\") {\n      format += \"%s\";\n      args = args.concat([stack]);\n    } // eslint-disable-next-line react-internal/safe-string-coercion\n\n    var argsWithFormat = args.map(function(item) {\n      return String(item);\n    }); // Careful: RN currently depends on this prefix\n\n    argsWithFormat.unshift(\"Warning: \" + format); // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n\nfunction invokeGuardedCallbackProd(name, func, context, a, b, c, d, e, f) {\n  var funcArgs = Array.prototype.slice.call(arguments, 3);\n\n  try {\n    func.apply(context, funcArgs);\n  } catch (error) {\n    this.onError(error);\n  }\n}\n\nvar invokeGuardedCallbackImpl = invokeGuardedCallbackProd;\n\n{\n  // In DEV mode, we swap out invokeGuardedCallback for a special version\n  // that plays more nicely with the browser's DevTools. The idea is to preserve\n  // \"Pause on exceptions\" behavior. Because React wraps all user-provided\n  // functions in invokeGuardedCallback, and the production version of\n  // invokeGuardedCallback uses a try-catch, all user exceptions are treated\n  // like caught exceptions, and the DevTools won't pause unless the developer\n  // takes the extra step of enabling pause on caught exceptions. This is\n  // unintuitive, though, because even though React has caught the error, from\n  // the developer's perspective, the error is uncaught.\n  //\n  // To preserve the expected \"Pause on exceptions\" behavior, we don't use a\n  // try-catch in DEV. Instead, we synchronously dispatch a fake event to a fake\n  // DOM node, and call the user-provided callback from inside an event handler\n  // for that fake event. If the callback throws, the error is \"captured\" using\n  // a global event handler. But because the error happens in a different\n  // event loop context, it does not interrupt the normal program flow.\n  // Effectively, this gives us try-catch behavior without actually using\n  // try-catch. Neat!\n  // Check that the browser supports the APIs we need to implement our special\n  // DEV version of invokeGuardedCallback\n  if (\n    typeof window !== \"undefined\" &&\n    typeof window.dispatchEvent === \"function\" &&\n    typeof document !== \"undefined\" &&\n    typeof document.createEvent === \"function\"\n  ) {\n    var fakeNode = document.createElement(\"react\");\n\n    invokeGuardedCallbackImpl = function invokeGuardedCallbackDev(\n      name,\n      func,\n      context,\n      a,\n      b,\n      c,\n      d,\n      e,\n      f\n    ) {\n      // If document doesn't exist we know for sure we will crash in this method\n      // when we call document.createEvent(). However this can cause confusing\n      // errors: https://github.com/facebook/create-react-app/issues/3482\n      // So we preemptively throw with a better message instead.\n      if (typeof document === \"undefined\" || document === null) {\n        throw new Error(\n          \"The `document` global was defined when React was initialized, but is not \" +\n            \"defined anymore. This can happen in a test environment if a component \" +\n            \"schedules an update from an asynchronous callback, but the test has already \" +\n            \"finished running. To solve this, you can either unmount the component at \" +\n            \"the end of your test (and ensure that any asynchronous operations get \" +\n            \"canceled in `componentWillUnmount`), or you can change the test itself \" +\n            \"to be asynchronous.\"\n        );\n      }\n\n      var evt = document.createEvent(\"Event\");\n      var didCall = false; // Keeps track of whether the user-provided callback threw an error. We\n      // set this to true at the beginning, then set it to false right after\n      // calling the function. If the function errors, `didError` will never be\n      // set to false. This strategy works even if the browser is flaky and\n      // fails to call our global error handler, because it doesn't rely on\n      // the error event at all.\n\n      var didError = true; // Keeps track of the value of window.event so that we can reset it\n      // during the callback to let user code access window.event in the\n      // browsers that support it.\n\n      var windowEvent = window.event; // Keeps track of the descriptor of window.event to restore it after event\n      // dispatching: https://github.com/facebook/react/issues/13688\n\n      var windowEventDescriptor = Object.getOwnPropertyDescriptor(\n        window,\n        \"event\"\n      );\n\n      function restoreAfterDispatch() {\n        // We immediately remove the callback from event listeners so that\n        // nested `invokeGuardedCallback` calls do not clash. Otherwise, a\n        // nested call would trigger the fake event handlers of any call higher\n        // in the stack.\n        fakeNode.removeEventListener(evtType, callCallback, false); // We check for window.hasOwnProperty('event') to prevent the\n        // window.event assignment in both IE <= 10 as they throw an error\n        // \"Member not found\" in strict mode, and in Firefox which does not\n        // support window.event.\n\n        if (\n          typeof window.event !== \"undefined\" &&\n          window.hasOwnProperty(\"event\")\n        ) {\n          window.event = windowEvent;\n        }\n      } // Create an event handler for our fake event. We will synchronously\n      // dispatch our fake event using `dispatchEvent`. Inside the handler, we\n      // call the user-provided callback.\n\n      var funcArgs = Array.prototype.slice.call(arguments, 3);\n\n      function callCallback() {\n        didCall = true;\n        restoreAfterDispatch();\n        func.apply(context, funcArgs);\n        didError = false;\n      } // Create a global error event handler. We use this to capture the value\n      // that was thrown. It's possible that this error handler will fire more\n      // than once; for example, if non-React code also calls `dispatchEvent`\n      // and a handler for that event throws. We should be resilient to most of\n      // those cases. Even if our error event handler fires more than once, the\n      // last error event is always used. If the callback actually does error,\n      // we know that the last error event is the correct one, because it's not\n      // possible for anything else to have happened in between our callback\n      // erroring and the code that follows the `dispatchEvent` call below. If\n      // the callback doesn't error, but the error event was fired, we know to\n      // ignore it because `didError` will be false, as described above.\n\n      var error; // Use this to track whether the error event is ever called.\n\n      var didSetError = false;\n      var isCrossOriginError = false;\n\n      function handleWindowError(event) {\n        error = event.error;\n        didSetError = true;\n\n        if (error === null && event.colno === 0 && event.lineno === 0) {\n          isCrossOriginError = true;\n        }\n\n        if (event.defaultPrevented) {\n          // Some other error handler has prevented default.\n          // Browsers silence the error report if this happens.\n          // We'll remember this to later decide whether to log it or not.\n          if (error != null && typeof error === \"object\") {\n            try {\n              error._suppressLogging = true;\n            } catch (inner) {\n              // Ignore.\n            }\n          }\n        }\n      } // Create a fake event type.\n\n      var evtType = \"react-\" + (name ? name : \"invokeguardedcallback\"); // Attach our event handlers\n\n      window.addEventListener(\"error\", handleWindowError);\n      fakeNode.addEventListener(evtType, callCallback, false); // Synchronously dispatch our fake event. If the user-provided function\n      // errors, it will trigger our global error handler.\n\n      evt.initEvent(evtType, false, false);\n      fakeNode.dispatchEvent(evt);\n\n      if (windowEventDescriptor) {\n        Object.defineProperty(window, \"event\", windowEventDescriptor);\n      }\n\n      if (didCall && didError) {\n        if (!didSetError) {\n          // The callback errored, but the error event never fired.\n          // eslint-disable-next-line react-internal/prod-error-codes\n          error = new Error(\n            \"An error was thrown inside one of your components, but React \" +\n              \"doesn't know what it was. This is likely due to browser \" +\n              'flakiness. React does its best to preserve the \"Pause on ' +\n              'exceptions\" behavior of the DevTools, which requires some ' +\n              \"DEV-mode only tricks. It's possible that these don't work in \" +\n              \"your browser. Try triggering the error in production mode, \" +\n              \"or switching to a modern browser. If you suspect that this is \" +\n              \"actually an issue with React, please file an issue.\"\n          );\n        } else if (isCrossOriginError) {\n          // eslint-disable-next-line react-internal/prod-error-codes\n          error = new Error(\n            \"A cross-origin error was thrown. React doesn't have access to \" +\n              \"the actual error object in development. \" +\n              \"See https://reactjs.org/link/crossorigin-error for more information.\"\n          );\n        }\n\n        this.onError(error);\n      } // Remove our event listeners\n\n      window.removeEventListener(\"error\", handleWindowError);\n\n      if (!didCall) {\n        // Something went really wrong, and our event was not dispatched.\n        // https://github.com/facebook/react/issues/16734\n        // https://github.com/facebook/react/issues/16585\n        // Fall back to the production implementation.\n        restoreAfterDispatch();\n        return invokeGuardedCallbackProd.apply(this, arguments);\n      }\n    };\n  }\n}\n\nvar invokeGuardedCallbackImpl$1 = invokeGuardedCallbackImpl;\n\nvar hasError = false;\nvar caughtError = null; // Used by event system to capture/rethrow the first error.\n\nvar hasRethrowError = false;\nvar rethrowError = null;\nvar reporter = {\n  onError: function(error) {\n    hasError = true;\n    caughtError = error;\n  }\n};\n/**\n * Call a function while guarding against errors that happens within it.\n * Returns an error if it throws, otherwise null.\n *\n * In production, this is implemented using a try-catch. The reason we don't\n * use a try-catch directly is so that we can swap out a different\n * implementation in DEV mode.\n *\n * @param {String} name of the guard to use for logging or debugging\n * @param {Function} func The function to invoke\n * @param {*} context The context to use when calling the function\n * @param {...*} args Arguments for function\n */\n\nfunction invokeGuardedCallback(name, func, context, a, b, c, d, e, f) {\n  hasError = false;\n  caughtError = null;\n  invokeGuardedCallbackImpl$1.apply(reporter, arguments);\n}\n/**\n * Same as invokeGuardedCallback, but instead of returning an error, it stores\n * it in a global so it can be rethrown by `rethrowCaughtError` later.\n * TODO: See if caughtError and rethrowError can be unified.\n *\n * @param {String} name of the guard to use for logging or debugging\n * @param {Function} func The function to invoke\n * @param {*} context The context to use when calling the function\n * @param {...*} args Arguments for function\n */\n\nfunction invokeGuardedCallbackAndCatchFirstError(\n  name,\n  func,\n  context,\n  a,\n  b,\n  c,\n  d,\n  e,\n  f\n) {\n  invokeGuardedCallback.apply(this, arguments);\n\n  if (hasError) {\n    var error = clearCaughtError();\n\n    if (!hasRethrowError) {\n      hasRethrowError = true;\n      rethrowError = error;\n    }\n  }\n}\n/**\n * During execution of guarded functions we will capture the first error which\n * we will rethrow to be handled by the top level error handler.\n */\n\nfunction rethrowCaughtError() {\n  if (hasRethrowError) {\n    var error = rethrowError;\n    hasRethrowError = false;\n    rethrowError = null;\n    throw error;\n  }\n}\nfunction hasCaughtError() {\n  return hasError;\n}\nfunction clearCaughtError() {\n  if (hasError) {\n    var error = caughtError;\n    hasError = false;\n    caughtError = null;\n    return error;\n  } else {\n    throw new Error(\n      \"clearCaughtError was called but no error was captured. This error \" +\n        \"is likely caused by a bug in React. Please file an issue.\"\n    );\n  }\n}\n\nvar isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare\n\nfunction isArray(a) {\n  return isArrayImpl(a);\n}\n\nvar getFiberCurrentPropsFromNode = null;\nvar getInstanceFromNode = null;\nvar getNodeFromInstance = null;\nfunction setComponentTree(\n  getFiberCurrentPropsFromNodeImpl,\n  getInstanceFromNodeImpl,\n  getNodeFromInstanceImpl\n) {\n  getFiberCurrentPropsFromNode = getFiberCurrentPropsFromNodeImpl;\n  getInstanceFromNode = getInstanceFromNodeImpl;\n  getNodeFromInstance = getNodeFromInstanceImpl;\n\n  {\n    if (!getNodeFromInstance || !getInstanceFromNode) {\n      error(\n        \"EventPluginUtils.setComponentTree(...): Injected \" +\n          \"module is missing getNodeFromInstance or getInstanceFromNode.\"\n      );\n    }\n  }\n}\nvar validateEventDispatches;\n\n{\n  validateEventDispatches = function(event) {\n    var dispatchListeners = event._dispatchListeners;\n    var dispatchInstances = event._dispatchInstances;\n    var listenersIsArr = isArray(dispatchListeners);\n    var listenersLen = listenersIsArr\n      ? dispatchListeners.length\n      : dispatchListeners\n      ? 1\n      : 0;\n    var instancesIsArr = isArray(dispatchInstances);\n    var instancesLen = instancesIsArr\n      ? dispatchInstances.length\n      : dispatchInstances\n      ? 1\n      : 0;\n\n    if (instancesIsArr !== listenersIsArr || instancesLen !== listenersLen) {\n      error(\"EventPluginUtils: Invalid `event`.\");\n    }\n  };\n}\n/**\n * Dispatch the event to the listener.\n * @param {SyntheticEvent} event SyntheticEvent to handle\n * @param {function} listener Application-level callback\n * @param {*} inst Internal component instance\n */\n\nfunction executeDispatch(event, listener, inst) {\n  var type = event.type || \"unknown-event\";\n  event.currentTarget = getNodeFromInstance(inst);\n  invokeGuardedCallbackAndCatchFirstError(type, listener, undefined, event);\n  event.currentTarget = null;\n}\n/**\n * Standard/simple iteration through an event's collected dispatches.\n */\n\nfunction executeDispatchesInOrder(event) {\n  var dispatchListeners = event._dispatchListeners;\n  var dispatchInstances = event._dispatchInstances;\n\n  {\n    validateEventDispatches(event);\n  }\n\n  if (isArray(dispatchListeners)) {\n    for (var i = 0; i < dispatchListeners.length; i++) {\n      if (event.isPropagationStopped()) {\n        break;\n      } // Listeners and Instances are two parallel arrays that are always in sync.\n\n      executeDispatch(event, dispatchListeners[i], dispatchInstances[i]);\n    }\n  } else if (dispatchListeners) {\n    executeDispatch(event, dispatchListeners, dispatchInstances);\n  }\n\n  event._dispatchListeners = null;\n  event._dispatchInstances = null;\n}\n/**\n * Standard/simple iteration through an event's collected dispatches, but stops\n * at the first dispatch execution returning true, and returns that id.\n *\n * @return {?string} id of the first dispatch execution who's listener returns\n * true, or null if no listener returned true.\n */\n\nfunction executeDispatchesInOrderStopAtTrueImpl(event) {\n  var dispatchListeners = event._dispatchListeners;\n  var dispatchInstances = event._dispatchInstances;\n\n  {\n    validateEventDispatches(event);\n  }\n\n  if (isArray(dispatchListeners)) {\n    for (var i = 0; i < dispatchListeners.length; i++) {\n      if (event.isPropagationStopped()) {\n        break;\n      } // Listeners and Instances are two parallel arrays that are always in sync.\n\n      if (dispatchListeners[i](event, dispatchInstances[i])) {\n        return dispatchInstances[i];\n      }\n    }\n  } else if (dispatchListeners) {\n    if (dispatchListeners(event, dispatchInstances)) {\n      return dispatchInstances;\n    }\n  }\n\n  return null;\n}\n/**\n * @see executeDispatchesInOrderStopAtTrueImpl\n */\n\nfunction executeDispatchesInOrderStopAtTrue(event) {\n  var ret = executeDispatchesInOrderStopAtTrueImpl(event);\n  event._dispatchInstances = null;\n  event._dispatchListeners = null;\n  return ret;\n}\n/**\n * Execution of a \"direct\" dispatch - there must be at most one dispatch\n * accumulated on the event or it is considered an error. It doesn't really make\n * sense for an event with multiple dispatches (bubbled) to keep track of the\n * return values at each dispatch execution, but it does tend to make sense when\n * dealing with \"direct\" dispatches.\n *\n * @return {*} The return value of executing the single dispatch.\n */\n\nfunction executeDirectDispatch(event) {\n  {\n    validateEventDispatches(event);\n  }\n\n  var dispatchListener = event._dispatchListeners;\n  var dispatchInstance = event._dispatchInstances;\n\n  if (isArray(dispatchListener)) {\n    throw new Error(\"executeDirectDispatch(...): Invalid `event`.\");\n  }\n\n  event.currentTarget = dispatchListener\n    ? getNodeFromInstance(dispatchInstance)\n    : null;\n  var res = dispatchListener ? dispatchListener(event) : null;\n  event.currentTarget = null;\n  event._dispatchListeners = null;\n  event._dispatchInstances = null;\n  return res;\n}\n/**\n * @param {SyntheticEvent} event\n * @return {boolean} True iff number of dispatches accumulated is greater than 0.\n */\n\nfunction hasDispatches(event) {\n  return !!event._dispatchListeners;\n}\n\nvar assign = Object.assign;\n\nvar EVENT_POOL_SIZE = 10;\n/**\n * @interface Event\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\n\nvar EventInterface = {\n  type: null,\n  target: null,\n  // currentTarget is set when dispatching; no use in copying it here\n  currentTarget: function() {\n    return null;\n  },\n  eventPhase: null,\n  bubbles: null,\n  cancelable: null,\n  timeStamp: function(event) {\n    return event.timeStamp || Date.now();\n  },\n  defaultPrevented: null,\n  isTrusted: null\n};\n\nfunction functionThatReturnsTrue() {\n  return true;\n}\n\nfunction functionThatReturnsFalse() {\n  return false;\n}\n/**\n * Synthetic events are dispatched by event plugins, typically in response to a\n * top-level event delegation handler.\n *\n * These systems should generally use pooling to reduce the frequency of garbage\n * collection. The system should check `isPersistent` to determine whether the\n * event should be released into the pool after being dispatched. Users that\n * need a persisted event should invoke `persist`.\n *\n * Synthetic events (and subclasses) implement the DOM Level 3 Events API by\n * normalizing browser quirks. Subclasses do not necessarily have to implement a\n * DOM interface; custom application-specific events can also subclass this.\n *\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {*} targetInst Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @param {DOMEventTarget} nativeEventTarget Target node.\n */\n\nfunction SyntheticEvent(\n  dispatchConfig,\n  targetInst,\n  nativeEvent,\n  nativeEventTarget\n) {\n  {\n    // these have a getter/setter for warnings\n    delete this.nativeEvent;\n    delete this.preventDefault;\n    delete this.stopPropagation;\n    delete this.isDefaultPrevented;\n    delete this.isPropagationStopped;\n  }\n\n  this.dispatchConfig = dispatchConfig;\n  this._targetInst = targetInst;\n  this.nativeEvent = nativeEvent;\n  this._dispatchListeners = null;\n  this._dispatchInstances = null;\n  var Interface = this.constructor.Interface;\n\n  for (var propName in Interface) {\n    if (!Interface.hasOwnProperty(propName)) {\n      continue;\n    }\n\n    {\n      delete this[propName]; // this has a getter/setter for warnings\n    }\n\n    var normalize = Interface[propName];\n\n    if (normalize) {\n      this[propName] = normalize(nativeEvent);\n    } else {\n      if (propName === \"target\") {\n        this.target = nativeEventTarget;\n      } else {\n        this[propName] = nativeEvent[propName];\n      }\n    }\n  }\n\n  var defaultPrevented =\n    nativeEvent.defaultPrevented != null\n      ? nativeEvent.defaultPrevented\n      : nativeEvent.returnValue === false;\n\n  if (defaultPrevented) {\n    this.isDefaultPrevented = functionThatReturnsTrue;\n  } else {\n    this.isDefaultPrevented = functionThatReturnsFalse;\n  }\n\n  this.isPropagationStopped = functionThatReturnsFalse;\n  return this;\n}\n\nassign(SyntheticEvent.prototype, {\n  preventDefault: function() {\n    this.defaultPrevented = true;\n    var event = this.nativeEvent;\n\n    if (!event) {\n      return;\n    }\n\n    if (event.preventDefault) {\n      event.preventDefault();\n    } else if (typeof event.returnValue !== \"unknown\") {\n      event.returnValue = false;\n    }\n\n    this.isDefaultPrevented = functionThatReturnsTrue;\n  },\n  stopPropagation: function() {\n    var event = this.nativeEvent;\n\n    if (!event) {\n      return;\n    }\n\n    if (event.stopPropagation) {\n      event.stopPropagation();\n    } else if (typeof event.cancelBubble !== \"unknown\") {\n      // The ChangeEventPlugin registers a \"propertychange\" event for\n      // IE. This event does not support bubbling or cancelling, and\n      // any references to cancelBubble throw \"Member not found\".  A\n      // typeof check of \"unknown\" circumvents this issue (and is also\n      // IE specific).\n      event.cancelBubble = true;\n    }\n\n    this.isPropagationStopped = functionThatReturnsTrue;\n  },\n\n  /**\n   * We release all dispatched `SyntheticEvent`s after each event loop, adding\n   * them back into the pool. This allows a way to hold onto a reference that\n   * won't be added back into the pool.\n   */\n  persist: function() {\n    this.isPersistent = functionThatReturnsTrue;\n  },\n\n  /**\n   * Checks if this event should be released back into the pool.\n   *\n   * @return {boolean} True if this should not be released, false otherwise.\n   */\n  isPersistent: functionThatReturnsFalse,\n\n  /**\n   * `PooledClass` looks for `destructor` on each instance it releases.\n   */\n  destructor: function() {\n    var Interface = this.constructor.Interface;\n\n    for (var propName in Interface) {\n      {\n        Object.defineProperty(\n          this,\n          propName,\n          getPooledWarningPropertyDefinition(propName, Interface[propName])\n        );\n      }\n    }\n\n    this.dispatchConfig = null;\n    this._targetInst = null;\n    this.nativeEvent = null;\n    this.isDefaultPrevented = functionThatReturnsFalse;\n    this.isPropagationStopped = functionThatReturnsFalse;\n    this._dispatchListeners = null;\n    this._dispatchInstances = null;\n\n    {\n      Object.defineProperty(\n        this,\n        \"nativeEvent\",\n        getPooledWarningPropertyDefinition(\"nativeEvent\", null)\n      );\n      Object.defineProperty(\n        this,\n        \"isDefaultPrevented\",\n        getPooledWarningPropertyDefinition(\n          \"isDefaultPrevented\",\n          functionThatReturnsFalse\n        )\n      );\n      Object.defineProperty(\n        this,\n        \"isPropagationStopped\",\n        getPooledWarningPropertyDefinition(\n          \"isPropagationStopped\",\n          functionThatReturnsFalse\n        )\n      );\n      Object.defineProperty(\n        this,\n        \"preventDefault\",\n        getPooledWarningPropertyDefinition(\"preventDefault\", function() {})\n      );\n      Object.defineProperty(\n        this,\n        \"stopPropagation\",\n        getPooledWarningPropertyDefinition(\"stopPropagation\", function() {})\n      );\n    }\n  }\n});\nSyntheticEvent.Interface = EventInterface;\n/**\n * Helper to reduce boilerplate when creating subclasses.\n */\n\nSyntheticEvent.extend = function(Interface) {\n  var Super = this;\n\n  var E = function() {};\n\n  E.prototype = Super.prototype;\n  var prototype = new E();\n\n  function Class() {\n    return Super.apply(this, arguments);\n  }\n\n  assign(prototype, Class.prototype);\n  Class.prototype = prototype;\n  Class.prototype.constructor = Class;\n  Class.Interface = assign({}, Super.Interface, Interface);\n  Class.extend = Super.extend;\n  addEventPoolingTo(Class);\n  return Class;\n};\n\naddEventPoolingTo(SyntheticEvent);\n/**\n * Helper to nullify syntheticEvent instance properties when destructing\n *\n * @param {String} propName\n * @param {?object} getVal\n * @return {object} defineProperty object\n */\n\nfunction getPooledWarningPropertyDefinition(propName, getVal) {\n  function set(val) {\n    var action = isFunction ? \"setting the method\" : \"setting the property\";\n    warn(action, \"This is effectively a no-op\");\n    return val;\n  }\n\n  function get() {\n    var action = isFunction ? \"accessing the method\" : \"accessing the property\";\n    var result = isFunction\n      ? \"This is a no-op function\"\n      : \"This is set to null\";\n    warn(action, result);\n    return getVal;\n  }\n\n  function warn(action, result) {\n    {\n      error(\n        \"This synthetic event is reused for performance reasons. If you're seeing this, \" +\n          \"you're %s `%s` on a released/nullified synthetic event. %s. \" +\n          \"If you must keep the original synthetic event around, use event.persist(). \" +\n          \"See https://reactjs.org/link/event-pooling for more information.\",\n        action,\n        propName,\n        result\n      );\n    }\n  }\n\n  var isFunction = typeof getVal === \"function\";\n  return {\n    configurable: true,\n    set: set,\n    get: get\n  };\n}\n\nfunction createOrGetPooledEvent(\n  dispatchConfig,\n  targetInst,\n  nativeEvent,\n  nativeInst\n) {\n  var EventConstructor = this;\n\n  if (EventConstructor.eventPool.length) {\n    var instance = EventConstructor.eventPool.pop();\n    EventConstructor.call(\n      instance,\n      dispatchConfig,\n      targetInst,\n      nativeEvent,\n      nativeInst\n    );\n    return instance;\n  }\n\n  return new EventConstructor(\n    dispatchConfig,\n    targetInst,\n    nativeEvent,\n    nativeInst\n  );\n}\n\nfunction releasePooledEvent(event) {\n  var EventConstructor = this;\n\n  if (!(event instanceof EventConstructor)) {\n    throw new Error(\n      \"Trying to release an event instance into a pool of a different type.\"\n    );\n  }\n\n  event.destructor();\n\n  if (EventConstructor.eventPool.length < EVENT_POOL_SIZE) {\n    EventConstructor.eventPool.push(event);\n  }\n}\n\nfunction addEventPoolingTo(EventConstructor) {\n  EventConstructor.getPooled = createOrGetPooledEvent;\n  EventConstructor.eventPool = [];\n  EventConstructor.release = releasePooledEvent;\n}\n\n/**\n * `touchHistory` isn't actually on the native event, but putting it in the\n * interface will ensure that it is cleaned up when pooled/destroyed. The\n * `ResponderEventPlugin` will populate it appropriately.\n */\n\nvar ResponderSyntheticEvent = SyntheticEvent.extend({\n  touchHistory: function(nativeEvent) {\n    return null; // Actually doesn't even look at the native event.\n  }\n});\n\nvar TOP_TOUCH_START = \"topTouchStart\";\nvar TOP_TOUCH_MOVE = \"topTouchMove\";\nvar TOP_TOUCH_END = \"topTouchEnd\";\nvar TOP_TOUCH_CANCEL = \"topTouchCancel\";\nvar TOP_SCROLL = \"topScroll\";\nvar TOP_SELECTION_CHANGE = \"topSelectionChange\";\nfunction isStartish(topLevelType) {\n  return topLevelType === TOP_TOUCH_START;\n}\nfunction isMoveish(topLevelType) {\n  return topLevelType === TOP_TOUCH_MOVE;\n}\nfunction isEndish(topLevelType) {\n  return topLevelType === TOP_TOUCH_END || topLevelType === TOP_TOUCH_CANCEL;\n}\nvar startDependencies = [TOP_TOUCH_START];\nvar moveDependencies = [TOP_TOUCH_MOVE];\nvar endDependencies = [TOP_TOUCH_CANCEL, TOP_TOUCH_END];\n\n/**\n * Tracks the position and time of each active touch by `touch.identifier`. We\n * should typically only see IDs in the range of 1-20 because IDs get recycled\n * when touches end and start again.\n */\n\nvar MAX_TOUCH_BANK = 20;\nvar touchBank = [];\nvar touchHistory = {\n  touchBank: touchBank,\n  numberActiveTouches: 0,\n  // If there is only one active touch, we remember its location. This prevents\n  // us having to loop through all of the touches all the time in the most\n  // common case.\n  indexOfSingleActiveTouch: -1,\n  mostRecentTimeStamp: 0\n};\n\nfunction timestampForTouch(touch) {\n  // The legacy internal implementation provides \"timeStamp\", which has been\n  // renamed to \"timestamp\". Let both work for now while we iron it out\n  // TODO (evv): rename timeStamp to timestamp in internal code\n  return touch.timeStamp || touch.timestamp;\n}\n/**\n * TODO: Instead of making gestures recompute filtered velocity, we could\n * include a built in velocity computation that can be reused globally.\n */\n\nfunction createTouchRecord(touch) {\n  return {\n    touchActive: true,\n    startPageX: touch.pageX,\n    startPageY: touch.pageY,\n    startTimeStamp: timestampForTouch(touch),\n    currentPageX: touch.pageX,\n    currentPageY: touch.pageY,\n    currentTimeStamp: timestampForTouch(touch),\n    previousPageX: touch.pageX,\n    previousPageY: touch.pageY,\n    previousTimeStamp: timestampForTouch(touch)\n  };\n}\n\nfunction resetTouchRecord(touchRecord, touch) {\n  touchRecord.touchActive = true;\n  touchRecord.startPageX = touch.pageX;\n  touchRecord.startPageY = touch.pageY;\n  touchRecord.startTimeStamp = timestampForTouch(touch);\n  touchRecord.currentPageX = touch.pageX;\n  touchRecord.currentPageY = touch.pageY;\n  touchRecord.currentTimeStamp = timestampForTouch(touch);\n  touchRecord.previousPageX = touch.pageX;\n  touchRecord.previousPageY = touch.pageY;\n  touchRecord.previousTimeStamp = timestampForTouch(touch);\n}\n\nfunction getTouchIdentifier(_ref) {\n  var identifier = _ref.identifier;\n\n  if (identifier == null) {\n    throw new Error(\"Touch object is missing identifier.\");\n  }\n\n  {\n    if (identifier > MAX_TOUCH_BANK) {\n      error(\n        \"Touch identifier %s is greater than maximum supported %s which causes \" +\n          \"performance issues backfilling array locations for all of the indices.\",\n        identifier,\n        MAX_TOUCH_BANK\n      );\n    }\n  }\n\n  return identifier;\n}\n\nfunction recordTouchStart(touch) {\n  var identifier = getTouchIdentifier(touch);\n  var touchRecord = touchBank[identifier];\n\n  if (touchRecord) {\n    resetTouchRecord(touchRecord, touch);\n  } else {\n    touchBank[identifier] = createTouchRecord(touch);\n  }\n\n  touchHistory.mostRecentTimeStamp = timestampForTouch(touch);\n}\n\nfunction recordTouchMove(touch) {\n  var touchRecord = touchBank[getTouchIdentifier(touch)];\n\n  if (touchRecord) {\n    touchRecord.touchActive = true;\n    touchRecord.previousPageX = touchRecord.currentPageX;\n    touchRecord.previousPageY = touchRecord.currentPageY;\n    touchRecord.previousTimeStamp = touchRecord.currentTimeStamp;\n    touchRecord.currentPageX = touch.pageX;\n    touchRecord.currentPageY = touch.pageY;\n    touchRecord.currentTimeStamp = timestampForTouch(touch);\n    touchHistory.mostRecentTimeStamp = timestampForTouch(touch);\n  } else {\n    {\n      warn(\n        \"Cannot record touch move without a touch start.\\n\" +\n          \"Touch Move: %s\\n\" +\n          \"Touch Bank: %s\",\n        printTouch(touch),\n        printTouchBank()\n      );\n    }\n  }\n}\n\nfunction recordTouchEnd(touch) {\n  var touchRecord = touchBank[getTouchIdentifier(touch)];\n\n  if (touchRecord) {\n    touchRecord.touchActive = false;\n    touchRecord.previousPageX = touchRecord.currentPageX;\n    touchRecord.previousPageY = touchRecord.currentPageY;\n    touchRecord.previousTimeStamp = touchRecord.currentTimeStamp;\n    touchRecord.currentPageX = touch.pageX;\n    touchRecord.currentPageY = touch.pageY;\n    touchRecord.currentTimeStamp = timestampForTouch(touch);\n    touchHistory.mostRecentTimeStamp = timestampForTouch(touch);\n  } else {\n    {\n      warn(\n        \"Cannot record touch end without a touch start.\\n\" +\n          \"Touch End: %s\\n\" +\n          \"Touch Bank: %s\",\n        printTouch(touch),\n        printTouchBank()\n      );\n    }\n  }\n}\n\nfunction printTouch(touch) {\n  return JSON.stringify({\n    identifier: touch.identifier,\n    pageX: touch.pageX,\n    pageY: touch.pageY,\n    timestamp: timestampForTouch(touch)\n  });\n}\n\nfunction printTouchBank() {\n  var printed = JSON.stringify(touchBank.slice(0, MAX_TOUCH_BANK));\n\n  if (touchBank.length > MAX_TOUCH_BANK) {\n    printed += \" (original size: \" + touchBank.length + \")\";\n  }\n\n  return printed;\n}\n\nvar instrumentationCallback;\nvar ResponderTouchHistoryStore = {\n  /**\n   * Registers a listener which can be used to instrument every touch event.\n   */\n  instrument: function(callback) {\n    instrumentationCallback = callback;\n  },\n  recordTouchTrack: function(topLevelType, nativeEvent) {\n    if (instrumentationCallback != null) {\n      instrumentationCallback(topLevelType, nativeEvent);\n    }\n\n    if (isMoveish(topLevelType)) {\n      nativeEvent.changedTouches.forEach(recordTouchMove);\n    } else if (isStartish(topLevelType)) {\n      nativeEvent.changedTouches.forEach(recordTouchStart);\n      touchHistory.numberActiveTouches = nativeEvent.touches.length;\n\n      if (touchHistory.numberActiveTouches === 1) {\n        touchHistory.indexOfSingleActiveTouch =\n          nativeEvent.touches[0].identifier;\n      }\n    } else if (isEndish(topLevelType)) {\n      nativeEvent.changedTouches.forEach(recordTouchEnd);\n      touchHistory.numberActiveTouches = nativeEvent.touches.length;\n\n      if (touchHistory.numberActiveTouches === 1) {\n        for (var i = 0; i < touchBank.length; i++) {\n          var touchTrackToCheck = touchBank[i];\n\n          if (touchTrackToCheck != null && touchTrackToCheck.touchActive) {\n            touchHistory.indexOfSingleActiveTouch = i;\n            break;\n          }\n        }\n\n        {\n          var activeRecord = touchBank[touchHistory.indexOfSingleActiveTouch];\n\n          if (activeRecord == null || !activeRecord.touchActive) {\n            error(\"Cannot find single active touch.\");\n          }\n        }\n      }\n    }\n  },\n  touchHistory: touchHistory\n};\n\n/**\n * Accumulates items that must not be null or undefined.\n *\n * This is used to conserve memory by avoiding array allocations.\n *\n * @return {*|array<*>} An accumulation of items.\n */\n\nfunction accumulate(current, next) {\n  if (next == null) {\n    throw new Error(\n      \"accumulate(...): Accumulated items must not be null or undefined.\"\n    );\n  }\n\n  if (current == null) {\n    return next;\n  } // Both are not empty. Warning: Never call x.concat(y) when you are not\n  // certain that x is an Array (x could be a string with concat method).\n\n  if (isArray(current)) {\n    return current.concat(next);\n  }\n\n  if (isArray(next)) {\n    return [current].concat(next);\n  }\n\n  return [current, next];\n}\n\n/**\n * Accumulates items that must not be null or undefined into the first one. This\n * is used to conserve memory by avoiding array allocations, and thus sacrifices\n * API cleanness. Since `current` can be null before being passed in and not\n * null after this function, make sure to assign it back to `current`:\n *\n * `a = accumulateInto(a, b);`\n *\n * This API should be sparingly used. Try `accumulate` for something cleaner.\n *\n * @return {*|array<*>} An accumulation of items.\n */\n\nfunction accumulateInto(current, next) {\n  if (next == null) {\n    throw new Error(\n      \"accumulateInto(...): Accumulated items must not be null or undefined.\"\n    );\n  }\n\n  if (current == null) {\n    return next;\n  } // Both are not empty. Warning: Never call x.concat(y) when you are not\n  // certain that x is an Array (x could be a string with concat method).\n\n  if (isArray(current)) {\n    if (isArray(next)) {\n      current.push.apply(current, next);\n      return current;\n    }\n\n    current.push(next);\n    return current;\n  }\n\n  if (isArray(next)) {\n    // A bit too dangerous to mutate `next`.\n    return [current].concat(next);\n  }\n\n  return [current, next];\n}\n\n/**\n * @param {array} arr an \"accumulation\" of items which is either an Array or\n * a single item. Useful when paired with the `accumulate` module. This is a\n * simple utility that allows us to reason about a collection of items, but\n * handling the case when there is exactly one item (and we do not need to\n * allocate an array).\n * @param {function} cb Callback invoked with each element or a collection.\n * @param {?} [scope] Scope used as `this` in a callback.\n */\nfunction forEachAccumulated(arr, cb, scope) {\n  if (Array.isArray(arr)) {\n    arr.forEach(cb, scope);\n  } else if (arr) {\n    cb.call(scope, arr);\n  }\n}\n\nvar FunctionComponent = 0;\nvar ClassComponent = 1;\nvar IndeterminateComponent = 2; // Before we know whether it is function or class\n\nvar HostRoot = 3; // Root of a host tree. Could be nested inside another node.\n\nvar HostPortal = 4; // A subtree. Could be an entry point to a different renderer.\n\nvar HostComponent = 5;\nvar HostText = 6;\nvar Fragment = 7;\nvar Mode = 8;\nvar ContextConsumer = 9;\nvar ContextProvider = 10;\nvar ForwardRef = 11;\nvar Profiler = 12;\nvar SuspenseComponent = 13;\nvar MemoComponent = 14;\nvar SimpleMemoComponent = 15;\nvar LazyComponent = 16;\nvar IncompleteClassComponent = 17;\nvar DehydratedFragment = 18;\nvar SuspenseListComponent = 19;\nvar ScopeComponent = 21;\nvar OffscreenComponent = 22;\nvar LegacyHiddenComponent = 23;\nvar CacheComponent = 24;\nvar TracingMarkerComponent = 25;\n\n/**\n * Instance of element that should respond to touch/move types of interactions,\n * as indicated explicitly by relevant callbacks.\n */\n\nvar responderInst = null;\n/**\n * Count of current touches. A textInput should become responder iff the\n * selection changes while there is a touch on the screen.\n */\n\nvar trackedTouchCount = 0;\n\nvar changeResponder = function(nextResponderInst, blockHostResponder) {\n  var oldResponderInst = responderInst;\n  responderInst = nextResponderInst;\n\n  if (ResponderEventPlugin.GlobalResponderHandler !== null) {\n    ResponderEventPlugin.GlobalResponderHandler.onChange(\n      oldResponderInst,\n      nextResponderInst,\n      blockHostResponder\n    );\n  }\n};\n\nvar eventTypes = {\n  /**\n   * On a `touchStart`/`mouseDown`, is it desired that this element become the\n   * responder?\n   */\n  startShouldSetResponder: {\n    phasedRegistrationNames: {\n      bubbled: \"onStartShouldSetResponder\",\n      captured: \"onStartShouldSetResponderCapture\"\n    },\n    dependencies: startDependencies\n  },\n\n  /**\n   * On a `scroll`, is it desired that this element become the responder? This\n   * is usually not needed, but should be used to retroactively infer that a\n   * `touchStart` had occurred during momentum scroll. During a momentum scroll,\n   * a touch start will be immediately followed by a scroll event if the view is\n   * currently scrolling.\n   *\n   * TODO: This shouldn't bubble.\n   */\n  scrollShouldSetResponder: {\n    phasedRegistrationNames: {\n      bubbled: \"onScrollShouldSetResponder\",\n      captured: \"onScrollShouldSetResponderCapture\"\n    },\n    dependencies: [TOP_SCROLL]\n  },\n\n  /**\n   * On text selection change, should this element become the responder? This\n   * is needed for text inputs or other views with native selection, so the\n   * JS view can claim the responder.\n   *\n   * TODO: This shouldn't bubble.\n   */\n  selectionChangeShouldSetResponder: {\n    phasedRegistrationNames: {\n      bubbled: \"onSelectionChangeShouldSetResponder\",\n      captured: \"onSelectionChangeShouldSetResponderCapture\"\n    },\n    dependencies: [TOP_SELECTION_CHANGE]\n  },\n\n  /**\n   * On a `touchMove`/`mouseMove`, is it desired that this element become the\n   * responder?\n   */\n  moveShouldSetResponder: {\n    phasedRegistrationNames: {\n      bubbled: \"onMoveShouldSetResponder\",\n      captured: \"onMoveShouldSetResponderCapture\"\n    },\n    dependencies: moveDependencies\n  },\n\n  /**\n   * Direct responder events dispatched directly to responder. Do not bubble.\n   */\n  responderStart: {\n    registrationName: \"onResponderStart\",\n    dependencies: startDependencies\n  },\n  responderMove: {\n    registrationName: \"onResponderMove\",\n    dependencies: moveDependencies\n  },\n  responderEnd: {\n    registrationName: \"onResponderEnd\",\n    dependencies: endDependencies\n  },\n  responderRelease: {\n    registrationName: \"onResponderRelease\",\n    dependencies: endDependencies\n  },\n  responderTerminationRequest: {\n    registrationName: \"onResponderTerminationRequest\",\n    dependencies: []\n  },\n  responderGrant: {\n    registrationName: \"onResponderGrant\",\n    dependencies: []\n  },\n  responderReject: {\n    registrationName: \"onResponderReject\",\n    dependencies: []\n  },\n  responderTerminate: {\n    registrationName: \"onResponderTerminate\",\n    dependencies: []\n  }\n}; // Start of inline: the below functions were inlined from\n// EventPropagator.js, as they deviated from ReactDOM's newer\n// implementations.\n\nfunction getParent(inst) {\n  do {\n    inst = inst.return; // TODO: If this is a HostRoot we might want to bail out.\n    // That is depending on if we want nested subtrees (layers) to bubble\n    // events to their parent. We could also go through parentNode on the\n    // host node but that wouldn't work for React Native and doesn't let us\n    // do the portal feature.\n  } while (inst && inst.tag !== HostComponent);\n\n  if (inst) {\n    return inst;\n  }\n\n  return null;\n}\n/**\n * Return the lowest common ancestor of A and B, or null if they are in\n * different trees.\n */\n\nfunction getLowestCommonAncestor(instA, instB) {\n  var depthA = 0;\n\n  for (var tempA = instA; tempA; tempA = getParent(tempA)) {\n    depthA++;\n  }\n\n  var depthB = 0;\n\n  for (var tempB = instB; tempB; tempB = getParent(tempB)) {\n    depthB++;\n  } // If A is deeper, crawl up.\n\n  while (depthA - depthB > 0) {\n    instA = getParent(instA);\n    depthA--;\n  } // If B is deeper, crawl up.\n\n  while (depthB - depthA > 0) {\n    instB = getParent(instB);\n    depthB--;\n  } // Walk in lockstep until we find a match.\n\n  var depth = depthA;\n\n  while (depth--) {\n    if (instA === instB || instA === instB.alternate) {\n      return instA;\n    }\n\n    instA = getParent(instA);\n    instB = getParent(instB);\n  }\n\n  return null;\n}\n/**\n * Return if A is an ancestor of B.\n */\n\nfunction isAncestor(instA, instB) {\n  while (instB) {\n    if (instA === instB || instA === instB.alternate) {\n      return true;\n    }\n\n    instB = getParent(instB);\n  }\n\n  return false;\n}\n/**\n * Simulates the traversal of a two-phase, capture/bubble event dispatch.\n */\n\nfunction traverseTwoPhase(inst, fn, arg) {\n  var path = [];\n\n  while (inst) {\n    path.push(inst);\n    inst = getParent(inst);\n  }\n\n  var i;\n\n  for (i = path.length; i-- > 0; ) {\n    fn(path[i], \"captured\", arg);\n  }\n\n  for (i = 0; i < path.length; i++) {\n    fn(path[i], \"bubbled\", arg);\n  }\n}\n\nfunction getListener(inst, registrationName) {\n  var stateNode = inst.stateNode;\n\n  if (stateNode === null) {\n    // Work in progress (ex: onload events in incremental mode).\n    return null;\n  }\n\n  var props = getFiberCurrentPropsFromNode(stateNode);\n\n  if (props === null) {\n    // Work in progress.\n    return null;\n  }\n\n  var listener = props[registrationName];\n\n  if (listener && typeof listener !== \"function\") {\n    throw new Error(\n      \"Expected `\" +\n        registrationName +\n        \"` listener to be a function, instead got a value of `\" +\n        typeof listener +\n        \"` type.\"\n    );\n  }\n\n  return listener;\n}\n\nfunction listenerAtPhase(inst, event, propagationPhase) {\n  var registrationName =\n    event.dispatchConfig.phasedRegistrationNames[propagationPhase];\n  return getListener(inst, registrationName);\n}\n\nfunction accumulateDirectionalDispatches(inst, phase, event) {\n  {\n    if (!inst) {\n      error(\"Dispatching inst must not be null\");\n    }\n  }\n\n  var listener = listenerAtPhase(inst, event, phase);\n\n  if (listener) {\n    event._dispatchListeners = accumulateInto(\n      event._dispatchListeners,\n      listener\n    );\n    event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);\n  }\n}\n/**\n * Accumulates without regard to direction, does not look for phased\n * registration names. Same as `accumulateDirectDispatchesSingle` but without\n * requiring that the `dispatchMarker` be the same as the dispatched ID.\n */\n\nfunction accumulateDispatches(inst, ignoredDirection, event) {\n  if (inst && event && event.dispatchConfig.registrationName) {\n    var registrationName = event.dispatchConfig.registrationName;\n    var listener = getListener(inst, registrationName);\n\n    if (listener) {\n      event._dispatchListeners = accumulateInto(\n        event._dispatchListeners,\n        listener\n      );\n      event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);\n    }\n  }\n}\n/**\n * Accumulates dispatches on an `SyntheticEvent`, but only for the\n * `dispatchMarker`.\n * @param {SyntheticEvent} event\n */\n\nfunction accumulateDirectDispatchesSingle(event) {\n  if (event && event.dispatchConfig.registrationName) {\n    accumulateDispatches(event._targetInst, null, event);\n  }\n}\n\nfunction accumulateDirectDispatches(events) {\n  forEachAccumulated(events, accumulateDirectDispatchesSingle);\n}\n\nfunction accumulateTwoPhaseDispatchesSingleSkipTarget(event) {\n  if (event && event.dispatchConfig.phasedRegistrationNames) {\n    var targetInst = event._targetInst;\n    var parentInst = targetInst ? getParent(targetInst) : null;\n    traverseTwoPhase(parentInst, accumulateDirectionalDispatches, event);\n  }\n}\n\nfunction accumulateTwoPhaseDispatchesSkipTarget(events) {\n  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingleSkipTarget);\n}\n\nfunction accumulateTwoPhaseDispatchesSingle(event) {\n  if (event && event.dispatchConfig.phasedRegistrationNames) {\n    traverseTwoPhase(event._targetInst, accumulateDirectionalDispatches, event);\n  }\n}\n\nfunction accumulateTwoPhaseDispatches(events) {\n  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle);\n} // End of inline\n\n/**\n *\n * Responder System:\n * ----------------\n *\n * - A global, solitary \"interaction lock\" on a view.\n * - If a node becomes the responder, it should convey visual feedback\n *   immediately to indicate so, either by highlighting or moving accordingly.\n * - To be the responder means, that touches are exclusively important to that\n *   responder view, and no other view.\n * - While touches are still occurring, the responder lock can be transferred to\n *   a new view, but only to increasingly \"higher\" views (meaning ancestors of\n *   the current responder).\n *\n * Responder being granted:\n * ------------------------\n *\n * - Touch starts, moves, and scrolls can cause an ID to become the responder.\n * - We capture/bubble `startShouldSetResponder`/`moveShouldSetResponder` to\n *   the \"appropriate place\".\n * - If nothing is currently the responder, the \"appropriate place\" is the\n *   initiating event's `targetID`.\n * - If something *is* already the responder, the \"appropriate place\" is the\n *   first common ancestor of the event target and the current `responderInst`.\n * - Some negotiation happens: See the timing diagram below.\n * - Scrolled views automatically become responder. The reasoning is that a\n *   platform scroll view that isn't built on top of the responder system has\n *   began scrolling, and the active responder must now be notified that the\n *   interaction is no longer locked to it - the system has taken over.\n *\n * - Responder being released:\n *   As soon as no more touches that *started* inside of descendants of the\n *   *current* responderInst, an `onResponderRelease` event is dispatched to the\n *   current responder, and the responder lock is released.\n *\n * TODO:\n * - on \"end\", a callback hook for `onResponderEndShouldRemainResponder` that\n *   determines if the responder lock should remain.\n * - If a view shouldn't \"remain\" the responder, any active touches should by\n *   default be considered \"dead\" and do not influence future negotiations or\n *   bubble paths. It should be as if those touches do not exist.\n * -- For multitouch: Usually a translate-z will choose to \"remain\" responder\n *  after one out of many touches ended. For translate-y, usually the view\n *  doesn't wish to \"remain\" responder after one of many touches end.\n * - Consider building this on top of a `stopPropagation` model similar to\n *   `W3C` events.\n * - Ensure that `onResponderTerminate` is called on touch cancels, whether or\n *   not `onResponderTerminationRequest` returns `true` or `false`.\n *\n */\n\n/*                                             Negotiation Performed\n                                             +-----------------------+\n                                            /                         \\\nProcess low level events to    +     Current Responder      +   wantsResponderID\ndetermine who to perform negot-|   (if any exists at all)   |\niation/transition              | Otherwise just pass through|\n-------------------------------+----------------------------+------------------+\nBubble to find first ID        |                            |\nto return true:wantsResponderID|                            |\n                               |                            |\n     +-------------+           |                            |\n     | onTouchStart|           |                            |\n     +------+------+     none  |                            |\n            |            return|                            |\n+-----------v-------------+true| +------------------------+ |\n|onStartShouldSetResponder|----->|onResponderStart (cur)  |<-----------+\n+-----------+-------------+    | +------------------------+ |          |\n            |                  |                            | +--------+-------+\n            | returned true for|       false:REJECT +-------->|onResponderReject\n            | wantsResponderID |                    |       | +----------------+\n            | (now attempt     | +------------------+-----+ |\n            |  handoff)        | |   onResponder          | |\n            +------------------->|      TerminationRequest| |\n                               | +------------------+-----+ |\n                               |                    |       | +----------------+\n                               |         true:GRANT +-------->|onResponderGrant|\n                               |                            | +--------+-------+\n                               | +------------------------+ |          |\n                               | |   onResponderTerminate |<-----------+\n                               | +------------------+-----+ |\n                               |                    |       | +----------------+\n                               |                    +-------->|onResponderStart|\n                               |                            | +----------------+\nBubble to find first ID        |                            |\nto return true:wantsResponderID|                            |\n                               |                            |\n     +-------------+           |                            |\n     | onTouchMove |           |                            |\n     +------+------+     none  |                            |\n            |            return|                            |\n+-----------v-------------+true| +------------------------+ |\n|onMoveShouldSetResponder |----->|onResponderMove (cur)   |<-----------+\n+-----------+-------------+    | +------------------------+ |          |\n            |                  |                            | +--------+-------+\n            | returned true for|       false:REJECT +-------->|onResponderRejec|\n            | wantsResponderID |                    |       | +----------------+\n            | (now attempt     | +------------------+-----+ |\n            |  handoff)        | |   onResponder          | |\n            +------------------->|      TerminationRequest| |\n                               | +------------------+-----+ |\n                               |                    |       | +----------------+\n                               |         true:GRANT +-------->|onResponderGrant|\n                               |                            | +--------+-------+\n                               | +------------------------+ |          |\n                               | |   onResponderTerminate |<-----------+\n                               | +------------------+-----+ |\n                               |                    |       | +----------------+\n                               |                    +-------->|onResponderMove |\n                               |                            | +----------------+\n                               |                            |\n                               |                            |\n      Some active touch started|                            |\n      inside current responder | +------------------------+ |\n      +------------------------->|      onResponderEnd    | |\n      |                        | +------------------------+ |\n  +---+---------+              |                            |\n  | onTouchEnd  |              |                            |\n  +---+---------+              |                            |\n      |                        | +------------------------+ |\n      +------------------------->|     onResponderEnd     | |\n      No active touches started| +-----------+------------+ |\n      inside current responder |             |              |\n                               |             v              |\n                               | +------------------------+ |\n                               | |    onResponderRelease  | |\n                               | +------------------------+ |\n                               |                            |\n                               +                            + */\n\n/**\n * A note about event ordering in the `EventPluginRegistry`.\n *\n * Suppose plugins are injected in the following order:\n *\n * `[R, S, C]`\n *\n * To help illustrate the example, assume `S` is `SimpleEventPlugin` (for\n * `onClick` etc) and `R` is `ResponderEventPlugin`.\n *\n * \"Deferred-Dispatched Events\":\n *\n * - The current event plugin system will traverse the list of injected plugins,\n *   in order, and extract events by collecting the plugin's return value of\n *   `extractEvents()`.\n * - These events that are returned from `extractEvents` are \"deferred\n *   dispatched events\".\n * - When returned from `extractEvents`, deferred-dispatched events contain an\n *   \"accumulation\" of deferred dispatches.\n * - These deferred dispatches are accumulated/collected before they are\n *   returned, but processed at a later time by the `EventPluginRegistry` (hence the\n *   name deferred).\n *\n * In the process of returning their deferred-dispatched events, event plugins\n * themselves can dispatch events on-demand without returning them from\n * `extractEvents`. Plugins might want to do this, so that they can use event\n * dispatching as a tool that helps them decide which events should be extracted\n * in the first place.\n *\n * \"On-Demand-Dispatched Events\":\n *\n * - On-demand-dispatched events are not returned from `extractEvents`.\n * - On-demand-dispatched events are dispatched during the process of returning\n *   the deferred-dispatched events.\n * - They should not have side effects.\n * - They should be avoided, and/or eventually be replaced with another\n *   abstraction that allows event plugins to perform multiple \"rounds\" of event\n *   extraction.\n *\n * Therefore, the sequence of event dispatches becomes:\n *\n * - `R`s on-demand events (if any)   (dispatched by `R` on-demand)\n * - `S`s on-demand events (if any)   (dispatched by `S` on-demand)\n * - `C`s on-demand events (if any)   (dispatched by `C` on-demand)\n * - `R`s extracted events (if any)   (dispatched by `EventPluginRegistry`)\n * - `S`s extracted events (if any)   (dispatched by `EventPluginRegistry`)\n * - `C`s extracted events (if any)   (dispatched by `EventPluginRegistry`)\n *\n * In the case of `ResponderEventPlugin`: If the `startShouldSetResponder`\n * on-demand dispatch returns `true` (and some other details are satisfied) the\n * `onResponderGrant` deferred dispatched event is returned from\n * `extractEvents`. The sequence of dispatch executions in this case\n * will appear as follows:\n *\n * - `startShouldSetResponder` (`ResponderEventPlugin` dispatches on-demand)\n * - `touchStartCapture`       (`EventPluginRegistry` dispatches as usual)\n * - `touchStart`              (`EventPluginRegistry` dispatches as usual)\n * - `responderGrant/Reject`   (`EventPluginRegistry` dispatches as usual)\n */\n\nfunction setResponderAndExtractTransfer(\n  topLevelType,\n  targetInst,\n  nativeEvent,\n  nativeEventTarget\n) {\n  var shouldSetEventType = isStartish(topLevelType)\n    ? eventTypes.startShouldSetResponder\n    : isMoveish(topLevelType)\n    ? eventTypes.moveShouldSetResponder\n    : topLevelType === TOP_SELECTION_CHANGE\n    ? eventTypes.selectionChangeShouldSetResponder\n    : eventTypes.scrollShouldSetResponder; // TODO: stop one short of the current responder.\n\n  var bubbleShouldSetFrom = !responderInst\n    ? targetInst\n    : getLowestCommonAncestor(responderInst, targetInst); // When capturing/bubbling the \"shouldSet\" event, we want to skip the target\n  // (deepest ID) if it happens to be the current responder. The reasoning:\n  // It's strange to get an `onMoveShouldSetResponder` when you're *already*\n  // the responder.\n\n  var skipOverBubbleShouldSetFrom = bubbleShouldSetFrom === responderInst;\n  var shouldSetEvent = ResponderSyntheticEvent.getPooled(\n    shouldSetEventType,\n    bubbleShouldSetFrom,\n    nativeEvent,\n    nativeEventTarget\n  );\n  shouldSetEvent.touchHistory = ResponderTouchHistoryStore.touchHistory;\n\n  if (skipOverBubbleShouldSetFrom) {\n    accumulateTwoPhaseDispatchesSkipTarget(shouldSetEvent);\n  } else {\n    accumulateTwoPhaseDispatches(shouldSetEvent);\n  }\n\n  var wantsResponderInst = executeDispatchesInOrderStopAtTrue(shouldSetEvent);\n\n  if (!shouldSetEvent.isPersistent()) {\n    shouldSetEvent.constructor.release(shouldSetEvent);\n  }\n\n  if (!wantsResponderInst || wantsResponderInst === responderInst) {\n    return null;\n  }\n\n  var extracted;\n  var grantEvent = ResponderSyntheticEvent.getPooled(\n    eventTypes.responderGrant,\n    wantsResponderInst,\n    nativeEvent,\n    nativeEventTarget\n  );\n  grantEvent.touchHistory = ResponderTouchHistoryStore.touchHistory;\n  accumulateDirectDispatches(grantEvent);\n  var blockHostResponder = executeDirectDispatch(grantEvent) === true;\n\n  if (responderInst) {\n    var terminationRequestEvent = ResponderSyntheticEvent.getPooled(\n      eventTypes.responderTerminationRequest,\n      responderInst,\n      nativeEvent,\n      nativeEventTarget\n    );\n    terminationRequestEvent.touchHistory =\n      ResponderTouchHistoryStore.touchHistory;\n    accumulateDirectDispatches(terminationRequestEvent);\n    var shouldSwitch =\n      !hasDispatches(terminationRequestEvent) ||\n      executeDirectDispatch(terminationRequestEvent);\n\n    if (!terminationRequestEvent.isPersistent()) {\n      terminationRequestEvent.constructor.release(terminationRequestEvent);\n    }\n\n    if (shouldSwitch) {\n      var terminateEvent = ResponderSyntheticEvent.getPooled(\n        eventTypes.responderTerminate,\n        responderInst,\n        nativeEvent,\n        nativeEventTarget\n      );\n      terminateEvent.touchHistory = ResponderTouchHistoryStore.touchHistory;\n      accumulateDirectDispatches(terminateEvent);\n      extracted = accumulate(extracted, [grantEvent, terminateEvent]);\n      changeResponder(wantsResponderInst, blockHostResponder);\n    } else {\n      var rejectEvent = ResponderSyntheticEvent.getPooled(\n        eventTypes.responderReject,\n        wantsResponderInst,\n        nativeEvent,\n        nativeEventTarget\n      );\n      rejectEvent.touchHistory = ResponderTouchHistoryStore.touchHistory;\n      accumulateDirectDispatches(rejectEvent);\n      extracted = accumulate(extracted, rejectEvent);\n    }\n  } else {\n    extracted = accumulate(extracted, grantEvent);\n    changeResponder(wantsResponderInst, blockHostResponder);\n  }\n\n  return extracted;\n}\n/**\n * A transfer is a negotiation between a currently set responder and the next\n * element to claim responder status. Any start event could trigger a transfer\n * of responderInst. Any move event could trigger a transfer.\n *\n * @param {string} topLevelType Record from `BrowserEventConstants`.\n * @return {boolean} True if a transfer of responder could possibly occur.\n */\n\nfunction canTriggerTransfer(topLevelType, topLevelInst, nativeEvent) {\n  return (\n    topLevelInst && // responderIgnoreScroll: We are trying to migrate away from specifically\n    // tracking native scroll events here and responderIgnoreScroll indicates we\n    // will send topTouchCancel to handle canceling touch events instead\n    ((topLevelType === TOP_SCROLL && !nativeEvent.responderIgnoreScroll) ||\n      (trackedTouchCount > 0 && topLevelType === TOP_SELECTION_CHANGE) ||\n      isStartish(topLevelType) ||\n      isMoveish(topLevelType))\n  );\n}\n/**\n * Returns whether or not this touch end event makes it such that there are no\n * longer any touches that started inside of the current `responderInst`.\n *\n * @param {NativeEvent} nativeEvent Native touch end event.\n * @return {boolean} Whether or not this touch end event ends the responder.\n */\n\nfunction noResponderTouches(nativeEvent) {\n  var touches = nativeEvent.touches;\n\n  if (!touches || touches.length === 0) {\n    return true;\n  }\n\n  for (var i = 0; i < touches.length; i++) {\n    var activeTouch = touches[i];\n    var target = activeTouch.target;\n\n    if (target !== null && target !== undefined && target !== 0) {\n      // Is the original touch location inside of the current responder?\n      var targetInst = getInstanceFromNode(target);\n\n      if (isAncestor(responderInst, targetInst)) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n\nvar ResponderEventPlugin = {\n  /* For unit testing only */\n  _getResponder: function() {\n    return responderInst;\n  },\n  eventTypes: eventTypes,\n\n  /**\n   * We must be resilient to `targetInst` being `null` on `touchMove` or\n   * `touchEnd`. On certain platforms, this means that a native scroll has\n   * assumed control and the original touch targets are destroyed.\n   */\n  extractEvents: function(\n    topLevelType,\n    targetInst,\n    nativeEvent,\n    nativeEventTarget,\n    eventSystemFlags\n  ) {\n    if (isStartish(topLevelType)) {\n      trackedTouchCount += 1;\n    } else if (isEndish(topLevelType)) {\n      if (trackedTouchCount >= 0) {\n        trackedTouchCount -= 1;\n      } else {\n        {\n          warn(\n            \"Ended a touch event which was not counted in `trackedTouchCount`.\"\n          );\n        }\n\n        return null;\n      }\n    }\n\n    ResponderTouchHistoryStore.recordTouchTrack(topLevelType, nativeEvent);\n    var extracted = canTriggerTransfer(topLevelType, targetInst, nativeEvent)\n      ? setResponderAndExtractTransfer(\n          topLevelType,\n          targetInst,\n          nativeEvent,\n          nativeEventTarget\n        )\n      : null; // Responder may or may not have transferred on a new touch start/move.\n    // Regardless, whoever is the responder after any potential transfer, we\n    // direct all touch start/move/ends to them in the form of\n    // `onResponderMove/Start/End`. These will be called for *every* additional\n    // finger that move/start/end, dispatched directly to whoever is the\n    // current responder at that moment, until the responder is \"released\".\n    //\n    // These multiple individual change touch events are are always bookended\n    // by `onResponderGrant`, and one of\n    // (`onResponderRelease/onResponderTerminate`).\n\n    var isResponderTouchStart = responderInst && isStartish(topLevelType);\n    var isResponderTouchMove = responderInst && isMoveish(topLevelType);\n    var isResponderTouchEnd = responderInst && isEndish(topLevelType);\n    var incrementalTouch = isResponderTouchStart\n      ? eventTypes.responderStart\n      : isResponderTouchMove\n      ? eventTypes.responderMove\n      : isResponderTouchEnd\n      ? eventTypes.responderEnd\n      : null;\n\n    if (incrementalTouch) {\n      var gesture = ResponderSyntheticEvent.getPooled(\n        incrementalTouch,\n        responderInst,\n        nativeEvent,\n        nativeEventTarget\n      );\n      gesture.touchHistory = ResponderTouchHistoryStore.touchHistory;\n      accumulateDirectDispatches(gesture);\n      extracted = accumulate(extracted, gesture);\n    }\n\n    var isResponderTerminate =\n      responderInst && topLevelType === TOP_TOUCH_CANCEL;\n    var isResponderRelease =\n      responderInst &&\n      !isResponderTerminate &&\n      isEndish(topLevelType) &&\n      noResponderTouches(nativeEvent);\n    var finalTouch = isResponderTerminate\n      ? eventTypes.responderTerminate\n      : isResponderRelease\n      ? eventTypes.responderRelease\n      : null;\n\n    if (finalTouch) {\n      var finalEvent = ResponderSyntheticEvent.getPooled(\n        finalTouch,\n        responderInst,\n        nativeEvent,\n        nativeEventTarget\n      );\n      finalEvent.touchHistory = ResponderTouchHistoryStore.touchHistory;\n      accumulateDirectDispatches(finalEvent);\n      extracted = accumulate(extracted, finalEvent);\n      changeResponder(null);\n    }\n\n    return extracted;\n  },\n  GlobalResponderHandler: null,\n  injection: {\n    /**\n     * @param {{onChange: (ReactID, ReactID) => void} GlobalResponderHandler\n     * Object that handles any change in responder. Use this to inject\n     * integration with an existing touch handling system etc.\n     */\n    injectGlobalResponderHandler: function(GlobalResponderHandler) {\n      ResponderEventPlugin.GlobalResponderHandler = GlobalResponderHandler;\n    }\n  }\n};\n\n/**\n * Injectable ordering of event plugins.\n */\nvar eventPluginOrder = null;\n/**\n * Injectable mapping from names to event plugin modules.\n */\n\nvar namesToPlugins = {};\n/**\n * Recomputes the plugin list using the injected plugins and plugin ordering.\n *\n * @private\n */\n\nfunction recomputePluginOrdering() {\n  if (!eventPluginOrder) {\n    // Wait until an `eventPluginOrder` is injected.\n    return;\n  }\n\n  for (var pluginName in namesToPlugins) {\n    var pluginModule = namesToPlugins[pluginName];\n    var pluginIndex = eventPluginOrder.indexOf(pluginName);\n\n    if (pluginIndex <= -1) {\n      throw new Error(\n        \"EventPluginRegistry: Cannot inject event plugins that do not exist in \" +\n          (\"the plugin ordering, `\" + pluginName + \"`.\")\n      );\n    }\n\n    if (plugins[pluginIndex]) {\n      continue;\n    }\n\n    if (!pluginModule.extractEvents) {\n      throw new Error(\n        \"EventPluginRegistry: Event plugins must implement an `extractEvents` \" +\n          (\"method, but `\" + pluginName + \"` does not.\")\n      );\n    }\n\n    plugins[pluginIndex] = pluginModule;\n    var publishedEvents = pluginModule.eventTypes;\n\n    for (var eventName in publishedEvents) {\n      if (\n        !publishEventForPlugin(\n          publishedEvents[eventName],\n          pluginModule,\n          eventName\n        )\n      ) {\n        throw new Error(\n          \"EventPluginRegistry: Failed to publish event `\" +\n            eventName +\n            \"` for plugin `\" +\n            pluginName +\n            \"`.\"\n        );\n      }\n    }\n  }\n}\n/**\n * Publishes an event so that it can be dispatched by the supplied plugin.\n *\n * @param {object} dispatchConfig Dispatch configuration for the event.\n * @param {object} PluginModule Plugin publishing the event.\n * @return {boolean} True if the event was successfully published.\n * @private\n */\n\nfunction publishEventForPlugin(dispatchConfig, pluginModule, eventName) {\n  if (eventNameDispatchConfigs.hasOwnProperty(eventName)) {\n    throw new Error(\n      \"EventPluginRegistry: More than one plugin attempted to publish the same \" +\n        (\"event name, `\" + eventName + \"`.\")\n    );\n  }\n\n  eventNameDispatchConfigs[eventName] = dispatchConfig;\n  var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;\n\n  if (phasedRegistrationNames) {\n    for (var phaseName in phasedRegistrationNames) {\n      if (phasedRegistrationNames.hasOwnProperty(phaseName)) {\n        var phasedRegistrationName = phasedRegistrationNames[phaseName];\n        publishRegistrationName(\n          phasedRegistrationName,\n          pluginModule,\n          eventName\n        );\n      }\n    }\n\n    return true;\n  } else if (dispatchConfig.registrationName) {\n    publishRegistrationName(\n      dispatchConfig.registrationName,\n      pluginModule,\n      eventName\n    );\n    return true;\n  }\n\n  return false;\n}\n/**\n * Publishes a registration name that is used to identify dispatched events.\n *\n * @param {string} registrationName Registration name to add.\n * @param {object} PluginModule Plugin publishing the event.\n * @private\n */\n\nfunction publishRegistrationName(registrationName, pluginModule, eventName) {\n  if (registrationNameModules[registrationName]) {\n    throw new Error(\n      \"EventPluginRegistry: More than one plugin attempted to publish the same \" +\n        (\"registration name, `\" + registrationName + \"`.\")\n    );\n  }\n\n  registrationNameModules[registrationName] = pluginModule;\n  registrationNameDependencies[registrationName] =\n    pluginModule.eventTypes[eventName].dependencies;\n\n  {\n    var lowerCasedName = registrationName.toLowerCase();\n  }\n}\n/**\n * Registers plugins so that they can extract and dispatch events.\n */\n\n/**\n * Ordered list of injected plugins.\n */\n\nvar plugins = [];\n/**\n * Mapping from event name to dispatch config\n */\n\nvar eventNameDispatchConfigs = {};\n/**\n * Mapping from registration name to plugin module\n */\n\nvar registrationNameModules = {};\n/**\n * Mapping from registration name to event name\n */\n\nvar registrationNameDependencies = {};\n\n/**\n * Injects an ordering of plugins (by plugin name). This allows the ordering\n * to be decoupled from injection of the actual plugins so that ordering is\n * always deterministic regardless of packaging, on-the-fly injection, etc.\n *\n * @param {array} InjectedEventPluginOrder\n * @internal\n */\n\nfunction injectEventPluginOrder(injectedEventPluginOrder) {\n  if (eventPluginOrder) {\n    throw new Error(\n      \"EventPluginRegistry: Cannot inject event plugin ordering more than \" +\n        \"once. You are likely trying to load more than one copy of React.\"\n    );\n  } // Clone the ordering so it cannot be dynamically mutated.\n\n  eventPluginOrder = Array.prototype.slice.call(injectedEventPluginOrder);\n  recomputePluginOrdering();\n}\n/**\n * Injects plugins to be used by plugin event system. The plugin names must be\n * in the ordering injected by `injectEventPluginOrder`.\n *\n * Plugins can be injected as part of page initialization or on-the-fly.\n *\n * @param {object} injectedNamesToPlugins Map from names to plugin modules.\n * @internal\n */\n\nfunction injectEventPluginsByName(injectedNamesToPlugins) {\n  var isOrderingDirty = false;\n\n  for (var pluginName in injectedNamesToPlugins) {\n    if (!injectedNamesToPlugins.hasOwnProperty(pluginName)) {\n      continue;\n    }\n\n    var pluginModule = injectedNamesToPlugins[pluginName];\n\n    if (\n      !namesToPlugins.hasOwnProperty(pluginName) ||\n      namesToPlugins[pluginName] !== pluginModule\n    ) {\n      if (namesToPlugins[pluginName]) {\n        throw new Error(\n          \"EventPluginRegistry: Cannot inject two different event plugins \" +\n            (\"using the same name, `\" + pluginName + \"`.\")\n        );\n      }\n\n      namesToPlugins[pluginName] = pluginModule;\n      isOrderingDirty = true;\n    }\n  }\n\n  if (isOrderingDirty) {\n    recomputePluginOrdering();\n  }\n}\n\n/**\n * Get a list of listeners for a specific event, in-order.\n * For React Native we treat the props-based function handlers\n * as the first-class citizens, and they are always executed first\n * for both capture and bubbling phase.\n *\n * We need \"phase\" propagated to this point to support the HostComponent\n * EventEmitter API, which does not mutate the name of the handler based\n * on phase (whereas prop handlers are registered as `onMyEvent` and `onMyEvent_Capture`).\n *\n * Native system events emitted into React Native\n * will be emitted both to the prop handler function and to imperative event\n * listeners.\n *\n * This will either return null, a single Function without an array, or\n * an array of 2+ items.\n */\n\nfunction getListeners(\n  inst,\n  registrationName,\n  phase,\n  dispatchToImperativeListeners\n) {\n  var stateNode = inst.stateNode;\n\n  if (stateNode === null) {\n    return null;\n  } // If null: Work in progress (ex: onload events in incremental mode).\n\n  var props = getFiberCurrentPropsFromNode(stateNode);\n\n  if (props === null) {\n    // Work in progress.\n    return null;\n  }\n\n  var listener = props[registrationName];\n\n  if (listener && typeof listener !== \"function\") {\n    throw new Error(\n      \"Expected `\" +\n        registrationName +\n        \"` listener to be a function, instead got a value of `\" +\n        typeof listener +\n        \"` type.\"\n    );\n  } // If there are no imperative listeners, early exit.\n\n  if (\n    !(\n      dispatchToImperativeListeners &&\n      stateNode.canonical &&\n      stateNode.canonical._eventListeners\n    )\n  ) {\n    return listener;\n  } // Below this is the de-optimized path.\n  // If you are using _eventListeners, we do not (yet)\n  // expect this to be as performant as the props-only path.\n  // If/when this becomes a bottleneck, it can be refactored\n  // to avoid unnecessary closures and array allocations.\n  //\n  // Previously, there was only one possible listener for an event:\n  // the onEventName property in props.\n  // Now, it is also possible to have N listeners\n  // for a specific event on a node. Thus, we accumulate all of the listeners,\n  // including the props listener, and return a function that calls them all in\n  // order, starting with the handler prop and then the listeners in order.\n  // We return either a non-empty array or null.\n\n  var listeners = [];\n\n  if (listener) {\n    listeners.push(listener);\n  } // TODO: for now, all of these events get an `rn:` prefix to enforce\n  // that the user knows they're only getting non-W3C-compliant events\n  // through this imperative event API.\n  // Events might not necessarily be noncompliant, but we currently have\n  // no verification that /any/ events are compliant.\n  // Thus, we prefix to ensure no collision with W3C event names.\n\n  var requestedPhaseIsCapture = phase === \"captured\";\n  var mangledImperativeRegistrationName = requestedPhaseIsCapture\n    ? \"rn:\" + registrationName.replace(/Capture$/, \"\")\n    : \"rn:\" + registrationName; // Get imperative event listeners for this event\n\n  if (\n    stateNode.canonical._eventListeners[mangledImperativeRegistrationName] &&\n    stateNode.canonical._eventListeners[mangledImperativeRegistrationName]\n      .length > 0\n  ) {\n    var eventListeners =\n      stateNode.canonical._eventListeners[mangledImperativeRegistrationName];\n    eventListeners.forEach(function(listenerObj) {\n      // Make sure phase of listener matches requested phase\n      var isCaptureEvent =\n        listenerObj.options.capture != null && listenerObj.options.capture;\n\n      if (isCaptureEvent !== requestedPhaseIsCapture) {\n        return;\n      } // For now (this is an area of future optimization) we must wrap\n      // all imperative event listeners in a function to unwrap the SyntheticEvent\n      // and pass them an Event.\n      // When this API is more stable and used more frequently, we can revisit.\n\n      var listenerFnWrapper = function(syntheticEvent) {\n        var eventInst = new ReactNativePrivateInterface.CustomEvent(\n          mangledImperativeRegistrationName,\n          {\n            detail: syntheticEvent.nativeEvent\n          }\n        );\n        eventInst.isTrusted = true; // setSyntheticEvent is present on the React Native Event shim.\n        // It is used to forward method calls on Event to the underlying SyntheticEvent.\n        // $FlowFixMe\n\n        eventInst.setSyntheticEvent(syntheticEvent);\n\n        for (\n          var _len = arguments.length,\n            args = new Array(_len > 1 ? _len - 1 : 0),\n            _key = 1;\n          _key < _len;\n          _key++\n        ) {\n          args[_key - 1] = arguments[_key];\n        }\n\n        listenerObj.listener.apply(listenerObj, [eventInst].concat(args));\n      }; // Only call once?\n      // If so, we ensure that it's only called once by setting a flag\n      // and by removing it from eventListeners once it is called (but only\n      // when it's actually been executed).\n\n      if (listenerObj.options.once) {\n        listeners.push(function() {\n          // Remove from the event listener once it's been called\n          stateNode.canonical.removeEventListener_unstable(\n            mangledImperativeRegistrationName,\n            listenerObj.listener,\n            listenerObj.capture\n          ); // Guard against function being called more than once in\n          // case there are somehow multiple in-flight references to\n          // it being processed\n\n          if (!listenerObj.invalidated) {\n            listenerObj.invalidated = true;\n            listenerObj.listener.apply(listenerObj, arguments);\n          }\n        });\n      } else {\n        listeners.push(listenerFnWrapper);\n      }\n    });\n  }\n\n  if (listeners.length === 0) {\n    return null;\n  }\n\n  if (listeners.length === 1) {\n    return listeners[0];\n  }\n\n  return listeners;\n}\n\nvar customBubblingEventTypes =\n    ReactNativePrivateInterface.ReactNativeViewConfigRegistry\n      .customBubblingEventTypes,\n  customDirectEventTypes =\n    ReactNativePrivateInterface.ReactNativeViewConfigRegistry\n      .customDirectEventTypes; // Start of inline: the below functions were inlined from\n// EventPropagator.js, as they deviated from ReactDOM's newer\n// implementations.\n\nfunction listenersAtPhase(inst, event, propagationPhase) {\n  var registrationName =\n    event.dispatchConfig.phasedRegistrationNames[propagationPhase];\n  return getListeners(inst, registrationName, propagationPhase, true);\n}\n\nfunction accumulateListenersAndInstances(inst, event, listeners) {\n  var listenersLength = listeners\n    ? isArray(listeners)\n      ? listeners.length\n      : 1\n    : 0;\n\n  if (listenersLength > 0) {\n    event._dispatchListeners = accumulateInto(\n      event._dispatchListeners,\n      listeners\n    ); // Avoid allocating additional arrays here\n\n    if (event._dispatchInstances == null && listenersLength === 1) {\n      event._dispatchInstances = inst;\n    } else {\n      event._dispatchInstances = event._dispatchInstances || [];\n\n      if (!isArray(event._dispatchInstances)) {\n        event._dispatchInstances = [event._dispatchInstances];\n      }\n\n      for (var i = 0; i < listenersLength; i++) {\n        event._dispatchInstances.push(inst);\n      }\n    }\n  }\n}\n\nfunction accumulateDirectionalDispatches$1(inst, phase, event) {\n  {\n    if (!inst) {\n      error(\"Dispatching inst must not be null\");\n    }\n  }\n\n  var listeners = listenersAtPhase(inst, event, phase);\n  accumulateListenersAndInstances(inst, event, listeners);\n}\n\nfunction getParent$1(inst) {\n  do {\n    inst = inst.return; // TODO: If this is a HostRoot we might want to bail out.\n    // That is depending on if we want nested subtrees (layers) to bubble\n    // events to their parent. We could also go through parentNode on the\n    // host node but that wouldn't work for React Native and doesn't let us\n    // do the portal feature.\n  } while (inst && inst.tag !== HostComponent);\n\n  if (inst) {\n    return inst;\n  }\n\n  return null;\n}\n/**\n * Simulates the traversal of a two-phase, capture/bubble event dispatch.\n */\n\nfunction traverseTwoPhase$1(inst, fn, arg, skipBubbling) {\n  var path = [];\n\n  while (inst) {\n    path.push(inst);\n    inst = getParent$1(inst);\n  }\n\n  var i;\n\n  for (i = path.length; i-- > 0; ) {\n    fn(path[i], \"captured\", arg);\n  }\n\n  if (skipBubbling) {\n    // Dispatch on target only\n    fn(path[0], \"bubbled\", arg);\n  } else {\n    for (i = 0; i < path.length; i++) {\n      fn(path[i], \"bubbled\", arg);\n    }\n  }\n}\n\nfunction accumulateTwoPhaseDispatchesSingle$1(event) {\n  if (event && event.dispatchConfig.phasedRegistrationNames) {\n    traverseTwoPhase$1(\n      event._targetInst,\n      accumulateDirectionalDispatches$1,\n      event,\n      false\n    );\n  }\n}\n\nfunction accumulateTwoPhaseDispatches$1(events) {\n  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle$1);\n}\n\nfunction accumulateCapturePhaseDispatches(event) {\n  if (event && event.dispatchConfig.phasedRegistrationNames) {\n    traverseTwoPhase$1(\n      event._targetInst,\n      accumulateDirectionalDispatches$1,\n      event,\n      true\n    );\n  }\n}\n/**\n * Accumulates without regard to direction, does not look for phased\n * registration names. Same as `accumulateDirectDispatchesSingle` but without\n * requiring that the `dispatchMarker` be the same as the dispatched ID.\n */\n\nfunction accumulateDispatches$1(inst, ignoredDirection, event) {\n  if (inst && event && event.dispatchConfig.registrationName) {\n    var registrationName = event.dispatchConfig.registrationName;\n    var listeners = getListeners(inst, registrationName, \"bubbled\", false);\n    accumulateListenersAndInstances(inst, event, listeners);\n  }\n}\n/**\n * Accumulates dispatches on an `SyntheticEvent`, but only for the\n * `dispatchMarker`.\n * @param {SyntheticEvent} event\n */\n\nfunction accumulateDirectDispatchesSingle$1(event) {\n  if (event && event.dispatchConfig.registrationName) {\n    accumulateDispatches$1(event._targetInst, null, event);\n  }\n}\n\nfunction accumulateDirectDispatches$1(events) {\n  forEachAccumulated(events, accumulateDirectDispatchesSingle$1);\n} // End of inline\n\nvar ReactNativeBridgeEventPlugin = {\n  eventTypes: {},\n  extractEvents: function(\n    topLevelType,\n    targetInst,\n    nativeEvent,\n    nativeEventTarget\n  ) {\n    if (targetInst == null) {\n      // Probably a node belonging to another renderer's tree.\n      return null;\n    }\n\n    var bubbleDispatchConfig = customBubblingEventTypes[topLevelType];\n    var directDispatchConfig = customDirectEventTypes[topLevelType];\n\n    if (!bubbleDispatchConfig && !directDispatchConfig) {\n      throw new Error( // $FlowFixMe - Flow doesn't like this string coercion because DOMTopLevelEventType is opaque\n        'Unsupported top level event type \"' + topLevelType + '\" dispatched'\n      );\n    }\n\n    var event = SyntheticEvent.getPooled(\n      bubbleDispatchConfig || directDispatchConfig,\n      targetInst,\n      nativeEvent,\n      nativeEventTarget\n    );\n\n    if (bubbleDispatchConfig) {\n      var skipBubbling =\n        event != null &&\n        event.dispatchConfig.phasedRegistrationNames != null &&\n        event.dispatchConfig.phasedRegistrationNames.skipBubbling;\n\n      if (skipBubbling) {\n        accumulateCapturePhaseDispatches(event);\n      } else {\n        accumulateTwoPhaseDispatches$1(event);\n      }\n    } else if (directDispatchConfig) {\n      accumulateDirectDispatches$1(event);\n    } else {\n      return null;\n    }\n\n    return event;\n  }\n};\n\nvar ReactNativeEventPluginOrder = [\n  \"ResponderEventPlugin\",\n  \"ReactNativeBridgeEventPlugin\"\n];\n\n/**\n * Make sure essential globals are available and are patched correctly. Please don't remove this\n * line. Bundles created by react-packager `require` it before executing any application code. This\n * ensures it exists in the dependency graph and can be `require`d.\n * TODO: require this in packager, not in React #10932517\n */\n/**\n * Inject module for resolving DOM hierarchy and plugin ordering.\n */\n\ninjectEventPluginOrder(ReactNativeEventPluginOrder);\n/**\n * Some important event plugins included by default (without having to require\n * them).\n */\n\ninjectEventPluginsByName({\n  ResponderEventPlugin: ResponderEventPlugin,\n  ReactNativeBridgeEventPlugin: ReactNativeBridgeEventPlugin\n});\n\nfunction getInstanceFromInstance(instanceHandle) {\n  return instanceHandle;\n}\n\nfunction getTagFromInstance(inst) {\n  var nativeInstance = inst.stateNode.canonical;\n\n  if (!nativeInstance._nativeTag) {\n    throw new Error(\"All native instances should have a tag.\");\n  }\n\n  return nativeInstance;\n}\nfunction getFiberCurrentPropsFromNode$1(inst) {\n  return inst.canonical.currentProps;\n}\n\n// Module provided by RN:\nvar ReactFabricGlobalResponderHandler = {\n  onChange: function(from, to, blockNativeResponder) {\n    var fromOrTo = from || to;\n    var fromOrToStateNode = fromOrTo && fromOrTo.stateNode;\n    var isFabric = !!(\n      fromOrToStateNode && fromOrToStateNode.canonical._internalInstanceHandle\n    );\n\n    if (isFabric) {\n      if (from) {\n        // equivalent to clearJSResponder\n        nativeFabricUIManager.setIsJSResponder(\n          from.stateNode.node,\n          false,\n          blockNativeResponder || false\n        );\n      }\n\n      if (to) {\n        // equivalent to setJSResponder\n        nativeFabricUIManager.setIsJSResponder(\n          to.stateNode.node,\n          true,\n          blockNativeResponder || false\n        );\n      }\n    } else {\n      if (to !== null) {\n        var tag = to.stateNode.canonical._nativeTag;\n        ReactNativePrivateInterface.UIManager.setJSResponder(\n          tag,\n          blockNativeResponder\n        );\n      } else {\n        ReactNativePrivateInterface.UIManager.clearJSResponder();\n      }\n    }\n  }\n};\n\nsetComponentTree(\n  getFiberCurrentPropsFromNode$1,\n  getInstanceFromInstance,\n  getTagFromInstance\n);\nResponderEventPlugin.injection.injectGlobalResponderHandler(\n  ReactFabricGlobalResponderHandler\n);\n\n/**\n * `ReactInstanceMap` maintains a mapping from a public facing stateful\n * instance (key) and the internal representation (value). This allows public\n * methods to accept the user facing instance as an argument and map them back\n * to internal methods.\n *\n * Note that this module is currently shared and assumed to be stateless.\n * If this becomes an actual Map, that will break.\n */\nfunction get(key) {\n  return key._reactInternals;\n}\nfunction set(key, value) {\n  key._reactInternals = value;\n}\n\nvar enableSchedulingProfiler = false;\nvar enableProfilerTimer = true;\nvar enableProfilerCommitHooks = true;\nvar warnAboutStringRefs = false;\nvar enableSuspenseAvoidThisFallback = false;\nvar enableNewReconciler = false;\nvar enableLazyContextPropagation = false;\nvar enableLegacyHidden = false;\n\n// ATTENTION\n// When adding new symbols to this file,\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n// The Symbol used to tag the ReactElement-like types.\nvar REACT_ELEMENT_TYPE = Symbol.for(\"react.element\");\nvar REACT_PORTAL_TYPE = Symbol.for(\"react.portal\");\nvar REACT_FRAGMENT_TYPE = Symbol.for(\"react.fragment\");\nvar REACT_STRICT_MODE_TYPE = Symbol.for(\"react.strict_mode\");\nvar REACT_PROFILER_TYPE = Symbol.for(\"react.profiler\");\nvar REACT_PROVIDER_TYPE = Symbol.for(\"react.provider\");\nvar REACT_CONTEXT_TYPE = Symbol.for(\"react.context\");\nvar REACT_FORWARD_REF_TYPE = Symbol.for(\"react.forward_ref\");\nvar REACT_SUSPENSE_TYPE = Symbol.for(\"react.suspense\");\nvar REACT_SUSPENSE_LIST_TYPE = Symbol.for(\"react.suspense_list\");\nvar REACT_MEMO_TYPE = Symbol.for(\"react.memo\");\nvar REACT_LAZY_TYPE = Symbol.for(\"react.lazy\");\nvar REACT_SCOPE_TYPE = Symbol.for(\"react.scope\");\nvar REACT_DEBUG_TRACING_MODE_TYPE = Symbol.for(\"react.debug_trace_mode\");\nvar REACT_OFFSCREEN_TYPE = Symbol.for(\"react.offscreen\");\nvar REACT_LEGACY_HIDDEN_TYPE = Symbol.for(\"react.legacy_hidden\");\nvar REACT_CACHE_TYPE = Symbol.for(\"react.cache\");\nvar REACT_TRACING_MARKER_TYPE = Symbol.for(\"react.tracing_marker\");\nvar MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = \"@@iterator\";\nfunction getIteratorFn(maybeIterable) {\n  if (maybeIterable === null || typeof maybeIterable !== \"object\") {\n    return null;\n  }\n\n  var maybeIterator =\n    (MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL]) ||\n    maybeIterable[FAUX_ITERATOR_SYMBOL];\n\n  if (typeof maybeIterator === \"function\") {\n    return maybeIterator;\n  }\n\n  return null;\n}\n\nfunction getWrappedName(outerType, innerType, wrapperName) {\n  var displayName = outerType.displayName;\n\n  if (displayName) {\n    return displayName;\n  }\n\n  var functionName = innerType.displayName || innerType.name || \"\";\n  return functionName !== \"\"\n    ? wrapperName + \"(\" + functionName + \")\"\n    : wrapperName;\n} // Keep in sync with react-reconciler/getComponentNameFromFiber\n\nfunction getContextName(type) {\n  return type.displayName || \"Context\";\n} // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\n\nfunction getComponentNameFromType(type) {\n  if (type == null) {\n    // Host root, text node or just invalid type.\n    return null;\n  }\n\n  {\n    if (typeof type.tag === \"number\") {\n      error(\n        \"Received an unexpected object in getComponentNameFromType(). \" +\n          \"This is likely a bug in React. Please file an issue.\"\n      );\n    }\n  }\n\n  if (typeof type === \"function\") {\n    return type.displayName || type.name || null;\n  }\n\n  if (typeof type === \"string\") {\n    return type;\n  }\n\n  switch (type) {\n    case REACT_FRAGMENT_TYPE:\n      return \"Fragment\";\n\n    case REACT_PORTAL_TYPE:\n      return \"Portal\";\n\n    case REACT_PROFILER_TYPE:\n      return \"Profiler\";\n\n    case REACT_STRICT_MODE_TYPE:\n      return \"StrictMode\";\n\n    case REACT_SUSPENSE_TYPE:\n      return \"Suspense\";\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return \"SuspenseList\";\n  }\n\n  if (typeof type === \"object\") {\n    switch (type.$$typeof) {\n      case REACT_CONTEXT_TYPE:\n        var context = type;\n        return getContextName(context) + \".Consumer\";\n\n      case REACT_PROVIDER_TYPE:\n        var provider = type;\n        return getContextName(provider._context) + \".Provider\";\n\n      case REACT_FORWARD_REF_TYPE:\n        return getWrappedName(type, type.render, \"ForwardRef\");\n\n      case REACT_MEMO_TYPE:\n        var outerName = type.displayName || null;\n\n        if (outerName !== null) {\n          return outerName;\n        }\n\n        return getComponentNameFromType(type.type) || \"Memo\";\n\n      case REACT_LAZY_TYPE: {\n        var lazyComponent = type;\n        var payload = lazyComponent._payload;\n        var init = lazyComponent._init;\n\n        try {\n          return getComponentNameFromType(init(payload));\n        } catch (x) {\n          return null;\n        }\n      }\n\n      // eslint-disable-next-line no-fallthrough\n    }\n  }\n\n  return null;\n}\n\nfunction getWrappedName$1(outerType, innerType, wrapperName) {\n  var functionName = innerType.displayName || innerType.name || \"\";\n  return (\n    outerType.displayName ||\n    (functionName !== \"\" ? wrapperName + \"(\" + functionName + \")\" : wrapperName)\n  );\n} // Keep in sync with shared/getComponentNameFromType\n\nfunction getContextName$1(type) {\n  return type.displayName || \"Context\";\n}\n\nfunction getComponentNameFromFiber(fiber) {\n  var tag = fiber.tag,\n    type = fiber.type;\n\n  switch (tag) {\n    case CacheComponent:\n      return \"Cache\";\n\n    case ContextConsumer:\n      var context = type;\n      return getContextName$1(context) + \".Consumer\";\n\n    case ContextProvider:\n      var provider = type;\n      return getContextName$1(provider._context) + \".Provider\";\n\n    case DehydratedFragment:\n      return \"DehydratedFragment\";\n\n    case ForwardRef:\n      return getWrappedName$1(type, type.render, \"ForwardRef\");\n\n    case Fragment:\n      return \"Fragment\";\n\n    case HostComponent:\n      // Host component type is the display name (e.g. \"div\", \"View\")\n      return type;\n\n    case HostPortal:\n      return \"Portal\";\n\n    case HostRoot:\n      return \"Root\";\n\n    case HostText:\n      return \"Text\";\n\n    case LazyComponent:\n      // Name comes from the type in this case; we don't have a tag.\n      return getComponentNameFromType(type);\n\n    case Mode:\n      if (type === REACT_STRICT_MODE_TYPE) {\n        // Don't be less specific than shared/getComponentNameFromType\n        return \"StrictMode\";\n      }\n\n      return \"Mode\";\n\n    case OffscreenComponent:\n      return \"Offscreen\";\n\n    case Profiler:\n      return \"Profiler\";\n\n    case ScopeComponent:\n      return \"Scope\";\n\n    case SuspenseComponent:\n      return \"Suspense\";\n\n    case SuspenseListComponent:\n      return \"SuspenseList\";\n\n    case TracingMarkerComponent:\n      return \"TracingMarker\";\n    // The display name for this tags come from the user-provided type:\n\n    case ClassComponent:\n    case FunctionComponent:\n    case IncompleteClassComponent:\n    case IndeterminateComponent:\n    case MemoComponent:\n    case SimpleMemoComponent:\n      if (typeof type === \"function\") {\n        return type.displayName || type.name || null;\n      }\n\n      if (typeof type === \"string\") {\n        return type;\n      }\n\n      break;\n  }\n\n  return null;\n}\n\n// Don't change these two values. They're used by React Dev Tools.\nvar NoFlags =\n  /*                      */\n  0;\nvar PerformedWork =\n  /*                */\n  1; // You can change the rest (and add more).\n\nvar Placement =\n  /*                    */\n  2;\nvar Update =\n  /*                       */\n  4;\nvar ChildDeletion =\n  /*                */\n  16;\nvar ContentReset =\n  /*                 */\n  32;\nvar Callback =\n  /*                     */\n  64;\nvar DidCapture =\n  /*                   */\n  128;\nvar ForceClientRender =\n  /*            */\n  256;\nvar Ref =\n  /*                          */\n  512;\nvar Snapshot =\n  /*                     */\n  1024;\nvar Passive =\n  /*                      */\n  2048;\nvar Hydrating =\n  /*                    */\n  4096;\nvar Visibility =\n  /*                   */\n  8192;\nvar StoreConsistency =\n  /*             */\n  16384;\nvar LifecycleEffectMask =\n  Passive | Update | Callback | Ref | Snapshot | StoreConsistency; // Union of all commit flags (flags with the lifetime of a particular commit)\n\nvar HostEffectMask =\n  /*               */\n  32767; // These are not really side effects, but we still reuse this field.\n\nvar Incomplete =\n  /*                   */\n  32768;\nvar ShouldCapture =\n  /*                */\n  65536;\nvar ForceUpdateForLegacySuspense =\n  /* */\n  131072;\nvar Forked =\n  /*                       */\n  1048576; // Static tags describe aspects of a fiber that are not specific to a render,\n// e.g. a fiber uses a passive effect (even if there are no updates on this particular render).\n// This enables us to defer more work in the unmount case,\n// since we can defer traversing the tree during layout to look for Passive effects,\n// and instead rely on the static flag as a signal that there may be cleanup work.\n\nvar RefStatic =\n  /*                    */\n  2097152;\nvar LayoutStatic =\n  /*                 */\n  4194304;\nvar PassiveStatic =\n  /*                */\n  8388608; // These flags allow us to traverse to fibers that have effects on mount\n// don't contain effects, by checking subtreeFlags.\n\nvar BeforeMutationMask = // TODO: Remove Update flag from before mutation phase by re-landing Visibility\n  // flag logic (see #20043)\n  Update | Snapshot | 0;\nvar MutationMask =\n  Placement |\n  Update |\n  ChildDeletion |\n  ContentReset |\n  Ref |\n  Hydrating |\n  Visibility;\nvar LayoutMask = Update | Callback | Ref | Visibility; // TODO: Split into PassiveMountMask and PassiveUnmountMask\n\nvar PassiveMask = Passive | ChildDeletion; // Union of tags that don't get reset on clones.\n// This allows certain concepts to persist without recalculating them,\n// e.g. whether a subtree contains passive effects or portals.\n\nvar StaticMask = LayoutStatic | PassiveStatic | RefStatic;\n\nvar ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\nfunction getNearestMountedFiber(fiber) {\n  var node = fiber;\n  var nearestMounted = fiber;\n\n  if (!fiber.alternate) {\n    // If there is no alternate, this might be a new tree that isn't inserted\n    // yet. If it is, then it will have a pending insertion effect on it.\n    var nextNode = node;\n\n    do {\n      node = nextNode;\n\n      if ((node.flags & (Placement | Hydrating)) !== NoFlags) {\n        // This is an insertion or in-progress hydration. The nearest possible\n        // mounted fiber is the parent but we need to continue to figure out\n        // if that one is still mounted.\n        nearestMounted = node.return;\n      }\n\n      nextNode = node.return;\n    } while (nextNode);\n  } else {\n    while (node.return) {\n      node = node.return;\n    }\n  }\n\n  if (node.tag === HostRoot) {\n    // TODO: Check if this was a nested HostRoot when used with\n    // renderContainerIntoSubtree.\n    return nearestMounted;\n  } // If we didn't hit the root, that means that we're in an disconnected tree\n  // that has been unmounted.\n\n  return null;\n}\nfunction isFiberMounted(fiber) {\n  return getNearestMountedFiber(fiber) === fiber;\n}\nfunction isMounted(component) {\n  {\n    var owner = ReactCurrentOwner.current;\n\n    if (owner !== null && owner.tag === ClassComponent) {\n      var ownerFiber = owner;\n      var instance = ownerFiber.stateNode;\n\n      if (!instance._warnedAboutRefsInRender) {\n        error(\n          \"%s is accessing isMounted inside its render() function. \" +\n            \"render() should be a pure function of props and state. It should \" +\n            \"never access something that requires stale data from the previous \" +\n            \"render, such as refs. Move this logic to componentDidMount and \" +\n            \"componentDidUpdate instead.\",\n          getComponentNameFromFiber(ownerFiber) || \"A component\"\n        );\n      }\n\n      instance._warnedAboutRefsInRender = true;\n    }\n  }\n\n  var fiber = get(component);\n\n  if (!fiber) {\n    return false;\n  }\n\n  return getNearestMountedFiber(fiber) === fiber;\n}\n\nfunction assertIsMounted(fiber) {\n  if (getNearestMountedFiber(fiber) !== fiber) {\n    throw new Error(\"Unable to find node on an unmounted component.\");\n  }\n}\n\nfunction findCurrentFiberUsingSlowPath(fiber) {\n  var alternate = fiber.alternate;\n\n  if (!alternate) {\n    // If there is no alternate, then we only need to check if it is mounted.\n    var nearestMounted = getNearestMountedFiber(fiber);\n\n    if (nearestMounted === null) {\n      throw new Error(\"Unable to find node on an unmounted component.\");\n    }\n\n    if (nearestMounted !== fiber) {\n      return null;\n    }\n\n    return fiber;\n  } // If we have two possible branches, we'll walk backwards up to the root\n  // to see what path the root points to. On the way we may hit one of the\n  // special cases and we'll deal with them.\n\n  var a = fiber;\n  var b = alternate;\n\n  while (true) {\n    var parentA = a.return;\n\n    if (parentA === null) {\n      // We're at the root.\n      break;\n    }\n\n    var parentB = parentA.alternate;\n\n    if (parentB === null) {\n      // There is no alternate. This is an unusual case. Currently, it only\n      // happens when a Suspense component is hidden. An extra fragment fiber\n      // is inserted in between the Suspense fiber and its children. Skip\n      // over this extra fragment fiber and proceed to the next parent.\n      var nextParent = parentA.return;\n\n      if (nextParent !== null) {\n        a = b = nextParent;\n        continue;\n      } // If there's no parent, we're at the root.\n\n      break;\n    } // If both copies of the parent fiber point to the same child, we can\n    // assume that the child is current. This happens when we bailout on low\n    // priority: the bailed out fiber's child reuses the current child.\n\n    if (parentA.child === parentB.child) {\n      var child = parentA.child;\n\n      while (child) {\n        if (child === a) {\n          // We've determined that A is the current branch.\n          assertIsMounted(parentA);\n          return fiber;\n        }\n\n        if (child === b) {\n          // We've determined that B is the current branch.\n          assertIsMounted(parentA);\n          return alternate;\n        }\n\n        child = child.sibling;\n      } // We should never have an alternate for any mounting node. So the only\n      // way this could possibly happen is if this was unmounted, if at all.\n\n      throw new Error(\"Unable to find node on an unmounted component.\");\n    }\n\n    if (a.return !== b.return) {\n      // The return pointer of A and the return pointer of B point to different\n      // fibers. We assume that return pointers never criss-cross, so A must\n      // belong to the child set of A.return, and B must belong to the child\n      // set of B.return.\n      a = parentA;\n      b = parentB;\n    } else {\n      // The return pointers point to the same fiber. We'll have to use the\n      // default, slow path: scan the child sets of each parent alternate to see\n      // which child belongs to which set.\n      //\n      // Search parent A's child set\n      var didFindChild = false;\n      var _child = parentA.child;\n\n      while (_child) {\n        if (_child === a) {\n          didFindChild = true;\n          a = parentA;\n          b = parentB;\n          break;\n        }\n\n        if (_child === b) {\n          didFindChild = true;\n          b = parentA;\n          a = parentB;\n          break;\n        }\n\n        _child = _child.sibling;\n      }\n\n      if (!didFindChild) {\n        // Search parent B's child set\n        _child = parentB.child;\n\n        while (_child) {\n          if (_child === a) {\n            didFindChild = true;\n            a = parentB;\n            b = parentA;\n            break;\n          }\n\n          if (_child === b) {\n            didFindChild = true;\n            b = parentB;\n            a = parentA;\n            break;\n          }\n\n          _child = _child.sibling;\n        }\n\n        if (!didFindChild) {\n          throw new Error(\n            \"Child was not found in either parent set. This indicates a bug \" +\n              \"in React related to the return pointer. Please file an issue.\"\n          );\n        }\n      }\n    }\n\n    if (a.alternate !== b) {\n      throw new Error(\n        \"Return fibers should always be each others' alternates. \" +\n          \"This error is likely caused by a bug in React. Please file an issue.\"\n      );\n    }\n  } // If the root is not a host container, we're in a disconnected tree. I.e.\n  // unmounted.\n\n  if (a.tag !== HostRoot) {\n    throw new Error(\"Unable to find node on an unmounted component.\");\n  }\n\n  if (a.stateNode.current === a) {\n    // We've determined that A is the current branch.\n    return fiber;\n  } // Otherwise B has to be current branch.\n\n  return alternate;\n}\nfunction findCurrentHostFiber(parent) {\n  var currentParent = findCurrentFiberUsingSlowPath(parent);\n  return currentParent !== null\n    ? findCurrentHostFiberImpl(currentParent)\n    : null;\n}\n\nfunction findCurrentHostFiberImpl(node) {\n  // Next we'll drill down this component to find the first HostComponent/Text.\n  if (node.tag === HostComponent || node.tag === HostText) {\n    return node;\n  }\n\n  var child = node.child;\n\n  while (child !== null) {\n    var match = findCurrentHostFiberImpl(child);\n\n    if (match !== null) {\n      return match;\n    }\n\n    child = child.sibling;\n  }\n\n  return null;\n}\n\n/**\n * In the future, we should cleanup callbacks by cancelling them instead of\n * using this.\n */\nfunction mountSafeCallback_NOT_REALLY_SAFE(context, callback) {\n  return function() {\n    if (!callback) {\n      return undefined;\n    } // This protects against createClass() components.\n    // We don't know if there is code depending on it.\n    // We intentionally don't use isMounted() because even accessing\n    // isMounted property on a React ES6 class will trigger a warning.\n\n    if (typeof context.__isMounted === \"boolean\") {\n      if (!context.__isMounted) {\n        return undefined;\n      }\n    } // FIXME: there used to be other branches that protected\n    // against unmounted host components. But RN host components don't\n    // define isMounted() anymore, so those checks didn't do anything.\n    // They caused false positive warning noise so we removed them:\n    // https://github.com/facebook/react-native/issues/18868#issuecomment-413579095\n    // However, this means that the callback is NOT guaranteed to be safe\n    // for host components. The solution we should implement is to make\n    // UIManager.measure() and similar calls truly cancelable. Then we\n    // can change our own code calling them to cancel when something unmounts.\n\n    return callback.apply(context, arguments);\n  };\n}\nfunction warnForStyleProps(props, validAttributes) {\n  {\n    for (var key in validAttributes.style) {\n      if (!(validAttributes[key] || props[key] === undefined)) {\n        error(\n          \"You are setting the style `{ %s\" +\n            \": ... }` as a prop. You \" +\n            \"should nest it in a style object. \" +\n            \"E.g. `{ style: { %s\" +\n            \": ... } }`\",\n          key,\n          key\n        );\n      }\n    }\n  }\n}\n\n// Modules provided by RN:\nvar emptyObject = {};\n/**\n * Create a payload that contains all the updates between two sets of props.\n *\n * These helpers are all encapsulated into a single module, because they use\n * mutation as a performance optimization which leads to subtle shared\n * dependencies between the code paths. To avoid this mutable state leaking\n * across modules, I've kept them isolated to this module.\n */\n\n// Tracks removed keys\nvar removedKeys = null;\nvar removedKeyCount = 0;\nvar deepDifferOptions = {\n  unsafelyIgnoreFunctions: true\n};\n\nfunction defaultDiffer(prevProp, nextProp) {\n  if (typeof nextProp !== \"object\" || nextProp === null) {\n    // Scalars have already been checked for equality\n    return true;\n  } else {\n    // For objects and arrays, the default diffing algorithm is a deep compare\n    return ReactNativePrivateInterface.deepDiffer(\n      prevProp,\n      nextProp,\n      deepDifferOptions\n    );\n  }\n}\n\nfunction restoreDeletedValuesInNestedArray(\n  updatePayload,\n  node,\n  validAttributes\n) {\n  if (isArray(node)) {\n    var i = node.length;\n\n    while (i-- && removedKeyCount > 0) {\n      restoreDeletedValuesInNestedArray(\n        updatePayload,\n        node[i],\n        validAttributes\n      );\n    }\n  } else if (node && removedKeyCount > 0) {\n    var obj = node;\n\n    for (var propKey in removedKeys) {\n      if (!removedKeys[propKey]) {\n        continue;\n      }\n\n      var nextProp = obj[propKey];\n\n      if (nextProp === undefined) {\n        continue;\n      }\n\n      var attributeConfig = validAttributes[propKey];\n\n      if (!attributeConfig) {\n        continue; // not a valid native prop\n      }\n\n      if (typeof nextProp === \"function\") {\n        nextProp = true;\n      }\n\n      if (typeof nextProp === \"undefined\") {\n        nextProp = null;\n      }\n\n      if (typeof attributeConfig !== \"object\") {\n        // case: !Object is the default case\n        updatePayload[propKey] = nextProp;\n      } else if (\n        typeof attributeConfig.diff === \"function\" ||\n        typeof attributeConfig.process === \"function\"\n      ) {\n        // case: CustomAttributeConfiguration\n        var nextValue =\n          typeof attributeConfig.process === \"function\"\n            ? attributeConfig.process(nextProp)\n            : nextProp;\n        updatePayload[propKey] = nextValue;\n      }\n\n      removedKeys[propKey] = false;\n      removedKeyCount--;\n    }\n  }\n}\n\nfunction diffNestedArrayProperty(\n  updatePayload,\n  prevArray,\n  nextArray,\n  validAttributes\n) {\n  var minLength =\n    prevArray.length < nextArray.length ? prevArray.length : nextArray.length;\n  var i;\n\n  for (i = 0; i < minLength; i++) {\n    // Diff any items in the array in the forward direction. Repeated keys\n    // will be overwritten by later values.\n    updatePayload = diffNestedProperty(\n      updatePayload,\n      prevArray[i],\n      nextArray[i],\n      validAttributes\n    );\n  }\n\n  for (; i < prevArray.length; i++) {\n    // Clear out all remaining properties.\n    updatePayload = clearNestedProperty(\n      updatePayload,\n      prevArray[i],\n      validAttributes\n    );\n  }\n\n  for (; i < nextArray.length; i++) {\n    // Add all remaining properties.\n    updatePayload = addNestedProperty(\n      updatePayload,\n      nextArray[i],\n      validAttributes\n    );\n  }\n\n  return updatePayload;\n}\n\nfunction diffNestedProperty(\n  updatePayload,\n  prevProp,\n  nextProp,\n  validAttributes\n) {\n  if (!updatePayload && prevProp === nextProp) {\n    // If no properties have been added, then we can bail out quickly on object\n    // equality.\n    return updatePayload;\n  }\n\n  if (!prevProp || !nextProp) {\n    if (nextProp) {\n      return addNestedProperty(updatePayload, nextProp, validAttributes);\n    }\n\n    if (prevProp) {\n      return clearNestedProperty(updatePayload, prevProp, validAttributes);\n    }\n\n    return updatePayload;\n  }\n\n  if (!isArray(prevProp) && !isArray(nextProp)) {\n    // Both are leaves, we can diff the leaves.\n    return diffProperties(updatePayload, prevProp, nextProp, validAttributes);\n  }\n\n  if (isArray(prevProp) && isArray(nextProp)) {\n    // Both are arrays, we can diff the arrays.\n    return diffNestedArrayProperty(\n      updatePayload,\n      prevProp,\n      nextProp,\n      validAttributes\n    );\n  }\n\n  if (isArray(prevProp)) {\n    return diffProperties(\n      updatePayload, // $FlowFixMe - We know that this is always an object when the input is.\n      ReactNativePrivateInterface.flattenStyle(prevProp), // $FlowFixMe - We know that this isn't an array because of above flow.\n      nextProp,\n      validAttributes\n    );\n  }\n\n  return diffProperties(\n    updatePayload,\n    prevProp, // $FlowFixMe - We know that this is always an object when the input is.\n    ReactNativePrivateInterface.flattenStyle(nextProp),\n    validAttributes\n  );\n}\n/**\n * addNestedProperty takes a single set of props and valid attribute\n * attribute configurations. It processes each prop and adds it to the\n * updatePayload.\n */\n\nfunction addNestedProperty(updatePayload, nextProp, validAttributes) {\n  if (!nextProp) {\n    return updatePayload;\n  }\n\n  if (!isArray(nextProp)) {\n    // Add each property of the leaf.\n    return addProperties(updatePayload, nextProp, validAttributes);\n  }\n\n  for (var i = 0; i < nextProp.length; i++) {\n    // Add all the properties of the array.\n    updatePayload = addNestedProperty(\n      updatePayload,\n      nextProp[i],\n      validAttributes\n    );\n  }\n\n  return updatePayload;\n}\n/**\n * clearNestedProperty takes a single set of props and valid attributes. It\n * adds a null sentinel to the updatePayload, for each prop key.\n */\n\nfunction clearNestedProperty(updatePayload, prevProp, validAttributes) {\n  if (!prevProp) {\n    return updatePayload;\n  }\n\n  if (!isArray(prevProp)) {\n    // Add each property of the leaf.\n    return clearProperties(updatePayload, prevProp, validAttributes);\n  }\n\n  for (var i = 0; i < prevProp.length; i++) {\n    // Add all the properties of the array.\n    updatePayload = clearNestedProperty(\n      updatePayload,\n      prevProp[i],\n      validAttributes\n    );\n  }\n\n  return updatePayload;\n}\n/**\n * diffProperties takes two sets of props and a set of valid attributes\n * and write to updatePayload the values that changed or were deleted.\n * If no updatePayload is provided, a new one is created and returned if\n * anything changed.\n */\n\nfunction diffProperties(updatePayload, prevProps, nextProps, validAttributes) {\n  var attributeConfig;\n  var nextProp;\n  var prevProp;\n\n  for (var propKey in nextProps) {\n    attributeConfig = validAttributes[propKey];\n\n    if (!attributeConfig) {\n      continue; // not a valid native prop\n    }\n\n    prevProp = prevProps[propKey];\n    nextProp = nextProps[propKey]; // functions are converted to booleans as markers that the associated\n    // events should be sent from native.\n\n    if (typeof nextProp === \"function\") {\n      nextProp = true; // If nextProp is not a function, then don't bother changing prevProp\n      // since nextProp will win and go into the updatePayload regardless.\n\n      if (typeof prevProp === \"function\") {\n        prevProp = true;\n      }\n    } // An explicit value of undefined is treated as a null because it overrides\n    // any other preceding value.\n\n    if (typeof nextProp === \"undefined\") {\n      nextProp = null;\n\n      if (typeof prevProp === \"undefined\") {\n        prevProp = null;\n      }\n    }\n\n    if (removedKeys) {\n      removedKeys[propKey] = false;\n    }\n\n    if (updatePayload && updatePayload[propKey] !== undefined) {\n      // Something else already triggered an update to this key because another\n      // value diffed. Since we're now later in the nested arrays our value is\n      // more important so we need to calculate it and override the existing\n      // value. It doesn't matter if nothing changed, we'll set it anyway.\n      // Pattern match on: attributeConfig\n      if (typeof attributeConfig !== \"object\") {\n        // case: !Object is the default case\n        updatePayload[propKey] = nextProp;\n      } else if (\n        typeof attributeConfig.diff === \"function\" ||\n        typeof attributeConfig.process === \"function\"\n      ) {\n        // case: CustomAttributeConfiguration\n        var nextValue =\n          typeof attributeConfig.process === \"function\"\n            ? attributeConfig.process(nextProp)\n            : nextProp;\n        updatePayload[propKey] = nextValue;\n      }\n\n      continue;\n    }\n\n    if (prevProp === nextProp) {\n      continue; // nothing changed\n    } // Pattern match on: attributeConfig\n\n    if (typeof attributeConfig !== \"object\") {\n      // case: !Object is the default case\n      if (defaultDiffer(prevProp, nextProp)) {\n        // a normal leaf has changed\n        (updatePayload || (updatePayload = {}))[propKey] = nextProp;\n      }\n    } else if (\n      typeof attributeConfig.diff === \"function\" ||\n      typeof attributeConfig.process === \"function\"\n    ) {\n      // case: CustomAttributeConfiguration\n      var shouldUpdate =\n        prevProp === undefined ||\n        (typeof attributeConfig.diff === \"function\"\n          ? attributeConfig.diff(prevProp, nextProp)\n          : defaultDiffer(prevProp, nextProp));\n\n      if (shouldUpdate) {\n        var _nextValue =\n          typeof attributeConfig.process === \"function\"\n            ? attributeConfig.process(nextProp)\n            : nextProp;\n\n        (updatePayload || (updatePayload = {}))[propKey] = _nextValue;\n      }\n    } else {\n      // default: fallthrough case when nested properties are defined\n      removedKeys = null;\n      removedKeyCount = 0; // We think that attributeConfig is not CustomAttributeConfiguration at\n      // this point so we assume it must be AttributeConfiguration.\n\n      updatePayload = diffNestedProperty(\n        updatePayload,\n        prevProp,\n        nextProp,\n        attributeConfig\n      );\n\n      if (removedKeyCount > 0 && updatePayload) {\n        restoreDeletedValuesInNestedArray(\n          updatePayload,\n          nextProp,\n          attributeConfig\n        );\n        removedKeys = null;\n      }\n    }\n  } // Also iterate through all the previous props to catch any that have been\n  // removed and make sure native gets the signal so it can reset them to the\n  // default.\n\n  for (var _propKey in prevProps) {\n    if (nextProps[_propKey] !== undefined) {\n      continue; // we've already covered this key in the previous pass\n    }\n\n    attributeConfig = validAttributes[_propKey];\n\n    if (!attributeConfig) {\n      continue; // not a valid native prop\n    }\n\n    if (updatePayload && updatePayload[_propKey] !== undefined) {\n      // This was already updated to a diff result earlier.\n      continue;\n    }\n\n    prevProp = prevProps[_propKey];\n\n    if (prevProp === undefined) {\n      continue; // was already empty anyway\n    } // Pattern match on: attributeConfig\n\n    if (\n      typeof attributeConfig !== \"object\" ||\n      typeof attributeConfig.diff === \"function\" ||\n      typeof attributeConfig.process === \"function\"\n    ) {\n      // case: CustomAttributeConfiguration | !Object\n      // Flag the leaf property for removal by sending a sentinel.\n      (updatePayload || (updatePayload = {}))[_propKey] = null;\n\n      if (!removedKeys) {\n        removedKeys = {};\n      }\n\n      if (!removedKeys[_propKey]) {\n        removedKeys[_propKey] = true;\n        removedKeyCount++;\n      }\n    } else {\n      // default:\n      // This is a nested attribute configuration where all the properties\n      // were removed so we need to go through and clear out all of them.\n      updatePayload = clearNestedProperty(\n        updatePayload,\n        prevProp,\n        attributeConfig\n      );\n    }\n  }\n\n  return updatePayload;\n}\n/**\n * addProperties adds all the valid props to the payload after being processed.\n */\n\nfunction addProperties(updatePayload, props, validAttributes) {\n  // TODO: Fast path\n  return diffProperties(updatePayload, emptyObject, props, validAttributes);\n}\n/**\n * clearProperties clears all the previous props by adding a null sentinel\n * to the payload for each valid key.\n */\n\nfunction clearProperties(updatePayload, prevProps, validAttributes) {\n  // TODO: Fast path\n  return diffProperties(updatePayload, prevProps, emptyObject, validAttributes);\n}\n\nfunction create(props, validAttributes) {\n  return addProperties(\n    null, // updatePayload\n    props,\n    validAttributes\n  );\n}\nfunction diff(prevProps, nextProps, validAttributes) {\n  return diffProperties(\n    null, // updatePayload\n    prevProps,\n    nextProps,\n    validAttributes\n  );\n}\n\n// Used as a way to call batchedUpdates when we don't have a reference to\n// the renderer. Such as when we're dispatching events or if third party\n// libraries need to call batchedUpdates. Eventually, this API will go away when\n// everything is batched by default. We'll then have a similar API to opt-out of\n// scheduled work and instead do synchronous work.\n// Defaults\nvar batchedUpdatesImpl = function(fn, bookkeeping) {\n  return fn(bookkeeping);\n};\n\nvar isInsideEventHandler = false;\nfunction batchedUpdates(fn, bookkeeping) {\n  if (isInsideEventHandler) {\n    // If we are currently inside another batch, we need to wait until it\n    // fully completes before restoring state.\n    return fn(bookkeeping);\n  }\n\n  isInsideEventHandler = true;\n\n  try {\n    return batchedUpdatesImpl(fn, bookkeeping);\n  } finally {\n    isInsideEventHandler = false;\n  }\n}\nfunction setBatchingImplementation(_batchedUpdatesImpl, _discreteUpdatesImpl) {\n  batchedUpdatesImpl = _batchedUpdatesImpl;\n}\n\n/**\n * Internal queue of events that have accumulated their dispatches and are\n * waiting to have their dispatches executed.\n */\n\nvar eventQueue = null;\n/**\n * Dispatches an event and releases it back into the pool, unless persistent.\n *\n * @param {?object} event Synthetic event to be dispatched.\n * @private\n */\n\nvar executeDispatchesAndRelease = function(event) {\n  if (event) {\n    executeDispatchesInOrder(event);\n\n    if (!event.isPersistent()) {\n      event.constructor.release(event);\n    }\n  }\n};\n\nvar executeDispatchesAndReleaseTopLevel = function(e) {\n  return executeDispatchesAndRelease(e);\n};\n\nfunction runEventsInBatch(events) {\n  if (events !== null) {\n    eventQueue = accumulateInto(eventQueue, events);\n  } // Set `eventQueue` to null before processing it so that we can tell if more\n  // events get enqueued while processing.\n\n  var processingEventQueue = eventQueue;\n  eventQueue = null;\n\n  if (!processingEventQueue) {\n    return;\n  }\n\n  forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseTopLevel);\n\n  if (eventQueue) {\n    throw new Error(\n      \"processEventQueue(): Additional events were enqueued while processing \" +\n        \"an event queue. Support for this has not yet been implemented.\"\n    );\n  } // This would be a good time to rethrow if any of the event handlers threw.\n\n  rethrowCaughtError();\n}\n\n/**\n * Allows registered plugins an opportunity to extract events from top-level\n * native browser events.\n *\n * @return {*} An accumulation of synthetic events.\n * @internal\n */\n\nfunction extractPluginEvents(\n  topLevelType,\n  targetInst,\n  nativeEvent,\n  nativeEventTarget\n) {\n  var events = null;\n  var legacyPlugins = plugins;\n\n  for (var i = 0; i < legacyPlugins.length; i++) {\n    // Not every plugin in the ordering may be loaded at runtime.\n    var possiblePlugin = legacyPlugins[i];\n\n    if (possiblePlugin) {\n      var extractedEvents = possiblePlugin.extractEvents(\n        topLevelType,\n        targetInst,\n        nativeEvent,\n        nativeEventTarget\n      );\n\n      if (extractedEvents) {\n        events = accumulateInto(events, extractedEvents);\n      }\n    }\n  }\n\n  return events;\n}\n\nfunction runExtractedPluginEventsInBatch(\n  topLevelType,\n  targetInst,\n  nativeEvent,\n  nativeEventTarget\n) {\n  var events = extractPluginEvents(\n    topLevelType,\n    targetInst,\n    nativeEvent,\n    nativeEventTarget\n  );\n  runEventsInBatch(events);\n}\n\nfunction dispatchEvent(target, topLevelType, nativeEvent) {\n  var targetFiber = target;\n  var eventTarget = null;\n\n  if (targetFiber != null) {\n    var stateNode = targetFiber.stateNode; // Guard against Fiber being unmounted\n\n    if (stateNode != null) {\n      eventTarget = stateNode.canonical;\n    }\n  }\n\n  batchedUpdates(function() {\n    // Emit event to the RawEventEmitter. This is an unused-by-default EventEmitter\n    // that can be used to instrument event performance monitoring (primarily - could be useful\n    // for other things too).\n    //\n    // NOTE: this merely emits events into the EventEmitter below.\n    // If *you* do not add listeners to the `RawEventEmitter`,\n    // then all of these emitted events will just blackhole and are no-ops.\n    // It is available (although not officially supported... yet) if you want to collect\n    // perf data on event latency in your application, and could also be useful for debugging\n    // low-level events issues.\n    //\n    // If you do not have any event perf monitoring and are extremely concerned about event perf,\n    // it is safe to disable these \"emit\" statements; it will prevent checking the size of\n    // an empty array twice and prevent two no-ops. Practically the overhead is so low that\n    // we don't think it's worth thinking about in prod; your perf issues probably lie elsewhere.\n    //\n    // We emit two events here: one for listeners to this specific event,\n    // and one for the catchall listener '*', for any listeners that want\n    // to be notified for all events.\n    // Note that extracted events are *not* emitted,\n    // only events that have a 1:1 mapping with a native event, at least for now.\n    var event = {\n      eventName: topLevelType,\n      nativeEvent: nativeEvent\n    };\n    ReactNativePrivateInterface.RawEventEmitter.emit(topLevelType, event);\n    ReactNativePrivateInterface.RawEventEmitter.emit(\"*\", event); // Heritage plugin event system\n\n    runExtractedPluginEventsInBatch(\n      topLevelType,\n      targetFiber,\n      nativeEvent,\n      eventTarget\n    );\n  }); // React Native doesn't use ReactControlledComponent but if it did, here's\n  // where it would do it.\n}\n\n// This module only exists as an ESM wrapper around the external CommonJS\nvar scheduleCallback = Scheduler.unstable_scheduleCallback;\nvar cancelCallback = Scheduler.unstable_cancelCallback;\nvar shouldYield = Scheduler.unstable_shouldYield;\nvar requestPaint = Scheduler.unstable_requestPaint;\nvar now = Scheduler.unstable_now;\nvar ImmediatePriority = Scheduler.unstable_ImmediatePriority;\nvar UserBlockingPriority = Scheduler.unstable_UserBlockingPriority;\nvar NormalPriority = Scheduler.unstable_NormalPriority;\nvar IdlePriority = Scheduler.unstable_IdlePriority;\n\nvar rendererID = null;\nvar injectedHook = null;\nvar hasLoggedError = false;\nvar isDevToolsPresent = typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== \"undefined\";\nfunction injectInternals(internals) {\n  if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === \"undefined\") {\n    // No DevTools\n    return false;\n  }\n\n  var hook = __REACT_DEVTOOLS_GLOBAL_HOOK__;\n\n  if (hook.isDisabled) {\n    // This isn't a real property on the hook, but it can be set to opt out\n    // of DevTools integration and associated warnings and logs.\n    // https://github.com/facebook/react/issues/3877\n    return true;\n  }\n\n  if (!hook.supportsFiber) {\n    {\n      error(\n        \"The installed version of React DevTools is too old and will not work \" +\n          \"with the current version of React. Please update React DevTools. \" +\n          \"https://reactjs.org/link/react-devtools\"\n      );\n    } // DevTools exists, even though it doesn't support Fiber.\n\n    return true;\n  }\n\n  try {\n    if (enableSchedulingProfiler) {\n      // Conditionally inject these hooks only if Timeline profiler is supported by this build.\n      // This gives DevTools a way to feature detect that isn't tied to version number\n      // (since profiling and timeline are controlled by different feature flags).\n      internals = assign({}, internals, {\n        getLaneLabelMap: getLaneLabelMap,\n        injectProfilingHooks: injectProfilingHooks\n      });\n    }\n\n    rendererID = hook.inject(internals); // We have successfully injected, so now it is safe to set up hooks.\n\n    injectedHook = hook;\n  } catch (err) {\n    // Catch all errors because it is unsafe to throw during initialization.\n    {\n      error(\"React instrumentation encountered an error: %s.\", err);\n    }\n  }\n\n  if (hook.checkDCE) {\n    // This is the real DevTools.\n    return true;\n  } else {\n    // This is likely a hook installed by Fast Refresh runtime.\n    return false;\n  }\n}\nfunction onScheduleRoot(root, children) {\n  {\n    if (\n      injectedHook &&\n      typeof injectedHook.onScheduleFiberRoot === \"function\"\n    ) {\n      try {\n        injectedHook.onScheduleFiberRoot(rendererID, root, children);\n      } catch (err) {\n        if (!hasLoggedError) {\n          hasLoggedError = true;\n\n          error(\"React instrumentation encountered an error: %s\", err);\n        }\n      }\n    }\n  }\n}\nfunction onCommitRoot(root, eventPriority) {\n  if (injectedHook && typeof injectedHook.onCommitFiberRoot === \"function\") {\n    try {\n      var didError = (root.current.flags & DidCapture) === DidCapture;\n\n      if (enableProfilerTimer) {\n        var schedulerPriority;\n\n        switch (eventPriority) {\n          case DiscreteEventPriority:\n            schedulerPriority = ImmediatePriority;\n            break;\n\n          case ContinuousEventPriority:\n            schedulerPriority = UserBlockingPriority;\n            break;\n\n          case DefaultEventPriority:\n            schedulerPriority = NormalPriority;\n            break;\n\n          case IdleEventPriority:\n            schedulerPriority = IdlePriority;\n            break;\n\n          default:\n            schedulerPriority = NormalPriority;\n            break;\n        }\n\n        injectedHook.onCommitFiberRoot(\n          rendererID,\n          root,\n          schedulerPriority,\n          didError\n        );\n      } else {\n        injectedHook.onCommitFiberRoot(rendererID, root, undefined, didError);\n      }\n    } catch (err) {\n      {\n        if (!hasLoggedError) {\n          hasLoggedError = true;\n\n          error(\"React instrumentation encountered an error: %s\", err);\n        }\n      }\n    }\n  }\n}\nfunction onPostCommitRoot(root) {\n  if (\n    injectedHook &&\n    typeof injectedHook.onPostCommitFiberRoot === \"function\"\n  ) {\n    try {\n      injectedHook.onPostCommitFiberRoot(rendererID, root);\n    } catch (err) {\n      {\n        if (!hasLoggedError) {\n          hasLoggedError = true;\n\n          error(\"React instrumentation encountered an error: %s\", err);\n        }\n      }\n    }\n  }\n}\nfunction onCommitUnmount(fiber) {\n  if (injectedHook && typeof injectedHook.onCommitFiberUnmount === \"function\") {\n    try {\n      injectedHook.onCommitFiberUnmount(rendererID, fiber);\n    } catch (err) {\n      {\n        if (!hasLoggedError) {\n          hasLoggedError = true;\n\n          error(\"React instrumentation encountered an error: %s\", err);\n        }\n      }\n    }\n  }\n}\n\nfunction injectProfilingHooks(profilingHooks) {}\n\nfunction getLaneLabelMap() {\n  {\n    return null;\n  }\n}\nfunction markComponentRenderStopped() {}\nfunction markComponentErrored(fiber, thrownValue, lanes) {}\nfunction markComponentSuspended(fiber, wakeable, lanes) {}\n\nvar NoMode =\n  /*                         */\n  0; // TODO: Remove ConcurrentMode by reading from the root tag instead\n\nvar ConcurrentMode =\n  /*                 */\n  1;\nvar ProfileMode =\n  /*                    */\n  2;\nvar StrictLegacyMode =\n  /*               */\n  8;\n\n// TODO: This is pretty well supported by browsers. Maybe we can drop it.\nvar clz32 = Math.clz32 ? Math.clz32 : clz32Fallback; // Count leading zeros.\n// Based on:\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/clz32\n\nvar log = Math.log;\nvar LN2 = Math.LN2;\n\nfunction clz32Fallback(x) {\n  var asUint = x >>> 0;\n\n  if (asUint === 0) {\n    return 32;\n  }\n\n  return (31 - ((log(asUint) / LN2) | 0)) | 0;\n}\n\n// If those values are changed that package should be rebuilt and redeployed.\n\nvar TotalLanes = 31;\nvar NoLanes =\n  /*                        */\n  0;\nvar NoLane =\n  /*                          */\n  0;\nvar SyncLane =\n  /*                        */\n  1;\nvar InputContinuousHydrationLane =\n  /*    */\n  2;\nvar InputContinuousLane =\n  /*             */\n  4;\nvar DefaultHydrationLane =\n  /*            */\n  8;\nvar DefaultLane =\n  /*                     */\n  16;\nvar TransitionHydrationLane =\n  /*                */\n  32;\nvar TransitionLanes =\n  /*                       */\n  4194240;\nvar TransitionLane1 =\n  /*                        */\n  64;\nvar TransitionLane2 =\n  /*                        */\n  128;\nvar TransitionLane3 =\n  /*                        */\n  256;\nvar TransitionLane4 =\n  /*                        */\n  512;\nvar TransitionLane5 =\n  /*                        */\n  1024;\nvar TransitionLane6 =\n  /*                        */\n  2048;\nvar TransitionLane7 =\n  /*                        */\n  4096;\nvar TransitionLane8 =\n  /*                        */\n  8192;\nvar TransitionLane9 =\n  /*                        */\n  16384;\nvar TransitionLane10 =\n  /*                       */\n  32768;\nvar TransitionLane11 =\n  /*                       */\n  65536;\nvar TransitionLane12 =\n  /*                       */\n  131072;\nvar TransitionLane13 =\n  /*                       */\n  262144;\nvar TransitionLane14 =\n  /*                       */\n  524288;\nvar TransitionLane15 =\n  /*                       */\n  1048576;\nvar TransitionLane16 =\n  /*                       */\n  2097152;\nvar RetryLanes =\n  /*                            */\n  130023424;\nvar RetryLane1 =\n  /*                             */\n  4194304;\nvar RetryLane2 =\n  /*                             */\n  8388608;\nvar RetryLane3 =\n  /*                             */\n  16777216;\nvar RetryLane4 =\n  /*                             */\n  33554432;\nvar RetryLane5 =\n  /*                             */\n  67108864;\nvar SomeRetryLane = RetryLane1;\nvar SelectiveHydrationLane =\n  /*          */\n  134217728;\nvar NonIdleLanes =\n  /*                          */\n  268435455;\nvar IdleHydrationLane =\n  /*               */\n  268435456;\nvar IdleLane =\n  /*                        */\n  536870912;\nvar OffscreenLane =\n  /*                   */\n  1073741824; // This function is used for the experimental timeline (react-devtools-timeline)\nvar NoTimestamp = -1;\nvar nextTransitionLane = TransitionLane1;\nvar nextRetryLane = RetryLane1;\n\nfunction getHighestPriorityLanes(lanes) {\n  switch (getHighestPriorityLane(lanes)) {\n    case SyncLane:\n      return SyncLane;\n\n    case InputContinuousHydrationLane:\n      return InputContinuousHydrationLane;\n\n    case InputContinuousLane:\n      return InputContinuousLane;\n\n    case DefaultHydrationLane:\n      return DefaultHydrationLane;\n\n    case DefaultLane:\n      return DefaultLane;\n\n    case TransitionHydrationLane:\n      return TransitionHydrationLane;\n\n    case TransitionLane1:\n    case TransitionLane2:\n    case TransitionLane3:\n    case TransitionLane4:\n    case TransitionLane5:\n    case TransitionLane6:\n    case TransitionLane7:\n    case TransitionLane8:\n    case TransitionLane9:\n    case TransitionLane10:\n    case TransitionLane11:\n    case TransitionLane12:\n    case TransitionLane13:\n    case TransitionLane14:\n    case TransitionLane15:\n    case TransitionLane16:\n      return lanes & TransitionLanes;\n\n    case RetryLane1:\n    case RetryLane2:\n    case RetryLane3:\n    case RetryLane4:\n    case RetryLane5:\n      return lanes & RetryLanes;\n\n    case SelectiveHydrationLane:\n      return SelectiveHydrationLane;\n\n    case IdleHydrationLane:\n      return IdleHydrationLane;\n\n    case IdleLane:\n      return IdleLane;\n\n    case OffscreenLane:\n      return OffscreenLane;\n\n    default:\n      {\n        error(\"Should have found matching lanes. This is a bug in React.\");\n      } // This shouldn't be reachable, but as a fallback, return the entire bitmask.\n\n      return lanes;\n  }\n}\n\nfunction getNextLanes(root, wipLanes) {\n  // Early bailout if there's no pending work left.\n  var pendingLanes = root.pendingLanes;\n\n  if (pendingLanes === NoLanes) {\n    return NoLanes;\n  }\n\n  var nextLanes = NoLanes;\n  var suspendedLanes = root.suspendedLanes;\n  var pingedLanes = root.pingedLanes; // Do not work on any idle work until all the non-idle work has finished,\n  // even if the work is suspended.\n\n  var nonIdlePendingLanes = pendingLanes & NonIdleLanes;\n\n  if (nonIdlePendingLanes !== NoLanes) {\n    var nonIdleUnblockedLanes = nonIdlePendingLanes & ~suspendedLanes;\n\n    if (nonIdleUnblockedLanes !== NoLanes) {\n      nextLanes = getHighestPriorityLanes(nonIdleUnblockedLanes);\n    } else {\n      var nonIdlePingedLanes = nonIdlePendingLanes & pingedLanes;\n\n      if (nonIdlePingedLanes !== NoLanes) {\n        nextLanes = getHighestPriorityLanes(nonIdlePingedLanes);\n      }\n    }\n  } else {\n    // The only remaining work is Idle.\n    var unblockedLanes = pendingLanes & ~suspendedLanes;\n\n    if (unblockedLanes !== NoLanes) {\n      nextLanes = getHighestPriorityLanes(unblockedLanes);\n    } else {\n      if (pingedLanes !== NoLanes) {\n        nextLanes = getHighestPriorityLanes(pingedLanes);\n      }\n    }\n  }\n\n  if (nextLanes === NoLanes) {\n    // This should only be reachable if we're suspended\n    // TODO: Consider warning in this path if a fallback timer is not scheduled.\n    return NoLanes;\n  } // If we're already in the middle of a render, switching lanes will interrupt\n  // it and we'll lose our progress. We should only do this if the new lanes are\n  // higher priority.\n\n  if (\n    wipLanes !== NoLanes &&\n    wipLanes !== nextLanes && // If we already suspended with a delay, then interrupting is fine. Don't\n    // bother waiting until the root is complete.\n    (wipLanes & suspendedLanes) === NoLanes\n  ) {\n    var nextLane = getHighestPriorityLane(nextLanes);\n    var wipLane = getHighestPriorityLane(wipLanes);\n\n    if (\n      // Tests whether the next lane is equal or lower priority than the wip\n      // one. This works because the bits decrease in priority as you go left.\n      nextLane >= wipLane || // Default priority updates should not interrupt transition updates. The\n      // only difference between default updates and transition updates is that\n      // default updates do not support refresh transitions.\n      (nextLane === DefaultLane && (wipLane & TransitionLanes) !== NoLanes)\n    ) {\n      // Keep working on the existing in-progress tree. Do not interrupt.\n      return wipLanes;\n    }\n  }\n\n  if ((nextLanes & InputContinuousLane) !== NoLanes) {\n    // When updates are sync by default, we entangle continuous priority updates\n    // and default updates, so they render in the same batch. The only reason\n    // they use separate lanes is because continuous updates should interrupt\n    // transitions, but default updates should not.\n    nextLanes |= pendingLanes & DefaultLane;\n  } // Check for entangled lanes and add them to the batch.\n  //\n  // A lane is said to be entangled with another when it's not allowed to render\n  // in a batch that does not also include the other lane. Typically we do this\n  // when multiple updates have the same source, and we only want to respond to\n  // the most recent event from that source.\n  //\n  // Note that we apply entanglements *after* checking for partial work above.\n  // This means that if a lane is entangled during an interleaved event while\n  // it's already rendering, we won't interrupt it. This is intentional, since\n  // entanglement is usually \"best effort\": we'll try our best to render the\n  // lanes in the same batch, but it's not worth throwing out partially\n  // completed work in order to do it.\n  // TODO: Reconsider this. The counter-argument is that the partial work\n  // represents an intermediate state, which we don't want to show to the user.\n  // And by spending extra time finishing it, we're increasing the amount of\n  // time it takes to show the final state, which is what they are actually\n  // waiting for.\n  //\n  // For those exceptions where entanglement is semantically important, like\n  // useMutableSource, we should ensure that there is no partial work at the\n  // time we apply the entanglement.\n\n  var entangledLanes = root.entangledLanes;\n\n  if (entangledLanes !== NoLanes) {\n    var entanglements = root.entanglements;\n    var lanes = nextLanes & entangledLanes;\n\n    while (lanes > 0) {\n      var index = pickArbitraryLaneIndex(lanes);\n      var lane = 1 << index;\n      nextLanes |= entanglements[index];\n      lanes &= ~lane;\n    }\n  }\n\n  return nextLanes;\n}\nfunction getMostRecentEventTime(root, lanes) {\n  var eventTimes = root.eventTimes;\n  var mostRecentEventTime = NoTimestamp;\n\n  while (lanes > 0) {\n    var index = pickArbitraryLaneIndex(lanes);\n    var lane = 1 << index;\n    var eventTime = eventTimes[index];\n\n    if (eventTime > mostRecentEventTime) {\n      mostRecentEventTime = eventTime;\n    }\n\n    lanes &= ~lane;\n  }\n\n  return mostRecentEventTime;\n}\n\nfunction computeExpirationTime(lane, currentTime) {\n  switch (lane) {\n    case SyncLane:\n    case InputContinuousHydrationLane:\n    case InputContinuousLane:\n      // User interactions should expire slightly more quickly.\n      //\n      // NOTE: This is set to the corresponding constant as in Scheduler.js.\n      // When we made it larger, a product metric in www regressed, suggesting\n      // there's a user interaction that's being starved by a series of\n      // synchronous updates. If that theory is correct, the proper solution is\n      // to fix the starvation. However, this scenario supports the idea that\n      // expiration times are an important safeguard when starvation\n      // does happen.\n      return currentTime + 250;\n\n    case DefaultHydrationLane:\n    case DefaultLane:\n    case TransitionHydrationLane:\n    case TransitionLane1:\n    case TransitionLane2:\n    case TransitionLane3:\n    case TransitionLane4:\n    case TransitionLane5:\n    case TransitionLane6:\n    case TransitionLane7:\n    case TransitionLane8:\n    case TransitionLane9:\n    case TransitionLane10:\n    case TransitionLane11:\n    case TransitionLane12:\n    case TransitionLane13:\n    case TransitionLane14:\n    case TransitionLane15:\n    case TransitionLane16:\n      return currentTime + 5000;\n\n    case RetryLane1:\n    case RetryLane2:\n    case RetryLane3:\n    case RetryLane4:\n    case RetryLane5:\n      // TODO: Retries should be allowed to expire if they are CPU bound for\n      // too long, but when I made this change it caused a spike in browser\n      // crashes. There must be some other underlying bug; not super urgent but\n      // ideally should figure out why and fix it. Unfortunately we don't have\n      // a repro for the crashes, only detected via production metrics.\n      return NoTimestamp;\n\n    case SelectiveHydrationLane:\n    case IdleHydrationLane:\n    case IdleLane:\n    case OffscreenLane:\n      // Anything idle priority or lower should never expire.\n      return NoTimestamp;\n\n    default:\n      {\n        error(\"Should have found matching lanes. This is a bug in React.\");\n      }\n\n      return NoTimestamp;\n  }\n}\n\nfunction markStarvedLanesAsExpired(root, currentTime) {\n  // TODO: This gets called every time we yield. We can optimize by storing\n  // the earliest expiration time on the root. Then use that to quickly bail out\n  // of this function.\n  var pendingLanes = root.pendingLanes;\n  var suspendedLanes = root.suspendedLanes;\n  var pingedLanes = root.pingedLanes;\n  var expirationTimes = root.expirationTimes; // Iterate through the pending lanes and check if we've reached their\n  // expiration time. If so, we'll assume the update is being starved and mark\n  // it as expired to force it to finish.\n\n  var lanes = pendingLanes;\n\n  while (lanes > 0) {\n    var index = pickArbitraryLaneIndex(lanes);\n    var lane = 1 << index;\n    var expirationTime = expirationTimes[index];\n\n    if (expirationTime === NoTimestamp) {\n      // Found a pending lane with no expiration time. If it's not suspended, or\n      // if it's pinged, assume it's CPU-bound. Compute a new expiration time\n      // using the current time.\n      if (\n        (lane & suspendedLanes) === NoLanes ||\n        (lane & pingedLanes) !== NoLanes\n      ) {\n        // Assumes timestamps are monotonically increasing.\n        expirationTimes[index] = computeExpirationTime(lane, currentTime);\n      }\n    } else if (expirationTime <= currentTime) {\n      // This lane expired\n      root.expiredLanes |= lane;\n    }\n\n    lanes &= ~lane;\n  }\n} // This returns the highest priority pending lanes regardless of whether they\nfunction getLanesToRetrySynchronouslyOnError(root) {\n  var everythingButOffscreen = root.pendingLanes & ~OffscreenLane;\n\n  if (everythingButOffscreen !== NoLanes) {\n    return everythingButOffscreen;\n  }\n\n  if (everythingButOffscreen & OffscreenLane) {\n    return OffscreenLane;\n  }\n\n  return NoLanes;\n}\nfunction includesSyncLane(lanes) {\n  return (lanes & SyncLane) !== NoLanes;\n}\nfunction includesNonIdleWork(lanes) {\n  return (lanes & NonIdleLanes) !== NoLanes;\n}\nfunction includesOnlyRetries(lanes) {\n  return (lanes & RetryLanes) === lanes;\n}\nfunction includesOnlyNonUrgentLanes(lanes) {\n  var UrgentLanes = SyncLane | InputContinuousLane | DefaultLane;\n  return (lanes & UrgentLanes) === NoLanes;\n}\nfunction includesOnlyTransitions(lanes) {\n  return (lanes & TransitionLanes) === lanes;\n}\nfunction includesBlockingLane(root, lanes) {\n  var SyncDefaultLanes =\n    InputContinuousHydrationLane |\n    InputContinuousLane |\n    DefaultHydrationLane |\n    DefaultLane;\n  return (lanes & SyncDefaultLanes) !== NoLanes;\n}\nfunction includesExpiredLane(root, lanes) {\n  // This is a separate check from includesBlockingLane because a lane can\n  // expire after a render has already started.\n  return (lanes & root.expiredLanes) !== NoLanes;\n}\nfunction isTransitionLane(lane) {\n  return (lane & TransitionLanes) !== NoLanes;\n}\nfunction claimNextTransitionLane() {\n  // Cycle through the lanes, assigning each new transition to the next lane.\n  // In most cases, this means every transition gets its own lane, until we\n  // run out of lanes and cycle back to the beginning.\n  var lane = nextTransitionLane;\n  nextTransitionLane <<= 1;\n\n  if ((nextTransitionLane & TransitionLanes) === NoLanes) {\n    nextTransitionLane = TransitionLane1;\n  }\n\n  return lane;\n}\nfunction claimNextRetryLane() {\n  var lane = nextRetryLane;\n  nextRetryLane <<= 1;\n\n  if ((nextRetryLane & RetryLanes) === NoLanes) {\n    nextRetryLane = RetryLane1;\n  }\n\n  return lane;\n}\nfunction getHighestPriorityLane(lanes) {\n  return lanes & -lanes;\n}\nfunction pickArbitraryLane(lanes) {\n  // This wrapper function gets inlined. Only exists so to communicate that it\n  // doesn't matter which bit is selected; you can pick any bit without\n  // affecting the algorithms where its used. Here I'm using\n  // getHighestPriorityLane because it requires the fewest operations.\n  return getHighestPriorityLane(lanes);\n}\n\nfunction pickArbitraryLaneIndex(lanes) {\n  return 31 - clz32(lanes);\n}\n\nfunction laneToIndex(lane) {\n  return pickArbitraryLaneIndex(lane);\n}\n\nfunction includesSomeLane(a, b) {\n  return (a & b) !== NoLanes;\n}\nfunction isSubsetOfLanes(set, subset) {\n  return (set & subset) === subset;\n}\nfunction mergeLanes(a, b) {\n  return a | b;\n}\nfunction removeLanes(set, subset) {\n  return set & ~subset;\n}\nfunction intersectLanes(a, b) {\n  return a & b;\n} // Seems redundant, but it changes the type from a single lane (used for\n// updates) to a group of lanes (used for flushing work).\n\nfunction laneToLanes(lane) {\n  return lane;\n}\nfunction createLaneMap(initial) {\n  // Intentionally pushing one by one.\n  // https://v8.dev/blog/elements-kinds#avoid-creating-holes\n  var laneMap = [];\n\n  for (var i = 0; i < TotalLanes; i++) {\n    laneMap.push(initial);\n  }\n\n  return laneMap;\n}\nfunction markRootUpdated(root, updateLane, eventTime) {\n  root.pendingLanes |= updateLane; // If there are any suspended transitions, it's possible this new update\n  // could unblock them. Clear the suspended lanes so that we can try rendering\n  // them again.\n  //\n  // TODO: We really only need to unsuspend only lanes that are in the\n  // `subtreeLanes` of the updated fiber, or the update lanes of the return\n  // path. This would exclude suspended updates in an unrelated sibling tree,\n  // since there's no way for this update to unblock it.\n  //\n  // We don't do this if the incoming update is idle, because we never process\n  // idle updates until after all the regular updates have finished; there's no\n  // way it could unblock a transition.\n\n  if (updateLane !== IdleLane) {\n    root.suspendedLanes = NoLanes;\n    root.pingedLanes = NoLanes;\n  }\n\n  var eventTimes = root.eventTimes;\n  var index = laneToIndex(updateLane); // We can always overwrite an existing timestamp because we prefer the most\n  // recent event, and we assume time is monotonically increasing.\n\n  eventTimes[index] = eventTime;\n}\nfunction markRootSuspended(root, suspendedLanes) {\n  root.suspendedLanes |= suspendedLanes;\n  root.pingedLanes &= ~suspendedLanes; // The suspended lanes are no longer CPU-bound. Clear their expiration times.\n\n  var expirationTimes = root.expirationTimes;\n  var lanes = suspendedLanes;\n\n  while (lanes > 0) {\n    var index = pickArbitraryLaneIndex(lanes);\n    var lane = 1 << index;\n    expirationTimes[index] = NoTimestamp;\n    lanes &= ~lane;\n  }\n}\nfunction markRootPinged(root, pingedLanes, eventTime) {\n  root.pingedLanes |= root.suspendedLanes & pingedLanes;\n}\nfunction markRootFinished(root, remainingLanes) {\n  var noLongerPendingLanes = root.pendingLanes & ~remainingLanes;\n  root.pendingLanes = remainingLanes; // Let's try everything again\n\n  root.suspendedLanes = NoLanes;\n  root.pingedLanes = NoLanes;\n  root.expiredLanes &= remainingLanes;\n  root.mutableReadLanes &= remainingLanes;\n  root.entangledLanes &= remainingLanes;\n  var entanglements = root.entanglements;\n  var eventTimes = root.eventTimes;\n  var expirationTimes = root.expirationTimes; // Clear the lanes that no longer have pending work\n\n  var lanes = noLongerPendingLanes;\n\n  while (lanes > 0) {\n    var index = pickArbitraryLaneIndex(lanes);\n    var lane = 1 << index;\n    entanglements[index] = NoLanes;\n    eventTimes[index] = NoTimestamp;\n    expirationTimes[index] = NoTimestamp;\n    lanes &= ~lane;\n  }\n}\nfunction markRootEntangled(root, entangledLanes) {\n  // In addition to entangling each of the given lanes with each other, we also\n  // have to consider _transitive_ entanglements. For each lane that is already\n  // entangled with *any* of the given lanes, that lane is now transitively\n  // entangled with *all* the given lanes.\n  //\n  // Translated: If C is entangled with A, then entangling A with B also\n  // entangles C with B.\n  //\n  // If this is hard to grasp, it might help to intentionally break this\n  // function and look at the tests that fail in ReactTransition-test.js. Try\n  // commenting out one of the conditions below.\n  var rootEntangledLanes = (root.entangledLanes |= entangledLanes);\n  var entanglements = root.entanglements;\n  var lanes = rootEntangledLanes;\n\n  while (lanes) {\n    var index = pickArbitraryLaneIndex(lanes);\n    var lane = 1 << index;\n\n    if (\n      // Is this one of the newly entangled lanes?\n      (lane & entangledLanes) | // Is this lane transitively entangled with the newly entangled lanes?\n      (entanglements[index] & entangledLanes)\n    ) {\n      entanglements[index] |= entangledLanes;\n    }\n\n    lanes &= ~lane;\n  }\n}\nfunction getBumpedLaneForHydration(root, renderLanes) {\n  var renderLane = getHighestPriorityLane(renderLanes);\n  var lane;\n\n  switch (renderLane) {\n    case InputContinuousLane:\n      lane = InputContinuousHydrationLane;\n      break;\n\n    case DefaultLane:\n      lane = DefaultHydrationLane;\n      break;\n\n    case TransitionLane1:\n    case TransitionLane2:\n    case TransitionLane3:\n    case TransitionLane4:\n    case TransitionLane5:\n    case TransitionLane6:\n    case TransitionLane7:\n    case TransitionLane8:\n    case TransitionLane9:\n    case TransitionLane10:\n    case TransitionLane11:\n    case TransitionLane12:\n    case TransitionLane13:\n    case TransitionLane14:\n    case TransitionLane15:\n    case TransitionLane16:\n    case RetryLane1:\n    case RetryLane2:\n    case RetryLane3:\n    case RetryLane4:\n    case RetryLane5:\n      lane = TransitionHydrationLane;\n      break;\n\n    case IdleLane:\n      lane = IdleHydrationLane;\n      break;\n\n    default:\n      // Everything else is already either a hydration lane, or shouldn't\n      // be retried at a hydration lane.\n      lane = NoLane;\n      break;\n  } // Check if the lane we chose is suspended. If so, that indicates that we\n  // already attempted and failed to hydrate at that level. Also check if we're\n  // already rendering that lane, which is rare but could happen.\n\n  if ((lane & (root.suspendedLanes | renderLanes)) !== NoLane) {\n    // Give up trying to hydrate and fall back to client render.\n    return NoLane;\n  }\n\n  return lane;\n}\nfunction addFiberToLanesMap(root, fiber, lanes) {\n  if (!isDevToolsPresent) {\n    return;\n  }\n\n  var pendingUpdatersLaneMap = root.pendingUpdatersLaneMap;\n\n  while (lanes > 0) {\n    var index = laneToIndex(lanes);\n    var lane = 1 << index;\n    var updaters = pendingUpdatersLaneMap[index];\n    updaters.add(fiber);\n    lanes &= ~lane;\n  }\n}\nfunction movePendingFibersToMemoized(root, lanes) {\n  if (!isDevToolsPresent) {\n    return;\n  }\n\n  var pendingUpdatersLaneMap = root.pendingUpdatersLaneMap;\n  var memoizedUpdaters = root.memoizedUpdaters;\n\n  while (lanes > 0) {\n    var index = laneToIndex(lanes);\n    var lane = 1 << index;\n    var updaters = pendingUpdatersLaneMap[index];\n\n    if (updaters.size > 0) {\n      updaters.forEach(function(fiber) {\n        var alternate = fiber.alternate;\n\n        if (alternate === null || !memoizedUpdaters.has(alternate)) {\n          memoizedUpdaters.add(fiber);\n        }\n      });\n      updaters.clear();\n    }\n\n    lanes &= ~lane;\n  }\n}\nfunction getTransitionsForLanes(root, lanes) {\n  {\n    return null;\n  }\n}\n\nvar DiscreteEventPriority = SyncLane;\nvar ContinuousEventPriority = InputContinuousLane;\nvar DefaultEventPriority = DefaultLane;\nvar IdleEventPriority = IdleLane;\nvar currentUpdatePriority = NoLane;\nfunction getCurrentUpdatePriority() {\n  return currentUpdatePriority;\n}\nfunction setCurrentUpdatePriority(newPriority) {\n  currentUpdatePriority = newPriority;\n}\nfunction higherEventPriority(a, b) {\n  return a !== 0 && a < b ? a : b;\n}\nfunction lowerEventPriority(a, b) {\n  return a === 0 || a > b ? a : b;\n}\nfunction isHigherEventPriority(a, b) {\n  return a !== 0 && a < b;\n}\nfunction lanesToEventPriority(lanes) {\n  var lane = getHighestPriorityLane(lanes);\n\n  if (!isHigherEventPriority(DiscreteEventPriority, lane)) {\n    return DiscreteEventPriority;\n  }\n\n  if (!isHigherEventPriority(ContinuousEventPriority, lane)) {\n    return ContinuousEventPriority;\n  }\n\n  if (includesNonIdleWork(lane)) {\n    return DefaultEventPriority;\n  }\n\n  return IdleEventPriority;\n}\n\n// Renderers that don't support mutation\n// can re-export everything from this module.\nfunction shim() {\n  throw new Error(\n    \"The current renderer does not support mutation. \" +\n      \"This error is likely caused by a bug in React. \" +\n      \"Please file an issue.\"\n  );\n} // Mutation (when unsupported)\nvar commitMount = shim;\n\n// Renderers that don't support hydration\n// can re-export everything from this module.\nfunction shim$1() {\n  throw new Error(\n    \"The current renderer does not support hydration. \" +\n      \"This error is likely caused by a bug in React. \" +\n      \"Please file an issue.\"\n  );\n} // Hydration (when unsupported)\nvar isSuspenseInstancePending = shim$1;\nvar isSuspenseInstanceFallback = shim$1;\nvar getSuspenseInstanceFallbackErrorDetails = shim$1;\nvar registerSuspenseInstanceRetry = shim$1;\nvar hydrateTextInstance = shim$1;\nvar errorHydratingContainer = shim$1;\n\nvar _nativeFabricUIManage = nativeFabricUIManager,\n  createNode = _nativeFabricUIManage.createNode,\n  cloneNode = _nativeFabricUIManage.cloneNode,\n  cloneNodeWithNewChildren = _nativeFabricUIManage.cloneNodeWithNewChildren,\n  cloneNodeWithNewChildrenAndProps =\n    _nativeFabricUIManage.cloneNodeWithNewChildrenAndProps,\n  cloneNodeWithNewProps = _nativeFabricUIManage.cloneNodeWithNewProps,\n  createChildNodeSet = _nativeFabricUIManage.createChildSet,\n  appendChildNode = _nativeFabricUIManage.appendChild,\n  appendChildNodeToSet = _nativeFabricUIManage.appendChildToSet,\n  completeRoot = _nativeFabricUIManage.completeRoot,\n  registerEventHandler = _nativeFabricUIManage.registerEventHandler,\n  fabricMeasure = _nativeFabricUIManage.measure,\n  fabricMeasureInWindow = _nativeFabricUIManage.measureInWindow,\n  fabricMeasureLayout = _nativeFabricUIManage.measureLayout,\n  FabricDefaultPriority = _nativeFabricUIManage.unstable_DefaultEventPriority,\n  FabricDiscretePriority = _nativeFabricUIManage.unstable_DiscreteEventPriority,\n  fabricGetCurrentEventPriority =\n    _nativeFabricUIManage.unstable_getCurrentEventPriority,\n  _setNativeProps = _nativeFabricUIManage.setNativeProps;\nvar getViewConfigForType =\n  ReactNativePrivateInterface.ReactNativeViewConfigRegistry.get; // Counter for uniquely identifying views.\n// % 10 === 1 means it is a rootTag.\n// % 2 === 0 means it is a Fabric tag.\n// This means that they never overlap.\n\nvar nextReactTag = 2;\n\n// TODO: Remove this conditional once all changes have propagated.\nif (registerEventHandler) {\n  /**\n   * Register the event emitter with the native bridge\n   */\n  registerEventHandler(dispatchEvent);\n}\n/**\n * This is used for refs on host components.\n */\n\nvar ReactFabricHostComponent = /*#__PURE__*/ (function() {\n  function ReactFabricHostComponent(\n    tag,\n    viewConfig,\n    props,\n    internalInstanceHandle\n  ) {\n    this._nativeTag = tag;\n    this.viewConfig = viewConfig;\n    this.currentProps = props;\n    this._internalInstanceHandle = internalInstanceHandle;\n  }\n\n  var _proto = ReactFabricHostComponent.prototype;\n\n  _proto.blur = function blur() {\n    ReactNativePrivateInterface.TextInputState.blurTextInput(this);\n  };\n\n  _proto.focus = function focus() {\n    ReactNativePrivateInterface.TextInputState.focusTextInput(this);\n  };\n\n  _proto.measure = function measure(callback) {\n    var stateNode = this._internalInstanceHandle.stateNode;\n\n    if (stateNode != null) {\n      fabricMeasure(\n        stateNode.node,\n        mountSafeCallback_NOT_REALLY_SAFE(this, callback)\n      );\n    }\n  };\n\n  _proto.measureInWindow = function measureInWindow(callback) {\n    var stateNode = this._internalInstanceHandle.stateNode;\n\n    if (stateNode != null) {\n      fabricMeasureInWindow(\n        stateNode.node,\n        mountSafeCallback_NOT_REALLY_SAFE(this, callback)\n      );\n    }\n  };\n\n  _proto.measureLayout = function measureLayout(\n    relativeToNativeNode,\n    onSuccess,\n    onFail\n  ) /* currently unused */\n  {\n    if (\n      typeof relativeToNativeNode === \"number\" ||\n      !(relativeToNativeNode instanceof ReactFabricHostComponent)\n    ) {\n      {\n        error(\n          \"Warning: ref.measureLayout must be called with a ref to a native component.\"\n        );\n      }\n\n      return;\n    }\n\n    var toStateNode = this._internalInstanceHandle.stateNode;\n    var fromStateNode = relativeToNativeNode._internalInstanceHandle.stateNode;\n\n    if (toStateNode != null && fromStateNode != null) {\n      fabricMeasureLayout(\n        toStateNode.node,\n        fromStateNode.node,\n        mountSafeCallback_NOT_REALLY_SAFE(this, onFail),\n        mountSafeCallback_NOT_REALLY_SAFE(this, onSuccess)\n      );\n    }\n  };\n\n  _proto.setNativeProps = function setNativeProps(nativeProps) {\n    {\n      warnForStyleProps(nativeProps, this.viewConfig.validAttributes);\n    }\n\n    var updatePayload = create(nativeProps, this.viewConfig.validAttributes);\n    var stateNode = this._internalInstanceHandle.stateNode;\n\n    if (stateNode != null && updatePayload != null) {\n      _setNativeProps(stateNode.node, updatePayload);\n    }\n  }; // This API (addEventListener, removeEventListener) attempts to adhere to the\n  // w3 Level2 Events spec as much as possible, treating HostComponent as a DOM node.\n  //\n  // Unless otherwise noted, these methods should \"just work\" and adhere to the W3 specs.\n  // If they deviate in a way that is not explicitly noted here, you've found a bug!\n  //\n  // See:\n  // * https://www.w3.org/TR/DOM-Level-2-Events/events.html\n  // * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n  // * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener\n  //\n  // And notably, not implemented (yet?):\n  // * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/dispatchEvent\n  //\n  //\n  // Deviations from spec/TODOs:\n  // (1) listener must currently be a function, we do not support EventListener objects yet.\n  // (2) we do not support the `signal` option / AbortSignal yet\n\n  _proto.addEventListener_unstable = function addEventListener_unstable(\n    eventType,\n    listener,\n    options\n  ) {\n    if (typeof eventType !== \"string\") {\n      throw new Error(\"addEventListener_unstable eventType must be a string\");\n    }\n\n    if (typeof listener !== \"function\") {\n      throw new Error(\"addEventListener_unstable listener must be a function\");\n    } // The third argument is either boolean indicating \"captures\" or an object.\n\n    var optionsObj =\n      typeof options === \"object\" && options !== null ? options : {};\n    var capture =\n      (typeof options === \"boolean\" ? options : optionsObj.capture) || false;\n    var once = optionsObj.once || false;\n    var passive = optionsObj.passive || false;\n    var signal = null; // TODO: implement signal/AbortSignal\n\n    var eventListeners = this._eventListeners || {};\n\n    if (this._eventListeners == null) {\n      this._eventListeners = eventListeners;\n    }\n\n    var namedEventListeners = eventListeners[eventType] || [];\n\n    if (eventListeners[eventType] == null) {\n      eventListeners[eventType] = namedEventListeners;\n    }\n\n    namedEventListeners.push({\n      listener: listener,\n      invalidated: false,\n      options: {\n        capture: capture,\n        once: once,\n        passive: passive,\n        signal: signal\n      }\n    });\n  }; // See https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener\n\n  _proto.removeEventListener_unstable = function removeEventListener_unstable(\n    eventType,\n    listener,\n    options\n  ) {\n    // eventType and listener must be referentially equal to be removed from the listeners\n    // data structure, but in \"options\" we only check the `capture` flag, according to spec.\n    // That means if you add the same function as a listener with capture set to true and false,\n    // you must also call removeEventListener twice with capture set to true/false.\n    var optionsObj =\n      typeof options === \"object\" && options !== null ? options : {};\n    var capture =\n      (typeof options === \"boolean\" ? options : optionsObj.capture) || false; // If there are no event listeners or named event listeners, we can bail early - our\n    // job is already done.\n\n    var eventListeners = this._eventListeners;\n\n    if (!eventListeners) {\n      return;\n    }\n\n    var namedEventListeners = eventListeners[eventType];\n\n    if (!namedEventListeners) {\n      return;\n    } // TODO: optimize this path to make remove cheaper\n\n    eventListeners[eventType] = namedEventListeners.filter(function(\n      listenerObj\n    ) {\n      return !(\n        listenerObj.listener === listener &&\n        listenerObj.options.capture === capture\n      );\n    });\n  };\n\n  return ReactFabricHostComponent;\n})(); // eslint-disable-next-line no-unused-expressions\nfunction appendInitialChild(parentInstance, child) {\n  appendChildNode(parentInstance.node, child.node);\n}\nfunction createInstance(\n  type,\n  props,\n  rootContainerInstance,\n  hostContext,\n  internalInstanceHandle\n) {\n  var tag = nextReactTag;\n  nextReactTag += 2;\n  var viewConfig = getViewConfigForType(type);\n\n  {\n    for (var key in viewConfig.validAttributes) {\n      if (props.hasOwnProperty(key)) {\n        ReactNativePrivateInterface.deepFreezeAndThrowOnMutationInDev(\n          props[key]\n        );\n      }\n    }\n  }\n\n  var updatePayload = create(props, viewConfig.validAttributes);\n  var node = createNode(\n    tag, // reactTag\n    viewConfig.uiViewClassName, // viewName\n    rootContainerInstance, // rootTag\n    updatePayload, // props\n    internalInstanceHandle // internalInstanceHandle\n  );\n  var component = new ReactFabricHostComponent(\n    tag,\n    viewConfig,\n    props,\n    internalInstanceHandle\n  );\n  return {\n    node: node,\n    canonical: component\n  };\n}\nfunction createTextInstance(\n  text,\n  rootContainerInstance,\n  hostContext,\n  internalInstanceHandle\n) {\n  {\n    if (!hostContext.isInAParentText) {\n      error(\"Text strings must be rendered within a <Text> component.\");\n    }\n  }\n\n  var tag = nextReactTag;\n  nextReactTag += 2;\n  var node = createNode(\n    tag, // reactTag\n    \"RCTRawText\", // viewName\n    rootContainerInstance, // rootTag\n    {\n      text: text\n    }, // props\n    internalInstanceHandle // instance handle\n  );\n  return {\n    node: node\n  };\n}\nfunction getRootHostContext(rootContainerInstance) {\n  return {\n    isInAParentText: false\n  };\n}\nfunction getChildHostContext(parentHostContext, type, rootContainerInstance) {\n  var prevIsInAParentText = parentHostContext.isInAParentText;\n  var isInAParentText =\n    type === \"AndroidTextInput\" || // Android\n    type === \"RCTMultilineTextInputView\" || // iOS\n    type === \"RCTSinglelineTextInputView\" || // iOS\n    type === \"RCTText\" ||\n    type === \"RCTVirtualText\"; // TODO: If this is an offscreen host container, we should reuse the\n  // parent context.\n\n  if (prevIsInAParentText !== isInAParentText) {\n    return {\n      isInAParentText: isInAParentText\n    };\n  } else {\n    return parentHostContext;\n  }\n}\nfunction getPublicInstance(instance) {\n  return instance.canonical;\n}\nfunction prepareForCommit(containerInfo) {\n  // Noop\n  return null;\n}\nfunction prepareUpdate(\n  instance,\n  type,\n  oldProps,\n  newProps,\n  rootContainerInstance,\n  hostContext\n) {\n  var viewConfig = instance.canonical.viewConfig;\n  var updatePayload = diff(oldProps, newProps, viewConfig.validAttributes); // TODO: If the event handlers have changed, we need to update the current props\n  // in the commit phase but there is no host config hook to do it yet.\n  // So instead we hack it by updating it in the render phase.\n\n  instance.canonical.currentProps = newProps;\n  return updatePayload;\n}\nfunction resetAfterCommit(containerInfo) {\n  // Noop\n}\nfunction shouldSetTextContent(type, props) {\n  // TODO (bvaughn) Revisit this decision.\n  // Always returning false simplifies the createInstance() implementation,\n  // But creates an additional child Fiber for raw text children.\n  // No additional native views are created though.\n  // It's not clear to me which is better so I'm deferring for now.\n  // More context @ github.com/facebook/react/pull/8560#discussion_r92111303\n  return false;\n}\nfunction getCurrentEventPriority() {\n  var currentEventPriority = fabricGetCurrentEventPriority\n    ? fabricGetCurrentEventPriority()\n    : null;\n\n  if (currentEventPriority != null) {\n    switch (currentEventPriority) {\n      case FabricDiscretePriority:\n        return DiscreteEventPriority;\n\n      case FabricDefaultPriority:\n      default:\n        return DefaultEventPriority;\n    }\n  }\n\n  return DefaultEventPriority;\n} // The Fabric renderer is secondary to the existing React Native renderer.\n\nvar warnsIfNotActing = false;\nvar scheduleTimeout = setTimeout;\nvar cancelTimeout = clearTimeout;\nvar noTimeout = -1; // -------------------\nfunction cloneInstance(\n  instance,\n  updatePayload,\n  type,\n  oldProps,\n  newProps,\n  internalInstanceHandle,\n  keepChildren,\n  recyclableInstance\n) {\n  var node = instance.node;\n  var clone;\n\n  if (keepChildren) {\n    if (updatePayload !== null) {\n      clone = cloneNodeWithNewProps(node, updatePayload);\n    } else {\n      clone = cloneNode(node);\n    }\n  } else {\n    if (updatePayload !== null) {\n      clone = cloneNodeWithNewChildrenAndProps(node, updatePayload);\n    } else {\n      clone = cloneNodeWithNewChildren(node);\n    }\n  }\n\n  return {\n    node: clone,\n    canonical: instance.canonical\n  };\n}\nfunction cloneHiddenInstance(instance, type, props, internalInstanceHandle) {\n  var viewConfig = instance.canonical.viewConfig;\n  var node = instance.node;\n  var updatePayload = create(\n    {\n      style: {\n        display: \"none\"\n      }\n    },\n    viewConfig.validAttributes\n  );\n  return {\n    node: cloneNodeWithNewProps(node, updatePayload),\n    canonical: instance.canonical\n  };\n}\nfunction cloneHiddenTextInstance(instance, text, internalInstanceHandle) {\n  throw new Error(\"Not yet implemented.\");\n}\nfunction createContainerChildSet(container) {\n  return createChildNodeSet(container);\n}\nfunction appendChildToContainerChildSet(childSet, child) {\n  appendChildNodeToSet(childSet, child.node);\n}\nfunction finalizeContainerChildren(container, newChildren) {\n  completeRoot(container, newChildren);\n}\nfunction replaceContainerChildren(container, newChildren) {}\nfunction preparePortalMount(portalInstance) {\n  // noop\n}\n\nvar ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\nfunction describeBuiltInComponentFrame(name, source, ownerFn) {\n  {\n    var ownerName = null;\n\n    if (ownerFn) {\n      ownerName = ownerFn.displayName || ownerFn.name || null;\n    }\n\n    return describeComponentFrame(name, source, ownerName);\n  }\n}\nvar componentFrameCache;\n\n{\n  var PossiblyWeakMap = typeof WeakMap === \"function\" ? WeakMap : Map;\n  componentFrameCache = new PossiblyWeakMap();\n}\nvar BEFORE_SLASH_RE = /^(.*)[\\\\\\/]/;\n\nfunction describeComponentFrame(name, source, ownerName) {\n  var sourceInfo = \"\";\n\n  if (source) {\n    var path = source.fileName;\n    var fileName = path.replace(BEFORE_SLASH_RE, \"\"); // In DEV, include code for a common special case:\n    // prefer \"folder/index.js\" instead of just \"index.js\".\n\n    if (/^index\\./.test(fileName)) {\n      var match = path.match(BEFORE_SLASH_RE);\n\n      if (match) {\n        var pathBeforeSlash = match[1];\n\n        if (pathBeforeSlash) {\n          var folderName = pathBeforeSlash.replace(BEFORE_SLASH_RE, \"\");\n          fileName = folderName + \"/\" + fileName;\n        }\n      }\n    }\n\n    sourceInfo = \" (at \" + fileName + \":\" + source.lineNumber + \")\";\n  } else if (ownerName) {\n    sourceInfo = \" (created by \" + ownerName + \")\";\n  }\n\n  return \"\\n    in \" + (name || \"Unknown\") + sourceInfo;\n}\n\nfunction describeClassComponentFrame(ctor, source, ownerFn) {\n  {\n    return describeFunctionComponentFrame(ctor, source, ownerFn);\n  }\n}\nfunction describeFunctionComponentFrame(fn, source, ownerFn) {\n  {\n    if (!fn) {\n      return \"\";\n    }\n\n    var name = fn.displayName || fn.name || null;\n    var ownerName = null;\n\n    if (ownerFn) {\n      ownerName = ownerFn.displayName || ownerFn.name || null;\n    }\n\n    return describeComponentFrame(name, source, ownerName);\n  }\n}\n\nfunction describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {\n  if (type == null) {\n    return \"\";\n  }\n\n  if (typeof type === \"function\") {\n    {\n      return describeFunctionComponentFrame(type, source, ownerFn);\n    }\n  }\n\n  if (typeof type === \"string\") {\n    return describeBuiltInComponentFrame(type, source, ownerFn);\n  }\n\n  switch (type) {\n    case REACT_SUSPENSE_TYPE:\n      return describeBuiltInComponentFrame(\"Suspense\", source, ownerFn);\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return describeBuiltInComponentFrame(\"SuspenseList\", source, ownerFn);\n  }\n\n  if (typeof type === \"object\") {\n    switch (type.$$typeof) {\n      case REACT_FORWARD_REF_TYPE:\n        return describeFunctionComponentFrame(type.render, source, ownerFn);\n\n      case REACT_MEMO_TYPE:\n        // Memo may contain any component type so we recursively resolve it.\n        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);\n\n      case REACT_LAZY_TYPE: {\n        var lazyComponent = type;\n        var payload = lazyComponent._payload;\n        var init = lazyComponent._init;\n\n        try {\n          // Lazy may contain any component type so we recursively resolve it.\n          return describeUnknownElementTypeFrameInDEV(\n            init(payload),\n            source,\n            ownerFn\n          );\n        } catch (x) {}\n      }\n    }\n  }\n\n  return \"\";\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar loggedTypeFailures = {};\nvar ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(\n        element.type,\n        element._source,\n        owner ? owner.type : null\n      );\n      ReactDebugCurrentFrame.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame.setExtraStackFrame(null);\n    }\n  }\n}\n\nfunction checkPropTypes(typeSpecs, values, location, componentName, element) {\n  {\n    // $FlowFixMe This is okay but Flow doesn't know it.\n    var has = Function.call.bind(hasOwnProperty);\n\n    for (var typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== \"function\") {\n            // eslint-disable-next-line react-internal/prod-error-codes\n            var err = Error(\n              (componentName || \"React class\") +\n                \": \" +\n                location +\n                \" type `\" +\n                typeSpecName +\n                \"` is invalid; \" +\n                \"it must be a function, usually from the `prop-types` package, but received `\" +\n                typeof typeSpecs[typeSpecName] +\n                \"`.\" +\n                \"This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.\"\n            );\n            err.name = \"Invariant Violation\";\n            throw err;\n          }\n\n          error$1 = typeSpecs[typeSpecName](\n            values,\n            typeSpecName,\n            componentName,\n            location,\n            null,\n            \"SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED\"\n          );\n        } catch (ex) {\n          error$1 = ex;\n        }\n\n        if (error$1 && !(error$1 instanceof Error)) {\n          setCurrentlyValidatingElement(element);\n\n          error(\n            \"%s: type specification of %s\" +\n              \" `%s` is invalid; the type checker \" +\n              \"function must return `null` or an `Error` but returned a %s. \" +\n              \"You may have forgotten to pass an argument to the type checker \" +\n              \"creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and \" +\n              \"shape all require an argument).\",\n            componentName || \"React class\",\n            location,\n            typeSpecName,\n            typeof error$1\n          );\n\n          setCurrentlyValidatingElement(null);\n        }\n\n        if (\n          error$1 instanceof Error &&\n          !(error$1.message in loggedTypeFailures)\n        ) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error$1.message] = true;\n          setCurrentlyValidatingElement(element);\n\n          error(\"Failed %s type: %s\", location, error$1.message);\n\n          setCurrentlyValidatingElement(null);\n        }\n      }\n    }\n  }\n}\n\nvar valueStack = [];\nvar fiberStack;\n\n{\n  fiberStack = [];\n}\n\nvar index = -1;\n\nfunction createCursor(defaultValue) {\n  return {\n    current: defaultValue\n  };\n}\n\nfunction pop(cursor, fiber) {\n  if (index < 0) {\n    {\n      error(\"Unexpected pop.\");\n    }\n\n    return;\n  }\n\n  {\n    if (fiber !== fiberStack[index]) {\n      error(\"Unexpected Fiber popped.\");\n    }\n  }\n\n  cursor.current = valueStack[index];\n  valueStack[index] = null;\n\n  {\n    fiberStack[index] = null;\n  }\n\n  index--;\n}\n\nfunction push(cursor, value, fiber) {\n  index++;\n  valueStack[index] = cursor.current;\n\n  {\n    fiberStack[index] = fiber;\n  }\n\n  cursor.current = value;\n}\n\nvar warnedAboutMissingGetChildContext;\n\n{\n  warnedAboutMissingGetChildContext = {};\n}\n\nvar emptyContextObject = {};\n\n{\n  Object.freeze(emptyContextObject);\n} // A cursor to the current merged context object on the stack.\n\nvar contextStackCursor = createCursor(emptyContextObject); // A cursor to a boolean indicating whether the context has changed.\n\nvar didPerformWorkStackCursor = createCursor(false); // Keep track of the previous context object that was on the stack.\n// We use this to get access to the parent context after we have already\n// pushed the next context provider, and now need to merge their contexts.\n\nvar previousContext = emptyContextObject;\n\nfunction getUnmaskedContext(\n  workInProgress,\n  Component,\n  didPushOwnContextIfProvider\n) {\n  {\n    if (didPushOwnContextIfProvider && isContextProvider(Component)) {\n      // If the fiber is a context provider itself, when we read its context\n      // we may have already pushed its own child context on the stack. A context\n      // provider should not \"see\" its own child context. Therefore we read the\n      // previous (parent) context instead for a context provider.\n      return previousContext;\n    }\n\n    return contextStackCursor.current;\n  }\n}\n\nfunction cacheContext(workInProgress, unmaskedContext, maskedContext) {\n  {\n    var instance = workInProgress.stateNode;\n    instance.__reactInternalMemoizedUnmaskedChildContext = unmaskedContext;\n    instance.__reactInternalMemoizedMaskedChildContext = maskedContext;\n  }\n}\n\nfunction getMaskedContext(workInProgress, unmaskedContext) {\n  {\n    var type = workInProgress.type;\n    var contextTypes = type.contextTypes;\n\n    if (!contextTypes) {\n      return emptyContextObject;\n    } // Avoid recreating masked context unless unmasked context has changed.\n    // Failing to do this will result in unnecessary calls to componentWillReceiveProps.\n    // This may trigger infinite loops if componentWillReceiveProps calls setState.\n\n    var instance = workInProgress.stateNode;\n\n    if (\n      instance &&\n      instance.__reactInternalMemoizedUnmaskedChildContext === unmaskedContext\n    ) {\n      return instance.__reactInternalMemoizedMaskedChildContext;\n    }\n\n    var context = {};\n\n    for (var key in contextTypes) {\n      context[key] = unmaskedContext[key];\n    }\n\n    {\n      var name = getComponentNameFromFiber(workInProgress) || \"Unknown\";\n      checkPropTypes(contextTypes, context, \"context\", name);\n    } // Cache unmasked context so we can avoid recreating masked context unless necessary.\n    // Context is created before the class component is instantiated so check for instance.\n\n    if (instance) {\n      cacheContext(workInProgress, unmaskedContext, context);\n    }\n\n    return context;\n  }\n}\n\nfunction hasContextChanged() {\n  {\n    return didPerformWorkStackCursor.current;\n  }\n}\n\nfunction isContextProvider(type) {\n  {\n    var childContextTypes = type.childContextTypes;\n    return childContextTypes !== null && childContextTypes !== undefined;\n  }\n}\n\nfunction popContext(fiber) {\n  {\n    pop(didPerformWorkStackCursor, fiber);\n    pop(contextStackCursor, fiber);\n  }\n}\n\nfunction popTopLevelContextObject(fiber) {\n  {\n    pop(didPerformWorkStackCursor, fiber);\n    pop(contextStackCursor, fiber);\n  }\n}\n\nfunction pushTopLevelContextObject(fiber, context, didChange) {\n  {\n    if (contextStackCursor.current !== emptyContextObject) {\n      throw new Error(\n        \"Unexpected context found on stack. \" +\n          \"This error is likely caused by a bug in React. Please file an issue.\"\n      );\n    }\n\n    push(contextStackCursor, context, fiber);\n    push(didPerformWorkStackCursor, didChange, fiber);\n  }\n}\n\nfunction processChildContext(fiber, type, parentContext) {\n  {\n    var instance = fiber.stateNode;\n    var childContextTypes = type.childContextTypes; // TODO (bvaughn) Replace this behavior with an invariant() in the future.\n    // It has only been added in Fiber to match the (unintentional) behavior in Stack.\n\n    if (typeof instance.getChildContext !== \"function\") {\n      {\n        var componentName = getComponentNameFromFiber(fiber) || \"Unknown\";\n\n        if (!warnedAboutMissingGetChildContext[componentName]) {\n          warnedAboutMissingGetChildContext[componentName] = true;\n\n          error(\n            \"%s.childContextTypes is specified but there is no getChildContext() method \" +\n              \"on the instance. You can either define getChildContext() on %s or remove \" +\n              \"childContextTypes from it.\",\n            componentName,\n            componentName\n          );\n        }\n      }\n\n      return parentContext;\n    }\n\n    var childContext = instance.getChildContext();\n\n    for (var contextKey in childContext) {\n      if (!(contextKey in childContextTypes)) {\n        throw new Error(\n          (getComponentNameFromFiber(fiber) || \"Unknown\") +\n            '.getChildContext(): key \"' +\n            contextKey +\n            '\" is not defined in childContextTypes.'\n        );\n      }\n    }\n\n    {\n      var name = getComponentNameFromFiber(fiber) || \"Unknown\";\n      checkPropTypes(childContextTypes, childContext, \"child context\", name);\n    }\n\n    return assign({}, parentContext, childContext);\n  }\n}\n\nfunction pushContextProvider(workInProgress) {\n  {\n    var instance = workInProgress.stateNode; // We push the context as early as possible to ensure stack integrity.\n    // If the instance does not exist yet, we will push null at first,\n    // and replace it on the stack later when invalidating the context.\n\n    var memoizedMergedChildContext =\n      (instance && instance.__reactInternalMemoizedMergedChildContext) ||\n      emptyContextObject; // Remember the parent context so we can merge with it later.\n    // Inherit the parent's did-perform-work value to avoid inadvertently blocking updates.\n\n    previousContext = contextStackCursor.current;\n    push(contextStackCursor, memoizedMergedChildContext, workInProgress);\n    push(\n      didPerformWorkStackCursor,\n      didPerformWorkStackCursor.current,\n      workInProgress\n    );\n    return true;\n  }\n}\n\nfunction invalidateContextProvider(workInProgress, type, didChange) {\n  {\n    var instance = workInProgress.stateNode;\n\n    if (!instance) {\n      throw new Error(\n        \"Expected to have an instance by this point. \" +\n          \"This error is likely caused by a bug in React. Please file an issue.\"\n      );\n    }\n\n    if (didChange) {\n      // Merge parent and own context.\n      // Skip this if we're not updating due to sCU.\n      // This avoids unnecessarily recomputing memoized values.\n      var mergedContext = processChildContext(\n        workInProgress,\n        type,\n        previousContext\n      );\n      instance.__reactInternalMemoizedMergedChildContext = mergedContext; // Replace the old (or empty) context with the new one.\n      // It is important to unwind the context in the reverse order.\n\n      pop(didPerformWorkStackCursor, workInProgress);\n      pop(contextStackCursor, workInProgress); // Now push the new context and mark that it has changed.\n\n      push(contextStackCursor, mergedContext, workInProgress);\n      push(didPerformWorkStackCursor, didChange, workInProgress);\n    } else {\n      pop(didPerformWorkStackCursor, workInProgress);\n      push(didPerformWorkStackCursor, didChange, workInProgress);\n    }\n  }\n}\n\nfunction findCurrentUnmaskedContext(fiber) {\n  {\n    // Currently this is only used with renderSubtreeIntoContainer; not sure if it\n    // makes sense elsewhere\n    if (!isFiberMounted(fiber) || fiber.tag !== ClassComponent) {\n      throw new Error(\n        \"Expected subtree parent to be a mounted class component. \" +\n          \"This error is likely caused by a bug in React. Please file an issue.\"\n      );\n    }\n\n    var node = fiber;\n\n    do {\n      switch (node.tag) {\n        case HostRoot:\n          return node.stateNode.context;\n\n        case ClassComponent: {\n          var Component = node.type;\n\n          if (isContextProvider(Component)) {\n            return node.stateNode.__reactInternalMemoizedMergedChildContext;\n          }\n\n          break;\n        }\n      }\n\n      node = node.return;\n    } while (node !== null);\n\n    throw new Error(\n      \"Found unexpected detached subtree parent. \" +\n        \"This error is likely caused by a bug in React. Please file an issue.\"\n    );\n  }\n}\n\nvar LegacyRoot = 0;\nvar ConcurrentRoot = 1;\n\n/**\n * inlined Object.is polyfill to avoid requiring consumers ship their own\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */\nfunction is(x, y) {\n  return (\n    (x === y && (x !== 0 || 1 / x === 1 / y)) || (x !== x && y !== y) // eslint-disable-line no-self-compare\n  );\n}\n\nvar objectIs = typeof Object.is === \"function\" ? Object.is : is;\n\nvar syncQueue = null;\nvar includesLegacySyncCallbacks = false;\nvar isFlushingSyncQueue = false;\nfunction scheduleSyncCallback(callback) {\n  // Push this callback into an internal queue. We'll flush these either in\n  // the next tick, or earlier if something calls `flushSyncCallbackQueue`.\n  if (syncQueue === null) {\n    syncQueue = [callback];\n  } else {\n    // Push onto existing queue. Don't need to schedule a callback because\n    // we already scheduled one when we created the queue.\n    syncQueue.push(callback);\n  }\n}\nfunction scheduleLegacySyncCallback(callback) {\n  includesLegacySyncCallbacks = true;\n  scheduleSyncCallback(callback);\n}\nfunction flushSyncCallbacksOnlyInLegacyMode() {\n  // Only flushes the queue if there's a legacy sync callback scheduled.\n  // TODO: There's only a single type of callback: performSyncOnWorkOnRoot. So\n  // it might make more sense for the queue to be a list of roots instead of a\n  // list of generic callbacks. Then we can have two: one for legacy roots, one\n  // for concurrent roots. And this method would only flush the legacy ones.\n  if (includesLegacySyncCallbacks) {\n    flushSyncCallbacks();\n  }\n}\nfunction flushSyncCallbacks() {\n  if (!isFlushingSyncQueue && syncQueue !== null) {\n    // Prevent re-entrance.\n    isFlushingSyncQueue = true;\n    var i = 0;\n    var previousUpdatePriority = getCurrentUpdatePriority();\n\n    try {\n      var isSync = true;\n      var queue = syncQueue; // TODO: Is this necessary anymore? The only user code that runs in this\n      // queue is in the render or commit phases.\n\n      setCurrentUpdatePriority(DiscreteEventPriority);\n\n      for (; i < queue.length; i++) {\n        var callback = queue[i];\n\n        do {\n          callback = callback(isSync);\n        } while (callback !== null);\n      }\n\n      syncQueue = null;\n      includesLegacySyncCallbacks = false;\n    } catch (error) {\n      // If something throws, leave the remaining callbacks on the queue.\n      if (syncQueue !== null) {\n        syncQueue = syncQueue.slice(i + 1);\n      } // Resume flushing in the next tick\n\n      scheduleCallback(ImmediatePriority, flushSyncCallbacks);\n      throw error;\n    } finally {\n      setCurrentUpdatePriority(previousUpdatePriority);\n      isFlushingSyncQueue = false;\n    }\n  }\n\n  return null;\n}\n\n// This is imported by the event replaying implementation in React DOM. It's\n// in a separate file to break a circular dependency between the renderer and\n// the reconciler.\nfunction isRootDehydrated(root) {\n  var currentState = root.current.memoizedState;\n  return currentState.isDehydrated;\n}\n\n// TODO: Use the unified fiber stack module instead of this local one?\n// Intentionally not using it yet to derisk the initial implementation, because\n// the way we push/pop these values is a bit unusual. If there's a mistake, I'd\n// rather the ids be wrong than crash the whole reconciler.\nvar forkStack = [];\nvar forkStackIndex = 0;\nvar treeForkProvider = null;\nvar treeForkCount = 0;\nvar idStack = [];\nvar idStackIndex = 0;\nvar treeContextProvider = null;\nvar treeContextId = 1;\nvar treeContextOverflow = \"\";\n\nfunction popTreeContext(workInProgress) {\n  // Restore the previous values.\n  // This is a bit more complicated than other context-like modules in Fiber\n  // because the same Fiber may appear on the stack multiple times and for\n  // different reasons. We have to keep popping until the work-in-progress is\n  // no longer at the top of the stack.\n  while (workInProgress === treeForkProvider) {\n    treeForkProvider = forkStack[--forkStackIndex];\n    forkStack[forkStackIndex] = null;\n    treeForkCount = forkStack[--forkStackIndex];\n    forkStack[forkStackIndex] = null;\n  }\n\n  while (workInProgress === treeContextProvider) {\n    treeContextProvider = idStack[--idStackIndex];\n    idStack[idStackIndex] = null;\n    treeContextOverflow = idStack[--idStackIndex];\n    idStack[idStackIndex] = null;\n    treeContextId = idStack[--idStackIndex];\n    idStack[idStackIndex] = null;\n  }\n}\n\nvar isHydrating = false; // This flag allows for warning supression when we expect there to be mismatches\n// due to earlier mismatches or a suspended fiber.\n\nvar didSuspendOrErrorDEV = false; // Hydration errors that were thrown inside this boundary\n\nvar hydrationErrors = null;\nfunction didSuspendOrErrorWhileHydratingDEV() {\n  {\n    return didSuspendOrErrorDEV;\n  }\n}\n\nfunction reenterHydrationStateFromDehydratedSuspenseInstance(\n  fiber,\n  suspenseInstance,\n  treeContext\n) {\n  {\n    return false;\n  }\n}\n\nfunction prepareToHydrateHostInstance(\n  fiber,\n  rootContainerInstance,\n  hostContext\n) {\n  {\n    throw new Error(\n      \"Expected prepareToHydrateHostInstance() to never be called. \" +\n        \"This error is likely caused by a bug in React. Please file an issue.\"\n    );\n  }\n}\n\nfunction prepareToHydrateHostTextInstance(fiber) {\n  {\n    throw new Error(\n      \"Expected prepareToHydrateHostTextInstance() to never be called. \" +\n        \"This error is likely caused by a bug in React. Please file an issue.\"\n    );\n  }\n  var shouldUpdate = hydrateTextInstance();\n}\n\nfunction prepareToHydrateHostSuspenseInstance(fiber) {\n  {\n    throw new Error(\n      \"Expected prepareToHydrateHostSuspenseInstance() to never be called. \" +\n        \"This error is likely caused by a bug in React. Please file an issue.\"\n    );\n  }\n}\n\nfunction popHydrationState(fiber) {\n  {\n    return false;\n  }\n}\n\nfunction upgradeHydrationErrorsToRecoverable() {\n  if (hydrationErrors !== null) {\n    // Successfully completed a forced client render. The errors that occurred\n    // during the hydration attempt are now recovered. We will log them in\n    // commit phase, once the entire tree has finished.\n    queueRecoverableErrors(hydrationErrors);\n    hydrationErrors = null;\n  }\n}\n\nfunction getIsHydrating() {\n  return isHydrating;\n}\n\nfunction queueHydrationError(error) {\n  if (hydrationErrors === null) {\n    hydrationErrors = [error];\n  } else {\n    hydrationErrors.push(error);\n  }\n}\n\nvar ReactCurrentBatchConfig = ReactSharedInternals.ReactCurrentBatchConfig;\nvar NoTransition = null;\nfunction requestCurrentTransition() {\n  return ReactCurrentBatchConfig.transition;\n}\n\n/**\n * Performs equality by iterating through keys on an object and returning false\n * when any key has values which are not strictly equal between the arguments.\n * Returns true when the values of all keys are strictly equal.\n */\n\nfunction shallowEqual(objA, objB) {\n  if (objectIs(objA, objB)) {\n    return true;\n  }\n\n  if (\n    typeof objA !== \"object\" ||\n    objA === null ||\n    typeof objB !== \"object\" ||\n    objB === null\n  ) {\n    return false;\n  }\n\n  var keysA = Object.keys(objA);\n  var keysB = Object.keys(objB);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  } // Test for A's keys different from B.\n\n  for (var i = 0; i < keysA.length; i++) {\n    var currentKey = keysA[i];\n\n    if (\n      !hasOwnProperty.call(objB, currentKey) ||\n      !objectIs(objA[currentKey], objB[currentKey])\n    ) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction describeFiber(fiber) {\n  var owner = fiber._debugOwner ? fiber._debugOwner.type : null;\n  var source = fiber._debugSource;\n\n  switch (fiber.tag) {\n    case HostComponent:\n      return describeBuiltInComponentFrame(fiber.type, source, owner);\n\n    case LazyComponent:\n      return describeBuiltInComponentFrame(\"Lazy\", source, owner);\n\n    case SuspenseComponent:\n      return describeBuiltInComponentFrame(\"Suspense\", source, owner);\n\n    case SuspenseListComponent:\n      return describeBuiltInComponentFrame(\"SuspenseList\", source, owner);\n\n    case FunctionComponent:\n    case IndeterminateComponent:\n    case SimpleMemoComponent:\n      return describeFunctionComponentFrame(fiber.type, source, owner);\n\n    case ForwardRef:\n      return describeFunctionComponentFrame(fiber.type.render, source, owner);\n\n    case ClassComponent:\n      return describeClassComponentFrame(fiber.type, source, owner);\n\n    default:\n      return \"\";\n  }\n}\n\nfunction getStackByFiberInDevAndProd(workInProgress) {\n  try {\n    var info = \"\";\n    var node = workInProgress;\n\n    do {\n      info += describeFiber(node);\n      node = node.return;\n    } while (node);\n\n    return info;\n  } catch (x) {\n    return \"\\nError generating stack: \" + x.message + \"\\n\" + x.stack;\n  }\n}\n\nvar ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;\nvar current = null;\nvar isRendering = false;\nfunction getCurrentFiberOwnerNameInDevOrNull() {\n  {\n    if (current === null) {\n      return null;\n    }\n\n    var owner = current._debugOwner;\n\n    if (owner !== null && typeof owner !== \"undefined\") {\n      return getComponentNameFromFiber(owner);\n    }\n  }\n\n  return null;\n}\n\nfunction getCurrentFiberStackInDev() {\n  {\n    if (current === null) {\n      return \"\";\n    } // Safe because if current fiber exists, we are reconciling,\n    // and it is guaranteed to be the work-in-progress version.\n\n    return getStackByFiberInDevAndProd(current);\n  }\n}\n\nfunction resetCurrentFiber() {\n  {\n    ReactDebugCurrentFrame$1.getCurrentStack = null;\n    current = null;\n    isRendering = false;\n  }\n}\nfunction setCurrentFiber(fiber) {\n  {\n    ReactDebugCurrentFrame$1.getCurrentStack =\n      fiber === null ? null : getCurrentFiberStackInDev;\n    current = fiber;\n    isRendering = false;\n  }\n}\nfunction getCurrentFiber() {\n  {\n    return current;\n  }\n}\nfunction setIsRendering(rendering) {\n  {\n    isRendering = rendering;\n  }\n}\n\nvar ReactStrictModeWarnings = {\n  recordUnsafeLifecycleWarnings: function(fiber, instance) {},\n  flushPendingUnsafeLifecycleWarnings: function() {},\n  recordLegacyContextWarning: function(fiber, instance) {},\n  flushLegacyContextWarning: function() {},\n  discardPendingWarnings: function() {}\n};\n\n{\n  var findStrictRoot = function(fiber) {\n    var maybeStrictRoot = null;\n    var node = fiber;\n\n    while (node !== null) {\n      if (node.mode & StrictLegacyMode) {\n        maybeStrictRoot = node;\n      }\n\n      node = node.return;\n    }\n\n    return maybeStrictRoot;\n  };\n\n  var setToSortedString = function(set) {\n    var array = [];\n    set.forEach(function(value) {\n      array.push(value);\n    });\n    return array.sort().join(\", \");\n  };\n\n  var pendingComponentWillMountWarnings = [];\n  var pendingUNSAFE_ComponentWillMountWarnings = [];\n  var pendingComponentWillReceivePropsWarnings = [];\n  var pendingUNSAFE_ComponentWillReceivePropsWarnings = [];\n  var pendingComponentWillUpdateWarnings = [];\n  var pendingUNSAFE_ComponentWillUpdateWarnings = []; // Tracks components we have already warned about.\n\n  var didWarnAboutUnsafeLifecycles = new Set();\n\n  ReactStrictModeWarnings.recordUnsafeLifecycleWarnings = function(\n    fiber,\n    instance\n  ) {\n    // Dedupe strategy: Warn once per component.\n    if (didWarnAboutUnsafeLifecycles.has(fiber.type)) {\n      return;\n    }\n\n    if (\n      typeof instance.componentWillMount === \"function\" && // Don't warn about react-lifecycles-compat polyfilled components.\n      instance.componentWillMount.__suppressDeprecationWarning !== true\n    ) {\n      pendingComponentWillMountWarnings.push(fiber);\n    }\n\n    if (\n      fiber.mode & StrictLegacyMode &&\n      typeof instance.UNSAFE_componentWillMount === \"function\"\n    ) {\n      pendingUNSAFE_ComponentWillMountWarnings.push(fiber);\n    }\n\n    if (\n      typeof instance.componentWillReceiveProps === \"function\" &&\n      instance.componentWillReceiveProps.__suppressDeprecationWarning !== true\n    ) {\n      pendingComponentWillReceivePropsWarnings.push(fiber);\n    }\n\n    if (\n      fiber.mode & StrictLegacyMode &&\n      typeof instance.UNSAFE_componentWillReceiveProps === \"function\"\n    ) {\n      pendingUNSAFE_ComponentWillReceivePropsWarnings.push(fiber);\n    }\n\n    if (\n      typeof instance.componentWillUpdate === \"function\" &&\n      instance.componentWillUpdate.__suppressDeprecationWarning !== true\n    ) {\n      pendingComponentWillUpdateWarnings.push(fiber);\n    }\n\n    if (\n      fiber.mode & StrictLegacyMode &&\n      typeof instance.UNSAFE_componentWillUpdate === \"function\"\n    ) {\n      pendingUNSAFE_ComponentWillUpdateWarnings.push(fiber);\n    }\n  };\n\n  ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings = function() {\n    // We do an initial pass to gather component names\n    var componentWillMountUniqueNames = new Set();\n\n    if (pendingComponentWillMountWarnings.length > 0) {\n      pendingComponentWillMountWarnings.forEach(function(fiber) {\n        componentWillMountUniqueNames.add(\n          getComponentNameFromFiber(fiber) || \"Component\"\n        );\n        didWarnAboutUnsafeLifecycles.add(fiber.type);\n      });\n      pendingComponentWillMountWarnings = [];\n    }\n\n    var UNSAFE_componentWillMountUniqueNames = new Set();\n\n    if (pendingUNSAFE_ComponentWillMountWarnings.length > 0) {\n      pendingUNSAFE_ComponentWillMountWarnings.forEach(function(fiber) {\n        UNSAFE_componentWillMountUniqueNames.add(\n          getComponentNameFromFiber(fiber) || \"Component\"\n        );\n        didWarnAboutUnsafeLifecycles.add(fiber.type);\n      });\n      pendingUNSAFE_ComponentWillMountWarnings = [];\n    }\n\n    var componentWillReceivePropsUniqueNames = new Set();\n\n    if (pendingComponentWillReceivePropsWarnings.length > 0) {\n      pendingComponentWillReceivePropsWarnings.forEach(function(fiber) {\n        componentWillReceivePropsUniqueNames.add(\n          getComponentNameFromFiber(fiber) || \"Component\"\n        );\n        didWarnAboutUnsafeLifecycles.add(fiber.type);\n      });\n      pendingComponentWillReceivePropsWarnings = [];\n    }\n\n    var UNSAFE_componentWillReceivePropsUniqueNames = new Set();\n\n    if (pendingUNSAFE_ComponentWillReceivePropsWarnings.length > 0) {\n      pendingUNSAFE_ComponentWillReceivePropsWarnings.forEach(function(fiber) {\n        UNSAFE_componentWillReceivePropsUniqueNames.add(\n          getComponentNameFromFiber(fiber) || \"Component\"\n        );\n        didWarnAboutUnsafeLifecycles.add(fiber.type);\n      });\n      pendingUNSAFE_ComponentWillReceivePropsWarnings = [];\n    }\n\n    var componentWillUpdateUniqueNames = new Set();\n\n    if (pendingComponentWillUpdateWarnings.length > 0) {\n      pendingComponentWillUpdateWarnings.forEach(function(fiber) {\n        componentWillUpdateUniqueNames.add(\n          getComponentNameFromFiber(fiber) || \"Component\"\n        );\n        didWarnAboutUnsafeLifecycles.add(fiber.type);\n      });\n      pendingComponentWillUpdateWarnings = [];\n    }\n\n    var UNSAFE_componentWillUpdateUniqueNames = new Set();\n\n    if (pendingUNSAFE_ComponentWillUpdateWarnings.length > 0) {\n      pendingUNSAFE_ComponentWillUpdateWarnings.forEach(function(fiber) {\n        UNSAFE_componentWillUpdateUniqueNames.add(\n          getComponentNameFromFiber(fiber) || \"Component\"\n        );\n        didWarnAboutUnsafeLifecycles.add(fiber.type);\n      });\n      pendingUNSAFE_ComponentWillUpdateWarnings = [];\n    } // Finally, we flush all the warnings\n    // UNSAFE_ ones before the deprecated ones, since they'll be 'louder'\n\n    if (UNSAFE_componentWillMountUniqueNames.size > 0) {\n      var sortedNames = setToSortedString(UNSAFE_componentWillMountUniqueNames);\n\n      error(\n        \"Using UNSAFE_componentWillMount in strict mode is not recommended and may indicate bugs in your code. \" +\n          \"See https://reactjs.org/link/unsafe-component-lifecycles for details.\\n\\n\" +\n          \"* Move code with side effects to componentDidMount, and set initial state in the constructor.\\n\" +\n          \"\\nPlease update the following components: %s\",\n        sortedNames\n      );\n    }\n\n    if (UNSAFE_componentWillReceivePropsUniqueNames.size > 0) {\n      var _sortedNames = setToSortedString(\n        UNSAFE_componentWillReceivePropsUniqueNames\n      );\n\n      error(\n        \"Using UNSAFE_componentWillReceiveProps in strict mode is not recommended \" +\n          \"and may indicate bugs in your code. \" +\n          \"See https://reactjs.org/link/unsafe-component-lifecycles for details.\\n\\n\" +\n          \"* Move data fetching code or side effects to componentDidUpdate.\\n\" +\n          \"* If you're updating state whenever props change, \" +\n          \"refactor your code to use memoization techniques or move it to \" +\n          \"static getDerivedStateFromProps. Learn more at: https://reactjs.org/link/derived-state\\n\" +\n          \"\\nPlease update the following components: %s\",\n        _sortedNames\n      );\n    }\n\n    if (UNSAFE_componentWillUpdateUniqueNames.size > 0) {\n      var _sortedNames2 = setToSortedString(\n        UNSAFE_componentWillUpdateUniqueNames\n      );\n\n      error(\n        \"Using UNSAFE_componentWillUpdate in strict mode is not recommended \" +\n          \"and may indicate bugs in your code. \" +\n          \"See https://reactjs.org/link/unsafe-component-lifecycles for details.\\n\\n\" +\n          \"* Move data fetching code or side effects to componentDidUpdate.\\n\" +\n          \"\\nPlease update the following components: %s\",\n        _sortedNames2\n      );\n    }\n\n    if (componentWillMountUniqueNames.size > 0) {\n      var _sortedNames3 = setToSortedString(componentWillMountUniqueNames);\n\n      warn(\n        \"componentWillMount has been renamed, and is not recommended for use. \" +\n          \"See https://reactjs.org/link/unsafe-component-lifecycles for details.\\n\\n\" +\n          \"* Move code with side effects to componentDidMount, and set initial state in the constructor.\\n\" +\n          \"* Rename componentWillMount to UNSAFE_componentWillMount to suppress \" +\n          \"this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. \" +\n          \"To rename all deprecated lifecycles to their new names, you can run \" +\n          \"`npx react-codemod rename-unsafe-lifecycles` in your project source folder.\\n\" +\n          \"\\nPlease update the following components: %s\",\n        _sortedNames3\n      );\n    }\n\n    if (componentWillReceivePropsUniqueNames.size > 0) {\n      var _sortedNames4 = setToSortedString(\n        componentWillReceivePropsUniqueNames\n      );\n\n      warn(\n        \"componentWillReceiveProps has been renamed, and is not recommended for use. \" +\n          \"See https://reactjs.org/link/unsafe-component-lifecycles for details.\\n\\n\" +\n          \"* Move data fetching code or side effects to componentDidUpdate.\\n\" +\n          \"* If you're updating state whenever props change, refactor your \" +\n          \"code to use memoization techniques or move it to \" +\n          \"static getDerivedStateFromProps. Learn more at: https://reactjs.org/link/derived-state\\n\" +\n          \"* Rename componentWillReceiveProps to UNSAFE_componentWillReceiveProps to suppress \" +\n          \"this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. \" +\n          \"To rename all deprecated lifecycles to their new names, you can run \" +\n          \"`npx react-codemod rename-unsafe-lifecycles` in your project source folder.\\n\" +\n          \"\\nPlease update the following components: %s\",\n        _sortedNames4\n      );\n    }\n\n    if (componentWillUpdateUniqueNames.size > 0) {\n      var _sortedNames5 = setToSortedString(componentWillUpdateUniqueNames);\n\n      warn(\n        \"componentWillUpdate has been renamed, and is not recommended for use. \" +\n          \"See https://reactjs.org/link/unsafe-component-lifecycles for details.\\n\\n\" +\n          \"* Move data fetching code or side effects to componentDidUpdate.\\n\" +\n          \"* Rename componentWillUpdate to UNSAFE_componentWillUpdate to suppress \" +\n          \"this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. \" +\n          \"To rename all deprecated lifecycles to their new names, you can run \" +\n          \"`npx react-codemod rename-unsafe-lifecycles` in your project source folder.\\n\" +\n          \"\\nPlease update the following components: %s\",\n        _sortedNames5\n      );\n    }\n  };\n\n  var pendingLegacyContextWarning = new Map(); // Tracks components we have already warned about.\n\n  var didWarnAboutLegacyContext = new Set();\n\n  ReactStrictModeWarnings.recordLegacyContextWarning = function(\n    fiber,\n    instance\n  ) {\n    var strictRoot = findStrictRoot(fiber);\n\n    if (strictRoot === null) {\n      error(\n        \"Expected to find a StrictMode component in a strict mode tree. \" +\n          \"This error is likely caused by a bug in React. Please file an issue.\"\n      );\n\n      return;\n    } // Dedup strategy: Warn once per component.\n\n    if (didWarnAboutLegacyContext.has(fiber.type)) {\n      return;\n    }\n\n    var warningsForRoot = pendingLegacyContextWarning.get(strictRoot);\n\n    if (\n      fiber.type.contextTypes != null ||\n      fiber.type.childContextTypes != null ||\n      (instance !== null && typeof instance.getChildContext === \"function\")\n    ) {\n      if (warningsForRoot === undefined) {\n        warningsForRoot = [];\n        pendingLegacyContextWarning.set(strictRoot, warningsForRoot);\n      }\n\n      warningsForRoot.push(fiber);\n    }\n  };\n\n  ReactStrictModeWarnings.flushLegacyContextWarning = function() {\n    pendingLegacyContextWarning.forEach(function(fiberArray, strictRoot) {\n      if (fiberArray.length === 0) {\n        return;\n      }\n\n      var firstFiber = fiberArray[0];\n      var uniqueNames = new Set();\n      fiberArray.forEach(function(fiber) {\n        uniqueNames.add(getComponentNameFromFiber(fiber) || \"Component\");\n        didWarnAboutLegacyContext.add(fiber.type);\n      });\n      var sortedNames = setToSortedString(uniqueNames);\n\n      try {\n        setCurrentFiber(firstFiber);\n\n        error(\n          \"Legacy context API has been detected within a strict-mode tree.\" +\n            \"\\n\\nThe old API will be supported in all 16.x releases, but applications \" +\n            \"using it should migrate to the new version.\" +\n            \"\\n\\nPlease update the following components: %s\" +\n            \"\\n\\nLearn more about this warning here: https://reactjs.org/link/legacy-context\",\n          sortedNames\n        );\n      } finally {\n        resetCurrentFiber();\n      }\n    });\n  };\n\n  ReactStrictModeWarnings.discardPendingWarnings = function() {\n    pendingComponentWillMountWarnings = [];\n    pendingUNSAFE_ComponentWillMountWarnings = [];\n    pendingComponentWillReceivePropsWarnings = [];\n    pendingUNSAFE_ComponentWillReceivePropsWarnings = [];\n    pendingComponentWillUpdateWarnings = [];\n    pendingUNSAFE_ComponentWillUpdateWarnings = [];\n    pendingLegacyContextWarning = new Map();\n  };\n}\n\n/*\n * The `'' + value` pattern (used in in perf-sensitive code) throws for Symbol\n * and Temporal.* types. See https://github.com/facebook/react/pull/22064.\n *\n * The functions in this module will throw an easier-to-understand,\n * easier-to-debug exception with a clear errors message message explaining the\n * problem. (Instead of a confusing exception thrown inside the implementation\n * of the `value` object).\n */\n// $FlowFixMe only called in DEV, so void return is not possible.\nfunction typeName(value) {\n  {\n    // toStringTag is needed for namespaced types like Temporal.Instant\n    var hasToStringTag = typeof Symbol === \"function\" && Symbol.toStringTag;\n    var type =\n      (hasToStringTag && value[Symbol.toStringTag]) ||\n      value.constructor.name ||\n      \"Object\";\n    return type;\n  }\n} // $FlowFixMe only called in DEV, so void return is not possible.\n\nfunction willCoercionThrow(value) {\n  {\n    try {\n      testStringCoercion(value);\n      return false;\n    } catch (e) {\n      return true;\n    }\n  }\n}\n\nfunction testStringCoercion(value) {\n  // If you ended up here by following an exception call stack, here's what's\n  // happened: you supplied an object or symbol value to React (as a prop, key,\n  // DOM attribute, CSS property, string ref, etc.) and when React tried to\n  // coerce it to a string using `'' + value`, an exception was thrown.\n  //\n  // The most common types that will cause this exception are `Symbol` instances\n  // and Temporal objects like `Temporal.Instant`. But any object that has a\n  // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this\n  // exception. (Library authors do this to prevent users from using built-in\n  // numeric operators like `+` or comparison operators like `>=` because custom\n  // methods are needed to perform accurate arithmetic or comparison.)\n  //\n  // To fix the problem, coerce this object or symbol value to a string before\n  // passing it to React. The most reliable way is usually `String(value)`.\n  //\n  // To find which value is throwing, check the browser or debugger console.\n  // Before this exception was thrown, there should be `console.error` output\n  // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the\n  // problem and how that type was used: key, atrribute, input value prop, etc.\n  // In most cases, this console output also shows the component and its\n  // ancestor components where the exception happened.\n  //\n  // eslint-disable-next-line react-internal/safe-string-coercion\n  return \"\" + value;\n}\nfunction checkKeyStringCoercion(value) {\n  {\n    if (willCoercionThrow(value)) {\n      error(\n        \"The provided key is an unsupported type %s.\" +\n          \" This value must be coerced to a string before before using it here.\",\n        typeName(value)\n      );\n\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n    }\n  }\n}\nfunction checkPropStringCoercion(value, propName) {\n  {\n    if (willCoercionThrow(value)) {\n      error(\n        \"The provided `%s` prop is an unsupported type %s.\" +\n          \" This value must be coerced to a string before before using it here.\",\n        propName,\n        typeName(value)\n      );\n\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n    }\n  }\n}\n\nfunction resolveDefaultProps(Component, baseProps) {\n  if (Component && Component.defaultProps) {\n    // Resolve default props. Taken from ReactElement\n    var props = assign({}, baseProps);\n    var defaultProps = Component.defaultProps;\n\n    for (var propName in defaultProps) {\n      if (props[propName] === undefined) {\n        props[propName] = defaultProps[propName];\n      }\n    }\n\n    return props;\n  }\n\n  return baseProps;\n}\n\nvar valueCursor = createCursor(null);\nvar rendererSigil;\n\n{\n  // Use this to detect multiple renderers using the same context\n  rendererSigil = {};\n}\n\nvar currentlyRenderingFiber = null;\nvar lastContextDependency = null;\nvar lastFullyObservedContext = null;\nvar isDisallowedContextReadInDEV = false;\nfunction resetContextDependencies() {\n  // This is called right before React yields execution, to ensure `readContext`\n  // cannot be called outside the render phase.\n  currentlyRenderingFiber = null;\n  lastContextDependency = null;\n  lastFullyObservedContext = null;\n\n  {\n    isDisallowedContextReadInDEV = false;\n  }\n}\nfunction enterDisallowedContextReadInDEV() {\n  {\n    isDisallowedContextReadInDEV = true;\n  }\n}\nfunction exitDisallowedContextReadInDEV() {\n  {\n    isDisallowedContextReadInDEV = false;\n  }\n}\nfunction pushProvider(providerFiber, context, nextValue) {\n  {\n    push(valueCursor, context._currentValue2, providerFiber);\n    context._currentValue2 = nextValue;\n\n    {\n      if (\n        context._currentRenderer2 !== undefined &&\n        context._currentRenderer2 !== null &&\n        context._currentRenderer2 !== rendererSigil\n      ) {\n        error(\n          \"Detected multiple renderers concurrently rendering the \" +\n            \"same context provider. This is currently unsupported.\"\n        );\n      }\n\n      context._currentRenderer2 = rendererSigil;\n    }\n  }\n}\nfunction popProvider(context, providerFiber) {\n  var currentValue = valueCursor.current;\n  pop(valueCursor, providerFiber);\n\n  {\n    {\n      context._currentValue2 = currentValue;\n    }\n  }\n}\nfunction scheduleContextWorkOnParentPath(parent, renderLanes, propagationRoot) {\n  // Update the child lanes of all the ancestors, including the alternates.\n  var node = parent;\n\n  while (node !== null) {\n    var alternate = node.alternate;\n\n    if (!isSubsetOfLanes(node.childLanes, renderLanes)) {\n      node.childLanes = mergeLanes(node.childLanes, renderLanes);\n\n      if (alternate !== null) {\n        alternate.childLanes = mergeLanes(alternate.childLanes, renderLanes);\n      }\n    } else if (\n      alternate !== null &&\n      !isSubsetOfLanes(alternate.childLanes, renderLanes)\n    ) {\n      alternate.childLanes = mergeLanes(alternate.childLanes, renderLanes);\n    }\n\n    if (node === propagationRoot) {\n      break;\n    }\n\n    node = node.return;\n  }\n\n  {\n    if (node !== propagationRoot) {\n      error(\n        \"Expected to find the propagation root when scheduling context work. \" +\n          \"This error is likely caused by a bug in React. Please file an issue.\"\n      );\n    }\n  }\n}\nfunction propagateContextChange(workInProgress, context, renderLanes) {\n  {\n    propagateContextChange_eager(workInProgress, context, renderLanes);\n  }\n}\n\nfunction propagateContextChange_eager(workInProgress, context, renderLanes) {\n  var fiber = workInProgress.child;\n\n  if (fiber !== null) {\n    // Set the return pointer of the child to the work-in-progress fiber.\n    fiber.return = workInProgress;\n  }\n\n  while (fiber !== null) {\n    var nextFiber = void 0; // Visit this fiber.\n\n    var list = fiber.dependencies;\n\n    if (list !== null) {\n      nextFiber = fiber.child;\n      var dependency = list.firstContext;\n\n      while (dependency !== null) {\n        // Check if the context matches.\n        if (dependency.context === context) {\n          // Match! Schedule an update on this fiber.\n          if (fiber.tag === ClassComponent) {\n            // Schedule a force update on the work-in-progress.\n            var lane = pickArbitraryLane(renderLanes);\n            var update = createUpdate(NoTimestamp, lane);\n            update.tag = ForceUpdate; // TODO: Because we don't have a work-in-progress, this will add the\n            // update to the current fiber, too, which means it will persist even if\n            // this render is thrown away. Since it's a race condition, not sure it's\n            // worth fixing.\n            // Inlined `enqueueUpdate` to remove interleaved update check\n\n            var updateQueue = fiber.updateQueue;\n\n            if (updateQueue === null);\n            else {\n              var sharedQueue = updateQueue.shared;\n              var pending = sharedQueue.pending;\n\n              if (pending === null) {\n                // This is the first update. Create a circular list.\n                update.next = update;\n              } else {\n                update.next = pending.next;\n                pending.next = update;\n              }\n\n              sharedQueue.pending = update;\n            }\n          }\n\n          fiber.lanes = mergeLanes(fiber.lanes, renderLanes);\n          var alternate = fiber.alternate;\n\n          if (alternate !== null) {\n            alternate.lanes = mergeLanes(alternate.lanes, renderLanes);\n          }\n\n          scheduleContextWorkOnParentPath(\n            fiber.return,\n            renderLanes,\n            workInProgress\n          ); // Mark the updated lanes on the list, too.\n\n          list.lanes = mergeLanes(list.lanes, renderLanes); // Since we already found a match, we can stop traversing the\n          // dependency list.\n\n          break;\n        }\n\n        dependency = dependency.next;\n      }\n    } else if (fiber.tag === ContextProvider) {\n      // Don't scan deeper if this is a matching provider\n      nextFiber = fiber.type === workInProgress.type ? null : fiber.child;\n    } else if (fiber.tag === DehydratedFragment) {\n      // If a dehydrated suspense boundary is in this subtree, we don't know\n      // if it will have any context consumers in it. The best we can do is\n      // mark it as having updates.\n      var parentSuspense = fiber.return;\n\n      if (parentSuspense === null) {\n        throw new Error(\n          \"We just came from a parent so we must have had a parent. This is a bug in React.\"\n        );\n      }\n\n      parentSuspense.lanes = mergeLanes(parentSuspense.lanes, renderLanes);\n      var _alternate = parentSuspense.alternate;\n\n      if (_alternate !== null) {\n        _alternate.lanes = mergeLanes(_alternate.lanes, renderLanes);\n      } // This is intentionally passing this fiber as the parent\n      // because we want to schedule this fiber as having work\n      // on its children. We'll use the childLanes on\n      // this fiber to indicate that a context has changed.\n\n      scheduleContextWorkOnParentPath(\n        parentSuspense,\n        renderLanes,\n        workInProgress\n      );\n      nextFiber = fiber.sibling;\n    } else {\n      // Traverse down.\n      nextFiber = fiber.child;\n    }\n\n    if (nextFiber !== null) {\n      // Set the return pointer of the child to the work-in-progress fiber.\n      nextFiber.return = fiber;\n    } else {\n      // No child. Traverse to next sibling.\n      nextFiber = fiber;\n\n      while (nextFiber !== null) {\n        if (nextFiber === workInProgress) {\n          // We're back to the root of this subtree. Exit.\n          nextFiber = null;\n          break;\n        }\n\n        var sibling = nextFiber.sibling;\n\n        if (sibling !== null) {\n          // Set the return pointer of the sibling to the work-in-progress fiber.\n          sibling.return = nextFiber.return;\n          nextFiber = sibling;\n          break;\n        } // No more siblings. Traverse up.\n\n        nextFiber = nextFiber.return;\n      }\n    }\n\n    fiber = nextFiber;\n  }\n}\nfunction prepareToReadContext(workInProgress, renderLanes) {\n  currentlyRenderingFiber = workInProgress;\n  lastContextDependency = null;\n  lastFullyObservedContext = null;\n  var dependencies = workInProgress.dependencies;\n\n  if (dependencies !== null) {\n    {\n      var firstContext = dependencies.firstContext;\n\n      if (firstContext !== null) {\n        if (includesSomeLane(dependencies.lanes, renderLanes)) {\n          // Context list has a pending update. Mark that this fiber performed work.\n          markWorkInProgressReceivedUpdate();\n        } // Reset the work-in-progress list\n\n        dependencies.firstContext = null;\n      }\n    }\n  }\n}\nfunction readContext(context) {\n  {\n    // This warning would fire if you read context inside a Hook like useMemo.\n    // Unlike the class check below, it's not enforced in production for perf.\n    if (isDisallowedContextReadInDEV) {\n      error(\n        \"Context can only be read while React is rendering. \" +\n          \"In classes, you can read it in the render method or getDerivedStateFromProps. \" +\n          \"In function components, you can read it directly in the function body, but not \" +\n          \"inside Hooks like useReducer() or useMemo().\"\n      );\n    }\n  }\n\n  var value = context._currentValue2;\n\n  if (lastFullyObservedContext === context);\n  else {\n    var contextItem = {\n      context: context,\n      memoizedValue: value,\n      next: null\n    };\n\n    if (lastContextDependency === null) {\n      if (currentlyRenderingFiber === null) {\n        throw new Error(\n          \"Context can only be read while React is rendering. \" +\n            \"In classes, you can read it in the render method or getDerivedStateFromProps. \" +\n            \"In function components, you can read it directly in the function body, but not \" +\n            \"inside Hooks like useReducer() or useMemo().\"\n        );\n      } // This is the first dependency for this component. Create a new list.\n\n      lastContextDependency = contextItem;\n      currentlyRenderingFiber.dependencies = {\n        lanes: NoLanes,\n        firstContext: contextItem\n      };\n    } else {\n      // Append a new context item.\n      lastContextDependency = lastContextDependency.next = contextItem;\n    }\n  }\n\n  return value;\n}\n\n// render. When this render exits, either because it finishes or because it is\n// interrupted, the interleaved updates will be transferred onto the main part\n// of the queue.\n\nvar concurrentQueues = null;\nfunction pushConcurrentUpdateQueue(queue) {\n  if (concurrentQueues === null) {\n    concurrentQueues = [queue];\n  } else {\n    concurrentQueues.push(queue);\n  }\n}\nfunction finishQueueingConcurrentUpdates() {\n  // Transfer the interleaved updates onto the main queue. Each queue has a\n  // `pending` field and an `interleaved` field. When they are not null, they\n  // point to the last node in a circular linked list. We need to append the\n  // interleaved list to the end of the pending list by joining them into a\n  // single, circular list.\n  if (concurrentQueues !== null) {\n    for (var i = 0; i < concurrentQueues.length; i++) {\n      var queue = concurrentQueues[i];\n      var lastInterleavedUpdate = queue.interleaved;\n\n      if (lastInterleavedUpdate !== null) {\n        queue.interleaved = null;\n        var firstInterleavedUpdate = lastInterleavedUpdate.next;\n        var lastPendingUpdate = queue.pending;\n\n        if (lastPendingUpdate !== null) {\n          var firstPendingUpdate = lastPendingUpdate.next;\n          lastPendingUpdate.next = firstInterleavedUpdate;\n          lastInterleavedUpdate.next = firstPendingUpdate;\n        }\n\n        queue.pending = lastInterleavedUpdate;\n      }\n    }\n\n    concurrentQueues = null;\n  }\n}\nfunction enqueueConcurrentHookUpdate(fiber, queue, update, lane) {\n  var interleaved = queue.interleaved;\n\n  if (interleaved === null) {\n    // This is the first update. Create a circular list.\n    update.next = update; // At the end of the current render, this queue's interleaved updates will\n    // be transferred to the pending queue.\n\n    pushConcurrentUpdateQueue(queue);\n  } else {\n    update.next = interleaved.next;\n    interleaved.next = update;\n  }\n\n  queue.interleaved = update;\n  return markUpdateLaneFromFiberToRoot(fiber, lane);\n}\nfunction enqueueConcurrentHookUpdateAndEagerlyBailout(\n  fiber,\n  queue,\n  update,\n  lane\n) {\n  var interleaved = queue.interleaved;\n\n  if (interleaved === null) {\n    // This is the first update. Create a circular list.\n    update.next = update; // At the end of the current render, this queue's interleaved updates will\n    // be transferred to the pending queue.\n\n    pushConcurrentUpdateQueue(queue);\n  } else {\n    update.next = interleaved.next;\n    interleaved.next = update;\n  }\n\n  queue.interleaved = update;\n}\nfunction enqueueConcurrentClassUpdate(fiber, queue, update, lane) {\n  var interleaved = queue.interleaved;\n\n  if (interleaved === null) {\n    // This is the first update. Create a circular list.\n    update.next = update; // At the end of the current render, this queue's interleaved updates will\n    // be transferred to the pending queue.\n\n    pushConcurrentUpdateQueue(queue);\n  } else {\n    update.next = interleaved.next;\n    interleaved.next = update;\n  }\n\n  queue.interleaved = update;\n  return markUpdateLaneFromFiberToRoot(fiber, lane);\n}\nfunction enqueueConcurrentRenderForLane(fiber, lane) {\n  return markUpdateLaneFromFiberToRoot(fiber, lane);\n} // Calling this function outside this module should only be done for backwards\n// compatibility and should always be accompanied by a warning.\n\nvar unsafe_markUpdateLaneFromFiberToRoot = markUpdateLaneFromFiberToRoot;\n\nfunction markUpdateLaneFromFiberToRoot(sourceFiber, lane) {\n  // Update the source fiber's lanes\n  sourceFiber.lanes = mergeLanes(sourceFiber.lanes, lane);\n  var alternate = sourceFiber.alternate;\n\n  if (alternate !== null) {\n    alternate.lanes = mergeLanes(alternate.lanes, lane);\n  }\n\n  {\n    if (\n      alternate === null &&\n      (sourceFiber.flags & (Placement | Hydrating)) !== NoFlags\n    ) {\n      warnAboutUpdateOnNotYetMountedFiberInDEV(sourceFiber);\n    }\n  } // Walk the parent path to the root and update the child lanes.\n\n  var node = sourceFiber;\n  var parent = sourceFiber.return;\n\n  while (parent !== null) {\n    parent.childLanes = mergeLanes(parent.childLanes, lane);\n    alternate = parent.alternate;\n\n    if (alternate !== null) {\n      alternate.childLanes = mergeLanes(alternate.childLanes, lane);\n    } else {\n      {\n        if ((parent.flags & (Placement | Hydrating)) !== NoFlags) {\n          warnAboutUpdateOnNotYetMountedFiberInDEV(sourceFiber);\n        }\n      }\n    }\n\n    node = parent;\n    parent = parent.return;\n  }\n\n  if (node.tag === HostRoot) {\n    var root = node.stateNode;\n    return root;\n  } else {\n    return null;\n  }\n}\n\nvar UpdateState = 0;\nvar ReplaceState = 1;\nvar ForceUpdate = 2;\nvar CaptureUpdate = 3; // Global state that is reset at the beginning of calling `processUpdateQueue`.\n// It should only be read right after calling `processUpdateQueue`, via\n// `checkHasForceUpdateAfterProcessing`.\n\nvar hasForceUpdate = false;\nvar didWarnUpdateInsideUpdate;\nvar currentlyProcessingQueue;\n\n{\n  didWarnUpdateInsideUpdate = false;\n  currentlyProcessingQueue = null;\n}\n\nfunction initializeUpdateQueue(fiber) {\n  var queue = {\n    baseState: fiber.memoizedState,\n    firstBaseUpdate: null,\n    lastBaseUpdate: null,\n    shared: {\n      pending: null,\n      interleaved: null,\n      lanes: NoLanes\n    },\n    effects: null\n  };\n  fiber.updateQueue = queue;\n}\nfunction cloneUpdateQueue(current, workInProgress) {\n  // Clone the update queue from current. Unless it's already a clone.\n  var queue = workInProgress.updateQueue;\n  var currentQueue = current.updateQueue;\n\n  if (queue === currentQueue) {\n    var clone = {\n      baseState: currentQueue.baseState,\n      firstBaseUpdate: currentQueue.firstBaseUpdate,\n      lastBaseUpdate: currentQueue.lastBaseUpdate,\n      shared: currentQueue.shared,\n      effects: currentQueue.effects\n    };\n    workInProgress.updateQueue = clone;\n  }\n}\nfunction createUpdate(eventTime, lane) {\n  var update = {\n    eventTime: eventTime,\n    lane: lane,\n    tag: UpdateState,\n    payload: null,\n    callback: null,\n    next: null\n  };\n  return update;\n}\nfunction enqueueUpdate(fiber, update, lane) {\n  var updateQueue = fiber.updateQueue;\n\n  if (updateQueue === null) {\n    // Only occurs if the fiber has been unmounted.\n    return null;\n  }\n\n  var sharedQueue = updateQueue.shared;\n\n  {\n    if (\n      currentlyProcessingQueue === sharedQueue &&\n      !didWarnUpdateInsideUpdate\n    ) {\n      error(\n        \"An update (setState, replaceState, or forceUpdate) was scheduled \" +\n          \"from inside an update function. Update functions should be pure, \" +\n          \"with zero side-effects. Consider using componentDidUpdate or a \" +\n          \"callback.\"\n      );\n\n      didWarnUpdateInsideUpdate = true;\n    }\n  }\n\n  if (isUnsafeClassRenderPhaseUpdate()) {\n    // This is an unsafe render phase update. Add directly to the update\n    // queue so we can process it immediately during the current render.\n    var pending = sharedQueue.pending;\n\n    if (pending === null) {\n      // This is the first update. Create a circular list.\n      update.next = update;\n    } else {\n      update.next = pending.next;\n      pending.next = update;\n    }\n\n    sharedQueue.pending = update; // Update the childLanes even though we're most likely already rendering\n    // this fiber. This is for backwards compatibility in the case where you\n    // update a different component during render phase than the one that is\n    // currently renderings (a pattern that is accompanied by a warning).\n\n    return unsafe_markUpdateLaneFromFiberToRoot(fiber, lane);\n  } else {\n    return enqueueConcurrentClassUpdate(fiber, sharedQueue, update, lane);\n  }\n}\nfunction entangleTransitions(root, fiber, lane) {\n  var updateQueue = fiber.updateQueue;\n\n  if (updateQueue === null) {\n    // Only occurs if the fiber has been unmounted.\n    return;\n  }\n\n  var sharedQueue = updateQueue.shared;\n\n  if (isTransitionLane(lane)) {\n    var queueLanes = sharedQueue.lanes; // If any entangled lanes are no longer pending on the root, then they must\n    // have finished. We can remove them from the shared queue, which represents\n    // a superset of the actually pending lanes. In some cases we may entangle\n    // more than we need to, but that's OK. In fact it's worse if we *don't*\n    // entangle when we should.\n\n    queueLanes = intersectLanes(queueLanes, root.pendingLanes); // Entangle the new transition lane with the other transition lanes.\n\n    var newQueueLanes = mergeLanes(queueLanes, lane);\n    sharedQueue.lanes = newQueueLanes; // Even if queue.lanes already include lane, we don't know for certain if\n    // the lane finished since the last time we entangled it. So we need to\n    // entangle it again, just to be sure.\n\n    markRootEntangled(root, newQueueLanes);\n  }\n}\nfunction enqueueCapturedUpdate(workInProgress, capturedUpdate) {\n  // Captured updates are updates that are thrown by a child during the render\n  // phase. They should be discarded if the render is aborted. Therefore,\n  // we should only put them on the work-in-progress queue, not the current one.\n  var queue = workInProgress.updateQueue; // Check if the work-in-progress queue is a clone.\n\n  var current = workInProgress.alternate;\n\n  if (current !== null) {\n    var currentQueue = current.updateQueue;\n\n    if (queue === currentQueue) {\n      // The work-in-progress queue is the same as current. This happens when\n      // we bail out on a parent fiber that then captures an error thrown by\n      // a child. Since we want to append the update only to the work-in\n      // -progress queue, we need to clone the updates. We usually clone during\n      // processUpdateQueue, but that didn't happen in this case because we\n      // skipped over the parent when we bailed out.\n      var newFirst = null;\n      var newLast = null;\n      var firstBaseUpdate = queue.firstBaseUpdate;\n\n      if (firstBaseUpdate !== null) {\n        // Loop through the updates and clone them.\n        var update = firstBaseUpdate;\n\n        do {\n          var clone = {\n            eventTime: update.eventTime,\n            lane: update.lane,\n            tag: update.tag,\n            payload: update.payload,\n            callback: update.callback,\n            next: null\n          };\n\n          if (newLast === null) {\n            newFirst = newLast = clone;\n          } else {\n            newLast.next = clone;\n            newLast = clone;\n          }\n\n          update = update.next;\n        } while (update !== null); // Append the captured update the end of the cloned list.\n\n        if (newLast === null) {\n          newFirst = newLast = capturedUpdate;\n        } else {\n          newLast.next = capturedUpdate;\n          newLast = capturedUpdate;\n        }\n      } else {\n        // There are no base updates.\n        newFirst = newLast = capturedUpdate;\n      }\n\n      queue = {\n        baseState: currentQueue.baseState,\n        firstBaseUpdate: newFirst,\n        lastBaseUpdate: newLast,\n        shared: currentQueue.shared,\n        effects: currentQueue.effects\n      };\n      workInProgress.updateQueue = queue;\n      return;\n    }\n  } // Append the update to the end of the list.\n\n  var lastBaseUpdate = queue.lastBaseUpdate;\n\n  if (lastBaseUpdate === null) {\n    queue.firstBaseUpdate = capturedUpdate;\n  } else {\n    lastBaseUpdate.next = capturedUpdate;\n  }\n\n  queue.lastBaseUpdate = capturedUpdate;\n}\n\nfunction getStateFromUpdate(\n  workInProgress,\n  queue,\n  update,\n  prevState,\n  nextProps,\n  instance\n) {\n  switch (update.tag) {\n    case ReplaceState: {\n      var payload = update.payload;\n\n      if (typeof payload === \"function\") {\n        // Updater function\n        {\n          enterDisallowedContextReadInDEV();\n        }\n\n        var nextState = payload.call(instance, prevState, nextProps);\n\n        {\n          exitDisallowedContextReadInDEV();\n        }\n\n        return nextState;\n      } // State object\n\n      return payload;\n    }\n\n    case CaptureUpdate: {\n      workInProgress.flags =\n        (workInProgress.flags & ~ShouldCapture) | DidCapture;\n    }\n    // Intentional fallthrough\n\n    case UpdateState: {\n      var _payload = update.payload;\n      var partialState;\n\n      if (typeof _payload === \"function\") {\n        // Updater function\n        {\n          enterDisallowedContextReadInDEV();\n        }\n\n        partialState = _payload.call(instance, prevState, nextProps);\n\n        {\n          exitDisallowedContextReadInDEV();\n        }\n      } else {\n        // Partial state object\n        partialState = _payload;\n      }\n\n      if (partialState === null || partialState === undefined) {\n        // Null and undefined are treated as no-ops.\n        return prevState;\n      } // Merge the partial state and the previous state.\n\n      return assign({}, prevState, partialState);\n    }\n\n    case ForceUpdate: {\n      hasForceUpdate = true;\n      return prevState;\n    }\n  }\n\n  return prevState;\n}\n\nfunction processUpdateQueue(workInProgress, props, instance, renderLanes) {\n  // This is always non-null on a ClassComponent or HostRoot\n  var queue = workInProgress.updateQueue;\n  hasForceUpdate = false;\n\n  {\n    currentlyProcessingQueue = queue.shared;\n  }\n\n  var firstBaseUpdate = queue.firstBaseUpdate;\n  var lastBaseUpdate = queue.lastBaseUpdate; // Check if there are pending updates. If so, transfer them to the base queue.\n\n  var pendingQueue = queue.shared.pending;\n\n  if (pendingQueue !== null) {\n    queue.shared.pending = null; // The pending queue is circular. Disconnect the pointer between first\n    // and last so that it's non-circular.\n\n    var lastPendingUpdate = pendingQueue;\n    var firstPendingUpdate = lastPendingUpdate.next;\n    lastPendingUpdate.next = null; // Append pending updates to base queue\n\n    if (lastBaseUpdate === null) {\n      firstBaseUpdate = firstPendingUpdate;\n    } else {\n      lastBaseUpdate.next = firstPendingUpdate;\n    }\n\n    lastBaseUpdate = lastPendingUpdate; // If there's a current queue, and it's different from the base queue, then\n    // we need to transfer the updates to that queue, too. Because the base\n    // queue is a singly-linked list with no cycles, we can append to both\n    // lists and take advantage of structural sharing.\n    // TODO: Pass `current` as argument\n\n    var current = workInProgress.alternate;\n\n    if (current !== null) {\n      // This is always non-null on a ClassComponent or HostRoot\n      var currentQueue = current.updateQueue;\n      var currentLastBaseUpdate = currentQueue.lastBaseUpdate;\n\n      if (currentLastBaseUpdate !== lastBaseUpdate) {\n        if (currentLastBaseUpdate === null) {\n          currentQueue.firstBaseUpdate = firstPendingUpdate;\n        } else {\n          currentLastBaseUpdate.next = firstPendingUpdate;\n        }\n\n        currentQueue.lastBaseUpdate = lastPendingUpdate;\n      }\n    }\n  } // These values may change as we process the queue.\n\n  if (firstBaseUpdate !== null) {\n    // Iterate through the list of updates to compute the result.\n    var newState = queue.baseState; // TODO: Don't need to accumulate this. Instead, we can remove renderLanes\n    // from the original lanes.\n\n    var newLanes = NoLanes;\n    var newBaseState = null;\n    var newFirstBaseUpdate = null;\n    var newLastBaseUpdate = null;\n    var update = firstBaseUpdate;\n\n    do {\n      var updateLane = update.lane;\n      var updateEventTime = update.eventTime;\n\n      if (!isSubsetOfLanes(renderLanes, updateLane)) {\n        // Priority is insufficient. Skip this update. If this is the first\n        // skipped update, the previous update/state is the new base\n        // update/state.\n        var clone = {\n          eventTime: updateEventTime,\n          lane: updateLane,\n          tag: update.tag,\n          payload: update.payload,\n          callback: update.callback,\n          next: null\n        };\n\n        if (newLastBaseUpdate === null) {\n          newFirstBaseUpdate = newLastBaseUpdate = clone;\n          newBaseState = newState;\n        } else {\n          newLastBaseUpdate = newLastBaseUpdate.next = clone;\n        } // Update the remaining priority in the queue.\n\n        newLanes = mergeLanes(newLanes, updateLane);\n      } else {\n        // This update does have sufficient priority.\n        if (newLastBaseUpdate !== null) {\n          var _clone = {\n            eventTime: updateEventTime,\n            // This update is going to be committed so we never want uncommit\n            // it. Using NoLane works because 0 is a subset of all bitmasks, so\n            // this will never be skipped by the check above.\n            lane: NoLane,\n            tag: update.tag,\n            payload: update.payload,\n            callback: update.callback,\n            next: null\n          };\n          newLastBaseUpdate = newLastBaseUpdate.next = _clone;\n        } // Process this update.\n\n        newState = getStateFromUpdate(\n          workInProgress,\n          queue,\n          update,\n          newState,\n          props,\n          instance\n        );\n        var callback = update.callback;\n\n        if (\n          callback !== null && // If the update was already committed, we should not queue its\n          // callback again.\n          update.lane !== NoLane\n        ) {\n          workInProgress.flags |= Callback;\n          var effects = queue.effects;\n\n          if (effects === null) {\n            queue.effects = [update];\n          } else {\n            effects.push(update);\n          }\n        }\n      }\n\n      update = update.next;\n\n      if (update === null) {\n        pendingQueue = queue.shared.pending;\n\n        if (pendingQueue === null) {\n          break;\n        } else {\n          // An update was scheduled from inside a reducer. Add the new\n          // pending updates to the end of the list and keep processing.\n          var _lastPendingUpdate = pendingQueue; // Intentionally unsound. Pending updates form a circular list, but we\n          // unravel them when transferring them to the base queue.\n\n          var _firstPendingUpdate = _lastPendingUpdate.next;\n          _lastPendingUpdate.next = null;\n          update = _firstPendingUpdate;\n          queue.lastBaseUpdate = _lastPendingUpdate;\n          queue.shared.pending = null;\n        }\n      }\n    } while (true);\n\n    if (newLastBaseUpdate === null) {\n      newBaseState = newState;\n    }\n\n    queue.baseState = newBaseState;\n    queue.firstBaseUpdate = newFirstBaseUpdate;\n    queue.lastBaseUpdate = newLastBaseUpdate; // Interleaved updates are stored on a separate queue. We aren't going to\n    // process them during this render, but we do need to track which lanes\n    // are remaining.\n\n    var lastInterleaved = queue.shared.interleaved;\n\n    if (lastInterleaved !== null) {\n      var interleaved = lastInterleaved;\n\n      do {\n        newLanes = mergeLanes(newLanes, interleaved.lane);\n        interleaved = interleaved.next;\n      } while (interleaved !== lastInterleaved);\n    } else if (firstBaseUpdate === null) {\n      // `queue.lanes` is used for entangling transitions. We can set it back to\n      // zero once the queue is empty.\n      queue.shared.lanes = NoLanes;\n    } // Set the remaining expiration time to be whatever is remaining in the queue.\n    // This should be fine because the only two other things that contribute to\n    // expiration time are props and context. We're already in the middle of the\n    // begin phase by the time we start processing the queue, so we've already\n    // dealt with the props. Context in components that specify\n    // shouldComponentUpdate is tricky; but we'll have to account for\n    // that regardless.\n\n    markSkippedUpdateLanes(newLanes);\n    workInProgress.lanes = newLanes;\n    workInProgress.memoizedState = newState;\n  }\n\n  {\n    currentlyProcessingQueue = null;\n  }\n}\n\nfunction callCallback(callback, context) {\n  if (typeof callback !== \"function\") {\n    throw new Error(\n      \"Invalid argument passed as callback. Expected a function. Instead \" +\n        (\"received: \" + callback)\n    );\n  }\n\n  callback.call(context);\n}\n\nfunction resetHasForceUpdateBeforeProcessing() {\n  hasForceUpdate = false;\n}\nfunction checkHasForceUpdateAfterProcessing() {\n  return hasForceUpdate;\n}\nfunction commitUpdateQueue(finishedWork, finishedQueue, instance) {\n  // Commit the effects\n  var effects = finishedQueue.effects;\n  finishedQueue.effects = null;\n\n  if (effects !== null) {\n    for (var i = 0; i < effects.length; i++) {\n      var effect = effects[i];\n      var callback = effect.callback;\n\n      if (callback !== null) {\n        effect.callback = null;\n        callCallback(callback, instance);\n      }\n    }\n  }\n}\n\nvar fakeInternalInstance = {}; // React.Component uses a shared frozen object by default.\n// We'll use it to determine whether we need to initialize legacy refs.\n\nvar emptyRefsObject = new React.Component().refs;\nvar didWarnAboutStateAssignmentForComponent;\nvar didWarnAboutUninitializedState;\nvar didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate;\nvar didWarnAboutLegacyLifecyclesAndDerivedState;\nvar didWarnAboutUndefinedDerivedState;\nvar warnOnUndefinedDerivedState;\nvar warnOnInvalidCallback;\nvar didWarnAboutDirectlyAssigningPropsToState;\nvar didWarnAboutContextTypeAndContextTypes;\nvar didWarnAboutInvalidateContextType;\n\n{\n  didWarnAboutStateAssignmentForComponent = new Set();\n  didWarnAboutUninitializedState = new Set();\n  didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate = new Set();\n  didWarnAboutLegacyLifecyclesAndDerivedState = new Set();\n  didWarnAboutDirectlyAssigningPropsToState = new Set();\n  didWarnAboutUndefinedDerivedState = new Set();\n  didWarnAboutContextTypeAndContextTypes = new Set();\n  didWarnAboutInvalidateContextType = new Set();\n  var didWarnOnInvalidCallback = new Set();\n\n  warnOnInvalidCallback = function(callback, callerName) {\n    if (callback === null || typeof callback === \"function\") {\n      return;\n    }\n\n    var key = callerName + \"_\" + callback;\n\n    if (!didWarnOnInvalidCallback.has(key)) {\n      didWarnOnInvalidCallback.add(key);\n\n      error(\n        \"%s(...): Expected the last optional `callback` argument to be a \" +\n          \"function. Instead received: %s.\",\n        callerName,\n        callback\n      );\n    }\n  };\n\n  warnOnUndefinedDerivedState = function(type, partialState) {\n    if (partialState === undefined) {\n      var componentName = getComponentNameFromType(type) || \"Component\";\n\n      if (!didWarnAboutUndefinedDerivedState.has(componentName)) {\n        didWarnAboutUndefinedDerivedState.add(componentName);\n\n        error(\n          \"%s.getDerivedStateFromProps(): A valid state object (or null) must be returned. \" +\n            \"You have returned undefined.\",\n          componentName\n        );\n      }\n    }\n  }; // This is so gross but it's at least non-critical and can be removed if\n  // it causes problems. This is meant to give a nicer error message for\n  // ReactDOM15.unstable_renderSubtreeIntoContainer(reactDOM16Component,\n  // ...)) which otherwise throws a \"_processChildContext is not a function\"\n  // exception.\n\n  Object.defineProperty(fakeInternalInstance, \"_processChildContext\", {\n    enumerable: false,\n    value: function() {\n      throw new Error(\n        \"_processChildContext is not available in React 16+. This likely \" +\n          \"means you have multiple copies of React and are attempting to nest \" +\n          \"a React 15 tree inside a React 16 tree using \" +\n          \"unstable_renderSubtreeIntoContainer, which isn't supported. Try \" +\n          \"to make sure you have only one copy of React (and ideally, switch \" +\n          \"to ReactDOM.createPortal).\"\n      );\n    }\n  });\n  Object.freeze(fakeInternalInstance);\n}\n\nfunction applyDerivedStateFromProps(\n  workInProgress,\n  ctor,\n  getDerivedStateFromProps,\n  nextProps\n) {\n  var prevState = workInProgress.memoizedState;\n  var partialState = getDerivedStateFromProps(nextProps, prevState);\n\n  {\n    warnOnUndefinedDerivedState(ctor, partialState);\n  } // Merge the partial state and the previous state.\n\n  var memoizedState =\n    partialState === null || partialState === undefined\n      ? prevState\n      : assign({}, prevState, partialState);\n  workInProgress.memoizedState = memoizedState; // Once the update queue is empty, persist the derived state onto the\n  // base state.\n\n  if (workInProgress.lanes === NoLanes) {\n    // Queue is always non-null for classes\n    var updateQueue = workInProgress.updateQueue;\n    updateQueue.baseState = memoizedState;\n  }\n}\n\nvar classComponentUpdater = {\n  isMounted: isMounted,\n  enqueueSetState: function(inst, payload, callback) {\n    var fiber = get(inst);\n    var eventTime = requestEventTime();\n    var lane = requestUpdateLane(fiber);\n    var update = createUpdate(eventTime, lane);\n    update.payload = payload;\n\n    if (callback !== undefined && callback !== null) {\n      {\n        warnOnInvalidCallback(callback, \"setState\");\n      }\n\n      update.callback = callback;\n    }\n\n    var root = enqueueUpdate(fiber, update, lane);\n\n    if (root !== null) {\n      scheduleUpdateOnFiber(root, fiber, lane, eventTime);\n      entangleTransitions(root, fiber, lane);\n    }\n  },\n  enqueueReplaceState: function(inst, payload, callback) {\n    var fiber = get(inst);\n    var eventTime = requestEventTime();\n    var lane = requestUpdateLane(fiber);\n    var update = createUpdate(eventTime, lane);\n    update.tag = ReplaceState;\n    update.payload = payload;\n\n    if (callback !== undefined && callback !== null) {\n      {\n        warnOnInvalidCallback(callback, \"replaceState\");\n      }\n\n      update.callback = callback;\n    }\n\n    var root = enqueueUpdate(fiber, update, lane);\n\n    if (root !== null) {\n      scheduleUpdateOnFiber(root, fiber, lane, eventTime);\n      entangleTransitions(root, fiber, lane);\n    }\n  },\n  enqueueForceUpdate: function(inst, callback) {\n    var fiber = get(inst);\n    var eventTime = requestEventTime();\n    var lane = requestUpdateLane(fiber);\n    var update = createUpdate(eventTime, lane);\n    update.tag = ForceUpdate;\n\n    if (callback !== undefined && callback !== null) {\n      {\n        warnOnInvalidCallback(callback, \"forceUpdate\");\n      }\n\n      update.callback = callback;\n    }\n\n    var root = enqueueUpdate(fiber, update, lane);\n\n    if (root !== null) {\n      scheduleUpdateOnFiber(root, fiber, lane, eventTime);\n      entangleTransitions(root, fiber, lane);\n    }\n  }\n};\n\nfunction checkShouldComponentUpdate(\n  workInProgress,\n  ctor,\n  oldProps,\n  newProps,\n  oldState,\n  newState,\n  nextContext\n) {\n  var instance = workInProgress.stateNode;\n\n  if (typeof instance.shouldComponentUpdate === \"function\") {\n    var shouldUpdate = instance.shouldComponentUpdate(\n      newProps,\n      newState,\n      nextContext\n    );\n\n    {\n      if (shouldUpdate === undefined) {\n        error(\n          \"%s.shouldComponentUpdate(): Returned undefined instead of a \" +\n            \"boolean value. Make sure to return true or false.\",\n          getComponentNameFromType(ctor) || \"Component\"\n        );\n      }\n    }\n\n    return shouldUpdate;\n  }\n\n  if (ctor.prototype && ctor.prototype.isPureReactComponent) {\n    return (\n      !shallowEqual(oldProps, newProps) || !shallowEqual(oldState, newState)\n    );\n  }\n\n  return true;\n}\n\nfunction checkClassInstance(workInProgress, ctor, newProps) {\n  var instance = workInProgress.stateNode;\n\n  {\n    var name = getComponentNameFromType(ctor) || \"Component\";\n    var renderPresent = instance.render;\n\n    if (!renderPresent) {\n      if (ctor.prototype && typeof ctor.prototype.render === \"function\") {\n        error(\n          \"%s(...): No `render` method found on the returned component \" +\n            \"instance: did you accidentally return an object from the constructor?\",\n          name\n        );\n      } else {\n        error(\n          \"%s(...): No `render` method found on the returned component \" +\n            \"instance: you may have forgotten to define `render`.\",\n          name\n        );\n      }\n    }\n\n    if (\n      instance.getInitialState &&\n      !instance.getInitialState.isReactClassApproved &&\n      !instance.state\n    ) {\n      error(\n        \"getInitialState was defined on %s, a plain JavaScript class. \" +\n          \"This is only supported for classes created using React.createClass. \" +\n          \"Did you mean to define a state property instead?\",\n        name\n      );\n    }\n\n    if (\n      instance.getDefaultProps &&\n      !instance.getDefaultProps.isReactClassApproved\n    ) {\n      error(\n        \"getDefaultProps was defined on %s, a plain JavaScript class. \" +\n          \"This is only supported for classes created using React.createClass. \" +\n          \"Use a static property to define defaultProps instead.\",\n        name\n      );\n    }\n\n    if (instance.propTypes) {\n      error(\n        \"propTypes was defined as an instance property on %s. Use a static \" +\n          \"property to define propTypes instead.\",\n        name\n      );\n    }\n\n    if (instance.contextType) {\n      error(\n        \"contextType was defined as an instance property on %s. Use a static \" +\n          \"property to define contextType instead.\",\n        name\n      );\n    }\n\n    {\n      if (instance.contextTypes) {\n        error(\n          \"contextTypes was defined as an instance property on %s. Use a static \" +\n            \"property to define contextTypes instead.\",\n          name\n        );\n      }\n\n      if (\n        ctor.contextType &&\n        ctor.contextTypes &&\n        !didWarnAboutContextTypeAndContextTypes.has(ctor)\n      ) {\n        didWarnAboutContextTypeAndContextTypes.add(ctor);\n\n        error(\n          \"%s declares both contextTypes and contextType static properties. \" +\n            \"The legacy contextTypes property will be ignored.\",\n          name\n        );\n      }\n    }\n\n    if (typeof instance.componentShouldUpdate === \"function\") {\n      error(\n        \"%s has a method called \" +\n          \"componentShouldUpdate(). Did you mean shouldComponentUpdate()? \" +\n          \"The name is phrased as a question because the function is \" +\n          \"expected to return a value.\",\n        name\n      );\n    }\n\n    if (\n      ctor.prototype &&\n      ctor.prototype.isPureReactComponent &&\n      typeof instance.shouldComponentUpdate !== \"undefined\"\n    ) {\n      error(\n        \"%s has a method called shouldComponentUpdate(). \" +\n          \"shouldComponentUpdate should not be used when extending React.PureComponent. \" +\n          \"Please extend React.Component if shouldComponentUpdate is used.\",\n        getComponentNameFromType(ctor) || \"A pure component\"\n      );\n    }\n\n    if (typeof instance.componentDidUnmount === \"function\") {\n      error(\n        \"%s has a method called \" +\n          \"componentDidUnmount(). But there is no such lifecycle method. \" +\n          \"Did you mean componentWillUnmount()?\",\n        name\n      );\n    }\n\n    if (typeof instance.componentDidReceiveProps === \"function\") {\n      error(\n        \"%s has a method called \" +\n          \"componentDidReceiveProps(). But there is no such lifecycle method. \" +\n          \"If you meant to update the state in response to changing props, \" +\n          \"use componentWillReceiveProps(). If you meant to fetch data or \" +\n          \"run side-effects or mutations after React has updated the UI, use componentDidUpdate().\",\n        name\n      );\n    }\n\n    if (typeof instance.componentWillRecieveProps === \"function\") {\n      error(\n        \"%s has a method called \" +\n          \"componentWillRecieveProps(). Did you mean componentWillReceiveProps()?\",\n        name\n      );\n    }\n\n    if (typeof instance.UNSAFE_componentWillRecieveProps === \"function\") {\n      error(\n        \"%s has a method called \" +\n          \"UNSAFE_componentWillRecieveProps(). Did you mean UNSAFE_componentWillReceiveProps()?\",\n        name\n      );\n    }\n\n    var hasMutatedProps = instance.props !== newProps;\n\n    if (instance.props !== undefined && hasMutatedProps) {\n      error(\n        \"%s(...): When calling super() in `%s`, make sure to pass \" +\n          \"up the same props that your component's constructor was passed.\",\n        name,\n        name\n      );\n    }\n\n    if (instance.defaultProps) {\n      error(\n        \"Setting defaultProps as an instance property on %s is not supported and will be ignored.\" +\n          \" Instead, define defaultProps as a static property on %s.\",\n        name,\n        name\n      );\n    }\n\n    if (\n      typeof instance.getSnapshotBeforeUpdate === \"function\" &&\n      typeof instance.componentDidUpdate !== \"function\" &&\n      !didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.has(ctor)\n    ) {\n      didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.add(ctor);\n\n      error(\n        \"%s: getSnapshotBeforeUpdate() should be used with componentDidUpdate(). \" +\n          \"This component defines getSnapshotBeforeUpdate() only.\",\n        getComponentNameFromType(ctor)\n      );\n    }\n\n    if (typeof instance.getDerivedStateFromProps === \"function\") {\n      error(\n        \"%s: getDerivedStateFromProps() is defined as an instance method \" +\n          \"and will be ignored. Instead, declare it as a static method.\",\n        name\n      );\n    }\n\n    if (typeof instance.getDerivedStateFromError === \"function\") {\n      error(\n        \"%s: getDerivedStateFromError() is defined as an instance method \" +\n          \"and will be ignored. Instead, declare it as a static method.\",\n        name\n      );\n    }\n\n    if (typeof ctor.getSnapshotBeforeUpdate === \"function\") {\n      error(\n        \"%s: getSnapshotBeforeUpdate() is defined as a static method \" +\n          \"and will be ignored. Instead, declare it as an instance method.\",\n        name\n      );\n    }\n\n    var _state = instance.state;\n\n    if (_state && (typeof _state !== \"object\" || isArray(_state))) {\n      error(\"%s.state: must be set to an object or null\", name);\n    }\n\n    if (\n      typeof instance.getChildContext === \"function\" &&\n      typeof ctor.childContextTypes !== \"object\"\n    ) {\n      error(\n        \"%s.getChildContext(): childContextTypes must be defined in order to \" +\n          \"use getChildContext().\",\n        name\n      );\n    }\n  }\n}\n\nfunction adoptClassInstance(workInProgress, instance) {\n  instance.updater = classComponentUpdater;\n  workInProgress.stateNode = instance; // The instance needs access to the fiber so that it can schedule updates\n\n  set(instance, workInProgress);\n\n  {\n    instance._reactInternalInstance = fakeInternalInstance;\n  }\n}\n\nfunction constructClassInstance(workInProgress, ctor, props) {\n  var isLegacyContextConsumer = false;\n  var unmaskedContext = emptyContextObject;\n  var context = emptyContextObject;\n  var contextType = ctor.contextType;\n\n  {\n    if (\"contextType\" in ctor) {\n      var isValid = // Allow null for conditional declaration\n        contextType === null ||\n        (contextType !== undefined &&\n          contextType.$$typeof === REACT_CONTEXT_TYPE &&\n          contextType._context === undefined); // Not a <Context.Consumer>\n\n      if (!isValid && !didWarnAboutInvalidateContextType.has(ctor)) {\n        didWarnAboutInvalidateContextType.add(ctor);\n        var addendum = \"\";\n\n        if (contextType === undefined) {\n          addendum =\n            \" However, it is set to undefined. \" +\n            \"This can be caused by a typo or by mixing up named and default imports. \" +\n            \"This can also happen due to a circular dependency, so \" +\n            \"try moving the createContext() call to a separate file.\";\n        } else if (typeof contextType !== \"object\") {\n          addendum = \" However, it is set to a \" + typeof contextType + \".\";\n        } else if (contextType.$$typeof === REACT_PROVIDER_TYPE) {\n          addendum = \" Did you accidentally pass the Context.Provider instead?\";\n        } else if (contextType._context !== undefined) {\n          // <Context.Consumer>\n          addendum = \" Did you accidentally pass the Context.Consumer instead?\";\n        } else {\n          addendum =\n            \" However, it is set to an object with keys {\" +\n            Object.keys(contextType).join(\", \") +\n            \"}.\";\n        }\n\n        error(\n          \"%s defines an invalid contextType. \" +\n            \"contextType should point to the Context object returned by React.createContext().%s\",\n          getComponentNameFromType(ctor) || \"Component\",\n          addendum\n        );\n      }\n    }\n  }\n\n  if (typeof contextType === \"object\" && contextType !== null) {\n    context = readContext(contextType);\n  } else {\n    unmaskedContext = getUnmaskedContext(workInProgress, ctor, true);\n    var contextTypes = ctor.contextTypes;\n    isLegacyContextConsumer =\n      contextTypes !== null && contextTypes !== undefined;\n    context = isLegacyContextConsumer\n      ? getMaskedContext(workInProgress, unmaskedContext)\n      : emptyContextObject;\n  }\n\n  var instance = new ctor(props, context); // Instantiate twice to help detect side-effects.\n\n  var state = (workInProgress.memoizedState =\n    instance.state !== null && instance.state !== undefined\n      ? instance.state\n      : null);\n  adoptClassInstance(workInProgress, instance);\n\n  {\n    if (typeof ctor.getDerivedStateFromProps === \"function\" && state === null) {\n      var componentName = getComponentNameFromType(ctor) || \"Component\";\n\n      if (!didWarnAboutUninitializedState.has(componentName)) {\n        didWarnAboutUninitializedState.add(componentName);\n\n        error(\n          \"`%s` uses `getDerivedStateFromProps` but its initial state is \" +\n            \"%s. This is not recommended. Instead, define the initial state by \" +\n            \"assigning an object to `this.state` in the constructor of `%s`. \" +\n            \"This ensures that `getDerivedStateFromProps` arguments have a consistent shape.\",\n          componentName,\n          instance.state === null ? \"null\" : \"undefined\",\n          componentName\n        );\n      }\n    } // If new component APIs are defined, \"unsafe\" lifecycles won't be called.\n    // Warn about these lifecycles if they are present.\n    // Don't warn about react-lifecycles-compat polyfilled methods though.\n\n    if (\n      typeof ctor.getDerivedStateFromProps === \"function\" ||\n      typeof instance.getSnapshotBeforeUpdate === \"function\"\n    ) {\n      var foundWillMountName = null;\n      var foundWillReceivePropsName = null;\n      var foundWillUpdateName = null;\n\n      if (\n        typeof instance.componentWillMount === \"function\" &&\n        instance.componentWillMount.__suppressDeprecationWarning !== true\n      ) {\n        foundWillMountName = \"componentWillMount\";\n      } else if (typeof instance.UNSAFE_componentWillMount === \"function\") {\n        foundWillMountName = \"UNSAFE_componentWillMount\";\n      }\n\n      if (\n        typeof instance.componentWillReceiveProps === \"function\" &&\n        instance.componentWillReceiveProps.__suppressDeprecationWarning !== true\n      ) {\n        foundWillReceivePropsName = \"componentWillReceiveProps\";\n      } else if (\n        typeof instance.UNSAFE_componentWillReceiveProps === \"function\"\n      ) {\n        foundWillReceivePropsName = \"UNSAFE_componentWillReceiveProps\";\n      }\n\n      if (\n        typeof instance.componentWillUpdate === \"function\" &&\n        instance.componentWillUpdate.__suppressDeprecationWarning !== true\n      ) {\n        foundWillUpdateName = \"componentWillUpdate\";\n      } else if (typeof instance.UNSAFE_componentWillUpdate === \"function\") {\n        foundWillUpdateName = \"UNSAFE_componentWillUpdate\";\n      }\n\n      if (\n        foundWillMountName !== null ||\n        foundWillReceivePropsName !== null ||\n        foundWillUpdateName !== null\n      ) {\n        var _componentName = getComponentNameFromType(ctor) || \"Component\";\n\n        var newApiName =\n          typeof ctor.getDerivedStateFromProps === \"function\"\n            ? \"getDerivedStateFromProps()\"\n            : \"getSnapshotBeforeUpdate()\";\n\n        if (!didWarnAboutLegacyLifecyclesAndDerivedState.has(_componentName)) {\n          didWarnAboutLegacyLifecyclesAndDerivedState.add(_componentName);\n\n          error(\n            \"Unsafe legacy lifecycles will not be called for components using new component APIs.\\n\\n\" +\n              \"%s uses %s but also contains the following legacy lifecycles:%s%s%s\\n\\n\" +\n              \"The above lifecycles should be removed. Learn more about this warning here:\\n\" +\n              \"https://reactjs.org/link/unsafe-component-lifecycles\",\n            _componentName,\n            newApiName,\n            foundWillMountName !== null ? \"\\n  \" + foundWillMountName : \"\",\n            foundWillReceivePropsName !== null\n              ? \"\\n  \" + foundWillReceivePropsName\n              : \"\",\n            foundWillUpdateName !== null ? \"\\n  \" + foundWillUpdateName : \"\"\n          );\n        }\n      }\n    }\n  } // Cache unmasked context so we can avoid recreating masked context unless necessary.\n  // ReactFiberContext usually updates this cache but can't for newly-created instances.\n\n  if (isLegacyContextConsumer) {\n    cacheContext(workInProgress, unmaskedContext, context);\n  }\n\n  return instance;\n}\n\nfunction callComponentWillMount(workInProgress, instance) {\n  var oldState = instance.state;\n\n  if (typeof instance.componentWillMount === \"function\") {\n    instance.componentWillMount();\n  }\n\n  if (typeof instance.UNSAFE_componentWillMount === \"function\") {\n    instance.UNSAFE_componentWillMount();\n  }\n\n  if (oldState !== instance.state) {\n    {\n      error(\n        \"%s.componentWillMount(): Assigning directly to this.state is \" +\n          \"deprecated (except inside a component's \" +\n          \"constructor). Use setState instead.\",\n        getComponentNameFromFiber(workInProgress) || \"Component\"\n      );\n    }\n\n    classComponentUpdater.enqueueReplaceState(instance, instance.state, null);\n  }\n}\n\nfunction callComponentWillReceiveProps(\n  workInProgress,\n  instance,\n  newProps,\n  nextContext\n) {\n  var oldState = instance.state;\n\n  if (typeof instance.componentWillReceiveProps === \"function\") {\n    instance.componentWillReceiveProps(newProps, nextContext);\n  }\n\n  if (typeof instance.UNSAFE_componentWillReceiveProps === \"function\") {\n    instance.UNSAFE_componentWillReceiveProps(newProps, nextContext);\n  }\n\n  if (instance.state !== oldState) {\n    {\n      var componentName =\n        getComponentNameFromFiber(workInProgress) || \"Component\";\n\n      if (!didWarnAboutStateAssignmentForComponent.has(componentName)) {\n        didWarnAboutStateAssignmentForComponent.add(componentName);\n\n        error(\n          \"%s.componentWillReceiveProps(): Assigning directly to \" +\n            \"this.state is deprecated (except inside a component's \" +\n            \"constructor). Use setState instead.\",\n          componentName\n        );\n      }\n    }\n\n    classComponentUpdater.enqueueReplaceState(instance, instance.state, null);\n  }\n} // Invokes the mount life-cycles on a previously never rendered instance.\n\nfunction mountClassInstance(workInProgress, ctor, newProps, renderLanes) {\n  {\n    checkClassInstance(workInProgress, ctor, newProps);\n  }\n\n  var instance = workInProgress.stateNode;\n  instance.props = newProps;\n  instance.state = workInProgress.memoizedState;\n  instance.refs = emptyRefsObject;\n  initializeUpdateQueue(workInProgress);\n  var contextType = ctor.contextType;\n\n  if (typeof contextType === \"object\" && contextType !== null) {\n    instance.context = readContext(contextType);\n  } else {\n    var unmaskedContext = getUnmaskedContext(workInProgress, ctor, true);\n    instance.context = getMaskedContext(workInProgress, unmaskedContext);\n  }\n\n  {\n    if (instance.state === newProps) {\n      var componentName = getComponentNameFromType(ctor) || \"Component\";\n\n      if (!didWarnAboutDirectlyAssigningPropsToState.has(componentName)) {\n        didWarnAboutDirectlyAssigningPropsToState.add(componentName);\n\n        error(\n          \"%s: It is not recommended to assign props directly to state \" +\n            \"because updates to props won't be reflected in state. \" +\n            \"In most cases, it is better to use props directly.\",\n          componentName\n        );\n      }\n    }\n\n    if (workInProgress.mode & StrictLegacyMode) {\n      ReactStrictModeWarnings.recordLegacyContextWarning(\n        workInProgress,\n        instance\n      );\n    }\n\n    {\n      ReactStrictModeWarnings.recordUnsafeLifecycleWarnings(\n        workInProgress,\n        instance\n      );\n    }\n  }\n\n  instance.state = workInProgress.memoizedState;\n  var getDerivedStateFromProps = ctor.getDerivedStateFromProps;\n\n  if (typeof getDerivedStateFromProps === \"function\") {\n    applyDerivedStateFromProps(\n      workInProgress,\n      ctor,\n      getDerivedStateFromProps,\n      newProps\n    );\n    instance.state = workInProgress.memoizedState;\n  } // In order to support react-lifecycles-compat polyfilled components,\n  // Unsafe lifecycles should not be invoked for components using the new APIs.\n\n  if (\n    typeof ctor.getDerivedStateFromProps !== \"function\" &&\n    typeof instance.getSnapshotBeforeUpdate !== \"function\" &&\n    (typeof instance.UNSAFE_componentWillMount === \"function\" ||\n      typeof instance.componentWillMount === \"function\")\n  ) {\n    callComponentWillMount(workInProgress, instance); // If we had additional state updates during this life-cycle, let's\n    // process them now.\n\n    processUpdateQueue(workInProgress, newProps, instance, renderLanes);\n    instance.state = workInProgress.memoizedState;\n  }\n\n  if (typeof instance.componentDidMount === \"function\") {\n    var fiberFlags = Update;\n\n    workInProgress.flags |= fiberFlags;\n  }\n}\n\nfunction resumeMountClassInstance(workInProgress, ctor, newProps, renderLanes) {\n  var instance = workInProgress.stateNode;\n  var oldProps = workInProgress.memoizedProps;\n  instance.props = oldProps;\n  var oldContext = instance.context;\n  var contextType = ctor.contextType;\n  var nextContext = emptyContextObject;\n\n  if (typeof contextType === \"object\" && contextType !== null) {\n    nextContext = readContext(contextType);\n  } else {\n    var nextLegacyUnmaskedContext = getUnmaskedContext(\n      workInProgress,\n      ctor,\n      true\n    );\n    nextContext = getMaskedContext(workInProgress, nextLegacyUnmaskedContext);\n  }\n\n  var getDerivedStateFromProps = ctor.getDerivedStateFromProps;\n  var hasNewLifecycles =\n    typeof getDerivedStateFromProps === \"function\" ||\n    typeof instance.getSnapshotBeforeUpdate === \"function\"; // Note: During these life-cycles, instance.props/instance.state are what\n  // ever the previously attempted to render - not the \"current\". However,\n  // during componentDidUpdate we pass the \"current\" props.\n  // In order to support react-lifecycles-compat polyfilled components,\n  // Unsafe lifecycles should not be invoked for components using the new APIs.\n\n  if (\n    !hasNewLifecycles &&\n    (typeof instance.UNSAFE_componentWillReceiveProps === \"function\" ||\n      typeof instance.componentWillReceiveProps === \"function\")\n  ) {\n    if (oldProps !== newProps || oldContext !== nextContext) {\n      callComponentWillReceiveProps(\n        workInProgress,\n        instance,\n        newProps,\n        nextContext\n      );\n    }\n  }\n\n  resetHasForceUpdateBeforeProcessing();\n  var oldState = workInProgress.memoizedState;\n  var newState = (instance.state = oldState);\n  processUpdateQueue(workInProgress, newProps, instance, renderLanes);\n  newState = workInProgress.memoizedState;\n\n  if (\n    oldProps === newProps &&\n    oldState === newState &&\n    !hasContextChanged() &&\n    !checkHasForceUpdateAfterProcessing()\n  ) {\n    // If an update was already in progress, we should schedule an Update\n    // effect even though we're bailing out, so that cWU/cDU are called.\n    if (typeof instance.componentDidMount === \"function\") {\n      var fiberFlags = Update;\n\n      workInProgress.flags |= fiberFlags;\n    }\n\n    return false;\n  }\n\n  if (typeof getDerivedStateFromProps === \"function\") {\n    applyDerivedStateFromProps(\n      workInProgress,\n      ctor,\n      getDerivedStateFromProps,\n      newProps\n    );\n    newState = workInProgress.memoizedState;\n  }\n\n  var shouldUpdate =\n    checkHasForceUpdateAfterProcessing() ||\n    checkShouldComponentUpdate(\n      workInProgress,\n      ctor,\n      oldProps,\n      newProps,\n      oldState,\n      newState,\n      nextContext\n    );\n\n  if (shouldUpdate) {\n    // In order to support react-lifecycles-compat polyfilled components,\n    // Unsafe lifecycles should not be invoked for components using the new APIs.\n    if (\n      !hasNewLifecycles &&\n      (typeof instance.UNSAFE_componentWillMount === \"function\" ||\n        typeof instance.componentWillMount === \"function\")\n    ) {\n      if (typeof instance.componentWillMount === \"function\") {\n        instance.componentWillMount();\n      }\n\n      if (typeof instance.UNSAFE_componentWillMount === \"function\") {\n        instance.UNSAFE_componentWillMount();\n      }\n    }\n\n    if (typeof instance.componentDidMount === \"function\") {\n      var _fiberFlags = Update;\n\n      workInProgress.flags |= _fiberFlags;\n    }\n  } else {\n    // If an update was already in progress, we should schedule an Update\n    // effect even though we're bailing out, so that cWU/cDU are called.\n    if (typeof instance.componentDidMount === \"function\") {\n      var _fiberFlags2 = Update;\n\n      workInProgress.flags |= _fiberFlags2;\n    } // If shouldComponentUpdate returned false, we should still update the\n    // memoized state to indicate that this work can be reused.\n\n    workInProgress.memoizedProps = newProps;\n    workInProgress.memoizedState = newState;\n  } // Update the existing instance's state, props, and context pointers even\n  // if shouldComponentUpdate returns false.\n\n  instance.props = newProps;\n  instance.state = newState;\n  instance.context = nextContext;\n  return shouldUpdate;\n} // Invokes the update life-cycles and returns false if it shouldn't rerender.\n\nfunction updateClassInstance(\n  current,\n  workInProgress,\n  ctor,\n  newProps,\n  renderLanes\n) {\n  var instance = workInProgress.stateNode;\n  cloneUpdateQueue(current, workInProgress);\n  var unresolvedOldProps = workInProgress.memoizedProps;\n  var oldProps =\n    workInProgress.type === workInProgress.elementType\n      ? unresolvedOldProps\n      : resolveDefaultProps(workInProgress.type, unresolvedOldProps);\n  instance.props = oldProps;\n  var unresolvedNewProps = workInProgress.pendingProps;\n  var oldContext = instance.context;\n  var contextType = ctor.contextType;\n  var nextContext = emptyContextObject;\n\n  if (typeof contextType === \"object\" && contextType !== null) {\n    nextContext = readContext(contextType);\n  } else {\n    var nextUnmaskedContext = getUnmaskedContext(workInProgress, ctor, true);\n    nextContext = getMaskedContext(workInProgress, nextUnmaskedContext);\n  }\n\n  var getDerivedStateFromProps = ctor.getDerivedStateFromProps;\n  var hasNewLifecycles =\n    typeof getDerivedStateFromProps === \"function\" ||\n    typeof instance.getSnapshotBeforeUpdate === \"function\"; // Note: During these life-cycles, instance.props/instance.state are what\n  // ever the previously attempted to render - not the \"current\". However,\n  // during componentDidUpdate we pass the \"current\" props.\n  // In order to support react-lifecycles-compat polyfilled components,\n  // Unsafe lifecycles should not be invoked for components using the new APIs.\n\n  if (\n    !hasNewLifecycles &&\n    (typeof instance.UNSAFE_componentWillReceiveProps === \"function\" ||\n      typeof instance.componentWillReceiveProps === \"function\")\n  ) {\n    if (\n      unresolvedOldProps !== unresolvedNewProps ||\n      oldContext !== nextContext\n    ) {\n      callComponentWillReceiveProps(\n        workInProgress,\n        instance,\n        newProps,\n        nextContext\n      );\n    }\n  }\n\n  resetHasForceUpdateBeforeProcessing();\n  var oldState = workInProgress.memoizedState;\n  var newState = (instance.state = oldState);\n  processUpdateQueue(workInProgress, newProps, instance, renderLanes);\n  newState = workInProgress.memoizedState;\n\n  if (\n    unresolvedOldProps === unresolvedNewProps &&\n    oldState === newState &&\n    !hasContextChanged() &&\n    !checkHasForceUpdateAfterProcessing() &&\n    !enableLazyContextPropagation\n  ) {\n    // If an update was already in progress, we should schedule an Update\n    // effect even though we're bailing out, so that cWU/cDU are called.\n    if (typeof instance.componentDidUpdate === \"function\") {\n      if (\n        unresolvedOldProps !== current.memoizedProps ||\n        oldState !== current.memoizedState\n      ) {\n        workInProgress.flags |= Update;\n      }\n    }\n\n    if (typeof instance.getSnapshotBeforeUpdate === \"function\") {\n      if (\n        unresolvedOldProps !== current.memoizedProps ||\n        oldState !== current.memoizedState\n      ) {\n        workInProgress.flags |= Snapshot;\n      }\n    }\n\n    return false;\n  }\n\n  if (typeof getDerivedStateFromProps === \"function\") {\n    applyDerivedStateFromProps(\n      workInProgress,\n      ctor,\n      getDerivedStateFromProps,\n      newProps\n    );\n    newState = workInProgress.memoizedState;\n  }\n\n  var shouldUpdate =\n    checkHasForceUpdateAfterProcessing() ||\n    checkShouldComponentUpdate(\n      workInProgress,\n      ctor,\n      oldProps,\n      newProps,\n      oldState,\n      newState,\n      nextContext\n    ) || // TODO: In some cases, we'll end up checking if context has changed twice,\n    // both before and after `shouldComponentUpdate` has been called. Not ideal,\n    // but I'm loath to refactor this function. This only happens for memoized\n    // components so it's not that common.\n    enableLazyContextPropagation;\n\n  if (shouldUpdate) {\n    // In order to support react-lifecycles-compat polyfilled components,\n    // Unsafe lifecycles should not be invoked for components using the new APIs.\n    if (\n      !hasNewLifecycles &&\n      (typeof instance.UNSAFE_componentWillUpdate === \"function\" ||\n        typeof instance.componentWillUpdate === \"function\")\n    ) {\n      if (typeof instance.componentWillUpdate === \"function\") {\n        instance.componentWillUpdate(newProps, newState, nextContext);\n      }\n\n      if (typeof instance.UNSAFE_componentWillUpdate === \"function\") {\n        instance.UNSAFE_componentWillUpdate(newProps, newState, nextContext);\n      }\n    }\n\n    if (typeof instance.componentDidUpdate === \"function\") {\n      workInProgress.flags |= Update;\n    }\n\n    if (typeof instance.getSnapshotBeforeUpdate === \"function\") {\n      workInProgress.flags |= Snapshot;\n    }\n  } else {\n    // If an update was already in progress, we should schedule an Update\n    // effect even though we're bailing out, so that cWU/cDU are called.\n    if (typeof instance.componentDidUpdate === \"function\") {\n      if (\n        unresolvedOldProps !== current.memoizedProps ||\n        oldState !== current.memoizedState\n      ) {\n        workInProgress.flags |= Update;\n      }\n    }\n\n    if (typeof instance.getSnapshotBeforeUpdate === \"function\") {\n      if (\n        unresolvedOldProps !== current.memoizedProps ||\n        oldState !== current.memoizedState\n      ) {\n        workInProgress.flags |= Snapshot;\n      }\n    } // If shouldComponentUpdate returned false, we should still update the\n    // memoized props/state to indicate that this work can be reused.\n\n    workInProgress.memoizedProps = newProps;\n    workInProgress.memoizedState = newState;\n  } // Update the existing instance's state, props, and context pointers even\n  // if shouldComponentUpdate returns false.\n\n  instance.props = newProps;\n  instance.state = newState;\n  instance.context = nextContext;\n  return shouldUpdate;\n}\n\nvar didWarnAboutMaps;\nvar didWarnAboutGenerators;\nvar didWarnAboutStringRefs;\nvar ownerHasKeyUseWarning;\nvar ownerHasFunctionTypeWarning;\n\nvar warnForMissingKey = function(child, returnFiber) {};\n\n{\n  didWarnAboutMaps = false;\n  didWarnAboutGenerators = false;\n  didWarnAboutStringRefs = {};\n  /**\n   * Warn if there's no key explicitly set on dynamic arrays of children or\n   * object keys are not valid. This allows us to keep track of children between\n   * updates.\n   */\n\n  ownerHasKeyUseWarning = {};\n  ownerHasFunctionTypeWarning = {};\n\n  warnForMissingKey = function(child, returnFiber) {\n    if (child === null || typeof child !== \"object\") {\n      return;\n    }\n\n    if (!child._store || child._store.validated || child.key != null) {\n      return;\n    }\n\n    if (typeof child._store !== \"object\") {\n      throw new Error(\n        \"React Component in warnForMissingKey should have a _store. \" +\n          \"This error is likely caused by a bug in React. Please file an issue.\"\n      );\n    }\n\n    child._store.validated = true;\n    var componentName = getComponentNameFromFiber(returnFiber) || \"Component\";\n\n    if (ownerHasKeyUseWarning[componentName]) {\n      return;\n    }\n\n    ownerHasKeyUseWarning[componentName] = true;\n\n    error(\n      \"Each child in a list should have a unique \" +\n        '\"key\" prop. See https://reactjs.org/link/warning-keys for ' +\n        \"more information.\"\n    );\n  };\n}\n\nfunction coerceRef(returnFiber, current, element) {\n  var mixedRef = element.ref;\n\n  if (\n    mixedRef !== null &&\n    typeof mixedRef !== \"function\" &&\n    typeof mixedRef !== \"object\"\n  ) {\n    {\n      // TODO: Clean this up once we turn on the string ref warning for\n      // everyone, because the strict mode case will no longer be relevant\n      if (\n        (returnFiber.mode & StrictLegacyMode || warnAboutStringRefs) && // We warn in ReactElement.js if owner and self are equal for string refs\n        // because these cannot be automatically converted to an arrow function\n        // using a codemod. Therefore, we don't have to warn about string refs again.\n        !(\n          element._owner &&\n          element._self &&\n          element._owner.stateNode !== element._self\n        )\n      ) {\n        var componentName =\n          getComponentNameFromFiber(returnFiber) || \"Component\";\n\n        if (!didWarnAboutStringRefs[componentName]) {\n          {\n            error(\n              'A string ref, \"%s\", has been found within a strict mode tree. ' +\n                \"String refs are a source of potential bugs and should be avoided. \" +\n                \"We recommend using useRef() or createRef() instead. \" +\n                \"Learn more about using refs safely here: \" +\n                \"https://reactjs.org/link/strict-mode-string-ref\",\n              mixedRef\n            );\n          }\n\n          didWarnAboutStringRefs[componentName] = true;\n        }\n      }\n    }\n\n    if (element._owner) {\n      var owner = element._owner;\n      var inst;\n\n      if (owner) {\n        var ownerFiber = owner;\n\n        if (ownerFiber.tag !== ClassComponent) {\n          throw new Error(\n            \"Function components cannot have string refs. \" +\n              \"We recommend using useRef() instead. \" +\n              \"Learn more about using refs safely here: \" +\n              \"https://reactjs.org/link/strict-mode-string-ref\"\n          );\n        }\n\n        inst = ownerFiber.stateNode;\n      }\n\n      if (!inst) {\n        throw new Error(\n          \"Missing owner for string ref \" +\n            mixedRef +\n            \". This error is likely caused by a \" +\n            \"bug in React. Please file an issue.\"\n        );\n      } // Assigning this to a const so Flow knows it won't change in the closure\n\n      var resolvedInst = inst;\n\n      {\n        checkPropStringCoercion(mixedRef, \"ref\");\n      }\n\n      var stringRef = \"\" + mixedRef; // Check if previous string ref matches new string ref\n\n      if (\n        current !== null &&\n        current.ref !== null &&\n        typeof current.ref === \"function\" &&\n        current.ref._stringRef === stringRef\n      ) {\n        return current.ref;\n      }\n\n      var ref = function(value) {\n        var refs = resolvedInst.refs;\n\n        if (refs === emptyRefsObject) {\n          // This is a lazy pooled frozen object, so we need to initialize.\n          refs = resolvedInst.refs = {};\n        }\n\n        if (value === null) {\n          delete refs[stringRef];\n        } else {\n          refs[stringRef] = value;\n        }\n      };\n\n      ref._stringRef = stringRef;\n      return ref;\n    } else {\n      if (typeof mixedRef !== \"string\") {\n        throw new Error(\n          \"Expected ref to be a function, a string, an object returned by React.createRef(), or null.\"\n        );\n      }\n\n      if (!element._owner) {\n        throw new Error(\n          \"Element ref was specified as a string (\" +\n            mixedRef +\n            \") but no owner was set. This could happen for one of\" +\n            \" the following reasons:\\n\" +\n            \"1. You may be adding a ref to a function component\\n\" +\n            \"2. You may be adding a ref to a component that was not created inside a component's render method\\n\" +\n            \"3. You have multiple copies of React loaded\\n\" +\n            \"See https://reactjs.org/link/refs-must-have-owner for more information.\"\n        );\n      }\n    }\n  }\n\n  return mixedRef;\n}\n\nfunction throwOnInvalidObjectType(returnFiber, newChild) {\n  var childString = Object.prototype.toString.call(newChild);\n  throw new Error(\n    \"Objects are not valid as a React child (found: \" +\n      (childString === \"[object Object]\"\n        ? \"object with keys {\" + Object.keys(newChild).join(\", \") + \"}\"\n        : childString) +\n      \"). \" +\n      \"If you meant to render a collection of children, use an array \" +\n      \"instead.\"\n  );\n}\n\nfunction warnOnFunctionType(returnFiber) {\n  {\n    var componentName = getComponentNameFromFiber(returnFiber) || \"Component\";\n\n    if (ownerHasFunctionTypeWarning[componentName]) {\n      return;\n    }\n\n    ownerHasFunctionTypeWarning[componentName] = true;\n\n    error(\n      \"Functions are not valid as a React child. This may happen if \" +\n        \"you return a Component instead of <Component /> from render. \" +\n        \"Or maybe you meant to call this function rather than return it.\"\n    );\n  }\n}\n\nfunction resolveLazy(lazyType) {\n  var payload = lazyType._payload;\n  var init = lazyType._init;\n  return init(payload);\n} // This wrapper function exists because I expect to clone the code in each path\n// to be able to optimize each path individually by branching early. This needs\n// a compiler or we can do it manually. Helpers that don't need this branching\n// live outside of this function.\n\nfunction ChildReconciler(shouldTrackSideEffects) {\n  function deleteChild(returnFiber, childToDelete) {\n    if (!shouldTrackSideEffects) {\n      // Noop.\n      return;\n    }\n\n    var deletions = returnFiber.deletions;\n\n    if (deletions === null) {\n      returnFiber.deletions = [childToDelete];\n      returnFiber.flags |= ChildDeletion;\n    } else {\n      deletions.push(childToDelete);\n    }\n  }\n\n  function deleteRemainingChildren(returnFiber, currentFirstChild) {\n    if (!shouldTrackSideEffects) {\n      // Noop.\n      return null;\n    } // TODO: For the shouldClone case, this could be micro-optimized a bit by\n    // assuming that after the first child we've already added everything.\n\n    var childToDelete = currentFirstChild;\n\n    while (childToDelete !== null) {\n      deleteChild(returnFiber, childToDelete);\n      childToDelete = childToDelete.sibling;\n    }\n\n    return null;\n  }\n\n  function mapRemainingChildren(returnFiber, currentFirstChild) {\n    // Add the remaining children to a temporary map so that we can find them by\n    // keys quickly. Implicit (null) keys get added to this set with their index\n    // instead.\n    var existingChildren = new Map();\n    var existingChild = currentFirstChild;\n\n    while (existingChild !== null) {\n      if (existingChild.key !== null) {\n        existingChildren.set(existingChild.key, existingChild);\n      } else {\n        existingChildren.set(existingChild.index, existingChild);\n      }\n\n      existingChild = existingChild.sibling;\n    }\n\n    return existingChildren;\n  }\n\n  function useFiber(fiber, pendingProps) {\n    // We currently set sibling to null and index to 0 here because it is easy\n    // to forget to do before returning it. E.g. for the single child case.\n    var clone = createWorkInProgress(fiber, pendingProps);\n    clone.index = 0;\n    clone.sibling = null;\n    return clone;\n  }\n\n  function placeChild(newFiber, lastPlacedIndex, newIndex) {\n    newFiber.index = newIndex;\n\n    if (!shouldTrackSideEffects) {\n      // During hydration, the useId algorithm needs to know which fibers are\n      // part of a list of children (arrays, iterators).\n      newFiber.flags |= Forked;\n      return lastPlacedIndex;\n    }\n\n    var current = newFiber.alternate;\n\n    if (current !== null) {\n      var oldIndex = current.index;\n\n      if (oldIndex < lastPlacedIndex) {\n        // This is a move.\n        newFiber.flags |= Placement;\n        return lastPlacedIndex;\n      } else {\n        // This item can stay in place.\n        return oldIndex;\n      }\n    } else {\n      // This is an insertion.\n      newFiber.flags |= Placement;\n      return lastPlacedIndex;\n    }\n  }\n\n  function placeSingleChild(newFiber) {\n    // This is simpler for the single child case. We only need to do a\n    // placement for inserting new children.\n    if (shouldTrackSideEffects && newFiber.alternate === null) {\n      newFiber.flags |= Placement;\n    }\n\n    return newFiber;\n  }\n\n  function updateTextNode(returnFiber, current, textContent, lanes) {\n    if (current === null || current.tag !== HostText) {\n      // Insert\n      var created = createFiberFromText(textContent, returnFiber.mode, lanes);\n      created.return = returnFiber;\n      return created;\n    } else {\n      // Update\n      var existing = useFiber(current, textContent);\n      existing.return = returnFiber;\n      return existing;\n    }\n  }\n\n  function updateElement(returnFiber, current, element, lanes) {\n    var elementType = element.type;\n\n    if (elementType === REACT_FRAGMENT_TYPE) {\n      return updateFragment(\n        returnFiber,\n        current,\n        element.props.children,\n        lanes,\n        element.key\n      );\n    }\n\n    if (current !== null) {\n      if (\n        current.elementType === elementType || // Keep this check inline so it only runs on the false path:\n        isCompatibleFamilyForHotReloading(current, element) || // Lazy types should reconcile their resolved type.\n        // We need to do this after the Hot Reloading check above,\n        // because hot reloading has different semantics than prod because\n        // it doesn't resuspend. So we can't let the call below suspend.\n        (typeof elementType === \"object\" &&\n          elementType !== null &&\n          elementType.$$typeof === REACT_LAZY_TYPE &&\n          resolveLazy(elementType) === current.type)\n      ) {\n        // Move based on index\n        var existing = useFiber(current, element.props);\n        existing.ref = coerceRef(returnFiber, current, element);\n        existing.return = returnFiber;\n\n        {\n          existing._debugSource = element._source;\n          existing._debugOwner = element._owner;\n        }\n\n        return existing;\n      }\n    } // Insert\n\n    var created = createFiberFromElement(element, returnFiber.mode, lanes);\n    created.ref = coerceRef(returnFiber, current, element);\n    created.return = returnFiber;\n    return created;\n  }\n\n  function updatePortal(returnFiber, current, portal, lanes) {\n    if (\n      current === null ||\n      current.tag !== HostPortal ||\n      current.stateNode.containerInfo !== portal.containerInfo ||\n      current.stateNode.implementation !== portal.implementation\n    ) {\n      // Insert\n      var created = createFiberFromPortal(portal, returnFiber.mode, lanes);\n      created.return = returnFiber;\n      return created;\n    } else {\n      // Update\n      var existing = useFiber(current, portal.children || []);\n      existing.return = returnFiber;\n      return existing;\n    }\n  }\n\n  function updateFragment(returnFiber, current, fragment, lanes, key) {\n    if (current === null || current.tag !== Fragment) {\n      // Insert\n      var created = createFiberFromFragment(\n        fragment,\n        returnFiber.mode,\n        lanes,\n        key\n      );\n      created.return = returnFiber;\n      return created;\n    } else {\n      // Update\n      var existing = useFiber(current, fragment);\n      existing.return = returnFiber;\n      return existing;\n    }\n  }\n\n  function createChild(returnFiber, newChild, lanes) {\n    if (\n      (typeof newChild === \"string\" && newChild !== \"\") ||\n      typeof newChild === \"number\"\n    ) {\n      // Text nodes don't have keys. If the previous node is implicitly keyed\n      // we can continue to replace it without aborting even if it is not a text\n      // node.\n      var created = createFiberFromText(\"\" + newChild, returnFiber.mode, lanes);\n      created.return = returnFiber;\n      return created;\n    }\n\n    if (typeof newChild === \"object\" && newChild !== null) {\n      switch (newChild.$$typeof) {\n        case REACT_ELEMENT_TYPE: {\n          var _created = createFiberFromElement(\n            newChild,\n            returnFiber.mode,\n            lanes\n          );\n\n          _created.ref = coerceRef(returnFiber, null, newChild);\n          _created.return = returnFiber;\n          return _created;\n        }\n\n        case REACT_PORTAL_TYPE: {\n          var _created2 = createFiberFromPortal(\n            newChild,\n            returnFiber.mode,\n            lanes\n          );\n\n          _created2.return = returnFiber;\n          return _created2;\n        }\n\n        case REACT_LAZY_TYPE: {\n          var payload = newChild._payload;\n          var init = newChild._init;\n          return createChild(returnFiber, init(payload), lanes);\n        }\n      }\n\n      if (isArray(newChild) || getIteratorFn(newChild)) {\n        var _created3 = createFiberFromFragment(\n          newChild,\n          returnFiber.mode,\n          lanes,\n          null\n        );\n\n        _created3.return = returnFiber;\n        return _created3;\n      }\n\n      throwOnInvalidObjectType(returnFiber, newChild);\n    }\n\n    {\n      if (typeof newChild === \"function\") {\n        warnOnFunctionType(returnFiber);\n      }\n    }\n\n    return null;\n  }\n\n  function updateSlot(returnFiber, oldFiber, newChild, lanes) {\n    // Update the fiber if the keys match, otherwise return null.\n    var key = oldFiber !== null ? oldFiber.key : null;\n\n    if (\n      (typeof newChild === \"string\" && newChild !== \"\") ||\n      typeof newChild === \"number\"\n    ) {\n      // Text nodes don't have keys. If the previous node is implicitly keyed\n      // we can continue to replace it without aborting even if it is not a text\n      // node.\n      if (key !== null) {\n        return null;\n      }\n\n      return updateTextNode(returnFiber, oldFiber, \"\" + newChild, lanes);\n    }\n\n    if (typeof newChild === \"object\" && newChild !== null) {\n      switch (newChild.$$typeof) {\n        case REACT_ELEMENT_TYPE: {\n          if (newChild.key === key) {\n            return updateElement(returnFiber, oldFiber, newChild, lanes);\n          } else {\n            return null;\n          }\n        }\n\n        case REACT_PORTAL_TYPE: {\n          if (newChild.key === key) {\n            return updatePortal(returnFiber, oldFiber, newChild, lanes);\n          } else {\n            return null;\n          }\n        }\n\n        case REACT_LAZY_TYPE: {\n          var payload = newChild._payload;\n          var init = newChild._init;\n          return updateSlot(returnFiber, oldFiber, init(payload), lanes);\n        }\n      }\n\n      if (isArray(newChild) || getIteratorFn(newChild)) {\n        if (key !== null) {\n          return null;\n        }\n\n        return updateFragment(returnFiber, oldFiber, newChild, lanes, null);\n      }\n\n      throwOnInvalidObjectType(returnFiber, newChild);\n    }\n\n    {\n      if (typeof newChild === \"function\") {\n        warnOnFunctionType(returnFiber);\n      }\n    }\n\n    return null;\n  }\n\n  function updateFromMap(\n    existingChildren,\n    returnFiber,\n    newIdx,\n    newChild,\n    lanes\n  ) {\n    if (\n      (typeof newChild === \"string\" && newChild !== \"\") ||\n      typeof newChild === \"number\"\n    ) {\n      // Text nodes don't have keys, so we neither have to check the old nor\n      // new node for the key. If both are text nodes, they match.\n      var matchedFiber = existingChildren.get(newIdx) || null;\n      return updateTextNode(returnFiber, matchedFiber, \"\" + newChild, lanes);\n    }\n\n    if (typeof newChild === \"object\" && newChild !== null) {\n      switch (newChild.$$typeof) {\n        case REACT_ELEMENT_TYPE: {\n          var _matchedFiber =\n            existingChildren.get(\n              newChild.key === null ? newIdx : newChild.key\n            ) || null;\n\n          return updateElement(returnFiber, _matchedFiber, newChild, lanes);\n        }\n\n        case REACT_PORTAL_TYPE: {\n          var _matchedFiber2 =\n            existingChildren.get(\n              newChild.key === null ? newIdx : newChild.key\n            ) || null;\n\n          return updatePortal(returnFiber, _matchedFiber2, newChild, lanes);\n        }\n\n        case REACT_LAZY_TYPE:\n          var payload = newChild._payload;\n          var init = newChild._init;\n          return updateFromMap(\n            existingChildren,\n            returnFiber,\n            newIdx,\n            init(payload),\n            lanes\n          );\n      }\n\n      if (isArray(newChild) || getIteratorFn(newChild)) {\n        var _matchedFiber3 = existingChildren.get(newIdx) || null;\n\n        return updateFragment(\n          returnFiber,\n          _matchedFiber3,\n          newChild,\n          lanes,\n          null\n        );\n      }\n\n      throwOnInvalidObjectType(returnFiber, newChild);\n    }\n\n    {\n      if (typeof newChild === \"function\") {\n        warnOnFunctionType(returnFiber);\n      }\n    }\n\n    return null;\n  }\n  /**\n   * Warns if there is a duplicate or missing key\n   */\n\n  function warnOnInvalidKey(child, knownKeys, returnFiber) {\n    {\n      if (typeof child !== \"object\" || child === null) {\n        return knownKeys;\n      }\n\n      switch (child.$$typeof) {\n        case REACT_ELEMENT_TYPE:\n        case REACT_PORTAL_TYPE:\n          warnForMissingKey(child, returnFiber);\n          var key = child.key;\n\n          if (typeof key !== \"string\") {\n            break;\n          }\n\n          if (knownKeys === null) {\n            knownKeys = new Set();\n            knownKeys.add(key);\n            break;\n          }\n\n          if (!knownKeys.has(key)) {\n            knownKeys.add(key);\n            break;\n          }\n\n          error(\n            \"Encountered two children with the same key, `%s`. \" +\n              \"Keys should be unique so that components maintain their identity \" +\n              \"across updates. Non-unique keys may cause children to be \" +\n              \"duplicated and/or omitted — the behavior is unsupported and \" +\n              \"could change in a future version.\",\n            key\n          );\n\n          break;\n\n        case REACT_LAZY_TYPE:\n          var payload = child._payload;\n          var init = child._init;\n          warnOnInvalidKey(init(payload), knownKeys, returnFiber);\n          break;\n      }\n    }\n\n    return knownKeys;\n  }\n\n  function reconcileChildrenArray(\n    returnFiber,\n    currentFirstChild,\n    newChildren,\n    lanes\n  ) {\n    // This algorithm can't optimize by searching from both ends since we\n    // don't have backpointers on fibers. I'm trying to see how far we can get\n    // with that model. If it ends up not being worth the tradeoffs, we can\n    // add it later.\n    // Even with a two ended optimization, we'd want to optimize for the case\n    // where there are few changes and brute force the comparison instead of\n    // going for the Map. It'd like to explore hitting that path first in\n    // forward-only mode and only go for the Map once we notice that we need\n    // lots of look ahead. This doesn't handle reversal as well as two ended\n    // search but that's unusual. Besides, for the two ended optimization to\n    // work on Iterables, we'd need to copy the whole set.\n    // In this first iteration, we'll just live with hitting the bad case\n    // (adding everything to a Map) in for every insert/move.\n    // If you change this code, also update reconcileChildrenIterator() which\n    // uses the same algorithm.\n    {\n      // First, validate keys.\n      var knownKeys = null;\n\n      for (var i = 0; i < newChildren.length; i++) {\n        var child = newChildren[i];\n        knownKeys = warnOnInvalidKey(child, knownKeys, returnFiber);\n      }\n    }\n\n    var resultingFirstChild = null;\n    var previousNewFiber = null;\n    var oldFiber = currentFirstChild;\n    var lastPlacedIndex = 0;\n    var newIdx = 0;\n    var nextOldFiber = null;\n\n    for (; oldFiber !== null && newIdx < newChildren.length; newIdx++) {\n      if (oldFiber.index > newIdx) {\n        nextOldFiber = oldFiber;\n        oldFiber = null;\n      } else {\n        nextOldFiber = oldFiber.sibling;\n      }\n\n      var newFiber = updateSlot(\n        returnFiber,\n        oldFiber,\n        newChildren[newIdx],\n        lanes\n      );\n\n      if (newFiber === null) {\n        // TODO: This breaks on empty slots like null children. That's\n        // unfortunate because it triggers the slow path all the time. We need\n        // a better way to communicate whether this was a miss or null,\n        // boolean, undefined, etc.\n        if (oldFiber === null) {\n          oldFiber = nextOldFiber;\n        }\n\n        break;\n      }\n\n      if (shouldTrackSideEffects) {\n        if (oldFiber && newFiber.alternate === null) {\n          // We matched the slot, but we didn't reuse the existing fiber, so we\n          // need to delete the existing child.\n          deleteChild(returnFiber, oldFiber);\n        }\n      }\n\n      lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);\n\n      if (previousNewFiber === null) {\n        // TODO: Move out of the loop. This only happens for the first run.\n        resultingFirstChild = newFiber;\n      } else {\n        // TODO: Defer siblings if we're not at the right index for this slot.\n        // I.e. if we had null values before, then we want to defer this\n        // for each null value. However, we also don't want to call updateSlot\n        // with the previous one.\n        previousNewFiber.sibling = newFiber;\n      }\n\n      previousNewFiber = newFiber;\n      oldFiber = nextOldFiber;\n    }\n\n    if (newIdx === newChildren.length) {\n      // We've reached the end of the new children. We can delete the rest.\n      deleteRemainingChildren(returnFiber, oldFiber);\n\n      return resultingFirstChild;\n    }\n\n    if (oldFiber === null) {\n      // If we don't have any more existing children we can choose a fast path\n      // since the rest will all be insertions.\n      for (; newIdx < newChildren.length; newIdx++) {\n        var _newFiber = createChild(returnFiber, newChildren[newIdx], lanes);\n\n        if (_newFiber === null) {\n          continue;\n        }\n\n        lastPlacedIndex = placeChild(_newFiber, lastPlacedIndex, newIdx);\n\n        if (previousNewFiber === null) {\n          // TODO: Move out of the loop. This only happens for the first run.\n          resultingFirstChild = _newFiber;\n        } else {\n          previousNewFiber.sibling = _newFiber;\n        }\n\n        previousNewFiber = _newFiber;\n      }\n\n      return resultingFirstChild;\n    } // Add all children to a key map for quick lookups.\n\n    var existingChildren = mapRemainingChildren(returnFiber, oldFiber); // Keep scanning and use the map to restore deleted items as moves.\n\n    for (; newIdx < newChildren.length; newIdx++) {\n      var _newFiber2 = updateFromMap(\n        existingChildren,\n        returnFiber,\n        newIdx,\n        newChildren[newIdx],\n        lanes\n      );\n\n      if (_newFiber2 !== null) {\n        if (shouldTrackSideEffects) {\n          if (_newFiber2.alternate !== null) {\n            // The new fiber is a work in progress, but if there exists a\n            // current, that means that we reused the fiber. We need to delete\n            // it from the child list so that we don't add it to the deletion\n            // list.\n            existingChildren.delete(\n              _newFiber2.key === null ? newIdx : _newFiber2.key\n            );\n          }\n        }\n\n        lastPlacedIndex = placeChild(_newFiber2, lastPlacedIndex, newIdx);\n\n        if (previousNewFiber === null) {\n          resultingFirstChild = _newFiber2;\n        } else {\n          previousNewFiber.sibling = _newFiber2;\n        }\n\n        previousNewFiber = _newFiber2;\n      }\n    }\n\n    if (shouldTrackSideEffects) {\n      // Any existing children that weren't consumed above were deleted. We need\n      // to add them to the deletion list.\n      existingChildren.forEach(function(child) {\n        return deleteChild(returnFiber, child);\n      });\n    }\n\n    return resultingFirstChild;\n  }\n\n  function reconcileChildrenIterator(\n    returnFiber,\n    currentFirstChild,\n    newChildrenIterable,\n    lanes\n  ) {\n    // This is the same implementation as reconcileChildrenArray(),\n    // but using the iterator instead.\n    var iteratorFn = getIteratorFn(newChildrenIterable);\n\n    if (typeof iteratorFn !== \"function\") {\n      throw new Error(\n        \"An object is not an iterable. This error is likely caused by a bug in \" +\n          \"React. Please file an issue.\"\n      );\n    }\n\n    {\n      // We don't support rendering Generators because it's a mutation.\n      // See https://github.com/facebook/react/issues/12995\n      if (\n        typeof Symbol === \"function\" && // $FlowFixMe Flow doesn't know about toStringTag\n        newChildrenIterable[Symbol.toStringTag] === \"Generator\"\n      ) {\n        if (!didWarnAboutGenerators) {\n          error(\n            \"Using Generators as children is unsupported and will likely yield \" +\n              \"unexpected results because enumerating a generator mutates it. \" +\n              \"You may convert it to an array with `Array.from()` or the \" +\n              \"`[...spread]` operator before rendering. Keep in mind \" +\n              \"you might need to polyfill these features for older browsers.\"\n          );\n        }\n\n        didWarnAboutGenerators = true;\n      } // Warn about using Maps as children\n\n      if (newChildrenIterable.entries === iteratorFn) {\n        if (!didWarnAboutMaps) {\n          error(\n            \"Using Maps as children is not supported. \" +\n              \"Use an array of keyed ReactElements instead.\"\n          );\n        }\n\n        didWarnAboutMaps = true;\n      } // First, validate keys.\n      // We'll get a different iterator later for the main pass.\n\n      var _newChildren = iteratorFn.call(newChildrenIterable);\n\n      if (_newChildren) {\n        var knownKeys = null;\n\n        var _step = _newChildren.next();\n\n        for (; !_step.done; _step = _newChildren.next()) {\n          var child = _step.value;\n          knownKeys = warnOnInvalidKey(child, knownKeys, returnFiber);\n        }\n      }\n    }\n\n    var newChildren = iteratorFn.call(newChildrenIterable);\n\n    if (newChildren == null) {\n      throw new Error(\"An iterable object provided no iterator.\");\n    }\n\n    var resultingFirstChild = null;\n    var previousNewFiber = null;\n    var oldFiber = currentFirstChild;\n    var lastPlacedIndex = 0;\n    var newIdx = 0;\n    var nextOldFiber = null;\n    var step = newChildren.next();\n\n    for (\n      ;\n      oldFiber !== null && !step.done;\n      newIdx++, step = newChildren.next()\n    ) {\n      if (oldFiber.index > newIdx) {\n        nextOldFiber = oldFiber;\n        oldFiber = null;\n      } else {\n        nextOldFiber = oldFiber.sibling;\n      }\n\n      var newFiber = updateSlot(returnFiber, oldFiber, step.value, lanes);\n\n      if (newFiber === null) {\n        // TODO: This breaks on empty slots like null children. That's\n        // unfortunate because it triggers the slow path all the time. We need\n        // a better way to communicate whether this was a miss or null,\n        // boolean, undefined, etc.\n        if (oldFiber === null) {\n          oldFiber = nextOldFiber;\n        }\n\n        break;\n      }\n\n      if (shouldTrackSideEffects) {\n        if (oldFiber && newFiber.alternate === null) {\n          // We matched the slot, but we didn't reuse the existing fiber, so we\n          // need to delete the existing child.\n          deleteChild(returnFiber, oldFiber);\n        }\n      }\n\n      lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);\n\n      if (previousNewFiber === null) {\n        // TODO: Move out of the loop. This only happens for the first run.\n        resultingFirstChild = newFiber;\n      } else {\n        // TODO: Defer siblings if we're not at the right index for this slot.\n        // I.e. if we had null values before, then we want to defer this\n        // for each null value. However, we also don't want to call updateSlot\n        // with the previous one.\n        previousNewFiber.sibling = newFiber;\n      }\n\n      previousNewFiber = newFiber;\n      oldFiber = nextOldFiber;\n    }\n\n    if (step.done) {\n      // We've reached the end of the new children. We can delete the rest.\n      deleteRemainingChildren(returnFiber, oldFiber);\n\n      return resultingFirstChild;\n    }\n\n    if (oldFiber === null) {\n      // If we don't have any more existing children we can choose a fast path\n      // since the rest will all be insertions.\n      for (; !step.done; newIdx++, step = newChildren.next()) {\n        var _newFiber3 = createChild(returnFiber, step.value, lanes);\n\n        if (_newFiber3 === null) {\n          continue;\n        }\n\n        lastPlacedIndex = placeChild(_newFiber3, lastPlacedIndex, newIdx);\n\n        if (previousNewFiber === null) {\n          // TODO: Move out of the loop. This only happens for the first run.\n          resultingFirstChild = _newFiber3;\n        } else {\n          previousNewFiber.sibling = _newFiber3;\n        }\n\n        previousNewFiber = _newFiber3;\n      }\n\n      return resultingFirstChild;\n    } // Add all children to a key map for quick lookups.\n\n    var existingChildren = mapRemainingChildren(returnFiber, oldFiber); // Keep scanning and use the map to restore deleted items as moves.\n\n    for (; !step.done; newIdx++, step = newChildren.next()) {\n      var _newFiber4 = updateFromMap(\n        existingChildren,\n        returnFiber,\n        newIdx,\n        step.value,\n        lanes\n      );\n\n      if (_newFiber4 !== null) {\n        if (shouldTrackSideEffects) {\n          if (_newFiber4.alternate !== null) {\n            // The new fiber is a work in progress, but if there exists a\n            // current, that means that we reused the fiber. We need to delete\n            // it from the child list so that we don't add it to the deletion\n            // list.\n            existingChildren.delete(\n              _newFiber4.key === null ? newIdx : _newFiber4.key\n            );\n          }\n        }\n\n        lastPlacedIndex = placeChild(_newFiber4, lastPlacedIndex, newIdx);\n\n        if (previousNewFiber === null) {\n          resultingFirstChild = _newFiber4;\n        } else {\n          previousNewFiber.sibling = _newFiber4;\n        }\n\n        previousNewFiber = _newFiber4;\n      }\n    }\n\n    if (shouldTrackSideEffects) {\n      // Any existing children that weren't consumed above were deleted. We need\n      // to add them to the deletion list.\n      existingChildren.forEach(function(child) {\n        return deleteChild(returnFiber, child);\n      });\n    }\n\n    return resultingFirstChild;\n  }\n\n  function reconcileSingleTextNode(\n    returnFiber,\n    currentFirstChild,\n    textContent,\n    lanes\n  ) {\n    // There's no need to check for keys on text nodes since we don't have a\n    // way to define them.\n    if (currentFirstChild !== null && currentFirstChild.tag === HostText) {\n      // We already have an existing node so let's just update it and delete\n      // the rest.\n      deleteRemainingChildren(returnFiber, currentFirstChild.sibling);\n      var existing = useFiber(currentFirstChild, textContent);\n      existing.return = returnFiber;\n      return existing;\n    } // The existing first child is not a text node so we need to create one\n    // and delete the existing ones.\n\n    deleteRemainingChildren(returnFiber, currentFirstChild);\n    var created = createFiberFromText(textContent, returnFiber.mode, lanes);\n    created.return = returnFiber;\n    return created;\n  }\n\n  function reconcileSingleElement(\n    returnFiber,\n    currentFirstChild,\n    element,\n    lanes\n  ) {\n    var key = element.key;\n    var child = currentFirstChild;\n\n    while (child !== null) {\n      // TODO: If key === null and child.key === null, then this only applies to\n      // the first item in the list.\n      if (child.key === key) {\n        var elementType = element.type;\n\n        if (elementType === REACT_FRAGMENT_TYPE) {\n          if (child.tag === Fragment) {\n            deleteRemainingChildren(returnFiber, child.sibling);\n            var existing = useFiber(child, element.props.children);\n            existing.return = returnFiber;\n\n            {\n              existing._debugSource = element._source;\n              existing._debugOwner = element._owner;\n            }\n\n            return existing;\n          }\n        } else {\n          if (\n            child.elementType === elementType || // Keep this check inline so it only runs on the false path:\n            isCompatibleFamilyForHotReloading(child, element) || // Lazy types should reconcile their resolved type.\n            // We need to do this after the Hot Reloading check above,\n            // because hot reloading has different semantics than prod because\n            // it doesn't resuspend. So we can't let the call below suspend.\n            (typeof elementType === \"object\" &&\n              elementType !== null &&\n              elementType.$$typeof === REACT_LAZY_TYPE &&\n              resolveLazy(elementType) === child.type)\n          ) {\n            deleteRemainingChildren(returnFiber, child.sibling);\n\n            var _existing = useFiber(child, element.props);\n\n            _existing.ref = coerceRef(returnFiber, child, element);\n            _existing.return = returnFiber;\n\n            {\n              _existing._debugSource = element._source;\n              _existing._debugOwner = element._owner;\n            }\n\n            return _existing;\n          }\n        } // Didn't match.\n\n        deleteRemainingChildren(returnFiber, child);\n        break;\n      } else {\n        deleteChild(returnFiber, child);\n      }\n\n      child = child.sibling;\n    }\n\n    if (element.type === REACT_FRAGMENT_TYPE) {\n      var created = createFiberFromFragment(\n        element.props.children,\n        returnFiber.mode,\n        lanes,\n        element.key\n      );\n      created.return = returnFiber;\n      return created;\n    } else {\n      var _created4 = createFiberFromElement(element, returnFiber.mode, lanes);\n\n      _created4.ref = coerceRef(returnFiber, currentFirstChild, element);\n      _created4.return = returnFiber;\n      return _created4;\n    }\n  }\n\n  function reconcileSinglePortal(\n    returnFiber,\n    currentFirstChild,\n    portal,\n    lanes\n  ) {\n    var key = portal.key;\n    var child = currentFirstChild;\n\n    while (child !== null) {\n      // TODO: If key === null and child.key === null, then this only applies to\n      // the first item in the list.\n      if (child.key === key) {\n        if (\n          child.tag === HostPortal &&\n          child.stateNode.containerInfo === portal.containerInfo &&\n          child.stateNode.implementation === portal.implementation\n        ) {\n          deleteRemainingChildren(returnFiber, child.sibling);\n          var existing = useFiber(child, portal.children || []);\n          existing.return = returnFiber;\n          return existing;\n        } else {\n          deleteRemainingChildren(returnFiber, child);\n          break;\n        }\n      } else {\n        deleteChild(returnFiber, child);\n      }\n\n      child = child.sibling;\n    }\n\n    var created = createFiberFromPortal(portal, returnFiber.mode, lanes);\n    created.return = returnFiber;\n    return created;\n  } // This API will tag the children with the side-effect of the reconciliation\n  // itself. They will be added to the side-effect list as we pass through the\n  // children and the parent.\n\n  function reconcileChildFibers(\n    returnFiber,\n    currentFirstChild,\n    newChild,\n    lanes\n  ) {\n    // This function is not recursive.\n    // If the top level item is an array, we treat it as a set of children,\n    // not as a fragment. Nested arrays on the other hand will be treated as\n    // fragment nodes. Recursion happens at the normal flow.\n    // Handle top level unkeyed fragments as if they were arrays.\n    // This leads to an ambiguity between <>{[...]}</> and <>...</>.\n    // We treat the ambiguous cases above the same.\n    var isUnkeyedTopLevelFragment =\n      typeof newChild === \"object\" &&\n      newChild !== null &&\n      newChild.type === REACT_FRAGMENT_TYPE &&\n      newChild.key === null;\n\n    if (isUnkeyedTopLevelFragment) {\n      newChild = newChild.props.children;\n    } // Handle object types\n\n    if (typeof newChild === \"object\" && newChild !== null) {\n      switch (newChild.$$typeof) {\n        case REACT_ELEMENT_TYPE:\n          return placeSingleChild(\n            reconcileSingleElement(\n              returnFiber,\n              currentFirstChild,\n              newChild,\n              lanes\n            )\n          );\n\n        case REACT_PORTAL_TYPE:\n          return placeSingleChild(\n            reconcileSinglePortal(\n              returnFiber,\n              currentFirstChild,\n              newChild,\n              lanes\n            )\n          );\n\n        case REACT_LAZY_TYPE:\n          var payload = newChild._payload;\n          var init = newChild._init; // TODO: This function is supposed to be non-recursive.\n\n          return reconcileChildFibers(\n            returnFiber,\n            currentFirstChild,\n            init(payload),\n            lanes\n          );\n      }\n\n      if (isArray(newChild)) {\n        return reconcileChildrenArray(\n          returnFiber,\n          currentFirstChild,\n          newChild,\n          lanes\n        );\n      }\n\n      if (getIteratorFn(newChild)) {\n        return reconcileChildrenIterator(\n          returnFiber,\n          currentFirstChild,\n          newChild,\n          lanes\n        );\n      }\n\n      throwOnInvalidObjectType(returnFiber, newChild);\n    }\n\n    if (\n      (typeof newChild === \"string\" && newChild !== \"\") ||\n      typeof newChild === \"number\"\n    ) {\n      return placeSingleChild(\n        reconcileSingleTextNode(\n          returnFiber,\n          currentFirstChild,\n          \"\" + newChild,\n          lanes\n        )\n      );\n    }\n\n    {\n      if (typeof newChild === \"function\") {\n        warnOnFunctionType(returnFiber);\n      }\n    } // Remaining cases are all treated as empty.\n\n    return deleteRemainingChildren(returnFiber, currentFirstChild);\n  }\n\n  return reconcileChildFibers;\n}\n\nvar reconcileChildFibers = ChildReconciler(true);\nvar mountChildFibers = ChildReconciler(false);\nfunction cloneChildFibers(current, workInProgress) {\n  if (current !== null && workInProgress.child !== current.child) {\n    throw new Error(\"Resuming work not yet implemented.\");\n  }\n\n  if (workInProgress.child === null) {\n    return;\n  }\n\n  var currentChild = workInProgress.child;\n  var newChild = createWorkInProgress(currentChild, currentChild.pendingProps);\n  workInProgress.child = newChild;\n  newChild.return = workInProgress;\n\n  while (currentChild.sibling !== null) {\n    currentChild = currentChild.sibling;\n    newChild = newChild.sibling = createWorkInProgress(\n      currentChild,\n      currentChild.pendingProps\n    );\n    newChild.return = workInProgress;\n  }\n\n  newChild.sibling = null;\n} // Reset a workInProgress child set to prepare it for a second pass.\n\nfunction resetChildFibers(workInProgress, lanes) {\n  var child = workInProgress.child;\n\n  while (child !== null) {\n    resetWorkInProgress(child, lanes);\n    child = child.sibling;\n  }\n}\n\nvar NO_CONTEXT = {};\nvar contextStackCursor$1 = createCursor(NO_CONTEXT);\nvar contextFiberStackCursor = createCursor(NO_CONTEXT);\nvar rootInstanceStackCursor = createCursor(NO_CONTEXT);\n\nfunction requiredContext(c) {\n  if (c === NO_CONTEXT) {\n    throw new Error(\n      \"Expected host context to exist. This error is likely caused by a bug \" +\n        \"in React. Please file an issue.\"\n    );\n  }\n\n  return c;\n}\n\nfunction getRootHostContainer() {\n  var rootInstance = requiredContext(rootInstanceStackCursor.current);\n  return rootInstance;\n}\n\nfunction pushHostContainer(fiber, nextRootInstance) {\n  // Push current root instance onto the stack;\n  // This allows us to reset root when portals are popped.\n  push(rootInstanceStackCursor, nextRootInstance, fiber); // Track the context and the Fiber that provided it.\n  // This enables us to pop only Fibers that provide unique contexts.\n\n  push(contextFiberStackCursor, fiber, fiber); // Finally, we need to push the host context to the stack.\n  // However, we can't just call getRootHostContext() and push it because\n  // we'd have a different number of entries on the stack depending on\n  // whether getRootHostContext() throws somewhere in renderer code or not.\n  // So we push an empty value first. This lets us safely unwind on errors.\n\n  push(contextStackCursor$1, NO_CONTEXT, fiber);\n  var nextRootContext = getRootHostContext(); // Now that we know this function doesn't throw, replace it.\n\n  pop(contextStackCursor$1, fiber);\n  push(contextStackCursor$1, nextRootContext, fiber);\n}\n\nfunction popHostContainer(fiber) {\n  pop(contextStackCursor$1, fiber);\n  pop(contextFiberStackCursor, fiber);\n  pop(rootInstanceStackCursor, fiber);\n}\n\nfunction getHostContext() {\n  var context = requiredContext(contextStackCursor$1.current);\n  return context;\n}\n\nfunction pushHostContext(fiber) {\n  var rootInstance = requiredContext(rootInstanceStackCursor.current);\n  var context = requiredContext(contextStackCursor$1.current);\n  var nextContext = getChildHostContext(context, fiber.type); // Don't push this Fiber's context unless it's unique.\n\n  if (context === nextContext) {\n    return;\n  } // Track the context and the Fiber that provided it.\n  // This enables us to pop only Fibers that provide unique contexts.\n\n  push(contextFiberStackCursor, fiber, fiber);\n  push(contextStackCursor$1, nextContext, fiber);\n}\n\nfunction popHostContext(fiber) {\n  // Do not pop unless this Fiber provided the current context.\n  // pushHostContext() only pushes Fibers that provide unique contexts.\n  if (contextFiberStackCursor.current !== fiber) {\n    return;\n  }\n\n  pop(contextStackCursor$1, fiber);\n  pop(contextFiberStackCursor, fiber);\n}\n\nvar DefaultSuspenseContext = 0; // The Suspense Context is split into two parts. The lower bits is\n// inherited deeply down the subtree. The upper bits only affect\n// this immediate suspense boundary and gets reset each new\n// boundary or suspense list.\n\nvar SubtreeSuspenseContextMask = 1; // Subtree Flags:\n// InvisibleParentSuspenseContext indicates that one of our parent Suspense\n// boundaries is not currently showing visible main content.\n// Either because it is already showing a fallback or is not mounted at all.\n// We can use this to determine if it is desirable to trigger a fallback at\n// the parent. If not, then we might need to trigger undesirable boundaries\n// and/or suspend the commit to avoid hiding the parent content.\n\nvar InvisibleParentSuspenseContext = 1; // Shallow Flags:\n// ForceSuspenseFallback can be used by SuspenseList to force newly added\n// items into their fallback state during one of the render passes.\n\nvar ForceSuspenseFallback = 2;\nvar suspenseStackCursor = createCursor(DefaultSuspenseContext);\nfunction hasSuspenseContext(parentContext, flag) {\n  return (parentContext & flag) !== 0;\n}\nfunction setDefaultShallowSuspenseContext(parentContext) {\n  return parentContext & SubtreeSuspenseContextMask;\n}\nfunction setShallowSuspenseContext(parentContext, shallowContext) {\n  return (parentContext & SubtreeSuspenseContextMask) | shallowContext;\n}\nfunction addSubtreeSuspenseContext(parentContext, subtreeContext) {\n  return parentContext | subtreeContext;\n}\nfunction pushSuspenseContext(fiber, newContext) {\n  push(suspenseStackCursor, newContext, fiber);\n}\nfunction popSuspenseContext(fiber) {\n  pop(suspenseStackCursor, fiber);\n}\n\nfunction shouldCaptureSuspense(workInProgress, hasInvisibleParent) {\n  // If it was the primary children that just suspended, capture and render the\n  // fallback. Otherwise, don't capture and bubble to the next boundary.\n  var nextState = workInProgress.memoizedState;\n\n  if (nextState !== null) {\n    if (nextState.dehydrated !== null) {\n      // A dehydrated boundary always captures.\n      return true;\n    }\n\n    return false;\n  }\n\n  var props = workInProgress.memoizedProps; // Regular boundaries always capture.\n\n  {\n    return true;\n  } // If it's a boundary we should avoid, then we prefer to bubble up to the\n}\nfunction findFirstSuspended(row) {\n  var node = row;\n\n  while (node !== null) {\n    if (node.tag === SuspenseComponent) {\n      var state = node.memoizedState;\n\n      if (state !== null) {\n        var dehydrated = state.dehydrated;\n\n        if (\n          dehydrated === null ||\n          isSuspenseInstancePending() ||\n          isSuspenseInstanceFallback()\n        ) {\n          return node;\n        }\n      }\n    } else if (\n      node.tag === SuspenseListComponent && // revealOrder undefined can't be trusted because it don't\n      // keep track of whether it suspended or not.\n      node.memoizedProps.revealOrder !== undefined\n    ) {\n      var didSuspend = (node.flags & DidCapture) !== NoFlags;\n\n      if (didSuspend) {\n        return node;\n      }\n    } else if (node.child !== null) {\n      node.child.return = node;\n      node = node.child;\n      continue;\n    }\n\n    if (node === row) {\n      return null;\n    }\n\n    while (node.sibling === null) {\n      if (node.return === null || node.return === row) {\n        return null;\n      }\n\n      node = node.return;\n    }\n\n    node.sibling.return = node.return;\n    node = node.sibling;\n  }\n\n  return null;\n}\n\nvar NoFlags$1 =\n  /*   */\n  0; // Represents whether effect should fire.\n\nvar HasEffect =\n  /* */\n  1; // Represents the phase in which the effect (not the clean-up) fires.\n\nvar Insertion =\n  /*  */\n  2;\nvar Layout =\n  /*    */\n  4;\nvar Passive$1 =\n  /*   */\n  8;\n\n// and should be reset before starting a new render.\n// This tracks which mutable sources need to be reset after a render.\n\nvar workInProgressSources = [];\nfunction resetWorkInProgressVersions() {\n  for (var i = 0; i < workInProgressSources.length; i++) {\n    var mutableSource = workInProgressSources[i];\n\n    {\n      mutableSource._workInProgressVersionSecondary = null;\n    }\n  }\n\n  workInProgressSources.length = 0;\n}\n\nvar ReactCurrentDispatcher$1 = ReactSharedInternals.ReactCurrentDispatcher,\n  ReactCurrentBatchConfig$1 = ReactSharedInternals.ReactCurrentBatchConfig;\nvar didWarnAboutMismatchedHooksForComponent;\nvar didWarnUncachedGetSnapshot;\n\n{\n  didWarnAboutMismatchedHooksForComponent = new Set();\n}\n\n// These are set right before calling the component.\nvar renderLanes = NoLanes; // The work-in-progress fiber. I've named it differently to distinguish it from\n// the work-in-progress hook.\n\nvar currentlyRenderingFiber$1 = null; // Hooks are stored as a linked list on the fiber's memoizedState field. The\n// current hook list is the list that belongs to the current fiber. The\n// work-in-progress hook list is a new list that will be added to the\n// work-in-progress fiber.\n\nvar currentHook = null;\nvar workInProgressHook = null; // Whether an update was scheduled at any point during the render phase. This\n// does not get reset if we do another render pass; only when we're completely\n// finished evaluating this component. This is an optimization so we know\n// whether we need to clear render phase updates after a throw.\n\nvar didScheduleRenderPhaseUpdate = false; // Where an update was scheduled only during the current render pass. This\n// gets reset after each attempt.\n// TODO: Maybe there's some way to consolidate this with\n// `didScheduleRenderPhaseUpdate`. Or with `numberOfReRenders`.\n\nvar didScheduleRenderPhaseUpdateDuringThisPass = false; // Counts the number of useId hooks in this component.\n// hydration). This counter is global, so client ids are not stable across\n// render attempts.\n\nvar globalClientIdCounter = 0;\nvar RE_RENDER_LIMIT = 25; // In DEV, this is the name of the currently executing primitive hook\n\nvar currentHookNameInDev = null; // In DEV, this list ensures that hooks are called in the same order between renders.\n// The list stores the order of hooks used during the initial render (mount).\n// Subsequent renders (updates) reference this list.\n\nvar hookTypesDev = null;\nvar hookTypesUpdateIndexDev = -1; // In DEV, this tracks whether currently rendering component needs to ignore\n// the dependencies for Hooks that need them (e.g. useEffect or useMemo).\n// When true, such Hooks will always be \"remounted\". Only used during hot reload.\n\nvar ignorePreviousDependencies = false;\n\nfunction mountHookTypesDev() {\n  {\n    var hookName = currentHookNameInDev;\n\n    if (hookTypesDev === null) {\n      hookTypesDev = [hookName];\n    } else {\n      hookTypesDev.push(hookName);\n    }\n  }\n}\n\nfunction updateHookTypesDev() {\n  {\n    var hookName = currentHookNameInDev;\n\n    if (hookTypesDev !== null) {\n      hookTypesUpdateIndexDev++;\n\n      if (hookTypesDev[hookTypesUpdateIndexDev] !== hookName) {\n        warnOnHookMismatchInDev(hookName);\n      }\n    }\n  }\n}\n\nfunction checkDepsAreArrayDev(deps) {\n  {\n    if (deps !== undefined && deps !== null && !isArray(deps)) {\n      // Verify deps, but only on mount to avoid extra checks.\n      // It's unlikely their type would change as usually you define them inline.\n      error(\n        \"%s received a final argument that is not an array (instead, received `%s`). When \" +\n          \"specified, the final argument must be an array.\",\n        currentHookNameInDev,\n        typeof deps\n      );\n    }\n  }\n}\n\nfunction warnOnHookMismatchInDev(currentHookName) {\n  {\n    var componentName = getComponentNameFromFiber(currentlyRenderingFiber$1);\n\n    if (!didWarnAboutMismatchedHooksForComponent.has(componentName)) {\n      didWarnAboutMismatchedHooksForComponent.add(componentName);\n\n      if (hookTypesDev !== null) {\n        var table = \"\";\n        var secondColumnStart = 30;\n\n        for (var i = 0; i <= hookTypesUpdateIndexDev; i++) {\n          var oldHookName = hookTypesDev[i];\n          var newHookName =\n            i === hookTypesUpdateIndexDev ? currentHookName : oldHookName;\n          var row = i + 1 + \". \" + oldHookName; // Extra space so second column lines up\n          // lol @ IE not supporting String#repeat\n\n          while (row.length < secondColumnStart) {\n            row += \" \";\n          }\n\n          row += newHookName + \"\\n\";\n          table += row;\n        }\n\n        error(\n          \"React has detected a change in the order of Hooks called by %s. \" +\n            \"This will lead to bugs and errors if not fixed. \" +\n            \"For more information, read the Rules of Hooks: https://reactjs.org/link/rules-of-hooks\\n\\n\" +\n            \"   Previous render            Next render\\n\" +\n            \"   ------------------------------------------------------\\n\" +\n            \"%s\" +\n            \"   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\",\n          componentName,\n          table\n        );\n      }\n    }\n  }\n}\n\nfunction throwInvalidHookError() {\n  throw new Error(\n    \"Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for\" +\n      \" one of the following reasons:\\n\" +\n      \"1. You might have mismatching versions of React and the renderer (such as React DOM)\\n\" +\n      \"2. You might be breaking the Rules of Hooks\\n\" +\n      \"3. You might have more than one copy of React in the same app\\n\" +\n      \"See https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.\"\n  );\n}\n\nfunction areHookInputsEqual(nextDeps, prevDeps) {\n  {\n    if (ignorePreviousDependencies) {\n      // Only true when this component is being hot reloaded.\n      return false;\n    }\n  }\n\n  if (prevDeps === null) {\n    {\n      error(\n        \"%s received a final argument during this render, but not during \" +\n          \"the previous render. Even though the final argument is optional, \" +\n          \"its type cannot change between renders.\",\n        currentHookNameInDev\n      );\n    }\n\n    return false;\n  }\n\n  {\n    // Don't bother comparing lengths in prod because these arrays should be\n    // passed inline.\n    if (nextDeps.length !== prevDeps.length) {\n      error(\n        \"The final argument passed to %s changed size between renders. The \" +\n          \"order and size of this array must remain constant.\\n\\n\" +\n          \"Previous: %s\\n\" +\n          \"Incoming: %s\",\n        currentHookNameInDev,\n        \"[\" + prevDeps.join(\", \") + \"]\",\n        \"[\" + nextDeps.join(\", \") + \"]\"\n      );\n    }\n  }\n\n  for (var i = 0; i < prevDeps.length && i < nextDeps.length; i++) {\n    if (objectIs(nextDeps[i], prevDeps[i])) {\n      continue;\n    }\n\n    return false;\n  }\n\n  return true;\n}\n\nfunction renderWithHooks(\n  current,\n  workInProgress,\n  Component,\n  props,\n  secondArg,\n  nextRenderLanes\n) {\n  renderLanes = nextRenderLanes;\n  currentlyRenderingFiber$1 = workInProgress;\n\n  {\n    hookTypesDev = current !== null ? current._debugHookTypes : null;\n    hookTypesUpdateIndexDev = -1; // Used for hot reloading:\n\n    ignorePreviousDependencies =\n      current !== null && current.type !== workInProgress.type;\n  }\n\n  workInProgress.memoizedState = null;\n  workInProgress.updateQueue = null;\n  workInProgress.lanes = NoLanes; // The following should have already been reset\n  // currentHook = null;\n  // workInProgressHook = null;\n  // didScheduleRenderPhaseUpdate = false;\n  // localIdCounter = 0;\n  // TODO Warn if no hooks are used at all during mount, then some are used during update.\n  // Currently we will identify the update render as a mount because memoizedState === null.\n  // This is tricky because it's valid for certain types of components (e.g. React.lazy)\n  // Using memoizedState to differentiate between mount/update only works if at least one stateful hook is used.\n  // Non-stateful hooks (e.g. context) don't get added to memoizedState,\n  // so memoizedState would be null during updates and mounts.\n\n  {\n    if (current !== null && current.memoizedState !== null) {\n      ReactCurrentDispatcher$1.current = HooksDispatcherOnUpdateInDEV;\n    } else if (hookTypesDev !== null) {\n      // This dispatcher handles an edge case where a component is updating,\n      // but no stateful hooks have been used.\n      // We want to match the production code behavior (which will use HooksDispatcherOnMount),\n      // but with the extra DEV validation to ensure hooks ordering hasn't changed.\n      // This dispatcher does that.\n      ReactCurrentDispatcher$1.current = HooksDispatcherOnMountWithHookTypesInDEV;\n    } else {\n      ReactCurrentDispatcher$1.current = HooksDispatcherOnMountInDEV;\n    }\n  }\n\n  var children = Component(props, secondArg); // Check if there was a render phase update\n\n  if (didScheduleRenderPhaseUpdateDuringThisPass) {\n    // Keep rendering in a loop for as long as render phase updates continue to\n    // be scheduled. Use a counter to prevent infinite loops.\n    var numberOfReRenders = 0;\n\n    do {\n      didScheduleRenderPhaseUpdateDuringThisPass = false;\n\n      if (numberOfReRenders >= RE_RENDER_LIMIT) {\n        throw new Error(\n          \"Too many re-renders. React limits the number of renders to prevent \" +\n            \"an infinite loop.\"\n        );\n      }\n\n      numberOfReRenders += 1;\n\n      {\n        // Even when hot reloading, allow dependencies to stabilize\n        // after first render to prevent infinite render phase updates.\n        ignorePreviousDependencies = false;\n      } // Start over from the beginning of the list\n\n      currentHook = null;\n      workInProgressHook = null;\n      workInProgress.updateQueue = null;\n\n      {\n        // Also validate hook order for cascading updates.\n        hookTypesUpdateIndexDev = -1;\n      }\n\n      ReactCurrentDispatcher$1.current = HooksDispatcherOnRerenderInDEV;\n      children = Component(props, secondArg);\n    } while (didScheduleRenderPhaseUpdateDuringThisPass);\n  } // We can assume the previous dispatcher is always this one, since we set it\n  // at the beginning of the render phase and there's no re-entrance.\n\n  ReactCurrentDispatcher$1.current = ContextOnlyDispatcher;\n\n  {\n    workInProgress._debugHookTypes = hookTypesDev;\n  } // This check uses currentHook so that it works the same in DEV and prod bundles.\n  // hookTypesDev could catch more cases (e.g. context) but only in DEV bundles.\n\n  var didRenderTooFewHooks = currentHook !== null && currentHook.next !== null;\n  renderLanes = NoLanes;\n  currentlyRenderingFiber$1 = null;\n  currentHook = null;\n  workInProgressHook = null;\n\n  {\n    currentHookNameInDev = null;\n    hookTypesDev = null;\n    hookTypesUpdateIndexDev = -1; // Confirm that a static flag was not added or removed since the last\n    // render. If this fires, it suggests that we incorrectly reset the static\n    // flags in some other part of the codebase. This has happened before, for\n    // example, in the SuspenseList implementation.\n\n    if (\n      current !== null &&\n      (current.flags & StaticMask) !== (workInProgress.flags & StaticMask) && // Disable this warning in legacy mode, because legacy Suspense is weird\n      // and creates false positives. To make this work in legacy mode, we'd\n      // need to mark fibers that commit in an incomplete state, somehow. For\n      // now I'll disable the warning that most of the bugs that would trigger\n      // it are either exclusive to concurrent mode or exist in both.\n      (current.mode & ConcurrentMode) !== NoMode\n    ) {\n      error(\n        \"Internal React error: Expected static flag was missing. Please \" +\n          \"notify the React team.\"\n      );\n    }\n  }\n\n  didScheduleRenderPhaseUpdate = false; // This is reset by checkDidRenderIdHook\n  // localIdCounter = 0;\n\n  if (didRenderTooFewHooks) {\n    throw new Error(\n      \"Rendered fewer hooks than expected. This may be caused by an accidental \" +\n        \"early return statement.\"\n    );\n  }\n\n  return children;\n}\nfunction bailoutHooks(current, workInProgress, lanes) {\n  workInProgress.updateQueue = current.updateQueue; // TODO: Don't need to reset the flags here, because they're reset in the\n  // complete phase (bubbleProperties).\n\n  {\n    workInProgress.flags &= ~(Passive | Update);\n  }\n\n  current.lanes = removeLanes(current.lanes, lanes);\n}\nfunction resetHooksAfterThrow() {\n  // We can assume the previous dispatcher is always this one, since we set it\n  // at the beginning of the render phase and there's no re-entrance.\n  ReactCurrentDispatcher$1.current = ContextOnlyDispatcher;\n\n  if (didScheduleRenderPhaseUpdate) {\n    // There were render phase updates. These are only valid for this render\n    // phase, which we are now aborting. Remove the updates from the queues so\n    // they do not persist to the next render. Do not remove updates from hooks\n    // that weren't processed.\n    //\n    // Only reset the updates from the queue if it has a clone. If it does\n    // not have a clone, that means it wasn't processed, and the updates were\n    // scheduled before we entered the render phase.\n    var hook = currentlyRenderingFiber$1.memoizedState;\n\n    while (hook !== null) {\n      var queue = hook.queue;\n\n      if (queue !== null) {\n        queue.pending = null;\n      }\n\n      hook = hook.next;\n    }\n\n    didScheduleRenderPhaseUpdate = false;\n  }\n\n  renderLanes = NoLanes;\n  currentlyRenderingFiber$1 = null;\n  currentHook = null;\n  workInProgressHook = null;\n\n  {\n    hookTypesDev = null;\n    hookTypesUpdateIndexDev = -1;\n    currentHookNameInDev = null;\n    isUpdatingOpaqueValueInRenderPhase = false;\n  }\n\n  didScheduleRenderPhaseUpdateDuringThisPass = false;\n}\n\nfunction mountWorkInProgressHook() {\n  var hook = {\n    memoizedState: null,\n    baseState: null,\n    baseQueue: null,\n    queue: null,\n    next: null\n  };\n\n  if (workInProgressHook === null) {\n    // This is the first hook in the list\n    currentlyRenderingFiber$1.memoizedState = workInProgressHook = hook;\n  } else {\n    // Append to the end of the list\n    workInProgressHook = workInProgressHook.next = hook;\n  }\n\n  return workInProgressHook;\n}\n\nfunction updateWorkInProgressHook() {\n  // This function is used both for updates and for re-renders triggered by a\n  // render phase update. It assumes there is either a current hook we can\n  // clone, or a work-in-progress hook from a previous render pass that we can\n  // use as a base. When we reach the end of the base list, we must switch to\n  // the dispatcher used for mounts.\n  var nextCurrentHook;\n\n  if (currentHook === null) {\n    var current = currentlyRenderingFiber$1.alternate;\n\n    if (current !== null) {\n      nextCurrentHook = current.memoizedState;\n    } else {\n      nextCurrentHook = null;\n    }\n  } else {\n    nextCurrentHook = currentHook.next;\n  }\n\n  var nextWorkInProgressHook;\n\n  if (workInProgressHook === null) {\n    nextWorkInProgressHook = currentlyRenderingFiber$1.memoizedState;\n  } else {\n    nextWorkInProgressHook = workInProgressHook.next;\n  }\n\n  if (nextWorkInProgressHook !== null) {\n    // There's already a work-in-progress. Reuse it.\n    workInProgressHook = nextWorkInProgressHook;\n    nextWorkInProgressHook = workInProgressHook.next;\n    currentHook = nextCurrentHook;\n  } else {\n    // Clone from the current hook.\n    if (nextCurrentHook === null) {\n      throw new Error(\"Rendered more hooks than during the previous render.\");\n    }\n\n    currentHook = nextCurrentHook;\n    var newHook = {\n      memoizedState: currentHook.memoizedState,\n      baseState: currentHook.baseState,\n      baseQueue: currentHook.baseQueue,\n      queue: currentHook.queue,\n      next: null\n    };\n\n    if (workInProgressHook === null) {\n      // This is the first hook in the list.\n      currentlyRenderingFiber$1.memoizedState = workInProgressHook = newHook;\n    } else {\n      // Append to the end of the list.\n      workInProgressHook = workInProgressHook.next = newHook;\n    }\n  }\n\n  return workInProgressHook;\n}\n\nfunction createFunctionComponentUpdateQueue() {\n  return {\n    lastEffect: null,\n    stores: null\n  };\n}\n\nfunction basicStateReducer(state, action) {\n  // $FlowFixMe: Flow doesn't like mixed types\n  return typeof action === \"function\" ? action(state) : action;\n}\n\nfunction mountReducer(reducer, initialArg, init) {\n  var hook = mountWorkInProgressHook();\n  var initialState;\n\n  if (init !== undefined) {\n    initialState = init(initialArg);\n  } else {\n    initialState = initialArg;\n  }\n\n  hook.memoizedState = hook.baseState = initialState;\n  var queue = {\n    pending: null,\n    interleaved: null,\n    lanes: NoLanes,\n    dispatch: null,\n    lastRenderedReducer: reducer,\n    lastRenderedState: initialState\n  };\n  hook.queue = queue;\n  var dispatch = (queue.dispatch = dispatchReducerAction.bind(\n    null,\n    currentlyRenderingFiber$1,\n    queue\n  ));\n  return [hook.memoizedState, dispatch];\n}\n\nfunction updateReducer(reducer, initialArg, init) {\n  var hook = updateWorkInProgressHook();\n  var queue = hook.queue;\n\n  if (queue === null) {\n    throw new Error(\n      \"Should have a queue. This is likely a bug in React. Please file an issue.\"\n    );\n  }\n\n  queue.lastRenderedReducer = reducer;\n  var current = currentHook; // The last rebase update that is NOT part of the base state.\n\n  var baseQueue = current.baseQueue; // The last pending update that hasn't been processed yet.\n\n  var pendingQueue = queue.pending;\n\n  if (pendingQueue !== null) {\n    // We have new updates that haven't been processed yet.\n    // We'll add them to the base queue.\n    if (baseQueue !== null) {\n      // Merge the pending queue and the base queue.\n      var baseFirst = baseQueue.next;\n      var pendingFirst = pendingQueue.next;\n      baseQueue.next = pendingFirst;\n      pendingQueue.next = baseFirst;\n    }\n\n    {\n      if (current.baseQueue !== baseQueue) {\n        // Internal invariant that should never happen, but feasibly could in\n        // the future if we implement resuming, or some form of that.\n        error(\n          \"Internal error: Expected work-in-progress queue to be a clone. \" +\n            \"This is a bug in React.\"\n        );\n      }\n    }\n\n    current.baseQueue = baseQueue = pendingQueue;\n    queue.pending = null;\n  }\n\n  if (baseQueue !== null) {\n    // We have a queue to process.\n    var first = baseQueue.next;\n    var newState = current.baseState;\n    var newBaseState = null;\n    var newBaseQueueFirst = null;\n    var newBaseQueueLast = null;\n    var update = first;\n\n    do {\n      var updateLane = update.lane;\n\n      if (!isSubsetOfLanes(renderLanes, updateLane)) {\n        // Priority is insufficient. Skip this update. If this is the first\n        // skipped update, the previous update/state is the new base\n        // update/state.\n        var clone = {\n          lane: updateLane,\n          action: update.action,\n          hasEagerState: update.hasEagerState,\n          eagerState: update.eagerState,\n          next: null\n        };\n\n        if (newBaseQueueLast === null) {\n          newBaseQueueFirst = newBaseQueueLast = clone;\n          newBaseState = newState;\n        } else {\n          newBaseQueueLast = newBaseQueueLast.next = clone;\n        } // Update the remaining priority in the queue.\n        // TODO: Don't need to accumulate this. Instead, we can remove\n        // renderLanes from the original lanes.\n\n        currentlyRenderingFiber$1.lanes = mergeLanes(\n          currentlyRenderingFiber$1.lanes,\n          updateLane\n        );\n        markSkippedUpdateLanes(updateLane);\n      } else {\n        // This update does have sufficient priority.\n        if (newBaseQueueLast !== null) {\n          var _clone = {\n            // This update is going to be committed so we never want uncommit\n            // it. Using NoLane works because 0 is a subset of all bitmasks, so\n            // this will never be skipped by the check above.\n            lane: NoLane,\n            action: update.action,\n            hasEagerState: update.hasEagerState,\n            eagerState: update.eagerState,\n            next: null\n          };\n          newBaseQueueLast = newBaseQueueLast.next = _clone;\n        } // Process this update.\n\n        if (update.hasEagerState) {\n          // If this update is a state update (not a reducer) and was processed eagerly,\n          // we can use the eagerly computed state\n          newState = update.eagerState;\n        } else {\n          var action = update.action;\n          newState = reducer(newState, action);\n        }\n      }\n\n      update = update.next;\n    } while (update !== null && update !== first);\n\n    if (newBaseQueueLast === null) {\n      newBaseState = newState;\n    } else {\n      newBaseQueueLast.next = newBaseQueueFirst;\n    } // Mark that the fiber performed work, but only if the new state is\n    // different from the current state.\n\n    if (!objectIs(newState, hook.memoizedState)) {\n      markWorkInProgressReceivedUpdate();\n    }\n\n    hook.memoizedState = newState;\n    hook.baseState = newBaseState;\n    hook.baseQueue = newBaseQueueLast;\n    queue.lastRenderedState = newState;\n  } // Interleaved updates are stored on a separate queue. We aren't going to\n  // process them during this render, but we do need to track which lanes\n  // are remaining.\n\n  var lastInterleaved = queue.interleaved;\n\n  if (lastInterleaved !== null) {\n    var interleaved = lastInterleaved;\n\n    do {\n      var interleavedLane = interleaved.lane;\n      currentlyRenderingFiber$1.lanes = mergeLanes(\n        currentlyRenderingFiber$1.lanes,\n        interleavedLane\n      );\n      markSkippedUpdateLanes(interleavedLane);\n      interleaved = interleaved.next;\n    } while (interleaved !== lastInterleaved);\n  } else if (baseQueue === null) {\n    // `queue.lanes` is used for entangling transitions. We can set it back to\n    // zero once the queue is empty.\n    queue.lanes = NoLanes;\n  }\n\n  var dispatch = queue.dispatch;\n  return [hook.memoizedState, dispatch];\n}\n\nfunction rerenderReducer(reducer, initialArg, init) {\n  var hook = updateWorkInProgressHook();\n  var queue = hook.queue;\n\n  if (queue === null) {\n    throw new Error(\n      \"Should have a queue. This is likely a bug in React. Please file an issue.\"\n    );\n  }\n\n  queue.lastRenderedReducer = reducer; // This is a re-render. Apply the new render phase updates to the previous\n  // work-in-progress hook.\n\n  var dispatch = queue.dispatch;\n  var lastRenderPhaseUpdate = queue.pending;\n  var newState = hook.memoizedState;\n\n  if (lastRenderPhaseUpdate !== null) {\n    // The queue doesn't persist past this render pass.\n    queue.pending = null;\n    var firstRenderPhaseUpdate = lastRenderPhaseUpdate.next;\n    var update = firstRenderPhaseUpdate;\n\n    do {\n      // Process this render phase update. We don't have to check the\n      // priority because it will always be the same as the current\n      // render's.\n      var action = update.action;\n      newState = reducer(newState, action);\n      update = update.next;\n    } while (update !== firstRenderPhaseUpdate); // Mark that the fiber performed work, but only if the new state is\n    // different from the current state.\n\n    if (!objectIs(newState, hook.memoizedState)) {\n      markWorkInProgressReceivedUpdate();\n    }\n\n    hook.memoizedState = newState; // Don't persist the state accumulated from the render phase updates to\n    // the base state unless the queue is empty.\n    // TODO: Not sure if this is the desired semantics, but it's what we\n    // do for gDSFP. I can't remember why.\n\n    if (hook.baseQueue === null) {\n      hook.baseState = newState;\n    }\n\n    queue.lastRenderedState = newState;\n  }\n\n  return [newState, dispatch];\n}\n\nfunction mountMutableSource(source, getSnapshot, subscribe) {\n  {\n    return undefined;\n  }\n}\n\nfunction updateMutableSource(source, getSnapshot, subscribe) {\n  {\n    return undefined;\n  }\n}\n\nfunction mountSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {\n  var fiber = currentlyRenderingFiber$1;\n  var hook = mountWorkInProgressHook();\n  var nextSnapshot;\n\n  {\n    nextSnapshot = getSnapshot();\n\n    {\n      if (!didWarnUncachedGetSnapshot) {\n        var cachedSnapshot = getSnapshot();\n\n        if (!objectIs(nextSnapshot, cachedSnapshot)) {\n          error(\n            \"The result of getSnapshot should be cached to avoid an infinite loop\"\n          );\n\n          didWarnUncachedGetSnapshot = true;\n        }\n      }\n    } // Unless we're rendering a blocking lane, schedule a consistency check.\n    // Right before committing, we will walk the tree and check if any of the\n    // stores were mutated.\n    //\n    // We won't do this if we're hydrating server-rendered content, because if\n    // the content is stale, it's already visible anyway. Instead we'll patch\n    // it up in a passive effect.\n\n    var root = getWorkInProgressRoot();\n\n    if (root === null) {\n      throw new Error(\n        \"Expected a work-in-progress root. This is a bug in React. Please file an issue.\"\n      );\n    }\n\n    if (!includesBlockingLane(root, renderLanes)) {\n      pushStoreConsistencyCheck(fiber, getSnapshot, nextSnapshot);\n    }\n  } // Read the current snapshot from the store on every render. This breaks the\n  // normal rules of React, and only works because store updates are\n  // always synchronous.\n\n  hook.memoizedState = nextSnapshot;\n  var inst = {\n    value: nextSnapshot,\n    getSnapshot: getSnapshot\n  };\n  hook.queue = inst; // Schedule an effect to subscribe to the store.\n\n  mountEffect(subscribeToStore.bind(null, fiber, inst, subscribe), [subscribe]); // Schedule an effect to update the mutable instance fields. We will update\n  // this whenever subscribe, getSnapshot, or value changes. Because there's no\n  // clean-up function, and we track the deps correctly, we can call pushEffect\n  // directly, without storing any additional state. For the same reason, we\n  // don't need to set a static flag, either.\n  // TODO: We can move this to the passive phase once we add a pre-commit\n  // consistency check. See the next comment.\n\n  fiber.flags |= Passive;\n  pushEffect(\n    HasEffect | Passive$1,\n    updateStoreInstance.bind(null, fiber, inst, nextSnapshot, getSnapshot),\n    undefined,\n    null\n  );\n  return nextSnapshot;\n}\n\nfunction updateSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {\n  var fiber = currentlyRenderingFiber$1;\n  var hook = updateWorkInProgressHook(); // Read the current snapshot from the store on every render. This breaks the\n  // normal rules of React, and only works because store updates are\n  // always synchronous.\n\n  var nextSnapshot = getSnapshot();\n\n  {\n    if (!didWarnUncachedGetSnapshot) {\n      var cachedSnapshot = getSnapshot();\n\n      if (!objectIs(nextSnapshot, cachedSnapshot)) {\n        error(\n          \"The result of getSnapshot should be cached to avoid an infinite loop\"\n        );\n\n        didWarnUncachedGetSnapshot = true;\n      }\n    }\n  }\n\n  var prevSnapshot = hook.memoizedState;\n  var snapshotChanged = !objectIs(prevSnapshot, nextSnapshot);\n\n  if (snapshotChanged) {\n    hook.memoizedState = nextSnapshot;\n    markWorkInProgressReceivedUpdate();\n  }\n\n  var inst = hook.queue;\n  updateEffect(subscribeToStore.bind(null, fiber, inst, subscribe), [\n    subscribe\n  ]); // Whenever getSnapshot or subscribe changes, we need to check in the\n  // commit phase if there was an interleaved mutation. In concurrent mode\n  // this can happen all the time, but even in synchronous mode, an earlier\n  // effect may have mutated the store.\n\n  if (\n    inst.getSnapshot !== getSnapshot ||\n    snapshotChanged || // Check if the susbcribe function changed. We can save some memory by\n    // checking whether we scheduled a subscription effect above.\n    (workInProgressHook !== null &&\n      workInProgressHook.memoizedState.tag & HasEffect)\n  ) {\n    fiber.flags |= Passive;\n    pushEffect(\n      HasEffect | Passive$1,\n      updateStoreInstance.bind(null, fiber, inst, nextSnapshot, getSnapshot),\n      undefined,\n      null\n    ); // Unless we're rendering a blocking lane, schedule a consistency check.\n    // Right before committing, we will walk the tree and check if any of the\n    // stores were mutated.\n\n    var root = getWorkInProgressRoot();\n\n    if (root === null) {\n      throw new Error(\n        \"Expected a work-in-progress root. This is a bug in React. Please file an issue.\"\n      );\n    }\n\n    if (!includesBlockingLane(root, renderLanes)) {\n      pushStoreConsistencyCheck(fiber, getSnapshot, nextSnapshot);\n    }\n  }\n\n  return nextSnapshot;\n}\n\nfunction pushStoreConsistencyCheck(fiber, getSnapshot, renderedSnapshot) {\n  fiber.flags |= StoreConsistency;\n  var check = {\n    getSnapshot: getSnapshot,\n    value: renderedSnapshot\n  };\n  var componentUpdateQueue = currentlyRenderingFiber$1.updateQueue;\n\n  if (componentUpdateQueue === null) {\n    componentUpdateQueue = createFunctionComponentUpdateQueue();\n    currentlyRenderingFiber$1.updateQueue = componentUpdateQueue;\n    componentUpdateQueue.stores = [check];\n  } else {\n    var stores = componentUpdateQueue.stores;\n\n    if (stores === null) {\n      componentUpdateQueue.stores = [check];\n    } else {\n      stores.push(check);\n    }\n  }\n}\n\nfunction updateStoreInstance(fiber, inst, nextSnapshot, getSnapshot) {\n  // These are updated in the passive phase\n  inst.value = nextSnapshot;\n  inst.getSnapshot = getSnapshot; // Something may have been mutated in between render and commit. This could\n  // have been in an event that fired before the passive effects, or it could\n  // have been in a layout effect. In that case, we would have used the old\n  // snapsho and getSnapshot values to bail out. We need to check one more time.\n\n  if (checkIfSnapshotChanged(inst)) {\n    // Force a re-render.\n    forceStoreRerender(fiber);\n  }\n}\n\nfunction subscribeToStore(fiber, inst, subscribe) {\n  var handleStoreChange = function() {\n    // The store changed. Check if the snapshot changed since the last time we\n    // read from the store.\n    if (checkIfSnapshotChanged(inst)) {\n      // Force a re-render.\n      forceStoreRerender(fiber);\n    }\n  }; // Subscribe to the store and return a clean-up function.\n\n  return subscribe(handleStoreChange);\n}\n\nfunction checkIfSnapshotChanged(inst) {\n  var latestGetSnapshot = inst.getSnapshot;\n  var prevValue = inst.value;\n\n  try {\n    var nextValue = latestGetSnapshot();\n    return !objectIs(prevValue, nextValue);\n  } catch (error) {\n    return true;\n  }\n}\n\nfunction forceStoreRerender(fiber) {\n  var root = enqueueConcurrentRenderForLane(fiber, SyncLane);\n\n  if (root !== null) {\n    scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);\n  }\n}\n\nfunction mountState(initialState) {\n  var hook = mountWorkInProgressHook();\n\n  if (typeof initialState === \"function\") {\n    // $FlowFixMe: Flow doesn't like mixed types\n    initialState = initialState();\n  }\n\n  hook.memoizedState = hook.baseState = initialState;\n  var queue = {\n    pending: null,\n    interleaved: null,\n    lanes: NoLanes,\n    dispatch: null,\n    lastRenderedReducer: basicStateReducer,\n    lastRenderedState: initialState\n  };\n  hook.queue = queue;\n  var dispatch = (queue.dispatch = dispatchSetState.bind(\n    null,\n    currentlyRenderingFiber$1,\n    queue\n  ));\n  return [hook.memoizedState, dispatch];\n}\n\nfunction updateState(initialState) {\n  return updateReducer(basicStateReducer);\n}\n\nfunction rerenderState(initialState) {\n  return rerenderReducer(basicStateReducer);\n}\n\nfunction pushEffect(tag, create, destroy, deps) {\n  var effect = {\n    tag: tag,\n    create: create,\n    destroy: destroy,\n    deps: deps,\n    // Circular\n    next: null\n  };\n  var componentUpdateQueue = currentlyRenderingFiber$1.updateQueue;\n\n  if (componentUpdateQueue === null) {\n    componentUpdateQueue = createFunctionComponentUpdateQueue();\n    currentlyRenderingFiber$1.updateQueue = componentUpdateQueue;\n    componentUpdateQueue.lastEffect = effect.next = effect;\n  } else {\n    var lastEffect = componentUpdateQueue.lastEffect;\n\n    if (lastEffect === null) {\n      componentUpdateQueue.lastEffect = effect.next = effect;\n    } else {\n      var firstEffect = lastEffect.next;\n      lastEffect.next = effect;\n      effect.next = firstEffect;\n      componentUpdateQueue.lastEffect = effect;\n    }\n  }\n\n  return effect;\n}\n\nfunction mountRef(initialValue) {\n  var hook = mountWorkInProgressHook();\n\n  {\n    var _ref2 = {\n      current: initialValue\n    };\n    hook.memoizedState = _ref2;\n    return _ref2;\n  }\n}\n\nfunction updateRef(initialValue) {\n  var hook = updateWorkInProgressHook();\n  return hook.memoizedState;\n}\n\nfunction mountEffectImpl(fiberFlags, hookFlags, create, deps) {\n  var hook = mountWorkInProgressHook();\n  var nextDeps = deps === undefined ? null : deps;\n  currentlyRenderingFiber$1.flags |= fiberFlags;\n  hook.memoizedState = pushEffect(\n    HasEffect | hookFlags,\n    create,\n    undefined,\n    nextDeps\n  );\n}\n\nfunction updateEffectImpl(fiberFlags, hookFlags, create, deps) {\n  var hook = updateWorkInProgressHook();\n  var nextDeps = deps === undefined ? null : deps;\n  var destroy = undefined;\n\n  if (currentHook !== null) {\n    var prevEffect = currentHook.memoizedState;\n    destroy = prevEffect.destroy;\n\n    if (nextDeps !== null) {\n      var prevDeps = prevEffect.deps;\n\n      if (areHookInputsEqual(nextDeps, prevDeps)) {\n        hook.memoizedState = pushEffect(hookFlags, create, destroy, nextDeps);\n        return;\n      }\n    }\n  }\n\n  currentlyRenderingFiber$1.flags |= fiberFlags;\n  hook.memoizedState = pushEffect(\n    HasEffect | hookFlags,\n    create,\n    destroy,\n    nextDeps\n  );\n}\n\nfunction mountEffect(create, deps) {\n  {\n    return mountEffectImpl(Passive | PassiveStatic, Passive$1, create, deps);\n  }\n}\n\nfunction updateEffect(create, deps) {\n  return updateEffectImpl(Passive, Passive$1, create, deps);\n}\n\nfunction mountInsertionEffect(create, deps) {\n  return mountEffectImpl(Update, Insertion, create, deps);\n}\n\nfunction updateInsertionEffect(create, deps) {\n  return updateEffectImpl(Update, Insertion, create, deps);\n}\n\nfunction mountLayoutEffect(create, deps) {\n  var fiberFlags = Update;\n\n  return mountEffectImpl(fiberFlags, Layout, create, deps);\n}\n\nfunction updateLayoutEffect(create, deps) {\n  return updateEffectImpl(Update, Layout, create, deps);\n}\n\nfunction imperativeHandleEffect(create, ref) {\n  if (typeof ref === \"function\") {\n    var refCallback = ref;\n\n    var _inst = create();\n\n    refCallback(_inst);\n    return function() {\n      refCallback(null);\n    };\n  } else if (ref !== null && ref !== undefined) {\n    var refObject = ref;\n\n    {\n      if (!refObject.hasOwnProperty(\"current\")) {\n        error(\n          \"Expected useImperativeHandle() first argument to either be a \" +\n            \"ref callback or React.createRef() object. Instead received: %s.\",\n          \"an object with keys {\" + Object.keys(refObject).join(\", \") + \"}\"\n        );\n      }\n    }\n\n    var _inst2 = create();\n\n    refObject.current = _inst2;\n    return function() {\n      refObject.current = null;\n    };\n  }\n}\n\nfunction mountImperativeHandle(ref, create, deps) {\n  {\n    if (typeof create !== \"function\") {\n      error(\n        \"Expected useImperativeHandle() second argument to be a function \" +\n          \"that creates a handle. Instead received: %s.\",\n        create !== null ? typeof create : \"null\"\n      );\n    }\n  } // TODO: If deps are provided, should we skip comparing the ref itself?\n\n  var effectDeps =\n    deps !== null && deps !== undefined ? deps.concat([ref]) : null;\n  var fiberFlags = Update;\n\n  return mountEffectImpl(\n    fiberFlags,\n    Layout,\n    imperativeHandleEffect.bind(null, create, ref),\n    effectDeps\n  );\n}\n\nfunction updateImperativeHandle(ref, create, deps) {\n  {\n    if (typeof create !== \"function\") {\n      error(\n        \"Expected useImperativeHandle() second argument to be a function \" +\n          \"that creates a handle. Instead received: %s.\",\n        create !== null ? typeof create : \"null\"\n      );\n    }\n  } // TODO: If deps are provided, should we skip comparing the ref itself?\n\n  var effectDeps =\n    deps !== null && deps !== undefined ? deps.concat([ref]) : null;\n  return updateEffectImpl(\n    Update,\n    Layout,\n    imperativeHandleEffect.bind(null, create, ref),\n    effectDeps\n  );\n}\n\nfunction mountDebugValue(value, formatterFn) {\n  // This hook is normally a no-op.\n  // The react-debug-hooks package injects its own implementation\n  // so that e.g. DevTools can display custom hook values.\n}\n\nvar updateDebugValue = mountDebugValue;\n\nfunction mountCallback(callback, deps) {\n  var hook = mountWorkInProgressHook();\n  var nextDeps = deps === undefined ? null : deps;\n  hook.memoizedState = [callback, nextDeps];\n  return callback;\n}\n\nfunction updateCallback(callback, deps) {\n  var hook = updateWorkInProgressHook();\n  var nextDeps = deps === undefined ? null : deps;\n  var prevState = hook.memoizedState;\n\n  if (prevState !== null) {\n    if (nextDeps !== null) {\n      var prevDeps = prevState[1];\n\n      if (areHookInputsEqual(nextDeps, prevDeps)) {\n        return prevState[0];\n      }\n    }\n  }\n\n  hook.memoizedState = [callback, nextDeps];\n  return callback;\n}\n\nfunction mountMemo(nextCreate, deps) {\n  var hook = mountWorkInProgressHook();\n  var nextDeps = deps === undefined ? null : deps;\n  var nextValue = nextCreate();\n  hook.memoizedState = [nextValue, nextDeps];\n  return nextValue;\n}\n\nfunction updateMemo(nextCreate, deps) {\n  var hook = updateWorkInProgressHook();\n  var nextDeps = deps === undefined ? null : deps;\n  var prevState = hook.memoizedState;\n\n  if (prevState !== null) {\n    // Assume these are defined. If they're not, areHookInputsEqual will warn.\n    if (nextDeps !== null) {\n      var prevDeps = prevState[1];\n\n      if (areHookInputsEqual(nextDeps, prevDeps)) {\n        return prevState[0];\n      }\n    }\n  }\n\n  var nextValue = nextCreate();\n  hook.memoizedState = [nextValue, nextDeps];\n  return nextValue;\n}\n\nfunction mountDeferredValue(value) {\n  var hook = mountWorkInProgressHook();\n  hook.memoizedState = value;\n  return value;\n}\n\nfunction updateDeferredValue(value) {\n  var hook = updateWorkInProgressHook();\n  var resolvedCurrentHook = currentHook;\n  var prevValue = resolvedCurrentHook.memoizedState;\n  return updateDeferredValueImpl(hook, prevValue, value);\n}\n\nfunction rerenderDeferredValue(value) {\n  var hook = updateWorkInProgressHook();\n\n  if (currentHook === null) {\n    // This is a rerender during a mount.\n    hook.memoizedState = value;\n    return value;\n  } else {\n    // This is a rerender during an update.\n    var prevValue = currentHook.memoizedState;\n    return updateDeferredValueImpl(hook, prevValue, value);\n  }\n}\n\nfunction updateDeferredValueImpl(hook, prevValue, value) {\n  var shouldDeferValue = !includesOnlyNonUrgentLanes(renderLanes);\n\n  if (shouldDeferValue) {\n    // This is an urgent update. If the value has changed, keep using the\n    // previous value and spawn a deferred render to update it later.\n    if (!objectIs(value, prevValue)) {\n      // Schedule a deferred render\n      var deferredLane = claimNextTransitionLane();\n      currentlyRenderingFiber$1.lanes = mergeLanes(\n        currentlyRenderingFiber$1.lanes,\n        deferredLane\n      );\n      markSkippedUpdateLanes(deferredLane); // Set this to true to indicate that the rendered value is inconsistent\n      // from the latest value. The name \"baseState\" doesn't really match how we\n      // use it because we're reusing a state hook field instead of creating a\n      // new one.\n\n      hook.baseState = true;\n    } // Reuse the previous value\n\n    return prevValue;\n  } else {\n    // This is not an urgent update, so we can use the latest value regardless\n    // of what it is. No need to defer it.\n    // However, if we're currently inside a spawned render, then we need to mark\n    // this as an update to prevent the fiber from bailing out.\n    //\n    // `baseState` is true when the current value is different from the rendered\n    // value. The name doesn't really match how we use it because we're reusing\n    // a state hook field instead of creating a new one.\n    if (hook.baseState) {\n      // Flip this back to false.\n      hook.baseState = false;\n      markWorkInProgressReceivedUpdate();\n    }\n\n    hook.memoizedState = value;\n    return value;\n  }\n}\n\nfunction startTransition(setPending, callback, options) {\n  var previousPriority = getCurrentUpdatePriority();\n  setCurrentUpdatePriority(\n    higherEventPriority(previousPriority, ContinuousEventPriority)\n  );\n  setPending(true);\n  var prevTransition = ReactCurrentBatchConfig$1.transition;\n  ReactCurrentBatchConfig$1.transition = {};\n  var currentTransition = ReactCurrentBatchConfig$1.transition;\n\n  {\n    ReactCurrentBatchConfig$1.transition._updatedFibers = new Set();\n  }\n\n  try {\n    setPending(false);\n    callback();\n  } finally {\n    setCurrentUpdatePriority(previousPriority);\n    ReactCurrentBatchConfig$1.transition = prevTransition;\n\n    {\n      if (prevTransition === null && currentTransition._updatedFibers) {\n        var updatedFibersCount = currentTransition._updatedFibers.size;\n\n        if (updatedFibersCount > 10) {\n          warn(\n            \"Detected a large number of updates inside startTransition. \" +\n              \"If this is due to a subscription please re-write it to use React provided hooks. \" +\n              \"Otherwise concurrent mode guarantees are off the table.\"\n          );\n        }\n\n        currentTransition._updatedFibers.clear();\n      }\n    }\n  }\n}\n\nfunction mountTransition() {\n  var _mountState = mountState(false),\n    isPending = _mountState[0],\n    setPending = _mountState[1]; // The `start` method never changes.\n\n  var start = startTransition.bind(null, setPending);\n  var hook = mountWorkInProgressHook();\n  hook.memoizedState = start;\n  return [isPending, start];\n}\n\nfunction updateTransition() {\n  var _updateState = updateState(),\n    isPending = _updateState[0];\n\n  var hook = updateWorkInProgressHook();\n  var start = hook.memoizedState;\n  return [isPending, start];\n}\n\nfunction rerenderTransition() {\n  var _rerenderState = rerenderState(),\n    isPending = _rerenderState[0];\n\n  var hook = updateWorkInProgressHook();\n  var start = hook.memoizedState;\n  return [isPending, start];\n}\n\nvar isUpdatingOpaqueValueInRenderPhase = false;\nfunction getIsUpdatingOpaqueValueInRenderPhaseInDEV() {\n  {\n    return isUpdatingOpaqueValueInRenderPhase;\n  }\n}\n\nfunction mountId() {\n  var hook = mountWorkInProgressHook();\n  var root = getWorkInProgressRoot(); // TODO: In Fizz, id generation is specific to each server config. Maybe we\n  // should do this in Fiber, too? Deferring this decision for now because\n  // there's no other place to store the prefix except for an internal field on\n  // the public createRoot object, which the fiber tree does not currently have\n  // a reference to.\n\n  var identifierPrefix = root.identifierPrefix;\n  var id;\n\n  {\n    // Use a lowercase r prefix for client-generated ids.\n    var globalClientId = globalClientIdCounter++;\n    id = \":\" + identifierPrefix + \"r\" + globalClientId.toString(32) + \":\";\n  }\n\n  hook.memoizedState = id;\n  return id;\n}\n\nfunction updateId() {\n  var hook = updateWorkInProgressHook();\n  var id = hook.memoizedState;\n  return id;\n}\n\nfunction dispatchReducerAction(fiber, queue, action) {\n  {\n    if (typeof arguments[3] === \"function\") {\n      error(\n        \"State updates from the useState() and useReducer() Hooks don't support the \" +\n          \"second callback argument. To execute a side effect after \" +\n          \"rendering, declare it in the component body with useEffect().\"\n      );\n    }\n  }\n\n  var lane = requestUpdateLane(fiber);\n  var update = {\n    lane: lane,\n    action: action,\n    hasEagerState: false,\n    eagerState: null,\n    next: null\n  };\n\n  if (isRenderPhaseUpdate(fiber)) {\n    enqueueRenderPhaseUpdate(queue, update);\n  } else {\n    var root = enqueueConcurrentHookUpdate(fiber, queue, update, lane);\n\n    if (root !== null) {\n      var eventTime = requestEventTime();\n      scheduleUpdateOnFiber(root, fiber, lane, eventTime);\n      entangleTransitionUpdate(root, queue, lane);\n    }\n  }\n}\n\nfunction dispatchSetState(fiber, queue, action) {\n  {\n    if (typeof arguments[3] === \"function\") {\n      error(\n        \"State updates from the useState() and useReducer() Hooks don't support the \" +\n          \"second callback argument. To execute a side effect after \" +\n          \"rendering, declare it in the component body with useEffect().\"\n      );\n    }\n  }\n\n  var lane = requestUpdateLane(fiber);\n  var update = {\n    lane: lane,\n    action: action,\n    hasEagerState: false,\n    eagerState: null,\n    next: null\n  };\n\n  if (isRenderPhaseUpdate(fiber)) {\n    enqueueRenderPhaseUpdate(queue, update);\n  } else {\n    var alternate = fiber.alternate;\n\n    if (\n      fiber.lanes === NoLanes &&\n      (alternate === null || alternate.lanes === NoLanes)\n    ) {\n      // The queue is currently empty, which means we can eagerly compute the\n      // next state before entering the render phase. If the new state is the\n      // same as the current state, we may be able to bail out entirely.\n      var lastRenderedReducer = queue.lastRenderedReducer;\n\n      if (lastRenderedReducer !== null) {\n        var prevDispatcher;\n\n        {\n          prevDispatcher = ReactCurrentDispatcher$1.current;\n          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n        }\n\n        try {\n          var currentState = queue.lastRenderedState;\n          var eagerState = lastRenderedReducer(currentState, action); // Stash the eagerly computed state, and the reducer used to compute\n          // it, on the update object. If the reducer hasn't changed by the\n          // time we enter the render phase, then the eager state can be used\n          // without calling the reducer again.\n\n          update.hasEagerState = true;\n          update.eagerState = eagerState;\n\n          if (objectIs(eagerState, currentState)) {\n            // Fast path. We can bail out without scheduling React to re-render.\n            // It's still possible that we'll need to rebase this update later,\n            // if the component re-renders for a different reason and by that\n            // time the reducer has changed.\n            // TODO: Do we still need to entangle transitions in this case?\n            enqueueConcurrentHookUpdateAndEagerlyBailout(\n              fiber,\n              queue,\n              update,\n              lane\n            );\n            return;\n          }\n        } catch (error) {\n          // Suppress the error. It will throw again in the render phase.\n        } finally {\n          {\n            ReactCurrentDispatcher$1.current = prevDispatcher;\n          }\n        }\n      }\n    }\n\n    var root = enqueueConcurrentHookUpdate(fiber, queue, update, lane);\n\n    if (root !== null) {\n      var eventTime = requestEventTime();\n      scheduleUpdateOnFiber(root, fiber, lane, eventTime);\n      entangleTransitionUpdate(root, queue, lane);\n    }\n  }\n}\n\nfunction isRenderPhaseUpdate(fiber) {\n  var alternate = fiber.alternate;\n  return (\n    fiber === currentlyRenderingFiber$1 ||\n    (alternate !== null && alternate === currentlyRenderingFiber$1)\n  );\n}\n\nfunction enqueueRenderPhaseUpdate(queue, update) {\n  // This is a render phase update. Stash it in a lazily-created map of\n  // queue -> linked list of updates. After this render pass, we'll restart\n  // and apply the stashed updates on top of the work-in-progress hook.\n  didScheduleRenderPhaseUpdateDuringThisPass = didScheduleRenderPhaseUpdate = true;\n  var pending = queue.pending;\n\n  if (pending === null) {\n    // This is the first update. Create a circular list.\n    update.next = update;\n  } else {\n    update.next = pending.next;\n    pending.next = update;\n  }\n\n  queue.pending = update;\n} // TODO: Move to ReactFiberConcurrentUpdates?\n\nfunction entangleTransitionUpdate(root, queue, lane) {\n  if (isTransitionLane(lane)) {\n    var queueLanes = queue.lanes; // If any entangled lanes are no longer pending on the root, then they\n    // must have finished. We can remove them from the shared queue, which\n    // represents a superset of the actually pending lanes. In some cases we\n    // may entangle more than we need to, but that's OK. In fact it's worse if\n    // we *don't* entangle when we should.\n\n    queueLanes = intersectLanes(queueLanes, root.pendingLanes); // Entangle the new transition lane with the other transition lanes.\n\n    var newQueueLanes = mergeLanes(queueLanes, lane);\n    queue.lanes = newQueueLanes; // Even if queue.lanes already include lane, we don't know for certain if\n    // the lane finished since the last time we entangled it. So we need to\n    // entangle it again, just to be sure.\n\n    markRootEntangled(root, newQueueLanes);\n  }\n}\n\nvar ContextOnlyDispatcher = {\n  readContext: readContext,\n  useCallback: throwInvalidHookError,\n  useContext: throwInvalidHookError,\n  useEffect: throwInvalidHookError,\n  useImperativeHandle: throwInvalidHookError,\n  useInsertionEffect: throwInvalidHookError,\n  useLayoutEffect: throwInvalidHookError,\n  useMemo: throwInvalidHookError,\n  useReducer: throwInvalidHookError,\n  useRef: throwInvalidHookError,\n  useState: throwInvalidHookError,\n  useDebugValue: throwInvalidHookError,\n  useDeferredValue: throwInvalidHookError,\n  useTransition: throwInvalidHookError,\n  useMutableSource: throwInvalidHookError,\n  useSyncExternalStore: throwInvalidHookError,\n  useId: throwInvalidHookError,\n  unstable_isNewReconciler: enableNewReconciler\n};\n\nvar HooksDispatcherOnMountInDEV = null;\nvar HooksDispatcherOnMountWithHookTypesInDEV = null;\nvar HooksDispatcherOnUpdateInDEV = null;\nvar HooksDispatcherOnRerenderInDEV = null;\nvar InvalidNestedHooksDispatcherOnMountInDEV = null;\nvar InvalidNestedHooksDispatcherOnUpdateInDEV = null;\nvar InvalidNestedHooksDispatcherOnRerenderInDEV = null;\n\n{\n  var warnInvalidContextAccess = function() {\n    error(\n      \"Context can only be read while React is rendering. \" +\n        \"In classes, you can read it in the render method or getDerivedStateFromProps. \" +\n        \"In function components, you can read it directly in the function body, but not \" +\n        \"inside Hooks like useReducer() or useMemo().\"\n    );\n  };\n\n  var warnInvalidHookAccess = function() {\n    error(\n      \"Do not call Hooks inside useEffect(...), useMemo(...), or other built-in Hooks. \" +\n        \"You can only call Hooks at the top level of your React function. \" +\n        \"For more information, see \" +\n        \"https://reactjs.org/link/rules-of-hooks\"\n    );\n  };\n\n  HooksDispatcherOnMountInDEV = {\n    readContext: function(context) {\n      return readContext(context);\n    },\n    useCallback: function(callback, deps) {\n      currentHookNameInDev = \"useCallback\";\n      mountHookTypesDev();\n      checkDepsAreArrayDev(deps);\n      return mountCallback(callback, deps);\n    },\n    useContext: function(context) {\n      currentHookNameInDev = \"useContext\";\n      mountHookTypesDev();\n      return readContext(context);\n    },\n    useEffect: function(create, deps) {\n      currentHookNameInDev = \"useEffect\";\n      mountHookTypesDev();\n      checkDepsAreArrayDev(deps);\n      return mountEffect(create, deps);\n    },\n    useImperativeHandle: function(ref, create, deps) {\n      currentHookNameInDev = \"useImperativeHandle\";\n      mountHookTypesDev();\n      checkDepsAreArrayDev(deps);\n      return mountImperativeHandle(ref, create, deps);\n    },\n    useInsertionEffect: function(create, deps) {\n      currentHookNameInDev = \"useInsertionEffect\";\n      mountHookTypesDev();\n      checkDepsAreArrayDev(deps);\n      return mountInsertionEffect(create, deps);\n    },\n    useLayoutEffect: function(create, deps) {\n      currentHookNameInDev = \"useLayoutEffect\";\n      mountHookTypesDev();\n      checkDepsAreArrayDev(deps);\n      return mountLayoutEffect(create, deps);\n    },\n    useMemo: function(create, deps) {\n      currentHookNameInDev = \"useMemo\";\n      mountHookTypesDev();\n      checkDepsAreArrayDev(deps);\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;\n\n      try {\n        return mountMemo(create, deps);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useReducer: function(reducer, initialArg, init) {\n      currentHookNameInDev = \"useReducer\";\n      mountHookTypesDev();\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;\n\n      try {\n        return mountReducer(reducer, initialArg, init);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useRef: function(initialValue) {\n      currentHookNameInDev = \"useRef\";\n      mountHookTypesDev();\n      return mountRef(initialValue);\n    },\n    useState: function(initialState) {\n      currentHookNameInDev = \"useState\";\n      mountHookTypesDev();\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;\n\n      try {\n        return mountState(initialState);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useDebugValue: function(value, formatterFn) {\n      currentHookNameInDev = \"useDebugValue\";\n      mountHookTypesDev();\n      return mountDebugValue();\n    },\n    useDeferredValue: function(value) {\n      currentHookNameInDev = \"useDeferredValue\";\n      mountHookTypesDev();\n      return mountDeferredValue(value);\n    },\n    useTransition: function() {\n      currentHookNameInDev = \"useTransition\";\n      mountHookTypesDev();\n      return mountTransition();\n    },\n    useMutableSource: function(source, getSnapshot, subscribe) {\n      currentHookNameInDev = \"useMutableSource\";\n      mountHookTypesDev();\n      return mountMutableSource();\n    },\n    useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {\n      currentHookNameInDev = \"useSyncExternalStore\";\n      mountHookTypesDev();\n      return mountSyncExternalStore(subscribe, getSnapshot);\n    },\n    useId: function() {\n      currentHookNameInDev = \"useId\";\n      mountHookTypesDev();\n      return mountId();\n    },\n    unstable_isNewReconciler: enableNewReconciler\n  };\n\n  HooksDispatcherOnMountWithHookTypesInDEV = {\n    readContext: function(context) {\n      return readContext(context);\n    },\n    useCallback: function(callback, deps) {\n      currentHookNameInDev = \"useCallback\";\n      updateHookTypesDev();\n      return mountCallback(callback, deps);\n    },\n    useContext: function(context) {\n      currentHookNameInDev = \"useContext\";\n      updateHookTypesDev();\n      return readContext(context);\n    },\n    useEffect: function(create, deps) {\n      currentHookNameInDev = \"useEffect\";\n      updateHookTypesDev();\n      return mountEffect(create, deps);\n    },\n    useImperativeHandle: function(ref, create, deps) {\n      currentHookNameInDev = \"useImperativeHandle\";\n      updateHookTypesDev();\n      return mountImperativeHandle(ref, create, deps);\n    },\n    useInsertionEffect: function(create, deps) {\n      currentHookNameInDev = \"useInsertionEffect\";\n      updateHookTypesDev();\n      return mountInsertionEffect(create, deps);\n    },\n    useLayoutEffect: function(create, deps) {\n      currentHookNameInDev = \"useLayoutEffect\";\n      updateHookTypesDev();\n      return mountLayoutEffect(create, deps);\n    },\n    useMemo: function(create, deps) {\n      currentHookNameInDev = \"useMemo\";\n      updateHookTypesDev();\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;\n\n      try {\n        return mountMemo(create, deps);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useReducer: function(reducer, initialArg, init) {\n      currentHookNameInDev = \"useReducer\";\n      updateHookTypesDev();\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;\n\n      try {\n        return mountReducer(reducer, initialArg, init);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useRef: function(initialValue) {\n      currentHookNameInDev = \"useRef\";\n      updateHookTypesDev();\n      return mountRef(initialValue);\n    },\n    useState: function(initialState) {\n      currentHookNameInDev = \"useState\";\n      updateHookTypesDev();\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;\n\n      try {\n        return mountState(initialState);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useDebugValue: function(value, formatterFn) {\n      currentHookNameInDev = \"useDebugValue\";\n      updateHookTypesDev();\n      return mountDebugValue();\n    },\n    useDeferredValue: function(value) {\n      currentHookNameInDev = \"useDeferredValue\";\n      updateHookTypesDev();\n      return mountDeferredValue(value);\n    },\n    useTransition: function() {\n      currentHookNameInDev = \"useTransition\";\n      updateHookTypesDev();\n      return mountTransition();\n    },\n    useMutableSource: function(source, getSnapshot, subscribe) {\n      currentHookNameInDev = \"useMutableSource\";\n      updateHookTypesDev();\n      return mountMutableSource();\n    },\n    useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {\n      currentHookNameInDev = \"useSyncExternalStore\";\n      updateHookTypesDev();\n      return mountSyncExternalStore(subscribe, getSnapshot);\n    },\n    useId: function() {\n      currentHookNameInDev = \"useId\";\n      updateHookTypesDev();\n      return mountId();\n    },\n    unstable_isNewReconciler: enableNewReconciler\n  };\n\n  HooksDispatcherOnUpdateInDEV = {\n    readContext: function(context) {\n      return readContext(context);\n    },\n    useCallback: function(callback, deps) {\n      currentHookNameInDev = \"useCallback\";\n      updateHookTypesDev();\n      return updateCallback(callback, deps);\n    },\n    useContext: function(context) {\n      currentHookNameInDev = \"useContext\";\n      updateHookTypesDev();\n      return readContext(context);\n    },\n    useEffect: function(create, deps) {\n      currentHookNameInDev = \"useEffect\";\n      updateHookTypesDev();\n      return updateEffect(create, deps);\n    },\n    useImperativeHandle: function(ref, create, deps) {\n      currentHookNameInDev = \"useImperativeHandle\";\n      updateHookTypesDev();\n      return updateImperativeHandle(ref, create, deps);\n    },\n    useInsertionEffect: function(create, deps) {\n      currentHookNameInDev = \"useInsertionEffect\";\n      updateHookTypesDev();\n      return updateInsertionEffect(create, deps);\n    },\n    useLayoutEffect: function(create, deps) {\n      currentHookNameInDev = \"useLayoutEffect\";\n      updateHookTypesDev();\n      return updateLayoutEffect(create, deps);\n    },\n    useMemo: function(create, deps) {\n      currentHookNameInDev = \"useMemo\";\n      updateHookTypesDev();\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n\n      try {\n        return updateMemo(create, deps);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useReducer: function(reducer, initialArg, init) {\n      currentHookNameInDev = \"useReducer\";\n      updateHookTypesDev();\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n\n      try {\n        return updateReducer(reducer, initialArg, init);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useRef: function(initialValue) {\n      currentHookNameInDev = \"useRef\";\n      updateHookTypesDev();\n      return updateRef();\n    },\n    useState: function(initialState) {\n      currentHookNameInDev = \"useState\";\n      updateHookTypesDev();\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n\n      try {\n        return updateState(initialState);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useDebugValue: function(value, formatterFn) {\n      currentHookNameInDev = \"useDebugValue\";\n      updateHookTypesDev();\n      return updateDebugValue();\n    },\n    useDeferredValue: function(value) {\n      currentHookNameInDev = \"useDeferredValue\";\n      updateHookTypesDev();\n      return updateDeferredValue(value);\n    },\n    useTransition: function() {\n      currentHookNameInDev = \"useTransition\";\n      updateHookTypesDev();\n      return updateTransition();\n    },\n    useMutableSource: function(source, getSnapshot, subscribe) {\n      currentHookNameInDev = \"useMutableSource\";\n      updateHookTypesDev();\n      return updateMutableSource();\n    },\n    useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {\n      currentHookNameInDev = \"useSyncExternalStore\";\n      updateHookTypesDev();\n      return updateSyncExternalStore(subscribe, getSnapshot);\n    },\n    useId: function() {\n      currentHookNameInDev = \"useId\";\n      updateHookTypesDev();\n      return updateId();\n    },\n    unstable_isNewReconciler: enableNewReconciler\n  };\n\n  HooksDispatcherOnRerenderInDEV = {\n    readContext: function(context) {\n      return readContext(context);\n    },\n    useCallback: function(callback, deps) {\n      currentHookNameInDev = \"useCallback\";\n      updateHookTypesDev();\n      return updateCallback(callback, deps);\n    },\n    useContext: function(context) {\n      currentHookNameInDev = \"useContext\";\n      updateHookTypesDev();\n      return readContext(context);\n    },\n    useEffect: function(create, deps) {\n      currentHookNameInDev = \"useEffect\";\n      updateHookTypesDev();\n      return updateEffect(create, deps);\n    },\n    useImperativeHandle: function(ref, create, deps) {\n      currentHookNameInDev = \"useImperativeHandle\";\n      updateHookTypesDev();\n      return updateImperativeHandle(ref, create, deps);\n    },\n    useInsertionEffect: function(create, deps) {\n      currentHookNameInDev = \"useInsertionEffect\";\n      updateHookTypesDev();\n      return updateInsertionEffect(create, deps);\n    },\n    useLayoutEffect: function(create, deps) {\n      currentHookNameInDev = \"useLayoutEffect\";\n      updateHookTypesDev();\n      return updateLayoutEffect(create, deps);\n    },\n    useMemo: function(create, deps) {\n      currentHookNameInDev = \"useMemo\";\n      updateHookTypesDev();\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnRerenderInDEV;\n\n      try {\n        return updateMemo(create, deps);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useReducer: function(reducer, initialArg, init) {\n      currentHookNameInDev = \"useReducer\";\n      updateHookTypesDev();\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnRerenderInDEV;\n\n      try {\n        return rerenderReducer(reducer, initialArg, init);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useRef: function(initialValue) {\n      currentHookNameInDev = \"useRef\";\n      updateHookTypesDev();\n      return updateRef();\n    },\n    useState: function(initialState) {\n      currentHookNameInDev = \"useState\";\n      updateHookTypesDev();\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnRerenderInDEV;\n\n      try {\n        return rerenderState(initialState);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useDebugValue: function(value, formatterFn) {\n      currentHookNameInDev = \"useDebugValue\";\n      updateHookTypesDev();\n      return updateDebugValue();\n    },\n    useDeferredValue: function(value) {\n      currentHookNameInDev = \"useDeferredValue\";\n      updateHookTypesDev();\n      return rerenderDeferredValue(value);\n    },\n    useTransition: function() {\n      currentHookNameInDev = \"useTransition\";\n      updateHookTypesDev();\n      return rerenderTransition();\n    },\n    useMutableSource: function(source, getSnapshot, subscribe) {\n      currentHookNameInDev = \"useMutableSource\";\n      updateHookTypesDev();\n      return updateMutableSource();\n    },\n    useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {\n      currentHookNameInDev = \"useSyncExternalStore\";\n      updateHookTypesDev();\n      return updateSyncExternalStore(subscribe, getSnapshot);\n    },\n    useId: function() {\n      currentHookNameInDev = \"useId\";\n      updateHookTypesDev();\n      return updateId();\n    },\n    unstable_isNewReconciler: enableNewReconciler\n  };\n\n  InvalidNestedHooksDispatcherOnMountInDEV = {\n    readContext: function(context) {\n      warnInvalidContextAccess();\n      return readContext(context);\n    },\n    useCallback: function(callback, deps) {\n      currentHookNameInDev = \"useCallback\";\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountCallback(callback, deps);\n    },\n    useContext: function(context) {\n      currentHookNameInDev = \"useContext\";\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return readContext(context);\n    },\n    useEffect: function(create, deps) {\n      currentHookNameInDev = \"useEffect\";\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountEffect(create, deps);\n    },\n    useImperativeHandle: function(ref, create, deps) {\n      currentHookNameInDev = \"useImperativeHandle\";\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountImperativeHandle(ref, create, deps);\n    },\n    useInsertionEffect: function(create, deps) {\n      currentHookNameInDev = \"useInsertionEffect\";\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountInsertionEffect(create, deps);\n    },\n    useLayoutEffect: function(create, deps) {\n      currentHookNameInDev = \"useLayoutEffect\";\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountLayoutEffect(create, deps);\n    },\n    useMemo: function(create, deps) {\n      currentHookNameInDev = \"useMemo\";\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;\n\n      try {\n        return mountMemo(create, deps);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useReducer: function(reducer, initialArg, init) {\n      currentHookNameInDev = \"useReducer\";\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;\n\n      try {\n        return mountReducer(reducer, initialArg, init);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useRef: function(initialValue) {\n      currentHookNameInDev = \"useRef\";\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountRef(initialValue);\n    },\n    useState: function(initialState) {\n      currentHookNameInDev = \"useState\";\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;\n\n      try {\n        return mountState(initialState);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useDebugValue: function(value, formatterFn) {\n      currentHookNameInDev = \"useDebugValue\";\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountDebugValue();\n    },\n    useDeferredValue: function(value) {\n      currentHookNameInDev = \"useDeferredValue\";\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountDeferredValue(value);\n    },\n    useTransition: function() {\n      currentHookNameInDev = \"useTransition\";\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountTransition();\n    },\n    useMutableSource: function(source, getSnapshot, subscribe) {\n      currentHookNameInDev = \"useMutableSource\";\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountMutableSource();\n    },\n    useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {\n      currentHookNameInDev = \"useSyncExternalStore\";\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountSyncExternalStore(subscribe, getSnapshot);\n    },\n    useId: function() {\n      currentHookNameInDev = \"useId\";\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountId();\n    },\n    unstable_isNewReconciler: enableNewReconciler\n  };\n\n  InvalidNestedHooksDispatcherOnUpdateInDEV = {\n    readContext: function(context) {\n      warnInvalidContextAccess();\n      return readContext(context);\n    },\n    useCallback: function(callback, deps) {\n      currentHookNameInDev = \"useCallback\";\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateCallback(callback, deps);\n    },\n    useContext: function(context) {\n      currentHookNameInDev = \"useContext\";\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return readContext(context);\n    },\n    useEffect: function(create, deps) {\n      currentHookNameInDev = \"useEffect\";\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateEffect(create, deps);\n    },\n    useImperativeHandle: function(ref, create, deps) {\n      currentHookNameInDev = \"useImperativeHandle\";\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateImperativeHandle(ref, create, deps);\n    },\n    useInsertionEffect: function(create, deps) {\n      currentHookNameInDev = \"useInsertionEffect\";\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateInsertionEffect(create, deps);\n    },\n    useLayoutEffect: function(create, deps) {\n      currentHookNameInDev = \"useLayoutEffect\";\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateLayoutEffect(create, deps);\n    },\n    useMemo: function(create, deps) {\n      currentHookNameInDev = \"useMemo\";\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n\n      try {\n        return updateMemo(create, deps);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useReducer: function(reducer, initialArg, init) {\n      currentHookNameInDev = \"useReducer\";\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n\n      try {\n        return updateReducer(reducer, initialArg, init);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useRef: function(initialValue) {\n      currentHookNameInDev = \"useRef\";\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateRef();\n    },\n    useState: function(initialState) {\n      currentHookNameInDev = \"useState\";\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n\n      try {\n        return updateState(initialState);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useDebugValue: function(value, formatterFn) {\n      currentHookNameInDev = \"useDebugValue\";\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateDebugValue();\n    },\n    useDeferredValue: function(value) {\n      currentHookNameInDev = \"useDeferredValue\";\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateDeferredValue(value);\n    },\n    useTransition: function() {\n      currentHookNameInDev = \"useTransition\";\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateTransition();\n    },\n    useMutableSource: function(source, getSnapshot, subscribe) {\n      currentHookNameInDev = \"useMutableSource\";\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateMutableSource();\n    },\n    useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {\n      currentHookNameInDev = \"useSyncExternalStore\";\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateSyncExternalStore(subscribe, getSnapshot);\n    },\n    useId: function() {\n      currentHookNameInDev = \"useId\";\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateId();\n    },\n    unstable_isNewReconciler: enableNewReconciler\n  };\n\n  InvalidNestedHooksDispatcherOnRerenderInDEV = {\n    readContext: function(context) {\n      warnInvalidContextAccess();\n      return readContext(context);\n    },\n    useCallback: function(callback, deps) {\n      currentHookNameInDev = \"useCallback\";\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateCallback(callback, deps);\n    },\n    useContext: function(context) {\n      currentHookNameInDev = \"useContext\";\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return readContext(context);\n    },\n    useEffect: function(create, deps) {\n      currentHookNameInDev = \"useEffect\";\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateEffect(create, deps);\n    },\n    useImperativeHandle: function(ref, create, deps) {\n      currentHookNameInDev = \"useImperativeHandle\";\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateImperativeHandle(ref, create, deps);\n    },\n    useInsertionEffect: function(create, deps) {\n      currentHookNameInDev = \"useInsertionEffect\";\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateInsertionEffect(create, deps);\n    },\n    useLayoutEffect: function(create, deps) {\n      currentHookNameInDev = \"useLayoutEffect\";\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateLayoutEffect(create, deps);\n    },\n    useMemo: function(create, deps) {\n      currentHookNameInDev = \"useMemo\";\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n\n      try {\n        return updateMemo(create, deps);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useReducer: function(reducer, initialArg, init) {\n      currentHookNameInDev = \"useReducer\";\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n\n      try {\n        return rerenderReducer(reducer, initialArg, init);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useRef: function(initialValue) {\n      currentHookNameInDev = \"useRef\";\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateRef();\n    },\n    useState: function(initialState) {\n      currentHookNameInDev = \"useState\";\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n\n      try {\n        return rerenderState(initialState);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useDebugValue: function(value, formatterFn) {\n      currentHookNameInDev = \"useDebugValue\";\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateDebugValue();\n    },\n    useDeferredValue: function(value) {\n      currentHookNameInDev = \"useDeferredValue\";\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return rerenderDeferredValue(value);\n    },\n    useTransition: function() {\n      currentHookNameInDev = \"useTransition\";\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return rerenderTransition();\n    },\n    useMutableSource: function(source, getSnapshot, subscribe) {\n      currentHookNameInDev = \"useMutableSource\";\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateMutableSource();\n    },\n    useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {\n      currentHookNameInDev = \"useSyncExternalStore\";\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateSyncExternalStore(subscribe, getSnapshot);\n    },\n    useId: function() {\n      currentHookNameInDev = \"useId\";\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateId();\n    },\n    unstable_isNewReconciler: enableNewReconciler\n  };\n}\n\nvar now$1 = Scheduler.unstable_now;\nvar commitTime = 0;\nvar layoutEffectStartTime = -1;\nvar profilerStartTime = -1;\nvar passiveEffectStartTime = -1;\n/**\n * Tracks whether the current update was a nested/cascading update (scheduled from a layout effect).\n *\n * The overall sequence is:\n *   1. render\n *   2. commit (and call `onRender`, `onCommit`)\n *   3. check for nested updates\n *   4. flush passive effects (and call `onPostCommit`)\n *\n * Nested updates are identified in step 3 above,\n * but step 4 still applies to the work that was just committed.\n * We use two flags to track nested updates then:\n * one tracks whether the upcoming update is a nested update,\n * and the other tracks whether the current update was a nested update.\n * The first value gets synced to the second at the start of the render phase.\n */\n\nvar currentUpdateIsNested = false;\nvar nestedUpdateScheduled = false;\n\nfunction isCurrentUpdateNested() {\n  return currentUpdateIsNested;\n}\n\nfunction markNestedUpdateScheduled() {\n  {\n    nestedUpdateScheduled = true;\n  }\n}\n\nfunction resetNestedUpdateFlag() {\n  {\n    currentUpdateIsNested = false;\n    nestedUpdateScheduled = false;\n  }\n}\n\nfunction syncNestedUpdateFlag() {\n  {\n    currentUpdateIsNested = nestedUpdateScheduled;\n    nestedUpdateScheduled = false;\n  }\n}\n\nfunction getCommitTime() {\n  return commitTime;\n}\n\nfunction recordCommitTime() {\n  commitTime = now$1();\n}\n\nfunction startProfilerTimer(fiber) {\n  profilerStartTime = now$1();\n\n  if (fiber.actualStartTime < 0) {\n    fiber.actualStartTime = now$1();\n  }\n}\n\nfunction stopProfilerTimerIfRunning(fiber) {\n  profilerStartTime = -1;\n}\n\nfunction stopProfilerTimerIfRunningAndRecordDelta(fiber, overrideBaseTime) {\n  if (profilerStartTime >= 0) {\n    var elapsedTime = now$1() - profilerStartTime;\n    fiber.actualDuration += elapsedTime;\n\n    if (overrideBaseTime) {\n      fiber.selfBaseDuration = elapsedTime;\n    }\n\n    profilerStartTime = -1;\n  }\n}\n\nfunction recordLayoutEffectDuration(fiber) {\n  if (layoutEffectStartTime >= 0) {\n    var elapsedTime = now$1() - layoutEffectStartTime;\n    layoutEffectStartTime = -1; // Store duration on the next nearest Profiler ancestor\n    // Or the root (for the DevTools Profiler to read)\n\n    var parentFiber = fiber.return;\n\n    while (parentFiber !== null) {\n      switch (parentFiber.tag) {\n        case HostRoot:\n          var root = parentFiber.stateNode;\n          root.effectDuration += elapsedTime;\n          return;\n\n        case Profiler:\n          var parentStateNode = parentFiber.stateNode;\n          parentStateNode.effectDuration += elapsedTime;\n          return;\n      }\n\n      parentFiber = parentFiber.return;\n    }\n  }\n}\n\nfunction recordPassiveEffectDuration(fiber) {\n  if (passiveEffectStartTime >= 0) {\n    var elapsedTime = now$1() - passiveEffectStartTime;\n    passiveEffectStartTime = -1; // Store duration on the next nearest Profiler ancestor\n    // Or the root (for the DevTools Profiler to read)\n\n    var parentFiber = fiber.return;\n\n    while (parentFiber !== null) {\n      switch (parentFiber.tag) {\n        case HostRoot:\n          var root = parentFiber.stateNode;\n\n          if (root !== null) {\n            root.passiveEffectDuration += elapsedTime;\n          }\n\n          return;\n\n        case Profiler:\n          var parentStateNode = parentFiber.stateNode;\n\n          if (parentStateNode !== null) {\n            // Detached fibers have their state node cleared out.\n            // In this case, the return pointer is also cleared out,\n            // so we won't be able to report the time spent in this Profiler's subtree.\n            parentStateNode.passiveEffectDuration += elapsedTime;\n          }\n\n          return;\n      }\n\n      parentFiber = parentFiber.return;\n    }\n  }\n}\n\nfunction startLayoutEffectTimer() {\n  layoutEffectStartTime = now$1();\n}\n\nfunction startPassiveEffectTimer() {\n  passiveEffectStartTime = now$1();\n}\n\nfunction transferActualDuration(fiber) {\n  // Transfer time spent rendering these children so we don't lose it\n  // after we rerender. This is used as a helper in special cases\n  // where we should count the work of multiple passes.\n  var child = fiber.child;\n\n  while (child) {\n    fiber.actualDuration += child.actualDuration;\n    child = child.sibling;\n  }\n}\n\nfunction createCapturedValueAtFiber(value, source) {\n  // If the value is an error, call this function immediately after it is thrown\n  // so the stack is accurate.\n  return {\n    value: value,\n    source: source,\n    stack: getStackByFiberInDevAndProd(source),\n    digest: null\n  };\n}\nfunction createCapturedValue(value, digest, stack) {\n  return {\n    value: value,\n    source: null,\n    stack: stack != null ? stack : null,\n    digest: digest != null ? digest : null\n  };\n}\n\nif (\n  typeof ReactNativePrivateInterface.ReactFiberErrorDialog.showErrorDialog !==\n  \"function\"\n) {\n  throw new Error(\n    \"Expected ReactFiberErrorDialog.showErrorDialog to be a function.\"\n  );\n}\n\nfunction showErrorDialog(boundary, errorInfo) {\n  var capturedError = {\n    componentStack: errorInfo.stack !== null ? errorInfo.stack : \"\",\n    error: errorInfo.value,\n    errorBoundary:\n      boundary !== null && boundary.tag === ClassComponent\n        ? boundary.stateNode\n        : null\n  };\n  return ReactNativePrivateInterface.ReactFiberErrorDialog.showErrorDialog(\n    capturedError\n  );\n}\n\nfunction logCapturedError(boundary, errorInfo) {\n  try {\n    var logError = showErrorDialog(boundary, errorInfo); // Allow injected showErrorDialog() to prevent default console.error logging.\n    // This enables renderers like ReactNative to better manage redbox behavior.\n\n    if (logError === false) {\n      return;\n    }\n\n    var error = errorInfo.value;\n\n    if (true) {\n      var source = errorInfo.source;\n      var stack = errorInfo.stack;\n      var componentStack = stack !== null ? stack : \"\"; // Browsers support silencing uncaught errors by calling\n      // `preventDefault()` in window `error` handler.\n      // We record this information as an expando on the error.\n\n      if (error != null && error._suppressLogging) {\n        if (boundary.tag === ClassComponent) {\n          // The error is recoverable and was silenced.\n          // Ignore it and don't print the stack addendum.\n          // This is handy for testing error boundaries without noise.\n          return;\n        } // The error is fatal. Since the silencing might have\n        // been accidental, we'll surface it anyway.\n        // However, the browser would have silenced the original error\n        // so we'll print it first, and then print the stack addendum.\n\n        console[\"error\"](error); // Don't transform to our wrapper\n        // For a more detailed description of this block, see:\n        // https://github.com/facebook/react/pull/13384\n      }\n\n      var componentName = source ? getComponentNameFromFiber(source) : null;\n      var componentNameMessage = componentName\n        ? \"The above error occurred in the <\" + componentName + \"> component:\"\n        : \"The above error occurred in one of your React components:\";\n      var errorBoundaryMessage;\n\n      if (boundary.tag === HostRoot) {\n        errorBoundaryMessage =\n          \"Consider adding an error boundary to your tree to customize error handling behavior.\\n\" +\n          \"Visit https://reactjs.org/link/error-boundaries to learn more about error boundaries.\";\n      } else {\n        var errorBoundaryName =\n          getComponentNameFromFiber(boundary) || \"Anonymous\";\n        errorBoundaryMessage =\n          \"React will try to recreate this component tree from scratch \" +\n          (\"using the error boundary you provided, \" + errorBoundaryName + \".\");\n      }\n\n      var combinedMessage =\n        componentNameMessage +\n        \"\\n\" +\n        componentStack +\n        \"\\n\\n\" +\n        (\"\" + errorBoundaryMessage); // In development, we provide our own message with just the component stack.\n      // We don't include the original error message and JS stack because the browser\n      // has already printed it. Even if the application swallows the error, it is still\n      // displayed by the browser thanks to the DEV-only fake event trick in ReactErrorUtils.\n\n      console[\"error\"](combinedMessage); // Don't transform to our wrapper\n    } else {\n      // In production, we print the error directly.\n      // This will include the message, the JS stack, and anything the browser wants to show.\n      // We pass the error object instead of custom message so that the browser displays the error natively.\n      console[\"error\"](error); // Don't transform to our wrapper\n    }\n  } catch (e) {\n    // This method must not throw, or React internal state will get messed up.\n    // If console.error is overridden, or logCapturedError() shows a dialog that throws,\n    // we want to report this error outside of the normal stack as a last resort.\n    // https://github.com/facebook/react/issues/13188\n    setTimeout(function() {\n      throw e;\n    });\n  }\n}\n\nvar PossiblyWeakMap$1 = typeof WeakMap === \"function\" ? WeakMap : Map;\n\nfunction createRootErrorUpdate(fiber, errorInfo, lane) {\n  var update = createUpdate(NoTimestamp, lane); // Unmount the root by rendering null.\n\n  update.tag = CaptureUpdate; // Caution: React DevTools currently depends on this property\n  // being called \"element\".\n\n  update.payload = {\n    element: null\n  };\n  var error = errorInfo.value;\n\n  update.callback = function() {\n    onUncaughtError(error);\n    logCapturedError(fiber, errorInfo);\n  };\n\n  return update;\n}\n\nfunction createClassErrorUpdate(fiber, errorInfo, lane) {\n  var update = createUpdate(NoTimestamp, lane);\n  update.tag = CaptureUpdate;\n  var getDerivedStateFromError = fiber.type.getDerivedStateFromError;\n\n  if (typeof getDerivedStateFromError === \"function\") {\n    var error$1 = errorInfo.value;\n\n    update.payload = function() {\n      return getDerivedStateFromError(error$1);\n    };\n\n    update.callback = function() {\n      {\n        markFailedErrorBoundaryForHotReloading(fiber);\n      }\n\n      logCapturedError(fiber, errorInfo);\n    };\n  }\n\n  var inst = fiber.stateNode;\n\n  if (inst !== null && typeof inst.componentDidCatch === \"function\") {\n    update.callback = function callback() {\n      {\n        markFailedErrorBoundaryForHotReloading(fiber);\n      }\n\n      logCapturedError(fiber, errorInfo);\n\n      if (typeof getDerivedStateFromError !== \"function\") {\n        // To preserve the preexisting retry behavior of error boundaries,\n        // we keep track of which ones already failed during this batch.\n        // This gets reset before we yield back to the browser.\n        // TODO: Warn in strict mode if getDerivedStateFromError is\n        // not defined.\n        markLegacyErrorBoundaryAsFailed(this);\n      }\n\n      var error$1 = errorInfo.value;\n      var stack = errorInfo.stack;\n      this.componentDidCatch(error$1, {\n        componentStack: stack !== null ? stack : \"\"\n      });\n\n      {\n        if (typeof getDerivedStateFromError !== \"function\") {\n          // If componentDidCatch is the only error boundary method defined,\n          // then it needs to call setState to recover from errors.\n          // If no state update is scheduled then the boundary will swallow the error.\n          if (!includesSomeLane(fiber.lanes, SyncLane)) {\n            error(\n              \"%s: Error boundaries should implement getDerivedStateFromError(). \" +\n                \"In that method, return a state update to display an error message or fallback UI.\",\n              getComponentNameFromFiber(fiber) || \"Unknown\"\n            );\n          }\n        }\n      }\n    };\n  }\n\n  return update;\n}\n\nfunction attachPingListener(root, wakeable, lanes) {\n  // Attach a ping listener\n  //\n  // The data might resolve before we have a chance to commit the fallback. Or,\n  // in the case of a refresh, we'll never commit a fallback. So we need to\n  // attach a listener now. When it resolves (\"pings\"), we can decide whether to\n  // try rendering the tree again.\n  //\n  // Only attach a listener if one does not already exist for the lanes\n  // we're currently rendering (which acts like a \"thread ID\" here).\n  //\n  // We only need to do this in concurrent mode. Legacy Suspense always\n  // commits fallbacks synchronously, so there are no pings.\n  var pingCache = root.pingCache;\n  var threadIDs;\n\n  if (pingCache === null) {\n    pingCache = root.pingCache = new PossiblyWeakMap$1();\n    threadIDs = new Set();\n    pingCache.set(wakeable, threadIDs);\n  } else {\n    threadIDs = pingCache.get(wakeable);\n\n    if (threadIDs === undefined) {\n      threadIDs = new Set();\n      pingCache.set(wakeable, threadIDs);\n    }\n  }\n\n  if (!threadIDs.has(lanes)) {\n    // Memoize using the thread ID to prevent redundant listeners.\n    threadIDs.add(lanes);\n    var ping = pingSuspendedRoot.bind(null, root, wakeable, lanes);\n\n    {\n      if (isDevToolsPresent) {\n        // If we have pending work still, restore the original updaters\n        restorePendingUpdaters(root, lanes);\n      }\n    }\n\n    wakeable.then(ping, ping);\n  }\n}\n\nfunction attachRetryListener(suspenseBoundary, root, wakeable, lanes) {\n  // Retry listener\n  //\n  // If the fallback does commit, we need to attach a different type of\n  // listener. This one schedules an update on the Suspense boundary to turn\n  // the fallback state off.\n  //\n  // Stash the wakeable on the boundary fiber so we can access it in the\n  // commit phase.\n  //\n  // When the wakeable resolves, we'll attempt to render the boundary\n  // again (\"retry\").\n  var wakeables = suspenseBoundary.updateQueue;\n\n  if (wakeables === null) {\n    var updateQueue = new Set();\n    updateQueue.add(wakeable);\n    suspenseBoundary.updateQueue = updateQueue;\n  } else {\n    wakeables.add(wakeable);\n  }\n}\n\nfunction resetSuspendedComponent(sourceFiber, rootRenderLanes) {\n  // A legacy mode Suspense quirk, only relevant to hook components.\n\n  var tag = sourceFiber.tag;\n\n  if (\n    (sourceFiber.mode & ConcurrentMode) === NoMode &&\n    (tag === FunctionComponent ||\n      tag === ForwardRef ||\n      tag === SimpleMemoComponent)\n  ) {\n    var currentSource = sourceFiber.alternate;\n\n    if (currentSource) {\n      sourceFiber.updateQueue = currentSource.updateQueue;\n      sourceFiber.memoizedState = currentSource.memoizedState;\n      sourceFiber.lanes = currentSource.lanes;\n    } else {\n      sourceFiber.updateQueue = null;\n      sourceFiber.memoizedState = null;\n    }\n  }\n}\n\nfunction getNearestSuspenseBoundaryToCapture(returnFiber) {\n  var node = returnFiber;\n\n  do {\n    if (node.tag === SuspenseComponent && shouldCaptureSuspense(node)) {\n      return node;\n    } // This boundary already captured during this render. Continue to the next\n    // boundary.\n\n    node = node.return;\n  } while (node !== null);\n\n  return null;\n}\n\nfunction markSuspenseBoundaryShouldCapture(\n  suspenseBoundary,\n  returnFiber,\n  sourceFiber,\n  root,\n  rootRenderLanes\n) {\n  // This marks a Suspense boundary so that when we're unwinding the stack,\n  // it captures the suspended \"exception\" and does a second (fallback) pass.\n  if ((suspenseBoundary.mode & ConcurrentMode) === NoMode) {\n    // Legacy Mode Suspense\n    //\n    // If the boundary is in legacy mode, we should *not*\n    // suspend the commit. Pretend as if the suspended component rendered\n    // null and keep rendering. When the Suspense boundary completes,\n    // we'll do a second pass to render the fallback.\n    if (suspenseBoundary === returnFiber) {\n      // Special case where we suspended while reconciling the children of\n      // a Suspense boundary's inner Offscreen wrapper fiber. This happens\n      // when a React.lazy component is a direct child of a\n      // Suspense boundary.\n      //\n      // Suspense boundaries are implemented as multiple fibers, but they\n      // are a single conceptual unit. The legacy mode behavior where we\n      // pretend the suspended fiber committed as `null` won't work,\n      // because in this case the \"suspended\" fiber is the inner\n      // Offscreen wrapper.\n      //\n      // Because the contents of the boundary haven't started rendering\n      // yet (i.e. nothing in the tree has partially rendered) we can\n      // switch to the regular, concurrent mode behavior: mark the\n      // boundary with ShouldCapture and enter the unwind phase.\n      suspenseBoundary.flags |= ShouldCapture;\n    } else {\n      suspenseBoundary.flags |= DidCapture;\n      sourceFiber.flags |= ForceUpdateForLegacySuspense; // We're going to commit this fiber even though it didn't complete.\n      // But we shouldn't call any lifecycle methods or callbacks. Remove\n      // all lifecycle effect tags.\n\n      sourceFiber.flags &= ~(LifecycleEffectMask | Incomplete);\n\n      if (sourceFiber.tag === ClassComponent) {\n        var currentSourceFiber = sourceFiber.alternate;\n\n        if (currentSourceFiber === null) {\n          // This is a new mount. Change the tag so it's not mistaken for a\n          // completed class component. For example, we should not call\n          // componentWillUnmount if it is deleted.\n          sourceFiber.tag = IncompleteClassComponent;\n        } else {\n          // When we try rendering again, we should not reuse the current fiber,\n          // since it's known to be in an inconsistent state. Use a force update to\n          // prevent a bail out.\n          var update = createUpdate(NoTimestamp, SyncLane);\n          update.tag = ForceUpdate;\n          enqueueUpdate(sourceFiber, update, SyncLane);\n        }\n      } // The source fiber did not complete. Mark it with Sync priority to\n      // indicate that it still has pending work.\n\n      sourceFiber.lanes = mergeLanes(sourceFiber.lanes, SyncLane);\n    }\n\n    return suspenseBoundary;\n  } // Confirmed that the boundary is in a concurrent mode tree. Continue\n  // with the normal suspend path.\n  //\n  // After this we'll use a set of heuristics to determine whether this\n  // render pass will run to completion or restart or \"suspend\" the commit.\n  // The actual logic for this is spread out in different places.\n  //\n  // This first principle is that if we're going to suspend when we complete\n  // a root, then we should also restart if we get an update or ping that\n  // might unsuspend it, and vice versa. The only reason to suspend is\n  // because you think you might want to restart before committing. However,\n  // it doesn't make sense to restart only while in the period we're suspended.\n  //\n  // Restarting too aggressively is also not good because it starves out any\n  // intermediate loading state. So we use heuristics to determine when.\n  // Suspense Heuristics\n  //\n  // If nothing threw a Promise or all the same fallbacks are already showing,\n  // then don't suspend/restart.\n  //\n  // If this is an initial render of a new tree of Suspense boundaries and\n  // those trigger a fallback, then don't suspend/restart. We want to ensure\n  // that we can show the initial loading state as quickly as possible.\n  //\n  // If we hit a \"Delayed\" case, such as when we'd switch from content back into\n  // a fallback, then we should always suspend/restart. Transitions apply\n  // to this case. If none is defined, JND is used instead.\n  //\n  // If we're already showing a fallback and it gets \"retried\", allowing us to show\n  // another level, but there's still an inner boundary that would show a fallback,\n  // then we suspend/restart for 500ms since the last time we showed a fallback\n  // anywhere in the tree. This effectively throttles progressive loading into a\n  // consistent train of commits. This also gives us an opportunity to restart to\n  // get to the completed state slightly earlier.\n  //\n  // If there's ambiguity due to batching it's resolved in preference of:\n  // 1) \"delayed\", 2) \"initial render\", 3) \"retry\".\n  //\n  // We want to ensure that a \"busy\" state doesn't get force committed. We want to\n  // ensure that new initial loading states can commit as soon as possible.\n\n  suspenseBoundary.flags |= ShouldCapture; // TODO: I think we can remove this, since we now use `DidCapture` in\n  // the begin phase to prevent an early bailout.\n\n  suspenseBoundary.lanes = rootRenderLanes;\n  return suspenseBoundary;\n}\n\nfunction throwException(\n  root,\n  returnFiber,\n  sourceFiber,\n  value,\n  rootRenderLanes\n) {\n  // The source fiber did not complete.\n  sourceFiber.flags |= Incomplete;\n\n  {\n    if (isDevToolsPresent) {\n      // If we have pending work still, restore the original updaters\n      restorePendingUpdaters(root, rootRenderLanes);\n    }\n  }\n\n  if (\n    value !== null &&\n    typeof value === \"object\" &&\n    typeof value.then === \"function\"\n  ) {\n    // This is a wakeable. The component suspended.\n    var wakeable = value;\n    resetSuspendedComponent(sourceFiber);\n\n    var suspenseBoundary = getNearestSuspenseBoundaryToCapture(returnFiber);\n\n    if (suspenseBoundary !== null) {\n      suspenseBoundary.flags &= ~ForceClientRender;\n      markSuspenseBoundaryShouldCapture(\n        suspenseBoundary,\n        returnFiber,\n        sourceFiber,\n        root,\n        rootRenderLanes\n      ); // We only attach ping listeners in concurrent mode. Legacy Suspense always\n      // commits fallbacks synchronously, so there are no pings.\n\n      if (suspenseBoundary.mode & ConcurrentMode) {\n        attachPingListener(root, wakeable, rootRenderLanes);\n      }\n\n      attachRetryListener(suspenseBoundary, root, wakeable);\n      return;\n    } else {\n      // No boundary was found. Unless this is a sync update, this is OK.\n      // We can suspend and wait for more data to arrive.\n      if (!includesSyncLane(rootRenderLanes)) {\n        // This is not a sync update. Suspend. Since we're not activating a\n        // Suspense boundary, this will unwind all the way to the root without\n        // performing a second pass to render a fallback. (This is arguably how\n        // refresh transitions should work, too, since we're not going to commit\n        // the fallbacks anyway.)\n        //\n        // This case also applies to initial hydration.\n        attachPingListener(root, wakeable, rootRenderLanes);\n        renderDidSuspendDelayIfPossible();\n        return;\n      } // This is a sync/discrete update. We treat this case like an error\n      // because discrete renders are expected to produce a complete tree\n      // synchronously to maintain consistency with external state.\n\n      var uncaughtSuspenseError = new Error(\n        \"A component suspended while responding to synchronous input. This \" +\n          \"will cause the UI to be replaced with a loading indicator. To \" +\n          \"fix, updates that suspend should be wrapped \" +\n          \"with startTransition.\"\n      ); // If we're outside a transition, fall through to the regular error path.\n      // The error will be caught by the nearest suspense boundary.\n\n      value = uncaughtSuspenseError;\n    }\n  }\n\n  value = createCapturedValueAtFiber(value, sourceFiber);\n  renderDidError(value); // We didn't find a boundary that could handle this type of exception. Start\n  // over and traverse parent path again, this time treating the exception\n  // as an error.\n\n  var workInProgress = returnFiber;\n\n  do {\n    switch (workInProgress.tag) {\n      case HostRoot: {\n        var _errorInfo = value;\n        workInProgress.flags |= ShouldCapture;\n        var lane = pickArbitraryLane(rootRenderLanes);\n        workInProgress.lanes = mergeLanes(workInProgress.lanes, lane);\n        var update = createRootErrorUpdate(workInProgress, _errorInfo, lane);\n        enqueueCapturedUpdate(workInProgress, update);\n        return;\n      }\n\n      case ClassComponent:\n        // Capture and retry\n        var errorInfo = value;\n        var ctor = workInProgress.type;\n        var instance = workInProgress.stateNode;\n\n        if (\n          (workInProgress.flags & DidCapture) === NoFlags &&\n          (typeof ctor.getDerivedStateFromError === \"function\" ||\n            (instance !== null &&\n              typeof instance.componentDidCatch === \"function\" &&\n              !isAlreadyFailedLegacyErrorBoundary(instance)))\n        ) {\n          workInProgress.flags |= ShouldCapture;\n\n          var _lane = pickArbitraryLane(rootRenderLanes);\n\n          workInProgress.lanes = mergeLanes(workInProgress.lanes, _lane); // Schedule the error boundary to re-render using updated state\n\n          var _update = createClassErrorUpdate(\n            workInProgress,\n            errorInfo,\n            _lane\n          );\n\n          enqueueCapturedUpdate(workInProgress, _update);\n          return;\n        }\n\n        break;\n    }\n\n    workInProgress = workInProgress.return;\n  } while (workInProgress !== null);\n}\n\nfunction getSuspendedCache() {\n  {\n    return null;\n  } // This function is called when a Suspense boundary suspends. It returns the\n}\n\nvar ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;\nvar didReceiveUpdate = false;\nvar didWarnAboutBadClass;\nvar didWarnAboutModulePatternComponent;\nvar didWarnAboutContextTypeOnFunctionComponent;\nvar didWarnAboutGetDerivedStateOnFunctionComponent;\nvar didWarnAboutFunctionRefs;\nvar didWarnAboutReassigningProps;\nvar didWarnAboutRevealOrder;\nvar didWarnAboutTailOptions;\n\n{\n  didWarnAboutBadClass = {};\n  didWarnAboutModulePatternComponent = {};\n  didWarnAboutContextTypeOnFunctionComponent = {};\n  didWarnAboutGetDerivedStateOnFunctionComponent = {};\n  didWarnAboutFunctionRefs = {};\n  didWarnAboutReassigningProps = false;\n  didWarnAboutRevealOrder = {};\n  didWarnAboutTailOptions = {};\n}\n\nfunction reconcileChildren(current, workInProgress, nextChildren, renderLanes) {\n  if (current === null) {\n    // If this is a fresh new component that hasn't been rendered yet, we\n    // won't update its child set by applying minimal side-effects. Instead,\n    // we will add them all to the child before it gets rendered. That means\n    // we can optimize this reconciliation pass by not tracking side-effects.\n    workInProgress.child = mountChildFibers(\n      workInProgress,\n      null,\n      nextChildren,\n      renderLanes\n    );\n  } else {\n    // If the current child is the same as the work in progress, it means that\n    // we haven't yet started any work on these children. Therefore, we use\n    // the clone algorithm to create a copy of all the current children.\n    // If we had any progressed work already, that is invalid at this point so\n    // let's throw it out.\n    workInProgress.child = reconcileChildFibers(\n      workInProgress,\n      current.child,\n      nextChildren,\n      renderLanes\n    );\n  }\n}\n\nfunction forceUnmountCurrentAndReconcile(\n  current,\n  workInProgress,\n  nextChildren,\n  renderLanes\n) {\n  // This function is fork of reconcileChildren. It's used in cases where we\n  // want to reconcile without matching against the existing set. This has the\n  // effect of all current children being unmounted; even if the type and key\n  // are the same, the old child is unmounted and a new child is created.\n  //\n  // To do this, we're going to go through the reconcile algorithm twice. In\n  // the first pass, we schedule a deletion for all the current children by\n  // passing null.\n  workInProgress.child = reconcileChildFibers(\n    workInProgress,\n    current.child,\n    null,\n    renderLanes\n  ); // In the second pass, we mount the new children. The trick here is that we\n  // pass null in place of where we usually pass the current child set. This has\n  // the effect of remounting all children regardless of whether their\n  // identities match.\n\n  workInProgress.child = reconcileChildFibers(\n    workInProgress,\n    null,\n    nextChildren,\n    renderLanes\n  );\n}\n\nfunction updateForwardRef(\n  current,\n  workInProgress,\n  Component,\n  nextProps,\n  renderLanes\n) {\n  // TODO: current can be non-null here even if the component\n  // hasn't yet mounted. This happens after the first render suspends.\n  // We'll need to figure out if this is fine or can cause issues.\n  {\n    if (workInProgress.type !== workInProgress.elementType) {\n      // Lazy component props can't be validated in createElement\n      // because they're only guaranteed to be resolved here.\n      var innerPropTypes = Component.propTypes;\n\n      if (innerPropTypes) {\n        checkPropTypes(\n          innerPropTypes,\n          nextProps, // Resolved props\n          \"prop\",\n          getComponentNameFromType(Component)\n        );\n      }\n    }\n  }\n\n  var render = Component.render;\n  var ref = workInProgress.ref; // The rest is a fork of updateFunctionComponent\n\n  var nextChildren;\n  prepareToReadContext(workInProgress, renderLanes);\n\n  {\n    ReactCurrentOwner$1.current = workInProgress;\n    setIsRendering(true);\n    nextChildren = renderWithHooks(\n      current,\n      workInProgress,\n      render,\n      nextProps,\n      ref,\n      renderLanes\n    );\n\n    setIsRendering(false);\n  }\n\n  if (current !== null && !didReceiveUpdate) {\n    bailoutHooks(current, workInProgress, renderLanes);\n    return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n  }\n\n  workInProgress.flags |= PerformedWork;\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  return workInProgress.child;\n}\n\nfunction updateMemoComponent(\n  current,\n  workInProgress,\n  Component,\n  nextProps,\n  renderLanes\n) {\n  if (current === null) {\n    var type = Component.type;\n\n    if (\n      isSimpleFunctionComponent(type) &&\n      Component.compare === null && // SimpleMemoComponent codepath doesn't resolve outer props either.\n      Component.defaultProps === undefined\n    ) {\n      var resolvedType = type;\n\n      {\n        resolvedType = resolveFunctionForHotReloading(type);\n      } // If this is a plain function component without default props,\n      // and with only the default shallow comparison, we upgrade it\n      // to a SimpleMemoComponent to allow fast path updates.\n\n      workInProgress.tag = SimpleMemoComponent;\n      workInProgress.type = resolvedType;\n\n      {\n        validateFunctionComponentInDev(workInProgress, type);\n      }\n\n      return updateSimpleMemoComponent(\n        current,\n        workInProgress,\n        resolvedType,\n        nextProps,\n        renderLanes\n      );\n    }\n\n    {\n      var innerPropTypes = type.propTypes;\n\n      if (innerPropTypes) {\n        // Inner memo component props aren't currently validated in createElement.\n        // We could move it there, but we'd still need this for lazy code path.\n        checkPropTypes(\n          innerPropTypes,\n          nextProps, // Resolved props\n          \"prop\",\n          getComponentNameFromType(type)\n        );\n      }\n    }\n\n    var child = createFiberFromTypeAndProps(\n      Component.type,\n      null,\n      nextProps,\n      workInProgress,\n      workInProgress.mode,\n      renderLanes\n    );\n    child.ref = workInProgress.ref;\n    child.return = workInProgress;\n    workInProgress.child = child;\n    return child;\n  }\n\n  {\n    var _type = Component.type;\n    var _innerPropTypes = _type.propTypes;\n\n    if (_innerPropTypes) {\n      // Inner memo component props aren't currently validated in createElement.\n      // We could move it there, but we'd still need this for lazy code path.\n      checkPropTypes(\n        _innerPropTypes,\n        nextProps, // Resolved props\n        \"prop\",\n        getComponentNameFromType(_type)\n      );\n    }\n  }\n\n  var currentChild = current.child; // This is always exactly one child\n\n  var hasScheduledUpdateOrContext = checkScheduledUpdateOrContext(\n    current,\n    renderLanes\n  );\n\n  if (!hasScheduledUpdateOrContext) {\n    // This will be the props with resolved defaultProps,\n    // unlike current.memoizedProps which will be the unresolved ones.\n    var prevProps = currentChild.memoizedProps; // Default to shallow comparison\n\n    var compare = Component.compare;\n    compare = compare !== null ? compare : shallowEqual;\n\n    if (compare(prevProps, nextProps) && current.ref === workInProgress.ref) {\n      return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n    }\n  } // React DevTools reads this flag.\n\n  workInProgress.flags |= PerformedWork;\n  var newChild = createWorkInProgress(currentChild, nextProps);\n  newChild.ref = workInProgress.ref;\n  newChild.return = workInProgress;\n  workInProgress.child = newChild;\n  return newChild;\n}\n\nfunction updateSimpleMemoComponent(\n  current,\n  workInProgress,\n  Component,\n  nextProps,\n  renderLanes\n) {\n  // TODO: current can be non-null here even if the component\n  // hasn't yet mounted. This happens when the inner render suspends.\n  // We'll need to figure out if this is fine or can cause issues.\n  {\n    if (workInProgress.type !== workInProgress.elementType) {\n      // Lazy component props can't be validated in createElement\n      // because they're only guaranteed to be resolved here.\n      var outerMemoType = workInProgress.elementType;\n\n      if (outerMemoType.$$typeof === REACT_LAZY_TYPE) {\n        // We warn when you define propTypes on lazy()\n        // so let's just skip over it to find memo() outer wrapper.\n        // Inner props for memo are validated later.\n        var lazyComponent = outerMemoType;\n        var payload = lazyComponent._payload;\n        var init = lazyComponent._init;\n\n        try {\n          outerMemoType = init(payload);\n        } catch (x) {\n          outerMemoType = null;\n        } // Inner propTypes will be validated in the function component path.\n\n        var outerPropTypes = outerMemoType && outerMemoType.propTypes;\n\n        if (outerPropTypes) {\n          checkPropTypes(\n            outerPropTypes,\n            nextProps, // Resolved (SimpleMemoComponent has no defaultProps)\n            \"prop\",\n            getComponentNameFromType(outerMemoType)\n          );\n        }\n      }\n    }\n  }\n\n  if (current !== null) {\n    var prevProps = current.memoizedProps;\n\n    if (\n      shallowEqual(prevProps, nextProps) &&\n      current.ref === workInProgress.ref && // Prevent bailout if the implementation changed due to hot reload.\n      workInProgress.type === current.type\n    ) {\n      didReceiveUpdate = false; // The props are shallowly equal. Reuse the previous props object, like we\n      // would during a normal fiber bailout.\n      //\n      // We don't have strong guarantees that the props object is referentially\n      // equal during updates where we can't bail out anyway — like if the props\n      // are shallowly equal, but there's a local state or context update in the\n      // same batch.\n      //\n      // However, as a principle, we should aim to make the behavior consistent\n      // across different ways of memoizing a component. For example, React.memo\n      // has a different internal Fiber layout if you pass a normal function\n      // component (SimpleMemoComponent) versus if you pass a different type\n      // like forwardRef (MemoComponent). But this is an implementation detail.\n      // Wrapping a component in forwardRef (or React.lazy, etc) shouldn't\n      // affect whether the props object is reused during a bailout.\n\n      workInProgress.pendingProps = nextProps = prevProps;\n\n      if (!checkScheduledUpdateOrContext(current, renderLanes)) {\n        // The pending lanes were cleared at the beginning of beginWork. We're\n        // about to bail out, but there might be other lanes that weren't\n        // included in the current render. Usually, the priority level of the\n        // remaining updates is accumulated during the evaluation of the\n        // component (i.e. when processing the update queue). But since since\n        // we're bailing out early *without* evaluating the component, we need\n        // to account for it here, too. Reset to the value of the current fiber.\n        // NOTE: This only applies to SimpleMemoComponent, not MemoComponent,\n        // because a MemoComponent fiber does not have hooks or an update queue;\n        // rather, it wraps around an inner component, which may or may not\n        // contains hooks.\n        // TODO: Move the reset at in beginWork out of the common path so that\n        // this is no longer necessary.\n        workInProgress.lanes = current.lanes;\n        return bailoutOnAlreadyFinishedWork(\n          current,\n          workInProgress,\n          renderLanes\n        );\n      } else if ((current.flags & ForceUpdateForLegacySuspense) !== NoFlags) {\n        // This is a special case that only exists for legacy mode.\n        // See https://github.com/facebook/react/pull/19216.\n        didReceiveUpdate = true;\n      }\n    }\n  }\n\n  return updateFunctionComponent(\n    current,\n    workInProgress,\n    Component,\n    nextProps,\n    renderLanes\n  );\n}\n\nfunction updateOffscreenComponent(current, workInProgress, renderLanes) {\n  var nextProps = workInProgress.pendingProps;\n  var nextChildren = nextProps.children;\n  var prevState = current !== null ? current.memoizedState : null;\n\n  if (nextProps.mode === \"hidden\" || enableLegacyHidden) {\n    // Rendering a hidden tree.\n    if ((workInProgress.mode & ConcurrentMode) === NoMode) {\n      // In legacy sync mode, don't defer the subtree. Render it now.\n      // TODO: Consider how Offscreen should work with transitions in the future\n      var nextState = {\n        baseLanes: NoLanes,\n        cachePool: null,\n        transitions: null\n      };\n      workInProgress.memoizedState = nextState;\n\n      pushRenderLanes(workInProgress, renderLanes);\n    } else if (!includesSomeLane(renderLanes, OffscreenLane)) {\n      var spawnedCachePool = null; // We're hidden, and we're not rendering at Offscreen. We will bail out\n      // and resume this tree later.\n\n      var nextBaseLanes;\n\n      if (prevState !== null) {\n        var prevBaseLanes = prevState.baseLanes;\n        nextBaseLanes = mergeLanes(prevBaseLanes, renderLanes);\n      } else {\n        nextBaseLanes = renderLanes;\n      } // Schedule this fiber to re-render at offscreen priority. Then bailout.\n\n      workInProgress.lanes = workInProgress.childLanes = laneToLanes(\n        OffscreenLane\n      );\n      var _nextState = {\n        baseLanes: nextBaseLanes,\n        cachePool: spawnedCachePool,\n        transitions: null\n      };\n      workInProgress.memoizedState = _nextState;\n      workInProgress.updateQueue = null;\n      // to avoid a push/pop misalignment.\n\n      pushRenderLanes(workInProgress, nextBaseLanes);\n\n      return null;\n    } else {\n      // This is the second render. The surrounding visible content has already\n      // committed. Now we resume rendering the hidden tree.\n      // Rendering at offscreen, so we can clear the base lanes.\n      var _nextState2 = {\n        baseLanes: NoLanes,\n        cachePool: null,\n        transitions: null\n      };\n      workInProgress.memoizedState = _nextState2; // Push the lanes that were skipped when we bailed out.\n\n      var subtreeRenderLanes =\n        prevState !== null ? prevState.baseLanes : renderLanes;\n\n      pushRenderLanes(workInProgress, subtreeRenderLanes);\n    }\n  } else {\n    // Rendering a visible tree.\n    var _subtreeRenderLanes;\n\n    if (prevState !== null) {\n      // We're going from hidden -> visible.\n      _subtreeRenderLanes = mergeLanes(prevState.baseLanes, renderLanes);\n\n      workInProgress.memoizedState = null;\n    } else {\n      // We weren't previously hidden, and we still aren't, so there's nothing\n      // special to do. Need to push to the stack regardless, though, to avoid\n      // a push/pop misalignment.\n      _subtreeRenderLanes = renderLanes;\n    }\n\n    pushRenderLanes(workInProgress, _subtreeRenderLanes);\n  }\n\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  return workInProgress.child;\n} // Note: These happen to have identical begin phases, for now. We shouldn't hold\n\nfunction updateFragment(current, workInProgress, renderLanes) {\n  var nextChildren = workInProgress.pendingProps;\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  return workInProgress.child;\n}\n\nfunction updateMode(current, workInProgress, renderLanes) {\n  var nextChildren = workInProgress.pendingProps.children;\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  return workInProgress.child;\n}\n\nfunction updateProfiler(current, workInProgress, renderLanes) {\n  {\n    workInProgress.flags |= Update;\n\n    {\n      // Reset effect durations for the next eventual effect phase.\n      // These are reset during render to allow the DevTools commit hook a chance to read them,\n      var stateNode = workInProgress.stateNode;\n      stateNode.effectDuration = 0;\n      stateNode.passiveEffectDuration = 0;\n    }\n  }\n\n  var nextProps = workInProgress.pendingProps;\n  var nextChildren = nextProps.children;\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  return workInProgress.child;\n}\n\nfunction markRef(current, workInProgress) {\n  var ref = workInProgress.ref;\n\n  if (\n    (current === null && ref !== null) ||\n    (current !== null && current.ref !== ref)\n  ) {\n    // Schedule a Ref effect\n    workInProgress.flags |= Ref;\n  }\n}\n\nfunction updateFunctionComponent(\n  current,\n  workInProgress,\n  Component,\n  nextProps,\n  renderLanes\n) {\n  {\n    if (workInProgress.type !== workInProgress.elementType) {\n      // Lazy component props can't be validated in createElement\n      // because they're only guaranteed to be resolved here.\n      var innerPropTypes = Component.propTypes;\n\n      if (innerPropTypes) {\n        checkPropTypes(\n          innerPropTypes,\n          nextProps, // Resolved props\n          \"prop\",\n          getComponentNameFromType(Component)\n        );\n      }\n    }\n  }\n\n  var context;\n\n  {\n    var unmaskedContext = getUnmaskedContext(workInProgress, Component, true);\n    context = getMaskedContext(workInProgress, unmaskedContext);\n  }\n\n  var nextChildren;\n  prepareToReadContext(workInProgress, renderLanes);\n\n  {\n    ReactCurrentOwner$1.current = workInProgress;\n    setIsRendering(true);\n    nextChildren = renderWithHooks(\n      current,\n      workInProgress,\n      Component,\n      nextProps,\n      context,\n      renderLanes\n    );\n\n    setIsRendering(false);\n  }\n\n  if (current !== null && !didReceiveUpdate) {\n    bailoutHooks(current, workInProgress, renderLanes);\n    return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n  }\n\n  workInProgress.flags |= PerformedWork;\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  return workInProgress.child;\n}\n\nfunction updateClassComponent(\n  current,\n  workInProgress,\n  Component,\n  nextProps,\n  renderLanes\n) {\n  {\n    // This is used by DevTools to force a boundary to error.\n    switch (shouldError(workInProgress)) {\n      case false: {\n        var _instance = workInProgress.stateNode;\n        var ctor = workInProgress.type; // TODO This way of resetting the error boundary state is a hack.\n        // Is there a better way to do this?\n\n        var tempInstance = new ctor(\n          workInProgress.memoizedProps,\n          _instance.context\n        );\n        var state = tempInstance.state;\n\n        _instance.updater.enqueueSetState(_instance, state, null);\n\n        break;\n      }\n\n      case true: {\n        workInProgress.flags |= DidCapture;\n        workInProgress.flags |= ShouldCapture; // eslint-disable-next-line react-internal/prod-error-codes\n\n        var error$1 = new Error(\"Simulated error coming from DevTools\");\n        var lane = pickArbitraryLane(renderLanes);\n        workInProgress.lanes = mergeLanes(workInProgress.lanes, lane); // Schedule the error boundary to re-render using updated state\n\n        var update = createClassErrorUpdate(\n          workInProgress,\n          createCapturedValueAtFiber(error$1, workInProgress),\n          lane\n        );\n        enqueueCapturedUpdate(workInProgress, update);\n        break;\n      }\n    }\n\n    if (workInProgress.type !== workInProgress.elementType) {\n      // Lazy component props can't be validated in createElement\n      // because they're only guaranteed to be resolved here.\n      var innerPropTypes = Component.propTypes;\n\n      if (innerPropTypes) {\n        checkPropTypes(\n          innerPropTypes,\n          nextProps, // Resolved props\n          \"prop\",\n          getComponentNameFromType(Component)\n        );\n      }\n    }\n  } // Push context providers early to prevent context stack mismatches.\n  // During mounting we don't know the child context yet as the instance doesn't exist.\n  // We will invalidate the child context in finishClassComponent() right after rendering.\n\n  var hasContext;\n\n  if (isContextProvider(Component)) {\n    hasContext = true;\n    pushContextProvider(workInProgress);\n  } else {\n    hasContext = false;\n  }\n\n  prepareToReadContext(workInProgress, renderLanes);\n  var instance = workInProgress.stateNode;\n  var shouldUpdate;\n\n  if (instance === null) {\n    resetSuspendedCurrentOnMountInLegacyMode(current, workInProgress); // In the initial pass we might need to construct the instance.\n\n    constructClassInstance(workInProgress, Component, nextProps);\n    mountClassInstance(workInProgress, Component, nextProps, renderLanes);\n    shouldUpdate = true;\n  } else if (current === null) {\n    // In a resume, we'll already have an instance we can reuse.\n    shouldUpdate = resumeMountClassInstance(\n      workInProgress,\n      Component,\n      nextProps,\n      renderLanes\n    );\n  } else {\n    shouldUpdate = updateClassInstance(\n      current,\n      workInProgress,\n      Component,\n      nextProps,\n      renderLanes\n    );\n  }\n\n  var nextUnitOfWork = finishClassComponent(\n    current,\n    workInProgress,\n    Component,\n    shouldUpdate,\n    hasContext,\n    renderLanes\n  );\n\n  {\n    var inst = workInProgress.stateNode;\n\n    if (shouldUpdate && inst.props !== nextProps) {\n      if (!didWarnAboutReassigningProps) {\n        error(\n          \"It looks like %s is reassigning its own `this.props` while rendering. \" +\n            \"This is not supported and can lead to confusing bugs.\",\n          getComponentNameFromFiber(workInProgress) || \"a component\"\n        );\n      }\n\n      didWarnAboutReassigningProps = true;\n    }\n  }\n\n  return nextUnitOfWork;\n}\n\nfunction finishClassComponent(\n  current,\n  workInProgress,\n  Component,\n  shouldUpdate,\n  hasContext,\n  renderLanes\n) {\n  // Refs should update even if shouldComponentUpdate returns false\n  markRef(current, workInProgress);\n  var didCaptureError = (workInProgress.flags & DidCapture) !== NoFlags;\n\n  if (!shouldUpdate && !didCaptureError) {\n    // Context providers should defer to sCU for rendering\n    if (hasContext) {\n      invalidateContextProvider(workInProgress, Component, false);\n    }\n\n    return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n  }\n\n  var instance = workInProgress.stateNode; // Rerender\n\n  ReactCurrentOwner$1.current = workInProgress;\n  var nextChildren;\n\n  if (\n    didCaptureError &&\n    typeof Component.getDerivedStateFromError !== \"function\"\n  ) {\n    // If we captured an error, but getDerivedStateFromError is not defined,\n    // unmount all the children. componentDidCatch will schedule an update to\n    // re-render a fallback. This is temporary until we migrate everyone to\n    // the new API.\n    // TODO: Warn in a future release.\n    nextChildren = null;\n\n    {\n      stopProfilerTimerIfRunning();\n    }\n  } else {\n    {\n      setIsRendering(true);\n      nextChildren = instance.render();\n\n      setIsRendering(false);\n    }\n  } // React DevTools reads this flag.\n\n  workInProgress.flags |= PerformedWork;\n\n  if (current !== null && didCaptureError) {\n    // If we're recovering from an error, reconcile without reusing any of\n    // the existing children. Conceptually, the normal children and the children\n    // that are shown on error are two different sets, so we shouldn't reuse\n    // normal children even if their identities match.\n    forceUnmountCurrentAndReconcile(\n      current,\n      workInProgress,\n      nextChildren,\n      renderLanes\n    );\n  } else {\n    reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  } // Memoize state using the values we just used to render.\n  // TODO: Restructure so we never read values from the instance.\n\n  workInProgress.memoizedState = instance.state; // The context might have changed so we need to recalculate it.\n\n  if (hasContext) {\n    invalidateContextProvider(workInProgress, Component, true);\n  }\n\n  return workInProgress.child;\n}\n\nfunction pushHostRootContext(workInProgress) {\n  var root = workInProgress.stateNode;\n\n  if (root.pendingContext) {\n    pushTopLevelContextObject(\n      workInProgress,\n      root.pendingContext,\n      root.pendingContext !== root.context\n    );\n  } else if (root.context) {\n    // Should always be set\n    pushTopLevelContextObject(workInProgress, root.context, false);\n  }\n\n  pushHostContainer(workInProgress, root.containerInfo);\n}\n\nfunction updateHostRoot(current, workInProgress, renderLanes) {\n  pushHostRootContext(workInProgress);\n\n  if (current === null) {\n    throw new Error(\"Should have a current fiber. This is a bug in React.\");\n  }\n\n  var nextProps = workInProgress.pendingProps;\n  var prevState = workInProgress.memoizedState;\n  var prevChildren = prevState.element;\n  cloneUpdateQueue(current, workInProgress);\n  processUpdateQueue(workInProgress, nextProps, null, renderLanes);\n  var nextState = workInProgress.memoizedState;\n  var root = workInProgress.stateNode;\n  // being called \"element\".\n\n  var nextChildren = nextState.element;\n\n  {\n    if (nextChildren === prevChildren) {\n      return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n    }\n\n    reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  }\n\n  return workInProgress.child;\n}\n\nfunction updateHostComponent(current, workInProgress, renderLanes) {\n  pushHostContext(workInProgress);\n\n  var type = workInProgress.type;\n  var nextProps = workInProgress.pendingProps;\n  var prevProps = current !== null ? current.memoizedProps : null;\n  var nextChildren = nextProps.children;\n\n  if (prevProps !== null && shouldSetTextContent()) {\n    // If we're switching from a direct text child to a normal child, or to\n    // empty, we need to schedule the text content to be reset.\n    workInProgress.flags |= ContentReset;\n  }\n\n  markRef(current, workInProgress);\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  return workInProgress.child;\n}\n\nfunction updateHostText(current, workInProgress) {\n  // immediately after.\n\n  return null;\n}\n\nfunction mountLazyComponent(\n  _current,\n  workInProgress,\n  elementType,\n  renderLanes\n) {\n  resetSuspendedCurrentOnMountInLegacyMode(_current, workInProgress);\n  var props = workInProgress.pendingProps;\n  var lazyComponent = elementType;\n  var payload = lazyComponent._payload;\n  var init = lazyComponent._init;\n  var Component = init(payload); // Store the unwrapped component in the type.\n\n  workInProgress.type = Component;\n  var resolvedTag = (workInProgress.tag = resolveLazyComponentTag(Component));\n  var resolvedProps = resolveDefaultProps(Component, props);\n  var child;\n\n  switch (resolvedTag) {\n    case FunctionComponent: {\n      {\n        validateFunctionComponentInDev(workInProgress, Component);\n        workInProgress.type = Component = resolveFunctionForHotReloading(\n          Component\n        );\n      }\n\n      child = updateFunctionComponent(\n        null,\n        workInProgress,\n        Component,\n        resolvedProps,\n        renderLanes\n      );\n      return child;\n    }\n\n    case ClassComponent: {\n      {\n        workInProgress.type = Component = resolveClassForHotReloading(\n          Component\n        );\n      }\n\n      child = updateClassComponent(\n        null,\n        workInProgress,\n        Component,\n        resolvedProps,\n        renderLanes\n      );\n      return child;\n    }\n\n    case ForwardRef: {\n      {\n        workInProgress.type = Component = resolveForwardRefForHotReloading(\n          Component\n        );\n      }\n\n      child = updateForwardRef(\n        null,\n        workInProgress,\n        Component,\n        resolvedProps,\n        renderLanes\n      );\n      return child;\n    }\n\n    case MemoComponent: {\n      {\n        if (workInProgress.type !== workInProgress.elementType) {\n          var outerPropTypes = Component.propTypes;\n\n          if (outerPropTypes) {\n            checkPropTypes(\n              outerPropTypes,\n              resolvedProps, // Resolved for outer only\n              \"prop\",\n              getComponentNameFromType(Component)\n            );\n          }\n        }\n      }\n\n      child = updateMemoComponent(\n        null,\n        workInProgress,\n        Component,\n        resolveDefaultProps(Component.type, resolvedProps), // The inner type can have defaults too\n        renderLanes\n      );\n      return child;\n    }\n  }\n\n  var hint = \"\";\n\n  {\n    if (\n      Component !== null &&\n      typeof Component === \"object\" &&\n      Component.$$typeof === REACT_LAZY_TYPE\n    ) {\n      hint = \" Did you wrap a component in React.lazy() more than once?\";\n    }\n  } // This message intentionally doesn't mention ForwardRef or MemoComponent\n  // because the fact that it's a separate type of work is an\n  // implementation detail.\n\n  throw new Error(\n    \"Element type is invalid. Received a promise that resolves to: \" +\n      Component +\n      \". \" +\n      (\"Lazy element type must resolve to a class or function.\" + hint)\n  );\n}\n\nfunction mountIncompleteClassComponent(\n  _current,\n  workInProgress,\n  Component,\n  nextProps,\n  renderLanes\n) {\n  resetSuspendedCurrentOnMountInLegacyMode(_current, workInProgress); // Promote the fiber to a class and try rendering again.\n\n  workInProgress.tag = ClassComponent; // The rest of this function is a fork of `updateClassComponent`\n  // Push context providers early to prevent context stack mismatches.\n  // During mounting we don't know the child context yet as the instance doesn't exist.\n  // We will invalidate the child context in finishClassComponent() right after rendering.\n\n  var hasContext;\n\n  if (isContextProvider(Component)) {\n    hasContext = true;\n    pushContextProvider(workInProgress);\n  } else {\n    hasContext = false;\n  }\n\n  prepareToReadContext(workInProgress, renderLanes);\n  constructClassInstance(workInProgress, Component, nextProps);\n  mountClassInstance(workInProgress, Component, nextProps, renderLanes);\n  return finishClassComponent(\n    null,\n    workInProgress,\n    Component,\n    true,\n    hasContext,\n    renderLanes\n  );\n}\n\nfunction mountIndeterminateComponent(\n  _current,\n  workInProgress,\n  Component,\n  renderLanes\n) {\n  resetSuspendedCurrentOnMountInLegacyMode(_current, workInProgress);\n  var props = workInProgress.pendingProps;\n  var context;\n\n  {\n    var unmaskedContext = getUnmaskedContext(workInProgress, Component, false);\n    context = getMaskedContext(workInProgress, unmaskedContext);\n  }\n\n  prepareToReadContext(workInProgress, renderLanes);\n  var value;\n\n  {\n    if (\n      Component.prototype &&\n      typeof Component.prototype.render === \"function\"\n    ) {\n      var componentName = getComponentNameFromType(Component) || \"Unknown\";\n\n      if (!didWarnAboutBadClass[componentName]) {\n        error(\n          \"The <%s /> component appears to have a render method, but doesn't extend React.Component. \" +\n            \"This is likely to cause errors. Change %s to extend React.Component instead.\",\n          componentName,\n          componentName\n        );\n\n        didWarnAboutBadClass[componentName] = true;\n      }\n    }\n\n    if (workInProgress.mode & StrictLegacyMode) {\n      ReactStrictModeWarnings.recordLegacyContextWarning(workInProgress, null);\n    }\n\n    setIsRendering(true);\n    ReactCurrentOwner$1.current = workInProgress;\n    value = renderWithHooks(\n      null,\n      workInProgress,\n      Component,\n      props,\n      context,\n      renderLanes\n    );\n    setIsRendering(false);\n  }\n\n  workInProgress.flags |= PerformedWork;\n\n  {\n    // Support for module components is deprecated and is removed behind a flag.\n    // Whether or not it would crash later, we want to show a good message in DEV first.\n    if (\n      typeof value === \"object\" &&\n      value !== null &&\n      typeof value.render === \"function\" &&\n      value.$$typeof === undefined\n    ) {\n      var _componentName = getComponentNameFromType(Component) || \"Unknown\";\n\n      if (!didWarnAboutModulePatternComponent[_componentName]) {\n        error(\n          \"The <%s /> component appears to be a function component that returns a class instance. \" +\n            \"Change %s to a class that extends React.Component instead. \" +\n            \"If you can't use a class try assigning the prototype on the function as a workaround. \" +\n            \"`%s.prototype = React.Component.prototype`. Don't use an arrow function since it \" +\n            \"cannot be called with `new` by React.\",\n          _componentName,\n          _componentName,\n          _componentName\n        );\n\n        didWarnAboutModulePatternComponent[_componentName] = true;\n      }\n    }\n  }\n\n  if (\n    // Run these checks in production only if the flag is off.\n    // Eventually we'll delete this branch altogether.\n    typeof value === \"object\" &&\n    value !== null &&\n    typeof value.render === \"function\" &&\n    value.$$typeof === undefined\n  ) {\n    {\n      var _componentName2 = getComponentNameFromType(Component) || \"Unknown\";\n\n      if (!didWarnAboutModulePatternComponent[_componentName2]) {\n        error(\n          \"The <%s /> component appears to be a function component that returns a class instance. \" +\n            \"Change %s to a class that extends React.Component instead. \" +\n            \"If you can't use a class try assigning the prototype on the function as a workaround. \" +\n            \"`%s.prototype = React.Component.prototype`. Don't use an arrow function since it \" +\n            \"cannot be called with `new` by React.\",\n          _componentName2,\n          _componentName2,\n          _componentName2\n        );\n\n        didWarnAboutModulePatternComponent[_componentName2] = true;\n      }\n    } // Proceed under the assumption that this is a class instance\n\n    workInProgress.tag = ClassComponent; // Throw out any hooks that were used.\n\n    workInProgress.memoizedState = null;\n    workInProgress.updateQueue = null; // Push context providers early to prevent context stack mismatches.\n    // During mounting we don't know the child context yet as the instance doesn't exist.\n    // We will invalidate the child context in finishClassComponent() right after rendering.\n\n    var hasContext = false;\n\n    if (isContextProvider(Component)) {\n      hasContext = true;\n      pushContextProvider(workInProgress);\n    } else {\n      hasContext = false;\n    }\n\n    workInProgress.memoizedState =\n      value.state !== null && value.state !== undefined ? value.state : null;\n    initializeUpdateQueue(workInProgress);\n    adoptClassInstance(workInProgress, value);\n    mountClassInstance(workInProgress, Component, props, renderLanes);\n    return finishClassComponent(\n      null,\n      workInProgress,\n      Component,\n      true,\n      hasContext,\n      renderLanes\n    );\n  } else {\n    // Proceed under the assumption that this is a function component\n    workInProgress.tag = FunctionComponent;\n\n    reconcileChildren(null, workInProgress, value, renderLanes);\n\n    {\n      validateFunctionComponentInDev(workInProgress, Component);\n    }\n\n    return workInProgress.child;\n  }\n}\n\nfunction validateFunctionComponentInDev(workInProgress, Component) {\n  {\n    if (Component) {\n      if (Component.childContextTypes) {\n        error(\n          \"%s(...): childContextTypes cannot be defined on a function component.\",\n          Component.displayName || Component.name || \"Component\"\n        );\n      }\n    }\n\n    if (workInProgress.ref !== null) {\n      var info = \"\";\n      var ownerName = getCurrentFiberOwnerNameInDevOrNull();\n\n      if (ownerName) {\n        info += \"\\n\\nCheck the render method of `\" + ownerName + \"`.\";\n      }\n\n      var warningKey = ownerName || \"\";\n      var debugSource = workInProgress._debugSource;\n\n      if (debugSource) {\n        warningKey = debugSource.fileName + \":\" + debugSource.lineNumber;\n      }\n\n      if (!didWarnAboutFunctionRefs[warningKey]) {\n        didWarnAboutFunctionRefs[warningKey] = true;\n\n        error(\n          \"Function components cannot be given refs. \" +\n            \"Attempts to access this ref will fail. \" +\n            \"Did you mean to use React.forwardRef()?%s\",\n          info\n        );\n      }\n    }\n\n    if (typeof Component.getDerivedStateFromProps === \"function\") {\n      var _componentName3 = getComponentNameFromType(Component) || \"Unknown\";\n\n      if (!didWarnAboutGetDerivedStateOnFunctionComponent[_componentName3]) {\n        error(\n          \"%s: Function components do not support getDerivedStateFromProps.\",\n          _componentName3\n        );\n\n        didWarnAboutGetDerivedStateOnFunctionComponent[_componentName3] = true;\n      }\n    }\n\n    if (\n      typeof Component.contextType === \"object\" &&\n      Component.contextType !== null\n    ) {\n      var _componentName4 = getComponentNameFromType(Component) || \"Unknown\";\n\n      if (!didWarnAboutContextTypeOnFunctionComponent[_componentName4]) {\n        error(\n          \"%s: Function components do not support contextType.\",\n          _componentName4\n        );\n\n        didWarnAboutContextTypeOnFunctionComponent[_componentName4] = true;\n      }\n    }\n  }\n}\n\nvar SUSPENDED_MARKER = {\n  dehydrated: null,\n  treeContext: null,\n  retryLane: NoLane\n};\n\nfunction mountSuspenseOffscreenState(renderLanes) {\n  return {\n    baseLanes: renderLanes,\n    cachePool: getSuspendedCache(),\n    transitions: null\n  };\n}\n\nfunction updateSuspenseOffscreenState(prevOffscreenState, renderLanes) {\n  var cachePool = null;\n\n  return {\n    baseLanes: mergeLanes(prevOffscreenState.baseLanes, renderLanes),\n    cachePool: cachePool,\n    transitions: prevOffscreenState.transitions\n  };\n} // TODO: Probably should inline this back\n\nfunction shouldRemainOnFallback(\n  suspenseContext,\n  current,\n  workInProgress,\n  renderLanes\n) {\n  // If we're already showing a fallback, there are cases where we need to\n  // remain on that fallback regardless of whether the content has resolved.\n  // For example, SuspenseList coordinates when nested content appears.\n  if (current !== null) {\n    var suspenseState = current.memoizedState;\n\n    if (suspenseState === null) {\n      // Currently showing content. Don't hide it, even if ForceSuspenseFallback\n      // is true. More precise name might be \"ForceRemainSuspenseFallback\".\n      // Note: This is a factoring smell. Can't remain on a fallback if there's\n      // no fallback to remain on.\n      return false;\n    }\n  } // Not currently showing content. Consult the Suspense context.\n\n  return hasSuspenseContext(suspenseContext, ForceSuspenseFallback);\n}\n\nfunction getRemainingWorkInPrimaryTree(current, renderLanes) {\n  // TODO: Should not remove render lanes that were pinged during this render\n  return removeLanes(current.childLanes, renderLanes);\n}\n\nfunction updateSuspenseComponent(current, workInProgress, renderLanes) {\n  var nextProps = workInProgress.pendingProps; // This is used by DevTools to force a boundary to suspend.\n\n  {\n    if (shouldSuspend(workInProgress)) {\n      workInProgress.flags |= DidCapture;\n    }\n  }\n\n  var suspenseContext = suspenseStackCursor.current;\n  var showFallback = false;\n  var didSuspend = (workInProgress.flags & DidCapture) !== NoFlags;\n\n  if (didSuspend || shouldRemainOnFallback(suspenseContext, current)) {\n    // Something in this boundary's subtree already suspended. Switch to\n    // rendering the fallback children.\n    showFallback = true;\n    workInProgress.flags &= ~DidCapture;\n  } else {\n    // Attempting the main content\n    if (current === null || current.memoizedState !== null) {\n      // This is a new mount or this boundary is already showing a fallback state.\n      // Mark this subtree context as having at least one invisible parent that could\n      // handle the fallback state.\n      // Avoided boundaries are not considered since they cannot handle preferred fallback states.\n      {\n        suspenseContext = addSubtreeSuspenseContext(\n          suspenseContext,\n          InvisibleParentSuspenseContext\n        );\n      }\n    }\n  }\n\n  suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);\n  pushSuspenseContext(workInProgress, suspenseContext); // OK, the next part is confusing. We're about to reconcile the Suspense\n  // boundary's children. This involves some custom reconciliation logic. Two\n  // main reasons this is so complicated.\n  //\n  // First, Legacy Mode has different semantics for backwards compatibility. The\n  // primary tree will commit in an inconsistent state, so when we do the\n  // second pass to render the fallback, we do some exceedingly, uh, clever\n  // hacks to make that not totally break. Like transferring effects and\n  // deletions from hidden tree. In Concurrent Mode, it's much simpler,\n  // because we bailout on the primary tree completely and leave it in its old\n  // state, no effects. Same as what we do for Offscreen (except that\n  // Offscreen doesn't have the first render pass).\n  //\n  // Second is hydration. During hydration, the Suspense fiber has a slightly\n  // different layout, where the child points to a dehydrated fragment, which\n  // contains the DOM rendered by the server.\n  //\n  // Third, even if you set all that aside, Suspense is like error boundaries in\n  // that we first we try to render one tree, and if that fails, we render again\n  // and switch to a different tree. Like a try/catch block. So we have to track\n  // which branch we're currently rendering. Ideally we would model this using\n  // a stack.\n\n  if (current === null) {\n    var suspenseState = workInProgress.memoizedState;\n\n    if (suspenseState !== null) {\n      var dehydrated = suspenseState.dehydrated;\n\n      if (dehydrated !== null) {\n        return mountDehydratedSuspenseComponent(workInProgress);\n      }\n    }\n\n    var nextPrimaryChildren = nextProps.children;\n    var nextFallbackChildren = nextProps.fallback;\n\n    if (showFallback) {\n      var fallbackFragment = mountSuspenseFallbackChildren(\n        workInProgress,\n        nextPrimaryChildren,\n        nextFallbackChildren,\n        renderLanes\n      );\n      var primaryChildFragment = workInProgress.child;\n      primaryChildFragment.memoizedState = mountSuspenseOffscreenState(\n        renderLanes\n      );\n      workInProgress.memoizedState = SUSPENDED_MARKER;\n\n      return fallbackFragment;\n    } else {\n      return mountSuspensePrimaryChildren(workInProgress, nextPrimaryChildren);\n    }\n  } else {\n    // This is an update.\n    // Special path for hydration\n    var prevState = current.memoizedState;\n\n    if (prevState !== null) {\n      var _dehydrated = prevState.dehydrated;\n\n      if (_dehydrated !== null) {\n        return updateDehydratedSuspenseComponent(\n          current,\n          workInProgress,\n          didSuspend,\n          nextProps,\n          _dehydrated,\n          prevState,\n          renderLanes\n        );\n      }\n    }\n\n    if (showFallback) {\n      var _nextFallbackChildren = nextProps.fallback;\n      var _nextPrimaryChildren = nextProps.children;\n      var fallbackChildFragment = updateSuspenseFallbackChildren(\n        current,\n        workInProgress,\n        _nextPrimaryChildren,\n        _nextFallbackChildren,\n        renderLanes\n      );\n      var _primaryChildFragment2 = workInProgress.child;\n      var prevOffscreenState = current.child.memoizedState;\n      _primaryChildFragment2.memoizedState =\n        prevOffscreenState === null\n          ? mountSuspenseOffscreenState(renderLanes)\n          : updateSuspenseOffscreenState(prevOffscreenState, renderLanes);\n\n      _primaryChildFragment2.childLanes = getRemainingWorkInPrimaryTree(\n        current,\n        renderLanes\n      );\n      workInProgress.memoizedState = SUSPENDED_MARKER;\n      return fallbackChildFragment;\n    } else {\n      var _nextPrimaryChildren2 = nextProps.children;\n\n      var _primaryChildFragment3 = updateSuspensePrimaryChildren(\n        current,\n        workInProgress,\n        _nextPrimaryChildren2,\n        renderLanes\n      );\n\n      workInProgress.memoizedState = null;\n      return _primaryChildFragment3;\n    }\n  }\n}\n\nfunction mountSuspensePrimaryChildren(\n  workInProgress,\n  primaryChildren,\n  renderLanes\n) {\n  var mode = workInProgress.mode;\n  var primaryChildProps = {\n    mode: \"visible\",\n    children: primaryChildren\n  };\n  var primaryChildFragment = mountWorkInProgressOffscreenFiber(\n    primaryChildProps,\n    mode\n  );\n  primaryChildFragment.return = workInProgress;\n  workInProgress.child = primaryChildFragment;\n  return primaryChildFragment;\n}\n\nfunction mountSuspenseFallbackChildren(\n  workInProgress,\n  primaryChildren,\n  fallbackChildren,\n  renderLanes\n) {\n  var mode = workInProgress.mode;\n  var progressedPrimaryFragment = workInProgress.child;\n  var primaryChildProps = {\n    mode: \"hidden\",\n    children: primaryChildren\n  };\n  var primaryChildFragment;\n  var fallbackChildFragment;\n\n  if (\n    (mode & ConcurrentMode) === NoMode &&\n    progressedPrimaryFragment !== null\n  ) {\n    // In legacy mode, we commit the primary tree as if it successfully\n    // completed, even though it's in an inconsistent state.\n    primaryChildFragment = progressedPrimaryFragment;\n    primaryChildFragment.childLanes = NoLanes;\n    primaryChildFragment.pendingProps = primaryChildProps;\n\n    if (workInProgress.mode & ProfileMode) {\n      // Reset the durations from the first pass so they aren't included in the\n      // final amounts. This seems counterintuitive, since we're intentionally\n      // not measuring part of the render phase, but this makes it match what we\n      // do in Concurrent Mode.\n      primaryChildFragment.actualDuration = 0;\n      primaryChildFragment.actualStartTime = -1;\n      primaryChildFragment.selfBaseDuration = 0;\n      primaryChildFragment.treeBaseDuration = 0;\n    }\n\n    fallbackChildFragment = createFiberFromFragment(\n      fallbackChildren,\n      mode,\n      renderLanes,\n      null\n    );\n  } else {\n    primaryChildFragment = mountWorkInProgressOffscreenFiber(\n      primaryChildProps,\n      mode\n    );\n    fallbackChildFragment = createFiberFromFragment(\n      fallbackChildren,\n      mode,\n      renderLanes,\n      null\n    );\n  }\n\n  primaryChildFragment.return = workInProgress;\n  fallbackChildFragment.return = workInProgress;\n  primaryChildFragment.sibling = fallbackChildFragment;\n  workInProgress.child = primaryChildFragment;\n  return fallbackChildFragment;\n}\n\nfunction mountWorkInProgressOffscreenFiber(offscreenProps, mode, renderLanes) {\n  // The props argument to `createFiberFromOffscreen` is `any` typed, so we use\n  // this wrapper function to constrain it.\n  return createFiberFromOffscreen(offscreenProps, mode, NoLanes, null);\n}\n\nfunction updateWorkInProgressOffscreenFiber(current, offscreenProps) {\n  // The props argument to `createWorkInProgress` is `any` typed, so we use this\n  // wrapper function to constrain it.\n  return createWorkInProgress(current, offscreenProps);\n}\n\nfunction updateSuspensePrimaryChildren(\n  current,\n  workInProgress,\n  primaryChildren,\n  renderLanes\n) {\n  var currentPrimaryChildFragment = current.child;\n  var currentFallbackChildFragment = currentPrimaryChildFragment.sibling;\n  var primaryChildFragment = updateWorkInProgressOffscreenFiber(\n    currentPrimaryChildFragment,\n    {\n      mode: \"visible\",\n      children: primaryChildren\n    }\n  );\n\n  if ((workInProgress.mode & ConcurrentMode) === NoMode) {\n    primaryChildFragment.lanes = renderLanes;\n  }\n\n  primaryChildFragment.return = workInProgress;\n  primaryChildFragment.sibling = null;\n\n  if (currentFallbackChildFragment !== null) {\n    // Delete the fallback child fragment\n    var deletions = workInProgress.deletions;\n\n    if (deletions === null) {\n      workInProgress.deletions = [currentFallbackChildFragment];\n      workInProgress.flags |= ChildDeletion;\n    } else {\n      deletions.push(currentFallbackChildFragment);\n    }\n  }\n\n  workInProgress.child = primaryChildFragment;\n  return primaryChildFragment;\n}\n\nfunction updateSuspenseFallbackChildren(\n  current,\n  workInProgress,\n  primaryChildren,\n  fallbackChildren,\n  renderLanes\n) {\n  var mode = workInProgress.mode;\n  var currentPrimaryChildFragment = current.child;\n  var currentFallbackChildFragment = currentPrimaryChildFragment.sibling;\n  var primaryChildProps = {\n    mode: \"hidden\",\n    children: primaryChildren\n  };\n  var primaryChildFragment;\n\n  if (\n    // In legacy mode, we commit the primary tree as if it successfully\n    // completed, even though it's in an inconsistent state.\n    (mode & ConcurrentMode) === NoMode && // Make sure we're on the second pass, i.e. the primary child fragment was\n    // already cloned. In legacy mode, the only case where this isn't true is\n    // when DevTools forces us to display a fallback; we skip the first render\n    // pass entirely and go straight to rendering the fallback. (In Concurrent\n    // Mode, SuspenseList can also trigger this scenario, but this is a legacy-\n    // only codepath.)\n    workInProgress.child !== currentPrimaryChildFragment\n  ) {\n    var progressedPrimaryFragment = workInProgress.child;\n    primaryChildFragment = progressedPrimaryFragment;\n    primaryChildFragment.childLanes = NoLanes;\n    primaryChildFragment.pendingProps = primaryChildProps;\n\n    if (workInProgress.mode & ProfileMode) {\n      // Reset the durations from the first pass so they aren't included in the\n      // final amounts. This seems counterintuitive, since we're intentionally\n      // not measuring part of the render phase, but this makes it match what we\n      // do in Concurrent Mode.\n      primaryChildFragment.actualDuration = 0;\n      primaryChildFragment.actualStartTime = -1;\n      primaryChildFragment.selfBaseDuration =\n        currentPrimaryChildFragment.selfBaseDuration;\n      primaryChildFragment.treeBaseDuration =\n        currentPrimaryChildFragment.treeBaseDuration;\n    } // The fallback fiber was added as a deletion during the first pass.\n    // However, since we're going to remain on the fallback, we no longer want\n    // to delete it.\n\n    workInProgress.deletions = null;\n  } else {\n    primaryChildFragment = updateWorkInProgressOffscreenFiber(\n      currentPrimaryChildFragment,\n      primaryChildProps\n    ); // Since we're reusing a current tree, we need to reuse the flags, too.\n    // (We don't do this in legacy mode, because in legacy mode we don't re-use\n    // the current tree; see previous branch.)\n\n    primaryChildFragment.subtreeFlags =\n      currentPrimaryChildFragment.subtreeFlags & StaticMask;\n  }\n\n  var fallbackChildFragment;\n\n  if (currentFallbackChildFragment !== null) {\n    fallbackChildFragment = createWorkInProgress(\n      currentFallbackChildFragment,\n      fallbackChildren\n    );\n  } else {\n    fallbackChildFragment = createFiberFromFragment(\n      fallbackChildren,\n      mode,\n      renderLanes,\n      null\n    ); // Needs a placement effect because the parent (the Suspense boundary) already\n    // mounted but this is a new fiber.\n\n    fallbackChildFragment.flags |= Placement;\n  }\n\n  fallbackChildFragment.return = workInProgress;\n  primaryChildFragment.return = workInProgress;\n  primaryChildFragment.sibling = fallbackChildFragment;\n  workInProgress.child = primaryChildFragment;\n  return fallbackChildFragment;\n}\n\nfunction retrySuspenseComponentWithoutHydrating(\n  current,\n  workInProgress,\n  renderLanes,\n  recoverableError\n) {\n  // Falling back to client rendering. Because this has performance\n  // implications, it's considered a recoverable error, even though the user\n  // likely won't observe anything wrong with the UI.\n  //\n  // The error is passed in as an argument to enforce that every caller provide\n  // a custom message, or explicitly opt out (currently the only path that opts\n  // out is legacy mode; every concurrent path provides an error).\n  if (recoverableError !== null) {\n    queueHydrationError(recoverableError);\n  } // This will add the old fiber to the deletion list\n\n  reconcileChildFibers(workInProgress, current.child, null, renderLanes); // We're now not suspended nor dehydrated.\n\n  var nextProps = workInProgress.pendingProps;\n  var primaryChildren = nextProps.children;\n  var primaryChildFragment = mountSuspensePrimaryChildren(\n    workInProgress,\n    primaryChildren\n  ); // Needs a placement effect because the parent (the Suspense boundary) already\n  // mounted but this is a new fiber.\n\n  primaryChildFragment.flags |= Placement;\n  workInProgress.memoizedState = null;\n  return primaryChildFragment;\n}\n\nfunction mountSuspenseFallbackAfterRetryWithoutHydrating(\n  current,\n  workInProgress,\n  primaryChildren,\n  fallbackChildren,\n  renderLanes\n) {\n  var fiberMode = workInProgress.mode;\n  var primaryChildProps = {\n    mode: \"visible\",\n    children: primaryChildren\n  };\n  var primaryChildFragment = mountWorkInProgressOffscreenFiber(\n    primaryChildProps,\n    fiberMode\n  );\n  var fallbackChildFragment = createFiberFromFragment(\n    fallbackChildren,\n    fiberMode,\n    renderLanes,\n    null\n  ); // Needs a placement effect because the parent (the Suspense\n  // boundary) already mounted but this is a new fiber.\n\n  fallbackChildFragment.flags |= Placement;\n  primaryChildFragment.return = workInProgress;\n  fallbackChildFragment.return = workInProgress;\n  primaryChildFragment.sibling = fallbackChildFragment;\n  workInProgress.child = primaryChildFragment;\n\n  if ((workInProgress.mode & ConcurrentMode) !== NoMode) {\n    // We will have dropped the effect list which contains the\n    // deletion. We need to reconcile to delete the current child.\n    reconcileChildFibers(workInProgress, current.child, null, renderLanes);\n  }\n\n  return fallbackChildFragment;\n}\n\nfunction mountDehydratedSuspenseComponent(\n  workInProgress,\n  suspenseInstance,\n  renderLanes\n) {\n  // During the first pass, we'll bail out and not drill into the children.\n  // Instead, we'll leave the content in place and try to hydrate it later.\n  if ((workInProgress.mode & ConcurrentMode) === NoMode) {\n    {\n      error(\n        \"Cannot hydrate Suspense in legacy mode. Switch from \" +\n          \"ReactDOM.hydrate(element, container) to \" +\n          \"ReactDOMClient.hydrateRoot(container, <App />)\" +\n          \".render(element) or remove the Suspense components from \" +\n          \"the server rendered components.\"\n      );\n    }\n\n    workInProgress.lanes = laneToLanes(SyncLane);\n  } else if (isSuspenseInstanceFallback()) {\n    // This is a client-only boundary. Since we won't get any content from the server\n    // for this, we need to schedule that at a higher priority based on when it would\n    // have timed out. In theory we could render it in this pass but it would have the\n    // wrong priority associated with it and will prevent hydration of parent path.\n    // Instead, we'll leave work left on it to render it in a separate commit.\n    // TODO This time should be the time at which the server rendered response that is\n    // a parent to this boundary was displayed. However, since we currently don't have\n    // a protocol to transfer that time, we'll just estimate it by using the current\n    // time. This will mean that Suspense timeouts are slightly shifted to later than\n    // they should be.\n    // Schedule a normal pri update to render this content.\n    workInProgress.lanes = laneToLanes(DefaultHydrationLane);\n  } else {\n    // We'll continue hydrating the rest at offscreen priority since we'll already\n    // be showing the right content coming from the server, it is no rush.\n    workInProgress.lanes = laneToLanes(OffscreenLane);\n  }\n\n  return null;\n}\n\nfunction updateDehydratedSuspenseComponent(\n  current,\n  workInProgress,\n  didSuspend,\n  nextProps,\n  suspenseInstance,\n  suspenseState,\n  renderLanes\n) {\n  if (!didSuspend) {\n    if ((workInProgress.mode & ConcurrentMode) === NoMode) {\n      return retrySuspenseComponentWithoutHydrating(\n        current,\n        workInProgress,\n        renderLanes, // TODO: When we delete legacy mode, we should make this error argument\n        // required — every concurrent mode path that causes hydration to\n        // de-opt to client rendering should have an error message.\n        null\n      );\n    }\n\n    if (isSuspenseInstanceFallback()) {\n      // This boundary is in a permanent fallback state. In this case, we'll never\n      // get an update and we'll never be able to hydrate the final content. Let's just try the\n      // client side render instead.\n      var digest, message, stack;\n\n      {\n        var _getSuspenseInstanceF = getSuspenseInstanceFallbackErrorDetails();\n\n        digest = _getSuspenseInstanceF.digest;\n        message = _getSuspenseInstanceF.message;\n        stack = _getSuspenseInstanceF.stack;\n      }\n\n      var error;\n\n      if (message) {\n        // eslint-disable-next-line react-internal/prod-error-codes\n        error = new Error(message);\n      } else {\n        error = new Error(\n          \"The server could not finish this Suspense boundary, likely \" +\n            \"due to an error during server rendering. Switched to \" +\n            \"client rendering.\"\n        );\n      }\n\n      var capturedValue = createCapturedValue(error, digest, stack);\n      return retrySuspenseComponentWithoutHydrating(\n        current,\n        workInProgress,\n        renderLanes,\n        capturedValue\n      );\n    }\n    // any context has changed, we need to treat is as if the input might have changed.\n\n    var hasContextChanged = includesSomeLane(renderLanes, current.childLanes);\n\n    if (didReceiveUpdate || hasContextChanged) {\n      // This boundary has changed since the first render. This means that we are now unable to\n      // hydrate it. We might still be able to hydrate it using a higher priority lane.\n      var root = getWorkInProgressRoot();\n\n      if (root !== null) {\n        var attemptHydrationAtLane = getBumpedLaneForHydration(\n          root,\n          renderLanes\n        );\n\n        if (\n          attemptHydrationAtLane !== NoLane &&\n          attemptHydrationAtLane !== suspenseState.retryLane\n        ) {\n          // Intentionally mutating since this render will get interrupted. This\n          // is one of the very rare times where we mutate the current tree\n          // during the render phase.\n          suspenseState.retryLane = attemptHydrationAtLane; // TODO: Ideally this would inherit the event time of the current render\n\n          var eventTime = NoTimestamp;\n          enqueueConcurrentRenderForLane(current, attemptHydrationAtLane);\n          scheduleUpdateOnFiber(\n            root,\n            current,\n            attemptHydrationAtLane,\n            eventTime\n          );\n        }\n      } // If we have scheduled higher pri work above, this will probably just abort the render\n      // since we now have higher priority work, but in case it doesn't, we need to prepare to\n      // render something, if we time out. Even if that requires us to delete everything and\n      // skip hydration.\n      // Delay having to do this as long as the suspense timeout allows us.\n\n      renderDidSuspendDelayIfPossible();\n\n      var _capturedValue = createCapturedValue(\n        new Error(\n          \"This Suspense boundary received an update before it finished \" +\n            \"hydrating. This caused the boundary to switch to client rendering. \" +\n            \"The usual way to fix this is to wrap the original update \" +\n            \"in startTransition.\"\n        )\n      );\n\n      return retrySuspenseComponentWithoutHydrating(\n        current,\n        workInProgress,\n        renderLanes,\n        _capturedValue\n      );\n    } else if (isSuspenseInstancePending()) {\n      // This component is still pending more data from the server, so we can't hydrate its\n      // content. We treat it as if this component suspended itself. It might seem as if\n      // we could just try to render it client-side instead. However, this will perform a\n      // lot of unnecessary work and is unlikely to complete since it often will suspend\n      // on missing data anyway. Additionally, the server might be able to render more\n      // than we can on the client yet. In that case we'd end up with more fallback states\n      // on the client than if we just leave it alone. If the server times out or errors\n      // these should update this boundary to the permanent Fallback state instead.\n      // Mark it as having captured (i.e. suspended).\n      workInProgress.flags |= DidCapture; // Leave the child in place. I.e. the dehydrated fragment.\n\n      workInProgress.child = current.child; // Register a callback to retry this boundary once the server has sent the result.\n\n      var retry = retryDehydratedSuspenseBoundary.bind(null, current);\n      registerSuspenseInstanceRetry();\n      return null;\n    } else {\n      // This is the first attempt.\n      reenterHydrationStateFromDehydratedSuspenseInstance(\n        workInProgress,\n        suspenseInstance,\n        suspenseState.treeContext\n      );\n      var primaryChildren = nextProps.children;\n      var primaryChildFragment = mountSuspensePrimaryChildren(\n        workInProgress,\n        primaryChildren\n      ); // Mark the children as hydrating. This is a fast path to know whether this\n      // tree is part of a hydrating tree. This is used to determine if a child\n      // node has fully mounted yet, and for scheduling event replaying.\n      // Conceptually this is similar to Placement in that a new subtree is\n      // inserted into the React tree here. It just happens to not need DOM\n      // mutations because it already exists.\n\n      primaryChildFragment.flags |= Hydrating;\n      return primaryChildFragment;\n    }\n  } else {\n    // This is the second render pass. We already attempted to hydrated, but\n    // something either suspended or errored.\n    if (workInProgress.flags & ForceClientRender) {\n      // Something errored during hydration. Try again without hydrating.\n      workInProgress.flags &= ~ForceClientRender;\n\n      var _capturedValue2 = createCapturedValue(\n        new Error(\n          \"There was an error while hydrating this Suspense boundary. \" +\n            \"Switched to client rendering.\"\n        )\n      );\n\n      return retrySuspenseComponentWithoutHydrating(\n        current,\n        workInProgress,\n        renderLanes,\n        _capturedValue2\n      );\n    } else if (workInProgress.memoizedState !== null) {\n      // Something suspended and we should still be in dehydrated mode.\n      // Leave the existing child in place.\n      workInProgress.child = current.child; // The dehydrated completion pass expects this flag to be there\n      // but the normal suspense pass doesn't.\n\n      workInProgress.flags |= DidCapture;\n      return null;\n    } else {\n      // Suspended but we should no longer be in dehydrated mode.\n      // Therefore we now have to render the fallback.\n      var nextPrimaryChildren = nextProps.children;\n      var nextFallbackChildren = nextProps.fallback;\n      var fallbackChildFragment = mountSuspenseFallbackAfterRetryWithoutHydrating(\n        current,\n        workInProgress,\n        nextPrimaryChildren,\n        nextFallbackChildren,\n        renderLanes\n      );\n      var _primaryChildFragment4 = workInProgress.child;\n      _primaryChildFragment4.memoizedState = mountSuspenseOffscreenState(\n        renderLanes\n      );\n      workInProgress.memoizedState = SUSPENDED_MARKER;\n      return fallbackChildFragment;\n    }\n  }\n}\n\nfunction scheduleSuspenseWorkOnFiber(fiber, renderLanes, propagationRoot) {\n  fiber.lanes = mergeLanes(fiber.lanes, renderLanes);\n  var alternate = fiber.alternate;\n\n  if (alternate !== null) {\n    alternate.lanes = mergeLanes(alternate.lanes, renderLanes);\n  }\n\n  scheduleContextWorkOnParentPath(fiber.return, renderLanes, propagationRoot);\n}\n\nfunction propagateSuspenseContextChange(\n  workInProgress,\n  firstChild,\n  renderLanes\n) {\n  // Mark any Suspense boundaries with fallbacks as having work to do.\n  // If they were previously forced into fallbacks, they may now be able\n  // to unblock.\n  var node = firstChild;\n\n  while (node !== null) {\n    if (node.tag === SuspenseComponent) {\n      var state = node.memoizedState;\n\n      if (state !== null) {\n        scheduleSuspenseWorkOnFiber(node, renderLanes, workInProgress);\n      }\n    } else if (node.tag === SuspenseListComponent) {\n      // If the tail is hidden there might not be an Suspense boundaries\n      // to schedule work on. In this case we have to schedule it on the\n      // list itself.\n      // We don't have to traverse to the children of the list since\n      // the list will propagate the change when it rerenders.\n      scheduleSuspenseWorkOnFiber(node, renderLanes, workInProgress);\n    } else if (node.child !== null) {\n      node.child.return = node;\n      node = node.child;\n      continue;\n    }\n\n    if (node === workInProgress) {\n      return;\n    }\n\n    while (node.sibling === null) {\n      if (node.return === null || node.return === workInProgress) {\n        return;\n      }\n\n      node = node.return;\n    }\n\n    node.sibling.return = node.return;\n    node = node.sibling;\n  }\n}\n\nfunction findLastContentRow(firstChild) {\n  // This is going to find the last row among these children that is already\n  // showing content on the screen, as opposed to being in fallback state or\n  // new. If a row has multiple Suspense boundaries, any of them being in the\n  // fallback state, counts as the whole row being in a fallback state.\n  // Note that the \"rows\" will be workInProgress, but any nested children\n  // will still be current since we haven't rendered them yet. The mounted\n  // order may not be the same as the new order. We use the new order.\n  var row = firstChild;\n  var lastContentRow = null;\n\n  while (row !== null) {\n    var currentRow = row.alternate; // New rows can't be content rows.\n\n    if (currentRow !== null && findFirstSuspended(currentRow) === null) {\n      lastContentRow = row;\n    }\n\n    row = row.sibling;\n  }\n\n  return lastContentRow;\n}\n\nfunction validateRevealOrder(revealOrder) {\n  {\n    if (\n      revealOrder !== undefined &&\n      revealOrder !== \"forwards\" &&\n      revealOrder !== \"backwards\" &&\n      revealOrder !== \"together\" &&\n      !didWarnAboutRevealOrder[revealOrder]\n    ) {\n      didWarnAboutRevealOrder[revealOrder] = true;\n\n      if (typeof revealOrder === \"string\") {\n        switch (revealOrder.toLowerCase()) {\n          case \"together\":\n          case \"forwards\":\n          case \"backwards\": {\n            error(\n              '\"%s\" is not a valid value for revealOrder on <SuspenseList />. ' +\n                'Use lowercase \"%s\" instead.',\n              revealOrder,\n              revealOrder.toLowerCase()\n            );\n\n            break;\n          }\n\n          case \"forward\":\n          case \"backward\": {\n            error(\n              '\"%s\" is not a valid value for revealOrder on <SuspenseList />. ' +\n                'React uses the -s suffix in the spelling. Use \"%ss\" instead.',\n              revealOrder,\n              revealOrder.toLowerCase()\n            );\n\n            break;\n          }\n\n          default:\n            error(\n              '\"%s\" is not a supported revealOrder on <SuspenseList />. ' +\n                'Did you mean \"together\", \"forwards\" or \"backwards\"?',\n              revealOrder\n            );\n\n            break;\n        }\n      } else {\n        error(\n          \"%s is not a supported value for revealOrder on <SuspenseList />. \" +\n            'Did you mean \"together\", \"forwards\" or \"backwards\"?',\n          revealOrder\n        );\n      }\n    }\n  }\n}\n\nfunction validateTailOptions(tailMode, revealOrder) {\n  {\n    if (tailMode !== undefined && !didWarnAboutTailOptions[tailMode]) {\n      if (tailMode !== \"collapsed\" && tailMode !== \"hidden\") {\n        didWarnAboutTailOptions[tailMode] = true;\n\n        error(\n          '\"%s\" is not a supported value for tail on <SuspenseList />. ' +\n            'Did you mean \"collapsed\" or \"hidden\"?',\n          tailMode\n        );\n      } else if (revealOrder !== \"forwards\" && revealOrder !== \"backwards\") {\n        didWarnAboutTailOptions[tailMode] = true;\n\n        error(\n          '<SuspenseList tail=\"%s\" /> is only valid if revealOrder is ' +\n            '\"forwards\" or \"backwards\". ' +\n            'Did you mean to specify revealOrder=\"forwards\"?',\n          tailMode\n        );\n      }\n    }\n  }\n}\n\nfunction validateSuspenseListNestedChild(childSlot, index) {\n  {\n    var isAnArray = isArray(childSlot);\n    var isIterable =\n      !isAnArray && typeof getIteratorFn(childSlot) === \"function\";\n\n    if (isAnArray || isIterable) {\n      var type = isAnArray ? \"array\" : \"iterable\";\n\n      error(\n        \"A nested %s was passed to row #%s in <SuspenseList />. Wrap it in \" +\n          \"an additional SuspenseList to configure its revealOrder: \" +\n          \"<SuspenseList revealOrder=...> ... \" +\n          \"<SuspenseList revealOrder=...>{%s}</SuspenseList> ... \" +\n          \"</SuspenseList>\",\n        type,\n        index,\n        type\n      );\n\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction validateSuspenseListChildren(children, revealOrder) {\n  {\n    if (\n      (revealOrder === \"forwards\" || revealOrder === \"backwards\") &&\n      children !== undefined &&\n      children !== null &&\n      children !== false\n    ) {\n      if (isArray(children)) {\n        for (var i = 0; i < children.length; i++) {\n          if (!validateSuspenseListNestedChild(children[i], i)) {\n            return;\n          }\n        }\n      } else {\n        var iteratorFn = getIteratorFn(children);\n\n        if (typeof iteratorFn === \"function\") {\n          var childrenIterator = iteratorFn.call(children);\n\n          if (childrenIterator) {\n            var step = childrenIterator.next();\n            var _i = 0;\n\n            for (; !step.done; step = childrenIterator.next()) {\n              if (!validateSuspenseListNestedChild(step.value, _i)) {\n                return;\n              }\n\n              _i++;\n            }\n          }\n        } else {\n          error(\n            'A single row was passed to a <SuspenseList revealOrder=\"%s\" />. ' +\n              \"This is not useful since it needs multiple rows. \" +\n              \"Did you mean to pass multiple children or an array?\",\n            revealOrder\n          );\n        }\n      }\n    }\n  }\n}\n\nfunction initSuspenseListRenderState(\n  workInProgress,\n  isBackwards,\n  tail,\n  lastContentRow,\n  tailMode\n) {\n  var renderState = workInProgress.memoizedState;\n\n  if (renderState === null) {\n    workInProgress.memoizedState = {\n      isBackwards: isBackwards,\n      rendering: null,\n      renderingStartTime: 0,\n      last: lastContentRow,\n      tail: tail,\n      tailMode: tailMode\n    };\n  } else {\n    // We can reuse the existing object from previous renders.\n    renderState.isBackwards = isBackwards;\n    renderState.rendering = null;\n    renderState.renderingStartTime = 0;\n    renderState.last = lastContentRow;\n    renderState.tail = tail;\n    renderState.tailMode = tailMode;\n  }\n} // This can end up rendering this component multiple passes.\n// The first pass splits the children fibers into two sets. A head and tail.\n// We first render the head. If anything is in fallback state, we do another\n// pass through beginWork to rerender all children (including the tail) with\n// the force suspend context. If the first render didn't have anything in\n// in fallback state. Then we render each row in the tail one-by-one.\n// That happens in the completeWork phase without going back to beginWork.\n\nfunction updateSuspenseListComponent(current, workInProgress, renderLanes) {\n  var nextProps = workInProgress.pendingProps;\n  var revealOrder = nextProps.revealOrder;\n  var tailMode = nextProps.tail;\n  var newChildren = nextProps.children;\n  validateRevealOrder(revealOrder);\n  validateTailOptions(tailMode, revealOrder);\n  validateSuspenseListChildren(newChildren, revealOrder);\n  reconcileChildren(current, workInProgress, newChildren, renderLanes);\n  var suspenseContext = suspenseStackCursor.current;\n  var shouldForceFallback = hasSuspenseContext(\n    suspenseContext,\n    ForceSuspenseFallback\n  );\n\n  if (shouldForceFallback) {\n    suspenseContext = setShallowSuspenseContext(\n      suspenseContext,\n      ForceSuspenseFallback\n    );\n    workInProgress.flags |= DidCapture;\n  } else {\n    var didSuspendBefore =\n      current !== null && (current.flags & DidCapture) !== NoFlags;\n\n    if (didSuspendBefore) {\n      // If we previously forced a fallback, we need to schedule work\n      // on any nested boundaries to let them know to try to render\n      // again. This is the same as context updating.\n      propagateSuspenseContextChange(\n        workInProgress,\n        workInProgress.child,\n        renderLanes\n      );\n    }\n\n    suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);\n  }\n\n  pushSuspenseContext(workInProgress, suspenseContext);\n\n  if ((workInProgress.mode & ConcurrentMode) === NoMode) {\n    // In legacy mode, SuspenseList doesn't work so we just\n    // use make it a noop by treating it as the default revealOrder.\n    workInProgress.memoizedState = null;\n  } else {\n    switch (revealOrder) {\n      case \"forwards\": {\n        var lastContentRow = findLastContentRow(workInProgress.child);\n        var tail;\n\n        if (lastContentRow === null) {\n          // The whole list is part of the tail.\n          // TODO: We could fast path by just rendering the tail now.\n          tail = workInProgress.child;\n          workInProgress.child = null;\n        } else {\n          // Disconnect the tail rows after the content row.\n          // We're going to render them separately later.\n          tail = lastContentRow.sibling;\n          lastContentRow.sibling = null;\n        }\n\n        initSuspenseListRenderState(\n          workInProgress,\n          false, // isBackwards\n          tail,\n          lastContentRow,\n          tailMode\n        );\n        break;\n      }\n\n      case \"backwards\": {\n        // We're going to find the first row that has existing content.\n        // At the same time we're going to reverse the list of everything\n        // we pass in the meantime. That's going to be our tail in reverse\n        // order.\n        var _tail = null;\n        var row = workInProgress.child;\n        workInProgress.child = null;\n\n        while (row !== null) {\n          var currentRow = row.alternate; // New rows can't be content rows.\n\n          if (currentRow !== null && findFirstSuspended(currentRow) === null) {\n            // This is the beginning of the main content.\n            workInProgress.child = row;\n            break;\n          }\n\n          var nextRow = row.sibling;\n          row.sibling = _tail;\n          _tail = row;\n          row = nextRow;\n        } // TODO: If workInProgress.child is null, we can continue on the tail immediately.\n\n        initSuspenseListRenderState(\n          workInProgress,\n          true, // isBackwards\n          _tail,\n          null, // last\n          tailMode\n        );\n        break;\n      }\n\n      case \"together\": {\n        initSuspenseListRenderState(\n          workInProgress,\n          false, // isBackwards\n          null, // tail\n          null, // last\n          undefined\n        );\n        break;\n      }\n\n      default: {\n        // The default reveal order is the same as not having\n        // a boundary.\n        workInProgress.memoizedState = null;\n      }\n    }\n  }\n\n  return workInProgress.child;\n}\n\nfunction updatePortalComponent(current, workInProgress, renderLanes) {\n  pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);\n  var nextChildren = workInProgress.pendingProps;\n\n  if (current === null) {\n    // Portals are special because we don't append the children during mount\n    // but at commit. Therefore we need to track insertions which the normal\n    // flow doesn't do during mount. This doesn't happen at the root because\n    // the root always starts with a \"current\" with a null child.\n    // TODO: Consider unifying this with how the root works.\n    workInProgress.child = reconcileChildFibers(\n      workInProgress,\n      null,\n      nextChildren,\n      renderLanes\n    );\n  } else {\n    reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  }\n\n  return workInProgress.child;\n}\n\nvar hasWarnedAboutUsingNoValuePropOnContextProvider = false;\n\nfunction updateContextProvider(current, workInProgress, renderLanes) {\n  var providerType = workInProgress.type;\n  var context = providerType._context;\n  var newProps = workInProgress.pendingProps;\n  var oldProps = workInProgress.memoizedProps;\n  var newValue = newProps.value;\n\n  {\n    if (!(\"value\" in newProps)) {\n      if (!hasWarnedAboutUsingNoValuePropOnContextProvider) {\n        hasWarnedAboutUsingNoValuePropOnContextProvider = true;\n\n        error(\n          \"The `value` prop is required for the `<Context.Provider>`. Did you misspell it or forget to pass it?\"\n        );\n      }\n    }\n\n    var providerPropTypes = workInProgress.type.propTypes;\n\n    if (providerPropTypes) {\n      checkPropTypes(providerPropTypes, newProps, \"prop\", \"Context.Provider\");\n    }\n  }\n\n  pushProvider(workInProgress, context, newValue);\n\n  {\n    if (oldProps !== null) {\n      var oldValue = oldProps.value;\n\n      if (objectIs(oldValue, newValue)) {\n        // No change. Bailout early if children are the same.\n        if (oldProps.children === newProps.children && !hasContextChanged()) {\n          return bailoutOnAlreadyFinishedWork(\n            current,\n            workInProgress,\n            renderLanes\n          );\n        }\n      } else {\n        // The context value changed. Search for matching consumers and schedule\n        // them to update.\n        propagateContextChange(workInProgress, context, renderLanes);\n      }\n    }\n  }\n\n  var newChildren = newProps.children;\n  reconcileChildren(current, workInProgress, newChildren, renderLanes);\n  return workInProgress.child;\n}\n\nvar hasWarnedAboutUsingContextAsConsumer = false;\n\nfunction updateContextConsumer(current, workInProgress, renderLanes) {\n  var context = workInProgress.type; // The logic below for Context differs depending on PROD or DEV mode. In\n  // DEV mode, we create a separate object for Context.Consumer that acts\n  // like a proxy to Context. This proxy object adds unnecessary code in PROD\n  // so we use the old behaviour (Context.Consumer references Context) to\n  // reduce size and overhead. The separate object references context via\n  // a property called \"_context\", which also gives us the ability to check\n  // in DEV mode if this property exists or not and warn if it does not.\n\n  {\n    if (context._context === undefined) {\n      // This may be because it's a Context (rather than a Consumer).\n      // Or it may be because it's older React where they're the same thing.\n      // We only want to warn if we're sure it's a new React.\n      if (context !== context.Consumer) {\n        if (!hasWarnedAboutUsingContextAsConsumer) {\n          hasWarnedAboutUsingContextAsConsumer = true;\n\n          error(\n            \"Rendering <Context> directly is not supported and will be removed in \" +\n              \"a future major release. Did you mean to render <Context.Consumer> instead?\"\n          );\n        }\n      }\n    } else {\n      context = context._context;\n    }\n  }\n\n  var newProps = workInProgress.pendingProps;\n  var render = newProps.children;\n\n  {\n    if (typeof render !== \"function\") {\n      error(\n        \"A context consumer was rendered with multiple children, or a child \" +\n          \"that isn't a function. A context consumer expects a single child \" +\n          \"that is a function. If you did pass a function, make sure there \" +\n          \"is no trailing or leading whitespace around it.\"\n      );\n    }\n  }\n\n  prepareToReadContext(workInProgress, renderLanes);\n  var newValue = readContext(context);\n\n  var newChildren;\n\n  {\n    ReactCurrentOwner$1.current = workInProgress;\n    setIsRendering(true);\n    newChildren = render(newValue);\n    setIsRendering(false);\n  }\n\n  workInProgress.flags |= PerformedWork;\n  reconcileChildren(current, workInProgress, newChildren, renderLanes);\n  return workInProgress.child;\n}\n\nfunction markWorkInProgressReceivedUpdate() {\n  didReceiveUpdate = true;\n}\n\nfunction resetSuspendedCurrentOnMountInLegacyMode(current, workInProgress) {\n  if ((workInProgress.mode & ConcurrentMode) === NoMode) {\n    if (current !== null) {\n      // A lazy component only mounts if it suspended inside a non-\n      // concurrent tree, in an inconsistent state. We want to treat it like\n      // a new mount, even though an empty version of it already committed.\n      // Disconnect the alternate pointers.\n      current.alternate = null;\n      workInProgress.alternate = null; // Since this is conceptually a new fiber, schedule a Placement effect\n\n      workInProgress.flags |= Placement;\n    }\n  }\n}\n\nfunction bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes) {\n  if (current !== null) {\n    // Reuse previous dependencies\n    workInProgress.dependencies = current.dependencies;\n  }\n\n  {\n    // Don't update \"base\" render times for bailouts.\n    stopProfilerTimerIfRunning();\n  }\n\n  markSkippedUpdateLanes(workInProgress.lanes); // Check if the children have any pending work.\n\n  if (!includesSomeLane(renderLanes, workInProgress.childLanes)) {\n    // The children don't have any work either. We can skip them.\n    // TODO: Once we add back resuming, we should check if the children are\n    // a work-in-progress set. If so, we need to transfer their effects.\n    {\n      return null;\n    }\n  } // This fiber doesn't have work, but its subtree does. Clone the child\n  // fibers and continue.\n\n  cloneChildFibers(current, workInProgress);\n  return workInProgress.child;\n}\n\nfunction remountFiber(current, oldWorkInProgress, newWorkInProgress) {\n  {\n    var returnFiber = oldWorkInProgress.return;\n\n    if (returnFiber === null) {\n      // eslint-disable-next-line react-internal/prod-error-codes\n      throw new Error(\"Cannot swap the root fiber.\");\n    } // Disconnect from the old current.\n    // It will get deleted.\n\n    current.alternate = null;\n    oldWorkInProgress.alternate = null; // Connect to the new tree.\n\n    newWorkInProgress.index = oldWorkInProgress.index;\n    newWorkInProgress.sibling = oldWorkInProgress.sibling;\n    newWorkInProgress.return = oldWorkInProgress.return;\n    newWorkInProgress.ref = oldWorkInProgress.ref; // Replace the child/sibling pointers above it.\n\n    if (oldWorkInProgress === returnFiber.child) {\n      returnFiber.child = newWorkInProgress;\n    } else {\n      var prevSibling = returnFiber.child;\n\n      if (prevSibling === null) {\n        // eslint-disable-next-line react-internal/prod-error-codes\n        throw new Error(\"Expected parent to have a child.\");\n      }\n\n      while (prevSibling.sibling !== oldWorkInProgress) {\n        prevSibling = prevSibling.sibling;\n\n        if (prevSibling === null) {\n          // eslint-disable-next-line react-internal/prod-error-codes\n          throw new Error(\"Expected to find the previous sibling.\");\n        }\n      }\n\n      prevSibling.sibling = newWorkInProgress;\n    } // Delete the old fiber and place the new one.\n    // Since the old fiber is disconnected, we have to schedule it manually.\n\n    var deletions = returnFiber.deletions;\n\n    if (deletions === null) {\n      returnFiber.deletions = [current];\n      returnFiber.flags |= ChildDeletion;\n    } else {\n      deletions.push(current);\n    }\n\n    newWorkInProgress.flags |= Placement; // Restart work from the new fiber.\n\n    return newWorkInProgress;\n  }\n}\n\nfunction checkScheduledUpdateOrContext(current, renderLanes) {\n  // Before performing an early bailout, we must check if there are pending\n  // updates or context.\n  var updateLanes = current.lanes;\n\n  if (includesSomeLane(updateLanes, renderLanes)) {\n    return true;\n  } // No pending update, but because context is propagated lazily, we need\n\n  return false;\n}\n\nfunction attemptEarlyBailoutIfNoScheduledUpdate(\n  current,\n  workInProgress,\n  renderLanes\n) {\n  // This fiber does not have any pending work. Bailout without entering\n  // the begin phase. There's still some bookkeeping we that needs to be done\n  // in this optimized path, mostly pushing stuff onto the stack.\n  switch (workInProgress.tag) {\n    case HostRoot:\n      pushHostRootContext(workInProgress);\n      var root = workInProgress.stateNode;\n      break;\n\n    case HostComponent:\n      pushHostContext(workInProgress);\n      break;\n\n    case ClassComponent: {\n      var Component = workInProgress.type;\n\n      if (isContextProvider(Component)) {\n        pushContextProvider(workInProgress);\n      }\n\n      break;\n    }\n\n    case HostPortal:\n      pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);\n      break;\n\n    case ContextProvider: {\n      var newValue = workInProgress.memoizedProps.value;\n      var context = workInProgress.type._context;\n      pushProvider(workInProgress, context, newValue);\n      break;\n    }\n\n    case Profiler:\n      {\n        // Profiler should only call onRender when one of its descendants actually rendered.\n        var hasChildWork = includesSomeLane(\n          renderLanes,\n          workInProgress.childLanes\n        );\n\n        if (hasChildWork) {\n          workInProgress.flags |= Update;\n        }\n\n        {\n          // Reset effect durations for the next eventual effect phase.\n          // These are reset during render to allow the DevTools commit hook a chance to read them,\n          var stateNode = workInProgress.stateNode;\n          stateNode.effectDuration = 0;\n          stateNode.passiveEffectDuration = 0;\n        }\n      }\n\n      break;\n\n    case SuspenseComponent: {\n      var state = workInProgress.memoizedState;\n\n      if (state !== null) {\n        if (state.dehydrated !== null) {\n          pushSuspenseContext(\n            workInProgress,\n            setDefaultShallowSuspenseContext(suspenseStackCursor.current)\n          ); // We know that this component will suspend again because if it has\n          // been unsuspended it has committed as a resolved Suspense component.\n          // If it needs to be retried, it should have work scheduled on it.\n\n          workInProgress.flags |= DidCapture; // We should never render the children of a dehydrated boundary until we\n          // upgrade it. We return null instead of bailoutOnAlreadyFinishedWork.\n\n          return null;\n        } // If this boundary is currently timed out, we need to decide\n        // whether to retry the primary children, or to skip over it and\n        // go straight to the fallback. Check the priority of the primary\n        // child fragment.\n\n        var primaryChildFragment = workInProgress.child;\n        var primaryChildLanes = primaryChildFragment.childLanes;\n\n        if (includesSomeLane(renderLanes, primaryChildLanes)) {\n          // The primary children have pending work. Use the normal path\n          // to attempt to render the primary children again.\n          return updateSuspenseComponent(current, workInProgress, renderLanes);\n        } else {\n          // The primary child fragment does not have pending work marked\n          // on it\n          pushSuspenseContext(\n            workInProgress,\n            setDefaultShallowSuspenseContext(suspenseStackCursor.current)\n          ); // The primary children do not have pending work with sufficient\n          // priority. Bailout.\n\n          var child = bailoutOnAlreadyFinishedWork(\n            current,\n            workInProgress,\n            renderLanes\n          );\n\n          if (child !== null) {\n            // The fallback children have pending work. Skip over the\n            // primary children and work on the fallback.\n            return child.sibling;\n          } else {\n            // Note: We can return `null` here because we already checked\n            // whether there were nested context consumers, via the call to\n            // `bailoutOnAlreadyFinishedWork` above.\n            return null;\n          }\n        }\n      } else {\n        pushSuspenseContext(\n          workInProgress,\n          setDefaultShallowSuspenseContext(suspenseStackCursor.current)\n        );\n      }\n\n      break;\n    }\n\n    case SuspenseListComponent: {\n      var didSuspendBefore = (current.flags & DidCapture) !== NoFlags;\n\n      var _hasChildWork = includesSomeLane(\n        renderLanes,\n        workInProgress.childLanes\n      );\n\n      if (didSuspendBefore) {\n        if (_hasChildWork) {\n          // If something was in fallback state last time, and we have all the\n          // same children then we're still in progressive loading state.\n          // Something might get unblocked by state updates or retries in the\n          // tree which will affect the tail. So we need to use the normal\n          // path to compute the correct tail.\n          return updateSuspenseListComponent(\n            current,\n            workInProgress,\n            renderLanes\n          );\n        } // If none of the children had any work, that means that none of\n        // them got retried so they'll still be blocked in the same way\n        // as before. We can fast bail out.\n\n        workInProgress.flags |= DidCapture;\n      } // If nothing suspended before and we're rendering the same children,\n      // then the tail doesn't matter. Anything new that suspends will work\n      // in the \"together\" mode, so we can continue from the state we had.\n\n      var renderState = workInProgress.memoizedState;\n\n      if (renderState !== null) {\n        // Reset to the \"together\" mode in case we've started a different\n        // update in the past but didn't complete it.\n        renderState.rendering = null;\n        renderState.tail = null;\n        renderState.lastEffect = null;\n      }\n\n      pushSuspenseContext(workInProgress, suspenseStackCursor.current);\n\n      if (_hasChildWork) {\n        break;\n      } else {\n        // If none of the children had any work, that means that none of\n        // them got retried so they'll still be blocked in the same way\n        // as before. We can fast bail out.\n        return null;\n      }\n    }\n\n    case OffscreenComponent:\n    case LegacyHiddenComponent: {\n      // Need to check if the tree still needs to be deferred. This is\n      // almost identical to the logic used in the normal update path,\n      // so we'll just enter that. The only difference is we'll bail out\n      // at the next level instead of this one, because the child props\n      // have not changed. Which is fine.\n      // TODO: Probably should refactor `beginWork` to split the bailout\n      // path from the normal path. I'm tempted to do a labeled break here\n      // but I won't :)\n      workInProgress.lanes = NoLanes;\n      return updateOffscreenComponent(current, workInProgress, renderLanes);\n    }\n  }\n\n  return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n}\n\nfunction beginWork(current, workInProgress, renderLanes) {\n  {\n    if (workInProgress._debugNeedsRemount && current !== null) {\n      // This will restart the begin phase with a new fiber.\n      return remountFiber(\n        current,\n        workInProgress,\n        createFiberFromTypeAndProps(\n          workInProgress.type,\n          workInProgress.key,\n          workInProgress.pendingProps,\n          workInProgress._debugOwner || null,\n          workInProgress.mode,\n          workInProgress.lanes\n        )\n      );\n    }\n  }\n\n  if (current !== null) {\n    var oldProps = current.memoizedProps;\n    var newProps = workInProgress.pendingProps;\n\n    if (\n      oldProps !== newProps ||\n      hasContextChanged() || // Force a re-render if the implementation changed due to hot reload:\n      workInProgress.type !== current.type\n    ) {\n      // If props or context changed, mark the fiber as having performed work.\n      // This may be unset if the props are determined to be equal later (memo).\n      didReceiveUpdate = true;\n    } else {\n      // Neither props nor legacy context changes. Check if there's a pending\n      // update or context change.\n      var hasScheduledUpdateOrContext = checkScheduledUpdateOrContext(\n        current,\n        renderLanes\n      );\n\n      if (\n        !hasScheduledUpdateOrContext && // If this is the second pass of an error or suspense boundary, there\n        // may not be work scheduled on `current`, so we check for this flag.\n        (workInProgress.flags & DidCapture) === NoFlags\n      ) {\n        // No pending updates or context. Bail out now.\n        didReceiveUpdate = false;\n        return attemptEarlyBailoutIfNoScheduledUpdate(\n          current,\n          workInProgress,\n          renderLanes\n        );\n      }\n\n      if ((current.flags & ForceUpdateForLegacySuspense) !== NoFlags) {\n        // This is a special case that only exists for legacy mode.\n        // See https://github.com/facebook/react/pull/19216.\n        didReceiveUpdate = true;\n      } else {\n        // An update was scheduled on this fiber, but there are no new props\n        // nor legacy context. Set this to false. If an update queue or context\n        // consumer produces a changed value, it will set this to true. Otherwise,\n        // the component will assume the children have not changed and bail out.\n        didReceiveUpdate = false;\n      }\n    }\n  } else {\n    didReceiveUpdate = false;\n  } // Before entering the begin phase, clear pending update priority.\n  // TODO: This assumes that we're about to evaluate the component and process\n  // the update queue. However, there's an exception: SimpleMemoComponent\n  // sometimes bails out later in the begin phase. This indicates that we should\n  // move this assignment out of the common path and into each branch.\n\n  workInProgress.lanes = NoLanes;\n\n  switch (workInProgress.tag) {\n    case IndeterminateComponent: {\n      return mountIndeterminateComponent(\n        current,\n        workInProgress,\n        workInProgress.type,\n        renderLanes\n      );\n    }\n\n    case LazyComponent: {\n      var elementType = workInProgress.elementType;\n      return mountLazyComponent(\n        current,\n        workInProgress,\n        elementType,\n        renderLanes\n      );\n    }\n\n    case FunctionComponent: {\n      var Component = workInProgress.type;\n      var unresolvedProps = workInProgress.pendingProps;\n      var resolvedProps =\n        workInProgress.elementType === Component\n          ? unresolvedProps\n          : resolveDefaultProps(Component, unresolvedProps);\n      return updateFunctionComponent(\n        current,\n        workInProgress,\n        Component,\n        resolvedProps,\n        renderLanes\n      );\n    }\n\n    case ClassComponent: {\n      var _Component = workInProgress.type;\n      var _unresolvedProps = workInProgress.pendingProps;\n\n      var _resolvedProps =\n        workInProgress.elementType === _Component\n          ? _unresolvedProps\n          : resolveDefaultProps(_Component, _unresolvedProps);\n\n      return updateClassComponent(\n        current,\n        workInProgress,\n        _Component,\n        _resolvedProps,\n        renderLanes\n      );\n    }\n\n    case HostRoot:\n      return updateHostRoot(current, workInProgress, renderLanes);\n\n    case HostComponent:\n      return updateHostComponent(current, workInProgress, renderLanes);\n\n    case HostText:\n      return updateHostText();\n\n    case SuspenseComponent:\n      return updateSuspenseComponent(current, workInProgress, renderLanes);\n\n    case HostPortal:\n      return updatePortalComponent(current, workInProgress, renderLanes);\n\n    case ForwardRef: {\n      var type = workInProgress.type;\n      var _unresolvedProps2 = workInProgress.pendingProps;\n\n      var _resolvedProps2 =\n        workInProgress.elementType === type\n          ? _unresolvedProps2\n          : resolveDefaultProps(type, _unresolvedProps2);\n\n      return updateForwardRef(\n        current,\n        workInProgress,\n        type,\n        _resolvedProps2,\n        renderLanes\n      );\n    }\n\n    case Fragment:\n      return updateFragment(current, workInProgress, renderLanes);\n\n    case Mode:\n      return updateMode(current, workInProgress, renderLanes);\n\n    case Profiler:\n      return updateProfiler(current, workInProgress, renderLanes);\n\n    case ContextProvider:\n      return updateContextProvider(current, workInProgress, renderLanes);\n\n    case ContextConsumer:\n      return updateContextConsumer(current, workInProgress, renderLanes);\n\n    case MemoComponent: {\n      var _type2 = workInProgress.type;\n      var _unresolvedProps3 = workInProgress.pendingProps; // Resolve outer props first, then resolve inner props.\n\n      var _resolvedProps3 = resolveDefaultProps(_type2, _unresolvedProps3);\n\n      {\n        if (workInProgress.type !== workInProgress.elementType) {\n          var outerPropTypes = _type2.propTypes;\n\n          if (outerPropTypes) {\n            checkPropTypes(\n              outerPropTypes,\n              _resolvedProps3, // Resolved for outer only\n              \"prop\",\n              getComponentNameFromType(_type2)\n            );\n          }\n        }\n      }\n\n      _resolvedProps3 = resolveDefaultProps(_type2.type, _resolvedProps3);\n      return updateMemoComponent(\n        current,\n        workInProgress,\n        _type2,\n        _resolvedProps3,\n        renderLanes\n      );\n    }\n\n    case SimpleMemoComponent: {\n      return updateSimpleMemoComponent(\n        current,\n        workInProgress,\n        workInProgress.type,\n        workInProgress.pendingProps,\n        renderLanes\n      );\n    }\n\n    case IncompleteClassComponent: {\n      var _Component2 = workInProgress.type;\n      var _unresolvedProps4 = workInProgress.pendingProps;\n\n      var _resolvedProps4 =\n        workInProgress.elementType === _Component2\n          ? _unresolvedProps4\n          : resolveDefaultProps(_Component2, _unresolvedProps4);\n\n      return mountIncompleteClassComponent(\n        current,\n        workInProgress,\n        _Component2,\n        _resolvedProps4,\n        renderLanes\n      );\n    }\n\n    case SuspenseListComponent: {\n      return updateSuspenseListComponent(current, workInProgress, renderLanes);\n    }\n\n    case ScopeComponent: {\n      break;\n    }\n\n    case OffscreenComponent: {\n      return updateOffscreenComponent(current, workInProgress, renderLanes);\n    }\n  }\n\n  throw new Error(\n    \"Unknown unit of work tag (\" +\n      workInProgress.tag +\n      \"). This error is likely caused by a bug in \" +\n      \"React. Please file an issue.\"\n  );\n}\n\nfunction markUpdate(workInProgress) {\n  // Tag the fiber with an update effect. This turns a Placement into\n  // a PlacementAndUpdate.\n  workInProgress.flags |= Update;\n}\n\nfunction markRef$1(workInProgress) {\n  workInProgress.flags |= Ref;\n}\n\nfunction hadNoMutationsEffects(current, completedWork) {\n  var didBailout = current !== null && current.child === completedWork.child;\n\n  if (didBailout) {\n    return true;\n  }\n\n  if ((completedWork.flags & ChildDeletion) !== NoFlags) {\n    return false;\n  } // TODO: If we move the `hadNoMutationsEffects` call after `bubbleProperties`\n  // then we only have to check the `completedWork.subtreeFlags`.\n\n  var child = completedWork.child;\n\n  while (child !== null) {\n    if (\n      (child.flags & MutationMask) !== NoFlags ||\n      (child.subtreeFlags & MutationMask) !== NoFlags\n    ) {\n      return false;\n    }\n\n    child = child.sibling;\n  }\n\n  return true;\n}\n\nvar appendAllChildren;\nvar updateHostContainer;\nvar updateHostComponent$1;\nvar updateHostText$1;\n\n{\n  // Persistent host tree mode\n  appendAllChildren = function(\n    parent,\n    workInProgress,\n    needsVisibilityToggle,\n    isHidden\n  ) {\n    // We only have the top Fiber that was created but we need recurse down its\n    // children to find all the terminal nodes.\n    var node = workInProgress.child;\n\n    while (node !== null) {\n      // eslint-disable-next-line no-labels\n      if (node.tag === HostComponent) {\n        var instance = node.stateNode;\n\n        if (needsVisibilityToggle && isHidden) {\n          // This child is inside a timed out tree. Hide it.\n          var props = node.memoizedProps;\n          var type = node.type;\n          instance = cloneHiddenInstance(instance);\n        }\n\n        appendInitialChild(parent, instance);\n      } else if (node.tag === HostText) {\n        var _instance = node.stateNode;\n\n        if (needsVisibilityToggle && isHidden) {\n          // This child is inside a timed out tree. Hide it.\n          var text = node.memoizedProps;\n          _instance = cloneHiddenTextInstance();\n        }\n\n        appendInitialChild(parent, _instance);\n      } else if (node.tag === HostPortal);\n      else if (node.tag === OffscreenComponent && node.memoizedState !== null) {\n        // The children in this boundary are hidden. Toggle their visibility\n        // before appending.\n        var child = node.child;\n\n        if (child !== null) {\n          child.return = node;\n        }\n\n        appendAllChildren(parent, node, true, true);\n      } else if (node.child !== null) {\n        node.child.return = node;\n        node = node.child;\n        continue;\n      } // $FlowFixMe This is correct but Flow is confused by the labeled break.\n\n      node = node;\n\n      if (node === workInProgress) {\n        return;\n      }\n\n      while (node.sibling === null) {\n        if (node.return === null || node.return === workInProgress) {\n          return;\n        }\n\n        node = node.return;\n      }\n\n      node.sibling.return = node.return;\n      node = node.sibling;\n    }\n  }; // An unfortunate fork of appendAllChildren because we have two different parent types.\n\n  var appendAllChildrenToContainer = function(\n    containerChildSet,\n    workInProgress,\n    needsVisibilityToggle,\n    isHidden\n  ) {\n    // We only have the top Fiber that was created but we need recurse down its\n    // children to find all the terminal nodes.\n    var node = workInProgress.child;\n\n    while (node !== null) {\n      // eslint-disable-next-line no-labels\n      if (node.tag === HostComponent) {\n        var instance = node.stateNode;\n\n        if (needsVisibilityToggle && isHidden) {\n          // This child is inside a timed out tree. Hide it.\n          var props = node.memoizedProps;\n          var type = node.type;\n          instance = cloneHiddenInstance(instance);\n        }\n\n        appendChildToContainerChildSet(containerChildSet, instance);\n      } else if (node.tag === HostText) {\n        var _instance2 = node.stateNode;\n\n        if (needsVisibilityToggle && isHidden) {\n          // This child is inside a timed out tree. Hide it.\n          var text = node.memoizedProps;\n          _instance2 = cloneHiddenTextInstance();\n        }\n\n        appendChildToContainerChildSet(containerChildSet, _instance2);\n      } else if (node.tag === HostPortal);\n      else if (node.tag === OffscreenComponent && node.memoizedState !== null) {\n        // The children in this boundary are hidden. Toggle their visibility\n        // before appending.\n        var child = node.child;\n\n        if (child !== null) {\n          child.return = node;\n        }\n\n        appendAllChildrenToContainer(containerChildSet, node, true, true);\n      } else if (node.child !== null) {\n        node.child.return = node;\n        node = node.child;\n        continue;\n      } // $FlowFixMe This is correct but Flow is confused by the labeled break.\n\n      node = node;\n\n      if (node === workInProgress) {\n        return;\n      }\n\n      while (node.sibling === null) {\n        if (node.return === null || node.return === workInProgress) {\n          return;\n        }\n\n        node = node.return;\n      }\n\n      node.sibling.return = node.return;\n      node = node.sibling;\n    }\n  };\n\n  updateHostContainer = function(current, workInProgress) {\n    var portalOrRoot = workInProgress.stateNode;\n    var childrenUnchanged = hadNoMutationsEffects(current, workInProgress);\n\n    if (childrenUnchanged);\n    else {\n      var container = portalOrRoot.containerInfo;\n      var newChildSet = createContainerChildSet(container); // If children might have changed, we have to add them all to the set.\n\n      appendAllChildrenToContainer(newChildSet, workInProgress, false, false);\n      portalOrRoot.pendingChildren = newChildSet; // Schedule an update on the container to swap out the container.\n\n      markUpdate(workInProgress);\n      finalizeContainerChildren(container, newChildSet);\n    }\n  };\n\n  updateHostComponent$1 = function(\n    current,\n    workInProgress,\n    type,\n    newProps,\n    rootContainerInstance\n  ) {\n    var currentInstance = current.stateNode;\n    var oldProps = current.memoizedProps; // If there are no effects associated with this node, then none of our children had any updates.\n    // This guarantees that we can reuse all of them.\n\n    var childrenUnchanged = hadNoMutationsEffects(current, workInProgress);\n\n    if (childrenUnchanged && oldProps === newProps) {\n      // No changes, just reuse the existing instance.\n      // Note that this might release a previous clone.\n      workInProgress.stateNode = currentInstance;\n      return;\n    }\n\n    var recyclableInstance = workInProgress.stateNode;\n    var currentHostContext = getHostContext();\n    var updatePayload = null;\n\n    if (oldProps !== newProps) {\n      updatePayload = prepareUpdate(\n        recyclableInstance,\n        type,\n        oldProps,\n        newProps\n      );\n    }\n\n    if (childrenUnchanged && updatePayload === null) {\n      // No changes, just reuse the existing instance.\n      // Note that this might release a previous clone.\n      workInProgress.stateNode = currentInstance;\n      return;\n    }\n\n    var newInstance = cloneInstance(\n      currentInstance,\n      updatePayload,\n      type,\n      oldProps,\n      newProps,\n      workInProgress,\n      childrenUnchanged\n    );\n\n    workInProgress.stateNode = newInstance;\n\n    if (childrenUnchanged) {\n      // If there are no other effects in this tree, we need to flag this node as having one.\n      // Even though we're not going to use it for anything.\n      // Otherwise parents won't know that there are new children to propagate upwards.\n      markUpdate(workInProgress);\n    } else {\n      // If children might have changed, we have to add them all to the set.\n      appendAllChildren(newInstance, workInProgress, false, false);\n    }\n  };\n\n  updateHostText$1 = function(current, workInProgress, oldText, newText) {\n    if (oldText !== newText) {\n      // If the text content differs, we'll create a new text instance for it.\n      var rootContainerInstance = getRootHostContainer();\n      var currentHostContext = getHostContext();\n      workInProgress.stateNode = createTextInstance(\n        newText,\n        rootContainerInstance,\n        currentHostContext,\n        workInProgress\n      ); // We'll have to mark it as having an effect, even though we won't use the effect for anything.\n      // This lets the parents know that at least one of their children has changed.\n\n      markUpdate(workInProgress);\n    } else {\n      workInProgress.stateNode = current.stateNode;\n    }\n  };\n}\n\nfunction cutOffTailIfNeeded(renderState, hasRenderedATailFallback) {\n  switch (renderState.tailMode) {\n    case \"hidden\": {\n      // Any insertions at the end of the tail list after this point\n      // should be invisible. If there are already mounted boundaries\n      // anything before them are not considered for collapsing.\n      // Therefore we need to go through the whole tail to find if\n      // there are any.\n      var tailNode = renderState.tail;\n      var lastTailNode = null;\n\n      while (tailNode !== null) {\n        if (tailNode.alternate !== null) {\n          lastTailNode = tailNode;\n        }\n\n        tailNode = tailNode.sibling;\n      } // Next we're simply going to delete all insertions after the\n      // last rendered item.\n\n      if (lastTailNode === null) {\n        // All remaining items in the tail are insertions.\n        renderState.tail = null;\n      } else {\n        // Detach the insertion after the last node that was already\n        // inserted.\n        lastTailNode.sibling = null;\n      }\n\n      break;\n    }\n\n    case \"collapsed\": {\n      // Any insertions at the end of the tail list after this point\n      // should be invisible. If there are already mounted boundaries\n      // anything before them are not considered for collapsing.\n      // Therefore we need to go through the whole tail to find if\n      // there are any.\n      var _tailNode = renderState.tail;\n      var _lastTailNode = null;\n\n      while (_tailNode !== null) {\n        if (_tailNode.alternate !== null) {\n          _lastTailNode = _tailNode;\n        }\n\n        _tailNode = _tailNode.sibling;\n      } // Next we're simply going to delete all insertions after the\n      // last rendered item.\n\n      if (_lastTailNode === null) {\n        // All remaining items in the tail are insertions.\n        if (!hasRenderedATailFallback && renderState.tail !== null) {\n          // We suspended during the head. We want to show at least one\n          // row at the tail. So we'll keep on and cut off the rest.\n          renderState.tail.sibling = null;\n        } else {\n          renderState.tail = null;\n        }\n      } else {\n        // Detach the insertion after the last node that was already\n        // inserted.\n        _lastTailNode.sibling = null;\n      }\n\n      break;\n    }\n  }\n}\n\nfunction bubbleProperties(completedWork) {\n  var didBailout =\n    completedWork.alternate !== null &&\n    completedWork.alternate.child === completedWork.child;\n  var newChildLanes = NoLanes;\n  var subtreeFlags = NoFlags;\n\n  if (!didBailout) {\n    // Bubble up the earliest expiration time.\n    if ((completedWork.mode & ProfileMode) !== NoMode) {\n      // In profiling mode, resetChildExpirationTime is also used to reset\n      // profiler durations.\n      var actualDuration = completedWork.actualDuration;\n      var treeBaseDuration = completedWork.selfBaseDuration;\n      var child = completedWork.child;\n\n      while (child !== null) {\n        newChildLanes = mergeLanes(\n          newChildLanes,\n          mergeLanes(child.lanes, child.childLanes)\n        );\n        subtreeFlags |= child.subtreeFlags;\n        subtreeFlags |= child.flags; // When a fiber is cloned, its actualDuration is reset to 0. This value will\n        // only be updated if work is done on the fiber (i.e. it doesn't bailout).\n        // When work is done, it should bubble to the parent's actualDuration. If\n        // the fiber has not been cloned though, (meaning no work was done), then\n        // this value will reflect the amount of time spent working on a previous\n        // render. In that case it should not bubble. We determine whether it was\n        // cloned by comparing the child pointer.\n\n        actualDuration += child.actualDuration;\n        treeBaseDuration += child.treeBaseDuration;\n        child = child.sibling;\n      }\n\n      completedWork.actualDuration = actualDuration;\n      completedWork.treeBaseDuration = treeBaseDuration;\n    } else {\n      var _child = completedWork.child;\n\n      while (_child !== null) {\n        newChildLanes = mergeLanes(\n          newChildLanes,\n          mergeLanes(_child.lanes, _child.childLanes)\n        );\n        subtreeFlags |= _child.subtreeFlags;\n        subtreeFlags |= _child.flags; // Update the return pointer so the tree is consistent. This is a code\n        // smell because it assumes the commit phase is never concurrent with\n        // the render phase. Will address during refactor to alternate model.\n\n        _child.return = completedWork;\n        _child = _child.sibling;\n      }\n    }\n\n    completedWork.subtreeFlags |= subtreeFlags;\n  } else {\n    // Bubble up the earliest expiration time.\n    if ((completedWork.mode & ProfileMode) !== NoMode) {\n      // In profiling mode, resetChildExpirationTime is also used to reset\n      // profiler durations.\n      var _treeBaseDuration = completedWork.selfBaseDuration;\n      var _child2 = completedWork.child;\n\n      while (_child2 !== null) {\n        newChildLanes = mergeLanes(\n          newChildLanes,\n          mergeLanes(_child2.lanes, _child2.childLanes)\n        ); // \"Static\" flags share the lifetime of the fiber/hook they belong to,\n        // so we should bubble those up even during a bailout. All the other\n        // flags have a lifetime only of a single render + commit, so we should\n        // ignore them.\n\n        subtreeFlags |= _child2.subtreeFlags & StaticMask;\n        subtreeFlags |= _child2.flags & StaticMask;\n        _treeBaseDuration += _child2.treeBaseDuration;\n        _child2 = _child2.sibling;\n      }\n\n      completedWork.treeBaseDuration = _treeBaseDuration;\n    } else {\n      var _child3 = completedWork.child;\n\n      while (_child3 !== null) {\n        newChildLanes = mergeLanes(\n          newChildLanes,\n          mergeLanes(_child3.lanes, _child3.childLanes)\n        ); // \"Static\" flags share the lifetime of the fiber/hook they belong to,\n        // so we should bubble those up even during a bailout. All the other\n        // flags have a lifetime only of a single render + commit, so we should\n        // ignore them.\n\n        subtreeFlags |= _child3.subtreeFlags & StaticMask;\n        subtreeFlags |= _child3.flags & StaticMask; // Update the return pointer so the tree is consistent. This is a code\n        // smell because it assumes the commit phase is never concurrent with\n        // the render phase. Will address during refactor to alternate model.\n\n        _child3.return = completedWork;\n        _child3 = _child3.sibling;\n      }\n    }\n\n    completedWork.subtreeFlags |= subtreeFlags;\n  }\n\n  completedWork.childLanes = newChildLanes;\n  return didBailout;\n}\n\nfunction completeDehydratedSuspenseBoundary(\n  current,\n  workInProgress,\n  nextState\n) {\n  var wasHydrated = popHydrationState();\n\n  if (nextState !== null && nextState.dehydrated !== null) {\n    // We might be inside a hydration state the first time we're picking up this\n    // Suspense boundary, and also after we've reentered it for further hydration.\n    if (current === null) {\n      if (!wasHydrated) {\n        throw new Error(\n          \"A dehydrated suspense component was completed without a hydrated node. \" +\n            \"This is probably a bug in React.\"\n        );\n      }\n\n      prepareToHydrateHostSuspenseInstance();\n      bubbleProperties(workInProgress);\n\n      {\n        if ((workInProgress.mode & ProfileMode) !== NoMode) {\n          var isTimedOutSuspense = nextState !== null;\n\n          if (isTimedOutSuspense) {\n            // Don't count time spent in a timed out Suspense subtree as part of the base duration.\n            var primaryChildFragment = workInProgress.child;\n\n            if (primaryChildFragment !== null) {\n              // $FlowFixMe Flow doesn't support type casting in combination with the -= operator\n              workInProgress.treeBaseDuration -=\n                primaryChildFragment.treeBaseDuration;\n            }\n          }\n        }\n      }\n\n      return false;\n    } else {\n      if ((workInProgress.flags & DidCapture) === NoFlags) {\n        // This boundary did not suspend so it's now hydrated and unsuspended.\n        workInProgress.memoizedState = null;\n      } // If nothing suspended, we need to schedule an effect to mark this boundary\n      // as having hydrated so events know that they're free to be invoked.\n      // It's also a signal to replay events and the suspense callback.\n      // If something suspended, schedule an effect to attach retry listeners.\n      // So we might as well always mark this.\n\n      workInProgress.flags |= Update;\n      bubbleProperties(workInProgress);\n\n      {\n        if ((workInProgress.mode & ProfileMode) !== NoMode) {\n          var _isTimedOutSuspense = nextState !== null;\n\n          if (_isTimedOutSuspense) {\n            // Don't count time spent in a timed out Suspense subtree as part of the base duration.\n            var _primaryChildFragment = workInProgress.child;\n\n            if (_primaryChildFragment !== null) {\n              // $FlowFixMe Flow doesn't support type casting in combination with the -= operator\n              workInProgress.treeBaseDuration -=\n                _primaryChildFragment.treeBaseDuration;\n            }\n          }\n        }\n      }\n\n      return false;\n    }\n  } else {\n    // Successfully completed this tree. If this was a forced client render,\n    // there may have been recoverable errors during first hydration\n    // attempt. If so, add them to a queue so we can log them in the\n    // commit phase.\n    upgradeHydrationErrorsToRecoverable(); // Fall through to normal Suspense path\n\n    return true;\n  }\n}\n\nfunction completeWork(current, workInProgress, renderLanes) {\n  var newProps = workInProgress.pendingProps; // Note: This intentionally doesn't check if we're hydrating because comparing\n  // to the current tree provider fiber is just as fast and less error-prone.\n  // Ideally we would have a special version of the work loop only\n  // for hydration.\n\n  popTreeContext(workInProgress);\n\n  switch (workInProgress.tag) {\n    case IndeterminateComponent:\n    case LazyComponent:\n    case SimpleMemoComponent:\n    case FunctionComponent:\n    case ForwardRef:\n    case Fragment:\n    case Mode:\n    case Profiler:\n    case ContextConsumer:\n    case MemoComponent:\n      bubbleProperties(workInProgress);\n      return null;\n\n    case ClassComponent: {\n      var Component = workInProgress.type;\n\n      if (isContextProvider(Component)) {\n        popContext(workInProgress);\n      }\n\n      bubbleProperties(workInProgress);\n      return null;\n    }\n\n    case HostRoot: {\n      var fiberRoot = workInProgress.stateNode;\n      popHostContainer(workInProgress);\n      popTopLevelContextObject(workInProgress);\n      resetWorkInProgressVersions();\n\n      if (fiberRoot.pendingContext) {\n        fiberRoot.context = fiberRoot.pendingContext;\n        fiberRoot.pendingContext = null;\n      }\n\n      if (current === null || current.child === null) {\n        // If we hydrated, pop so that we can delete any remaining children\n        // that weren't hydrated.\n        var wasHydrated = popHydrationState();\n\n        if (wasHydrated) {\n          // If we hydrated, then we'll need to schedule an update for\n          // the commit side-effects on the root.\n          markUpdate(workInProgress);\n        } else {\n          if (current !== null) {\n            var prevState = current.memoizedState;\n\n            if (\n              // Check if this is a client root\n              !prevState.isDehydrated || // Check if we reverted to client rendering (e.g. due to an error)\n              (workInProgress.flags & ForceClientRender) !== NoFlags\n            ) {\n              // Schedule an effect to clear this container at the start of the\n              // next commit. This handles the case of React rendering into a\n              // container with previous children. It's also safe to do for\n              // updates too, because current.child would only be null if the\n              // previous render was null (so the container would already\n              // be empty).\n              workInProgress.flags |= Snapshot; // If this was a forced client render, there may have been\n              // recoverable errors during first hydration attempt. If so, add\n              // them to a queue so we can log them in the commit phase.\n\n              upgradeHydrationErrorsToRecoverable();\n            }\n          }\n        }\n      }\n\n      updateHostContainer(current, workInProgress);\n      bubbleProperties(workInProgress);\n\n      return null;\n    }\n\n    case HostComponent: {\n      popHostContext(workInProgress);\n      var rootContainerInstance = getRootHostContainer();\n      var type = workInProgress.type;\n\n      if (current !== null && workInProgress.stateNode != null) {\n        updateHostComponent$1(\n          current,\n          workInProgress,\n          type,\n          newProps,\n          rootContainerInstance\n        );\n\n        if (current.ref !== workInProgress.ref) {\n          markRef$1(workInProgress);\n        }\n      } else {\n        if (!newProps) {\n          if (workInProgress.stateNode === null) {\n            throw new Error(\n              \"We must have new props for new mounts. This error is likely \" +\n                \"caused by a bug in React. Please file an issue.\"\n            );\n          } // This can happen when we abort work.\n\n          bubbleProperties(workInProgress);\n          return null;\n        }\n\n        var currentHostContext = getHostContext(); // TODO: Move createInstance to beginWork and keep it on a context\n        // \"stack\" as the parent. Then append children as we go in beginWork\n        // or completeWork depending on whether we want to add them top->down or\n        // bottom->up. Top->down is faster in IE11.\n\n        var _wasHydrated = popHydrationState();\n\n        if (_wasHydrated) {\n          // TODO: Move this and createInstance step into the beginPhase\n          // to consolidate.\n          if (prepareToHydrateHostInstance()) {\n            // If changes to the hydrated node need to be applied at the\n            // commit-phase we mark this as such.\n            markUpdate(workInProgress);\n          }\n        } else {\n          var instance = createInstance(\n            type,\n            newProps,\n            rootContainerInstance,\n            currentHostContext,\n            workInProgress\n          );\n          appendAllChildren(instance, workInProgress, false, false);\n          workInProgress.stateNode = instance; // Certain renderers require commit-time effects for initial mount.\n        }\n\n        if (workInProgress.ref !== null) {\n          // If there is a ref on a host node we need to schedule a callback\n          markRef$1(workInProgress);\n        }\n      }\n\n      bubbleProperties(workInProgress);\n      return null;\n    }\n\n    case HostText: {\n      var newText = newProps;\n\n      if (current && workInProgress.stateNode != null) {\n        var oldText = current.memoizedProps; // If we have an alternate, that means this is an update and we need\n        // to schedule a side-effect to do the updates.\n\n        updateHostText$1(current, workInProgress, oldText, newText);\n      } else {\n        if (typeof newText !== \"string\") {\n          if (workInProgress.stateNode === null) {\n            throw new Error(\n              \"We must have new props for new mounts. This error is likely \" +\n                \"caused by a bug in React. Please file an issue.\"\n            );\n          } // This can happen when we abort work.\n        }\n\n        var _rootContainerInstance = getRootHostContainer();\n\n        var _currentHostContext = getHostContext();\n\n        var _wasHydrated2 = popHydrationState();\n\n        if (_wasHydrated2) {\n          if (prepareToHydrateHostTextInstance()) {\n            markUpdate(workInProgress);\n          }\n        } else {\n          workInProgress.stateNode = createTextInstance(\n            newText,\n            _rootContainerInstance,\n            _currentHostContext,\n            workInProgress\n          );\n        }\n      }\n\n      bubbleProperties(workInProgress);\n      return null;\n    }\n\n    case SuspenseComponent: {\n      popSuspenseContext(workInProgress);\n      var nextState = workInProgress.memoizedState; // Special path for dehydrated boundaries. We may eventually move this\n      // to its own fiber type so that we can add other kinds of hydration\n      // boundaries that aren't associated with a Suspense tree. In anticipation\n      // of such a refactor, all the hydration logic is contained in\n      // this branch.\n\n      if (\n        current === null ||\n        (current.memoizedState !== null &&\n          current.memoizedState.dehydrated !== null)\n      ) {\n        var fallthroughToNormalSuspensePath = completeDehydratedSuspenseBoundary(\n          current,\n          workInProgress,\n          nextState\n        );\n\n        if (!fallthroughToNormalSuspensePath) {\n          if (workInProgress.flags & ShouldCapture) {\n            // Special case. There were remaining unhydrated nodes. We treat\n            // this as a mismatch. Revert to client rendering.\n            return workInProgress;\n          } else {\n            // Did not finish hydrating, either because this is the initial\n            // render or because something suspended.\n            return null;\n          }\n        } // Continue with the normal Suspense path.\n      }\n\n      if ((workInProgress.flags & DidCapture) !== NoFlags) {\n        // Something suspended. Re-render with the fallback children.\n        workInProgress.lanes = renderLanes; // Do not reset the effect list.\n\n        if ((workInProgress.mode & ProfileMode) !== NoMode) {\n          transferActualDuration(workInProgress);\n        } // Don't bubble properties in this case.\n\n        return workInProgress;\n      }\n\n      var nextDidTimeout = nextState !== null;\n      var prevDidTimeout = current !== null && current.memoizedState !== null;\n      // a passive effect, which is when we process the transitions\n\n      if (nextDidTimeout !== prevDidTimeout) {\n        // an effect to toggle the subtree's visibility. When we switch from\n        // fallback -> primary, the inner Offscreen fiber schedules this effect\n        // as part of its normal complete phase. But when we switch from\n        // primary -> fallback, the inner Offscreen fiber does not have a complete\n        // phase. So we need to schedule its effect here.\n        //\n        // We also use this flag to connect/disconnect the effects, but the same\n        // logic applies: when re-connecting, the Offscreen fiber's complete\n        // phase will handle scheduling the effect. It's only when the fallback\n        // is active that we have to do anything special.\n\n        if (nextDidTimeout) {\n          var _offscreenFiber2 = workInProgress.child;\n          _offscreenFiber2.flags |= Visibility; // TODO: This will still suspend a synchronous tree if anything\n          // in the concurrent tree already suspended during this render.\n          // This is a known bug.\n\n          if ((workInProgress.mode & ConcurrentMode) !== NoMode) {\n            // TODO: Move this back to throwException because this is too late\n            // if this is a large tree which is common for initial loads. We\n            // don't know if we should restart a render or not until we get\n            // this marker, and this is too late.\n            // If this render already had a ping or lower pri updates,\n            // and this is the first time we know we're going to suspend we\n            // should be able to immediately restart from within throwException.\n            var hasInvisibleChildContext =\n              current === null &&\n              (workInProgress.memoizedProps.unstable_avoidThisFallback !==\n                true ||\n                !enableSuspenseAvoidThisFallback);\n\n            if (\n              hasInvisibleChildContext ||\n              hasSuspenseContext(\n                suspenseStackCursor.current,\n                InvisibleParentSuspenseContext\n              )\n            ) {\n              // If this was in an invisible tree or a new render, then showing\n              // this boundary is ok.\n              renderDidSuspend();\n            } else {\n              // Otherwise, we're going to have to hide content so we should\n              // suspend for longer if possible.\n              renderDidSuspendDelayIfPossible();\n            }\n          }\n        }\n      }\n\n      var wakeables = workInProgress.updateQueue;\n\n      if (wakeables !== null) {\n        // Schedule an effect to attach a retry listener to the promise.\n        // TODO: Move to passive phase\n        workInProgress.flags |= Update;\n      }\n\n      bubbleProperties(workInProgress);\n\n      {\n        if ((workInProgress.mode & ProfileMode) !== NoMode) {\n          if (nextDidTimeout) {\n            // Don't count time spent in a timed out Suspense subtree as part of the base duration.\n            var primaryChildFragment = workInProgress.child;\n\n            if (primaryChildFragment !== null) {\n              // $FlowFixMe Flow doesn't support type casting in combination with the -= operator\n              workInProgress.treeBaseDuration -=\n                primaryChildFragment.treeBaseDuration;\n            }\n          }\n        }\n      }\n\n      return null;\n    }\n\n    case HostPortal:\n      popHostContainer(workInProgress);\n      updateHostContainer(current, workInProgress);\n\n      if (current === null) {\n        preparePortalMount(workInProgress.stateNode.containerInfo);\n      }\n\n      bubbleProperties(workInProgress);\n      return null;\n\n    case ContextProvider:\n      // Pop provider fiber\n      var context = workInProgress.type._context;\n      popProvider(context, workInProgress);\n      bubbleProperties(workInProgress);\n      return null;\n\n    case IncompleteClassComponent: {\n      // Same as class component case. I put it down here so that the tags are\n      // sequential to ensure this switch is compiled to a jump table.\n      var _Component = workInProgress.type;\n\n      if (isContextProvider(_Component)) {\n        popContext(workInProgress);\n      }\n\n      bubbleProperties(workInProgress);\n      return null;\n    }\n\n    case SuspenseListComponent: {\n      popSuspenseContext(workInProgress);\n      var renderState = workInProgress.memoizedState;\n\n      if (renderState === null) {\n        // We're running in the default, \"independent\" mode.\n        // We don't do anything in this mode.\n        bubbleProperties(workInProgress);\n        return null;\n      }\n\n      var didSuspendAlready = (workInProgress.flags & DidCapture) !== NoFlags;\n      var renderedTail = renderState.rendering;\n\n      if (renderedTail === null) {\n        // We just rendered the head.\n        if (!didSuspendAlready) {\n          // This is the first pass. We need to figure out if anything is still\n          // suspended in the rendered set.\n          // If new content unsuspended, but there's still some content that\n          // didn't. Then we need to do a second pass that forces everything\n          // to keep showing their fallbacks.\n          // We might be suspended if something in this render pass suspended, or\n          // something in the previous committed pass suspended. Otherwise,\n          // there's no chance so we can skip the expensive call to\n          // findFirstSuspended.\n          var cannotBeSuspended =\n            renderHasNotSuspendedYet() &&\n            (current === null || (current.flags & DidCapture) === NoFlags);\n\n          if (!cannotBeSuspended) {\n            var row = workInProgress.child;\n\n            while (row !== null) {\n              var suspended = findFirstSuspended(row);\n\n              if (suspended !== null) {\n                didSuspendAlready = true;\n                workInProgress.flags |= DidCapture;\n                cutOffTailIfNeeded(renderState, false); // If this is a newly suspended tree, it might not get committed as\n                // part of the second pass. In that case nothing will subscribe to\n                // its thenables. Instead, we'll transfer its thenables to the\n                // SuspenseList so that it can retry if they resolve.\n                // There might be multiple of these in the list but since we're\n                // going to wait for all of them anyway, it doesn't really matter\n                // which ones gets to ping. In theory we could get clever and keep\n                // track of how many dependencies remain but it gets tricky because\n                // in the meantime, we can add/remove/change items and dependencies.\n                // We might bail out of the loop before finding any but that\n                // doesn't matter since that means that the other boundaries that\n                // we did find already has their listeners attached.\n\n                var newThenables = suspended.updateQueue;\n\n                if (newThenables !== null) {\n                  workInProgress.updateQueue = newThenables;\n                  workInProgress.flags |= Update;\n                } // Rerender the whole list, but this time, we'll force fallbacks\n                // to stay in place.\n                // Reset the effect flags before doing the second pass since that's now invalid.\n                // Reset the child fibers to their original state.\n\n                workInProgress.subtreeFlags = NoFlags;\n                resetChildFibers(workInProgress, renderLanes); // Set up the Suspense Context to force suspense and immediately\n                // rerender the children.\n\n                pushSuspenseContext(\n                  workInProgress,\n                  setShallowSuspenseContext(\n                    suspenseStackCursor.current,\n                    ForceSuspenseFallback\n                  )\n                ); // Don't bubble properties in this case.\n\n                return workInProgress.child;\n              }\n\n              row = row.sibling;\n            }\n          }\n\n          if (renderState.tail !== null && now() > getRenderTargetTime()) {\n            // We have already passed our CPU deadline but we still have rows\n            // left in the tail. We'll just give up further attempts to render\n            // the main content and only render fallbacks.\n            workInProgress.flags |= DidCapture;\n            didSuspendAlready = true;\n            cutOffTailIfNeeded(renderState, false); // Since nothing actually suspended, there will nothing to ping this\n            // to get it started back up to attempt the next item. While in terms\n            // of priority this work has the same priority as this current render,\n            // it's not part of the same transition once the transition has\n            // committed. If it's sync, we still want to yield so that it can be\n            // painted. Conceptually, this is really the same as pinging.\n            // We can use any RetryLane even if it's the one currently rendering\n            // since we're leaving it behind on this node.\n\n            workInProgress.lanes = SomeRetryLane;\n          }\n        } else {\n          cutOffTailIfNeeded(renderState, false);\n        } // Next we're going to render the tail.\n      } else {\n        // Append the rendered row to the child list.\n        if (!didSuspendAlready) {\n          var _suspended = findFirstSuspended(renderedTail);\n\n          if (_suspended !== null) {\n            workInProgress.flags |= DidCapture;\n            didSuspendAlready = true; // Ensure we transfer the update queue to the parent so that it doesn't\n            // get lost if this row ends up dropped during a second pass.\n\n            var _newThenables = _suspended.updateQueue;\n\n            if (_newThenables !== null) {\n              workInProgress.updateQueue = _newThenables;\n              workInProgress.flags |= Update;\n            }\n\n            cutOffTailIfNeeded(renderState, true); // This might have been modified.\n\n            if (\n              renderState.tail === null &&\n              renderState.tailMode === \"hidden\" &&\n              !renderedTail.alternate &&\n              !getIsHydrating() // We don't cut it if we're hydrating.\n            ) {\n              // We're done.\n              bubbleProperties(workInProgress);\n              return null;\n            }\n          } else if (\n            // The time it took to render last row is greater than the remaining\n            // time we have to render. So rendering one more row would likely\n            // exceed it.\n            now() * 2 - renderState.renderingStartTime >\n              getRenderTargetTime() &&\n            renderLanes !== OffscreenLane\n          ) {\n            // We have now passed our CPU deadline and we'll just give up further\n            // attempts to render the main content and only render fallbacks.\n            // The assumption is that this is usually faster.\n            workInProgress.flags |= DidCapture;\n            didSuspendAlready = true;\n            cutOffTailIfNeeded(renderState, false); // Since nothing actually suspended, there will nothing to ping this\n            // to get it started back up to attempt the next item. While in terms\n            // of priority this work has the same priority as this current render,\n            // it's not part of the same transition once the transition has\n            // committed. If it's sync, we still want to yield so that it can be\n            // painted. Conceptually, this is really the same as pinging.\n            // We can use any RetryLane even if it's the one currently rendering\n            // since we're leaving it behind on this node.\n\n            workInProgress.lanes = SomeRetryLane;\n          }\n        }\n\n        if (renderState.isBackwards) {\n          // The effect list of the backwards tail will have been added\n          // to the end. This breaks the guarantee that life-cycles fire in\n          // sibling order but that isn't a strong guarantee promised by React.\n          // Especially since these might also just pop in during future commits.\n          // Append to the beginning of the list.\n          renderedTail.sibling = workInProgress.child;\n          workInProgress.child = renderedTail;\n        } else {\n          var previousSibling = renderState.last;\n\n          if (previousSibling !== null) {\n            previousSibling.sibling = renderedTail;\n          } else {\n            workInProgress.child = renderedTail;\n          }\n\n          renderState.last = renderedTail;\n        }\n      }\n\n      if (renderState.tail !== null) {\n        // We still have tail rows to render.\n        // Pop a row.\n        var next = renderState.tail;\n        renderState.rendering = next;\n        renderState.tail = next.sibling;\n        renderState.renderingStartTime = now();\n        next.sibling = null; // Restore the context.\n        // TODO: We can probably just avoid popping it instead and only\n        // setting it the first time we go from not suspended to suspended.\n\n        var suspenseContext = suspenseStackCursor.current;\n\n        if (didSuspendAlready) {\n          suspenseContext = setShallowSuspenseContext(\n            suspenseContext,\n            ForceSuspenseFallback\n          );\n        } else {\n          suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);\n        }\n\n        pushSuspenseContext(workInProgress, suspenseContext); // Do a pass over the next row.\n        // Don't bubble properties in this case.\n\n        return next;\n      }\n\n      bubbleProperties(workInProgress);\n      return null;\n    }\n\n    case ScopeComponent: {\n      break;\n    }\n\n    case OffscreenComponent:\n    case LegacyHiddenComponent: {\n      popRenderLanes(workInProgress);\n      var _nextState = workInProgress.memoizedState;\n      var nextIsHidden = _nextState !== null;\n\n      if (current !== null) {\n        var _prevState = current.memoizedState;\n        var prevIsHidden = _prevState !== null;\n\n        if (\n          prevIsHidden !== nextIsHidden && // LegacyHidden doesn't do any hiding — it only pre-renders.\n          !enableLegacyHidden\n        ) {\n          workInProgress.flags |= Visibility;\n        }\n      }\n\n      if (!nextIsHidden || (workInProgress.mode & ConcurrentMode) === NoMode) {\n        bubbleProperties(workInProgress);\n      } else {\n        // Don't bubble properties for hidden children unless we're rendering\n        // at offscreen priority.\n        if (includesSomeLane(subtreeRenderLanes, OffscreenLane)) {\n          bubbleProperties(workInProgress);\n        }\n      }\n      return null;\n    }\n\n    case CacheComponent: {\n      return null;\n    }\n\n    case TracingMarkerComponent: {\n      return null;\n    }\n  }\n\n  throw new Error(\n    \"Unknown unit of work tag (\" +\n      workInProgress.tag +\n      \"). This error is likely caused by a bug in \" +\n      \"React. Please file an issue.\"\n  );\n}\n\nfunction unwindWork(current, workInProgress, renderLanes) {\n  // Note: This intentionally doesn't check if we're hydrating because comparing\n  // to the current tree provider fiber is just as fast and less error-prone.\n  // Ideally we would have a special version of the work loop only\n  // for hydration.\n  popTreeContext(workInProgress);\n\n  switch (workInProgress.tag) {\n    case ClassComponent: {\n      var Component = workInProgress.type;\n\n      if (isContextProvider(Component)) {\n        popContext(workInProgress);\n      }\n\n      var flags = workInProgress.flags;\n\n      if (flags & ShouldCapture) {\n        workInProgress.flags = (flags & ~ShouldCapture) | DidCapture;\n\n        if ((workInProgress.mode & ProfileMode) !== NoMode) {\n          transferActualDuration(workInProgress);\n        }\n\n        return workInProgress;\n      }\n\n      return null;\n    }\n\n    case HostRoot: {\n      var root = workInProgress.stateNode;\n      popHostContainer(workInProgress);\n      popTopLevelContextObject(workInProgress);\n      resetWorkInProgressVersions();\n      var _flags = workInProgress.flags;\n\n      if (\n        (_flags & ShouldCapture) !== NoFlags &&\n        (_flags & DidCapture) === NoFlags\n      ) {\n        // There was an error during render that wasn't captured by a suspense\n        // boundary. Do a second pass on the root to unmount the children.\n        workInProgress.flags = (_flags & ~ShouldCapture) | DidCapture;\n        return workInProgress;\n      } // We unwound to the root without completing it. Exit.\n\n      return null;\n    }\n\n    case HostComponent: {\n      // TODO: popHydrationState\n      popHostContext(workInProgress);\n      return null;\n    }\n\n    case SuspenseComponent: {\n      popSuspenseContext(workInProgress);\n      var suspenseState = workInProgress.memoizedState;\n\n      if (suspenseState !== null && suspenseState.dehydrated !== null) {\n        if (workInProgress.alternate === null) {\n          throw new Error(\n            \"Threw in newly mounted dehydrated component. This is likely a bug in \" +\n              \"React. Please file an issue.\"\n          );\n        }\n      }\n\n      var _flags2 = workInProgress.flags;\n\n      if (_flags2 & ShouldCapture) {\n        workInProgress.flags = (_flags2 & ~ShouldCapture) | DidCapture; // Captured a suspense effect. Re-render the boundary.\n\n        if ((workInProgress.mode & ProfileMode) !== NoMode) {\n          transferActualDuration(workInProgress);\n        }\n\n        return workInProgress;\n      }\n\n      return null;\n    }\n\n    case SuspenseListComponent: {\n      popSuspenseContext(workInProgress); // SuspenseList doesn't actually catch anything. It should've been\n      // caught by a nested boundary. If not, it should bubble through.\n\n      return null;\n    }\n\n    case HostPortal:\n      popHostContainer(workInProgress);\n      return null;\n\n    case ContextProvider:\n      var context = workInProgress.type._context;\n      popProvider(context, workInProgress);\n      return null;\n\n    case OffscreenComponent:\n    case LegacyHiddenComponent:\n      popRenderLanes(workInProgress);\n      return null;\n\n    case CacheComponent:\n      return null;\n\n    default:\n      return null;\n  }\n}\n\nfunction unwindInterruptedWork(current, interruptedWork, renderLanes) {\n  // Note: This intentionally doesn't check if we're hydrating because comparing\n  // to the current tree provider fiber is just as fast and less error-prone.\n  // Ideally we would have a special version of the work loop only\n  // for hydration.\n  popTreeContext(interruptedWork);\n\n  switch (interruptedWork.tag) {\n    case ClassComponent: {\n      var childContextTypes = interruptedWork.type.childContextTypes;\n\n      if (childContextTypes !== null && childContextTypes !== undefined) {\n        popContext(interruptedWork);\n      }\n\n      break;\n    }\n\n    case HostRoot: {\n      var root = interruptedWork.stateNode;\n      popHostContainer(interruptedWork);\n      popTopLevelContextObject(interruptedWork);\n      resetWorkInProgressVersions();\n      break;\n    }\n\n    case HostComponent: {\n      popHostContext(interruptedWork);\n      break;\n    }\n\n    case HostPortal:\n      popHostContainer(interruptedWork);\n      break;\n\n    case SuspenseComponent:\n      popSuspenseContext(interruptedWork);\n      break;\n\n    case SuspenseListComponent:\n      popSuspenseContext(interruptedWork);\n      break;\n\n    case ContextProvider:\n      var context = interruptedWork.type._context;\n      popProvider(context, interruptedWork);\n      break;\n\n    case OffscreenComponent:\n    case LegacyHiddenComponent:\n      popRenderLanes(interruptedWork);\n      break;\n  }\n}\n\nvar didWarnAboutUndefinedSnapshotBeforeUpdate = null;\n\n{\n  didWarnAboutUndefinedSnapshotBeforeUpdate = new Set();\n} // Used during the commit phase to track the state of the Offscreen component stack.\nvar PossiblyWeakSet = typeof WeakSet === \"function\" ? WeakSet : Set;\nvar nextEffect = null; // Used for Profiling builds to track updaters.\n\nvar inProgressLanes = null;\nvar inProgressRoot = null;\nfunction reportUncaughtErrorInDEV(error) {\n  // Wrapping each small part of the commit phase into a guarded\n  // callback is a bit too slow (https://github.com/facebook/react/pull/21666).\n  // But we rely on it to surface errors to DEV tools like overlays\n  // (https://github.com/facebook/react/issues/21712).\n  // As a compromise, rethrow only caught errors in a guard.\n  {\n    invokeGuardedCallback(null, function() {\n      throw error;\n    });\n    clearCaughtError();\n  }\n}\n\nvar callComponentWillUnmountWithTimer = function(current, instance) {\n  instance.props = current.memoizedProps;\n  instance.state = current.memoizedState;\n\n  if (current.mode & ProfileMode) {\n    try {\n      startLayoutEffectTimer();\n      instance.componentWillUnmount();\n    } finally {\n      recordLayoutEffectDuration(current);\n    }\n  } else {\n    instance.componentWillUnmount();\n  }\n}; // Capture errors so they don't interrupt mounting.\n\nfunction safelyCallComponentWillUnmount(\n  current,\n  nearestMountedAncestor,\n  instance\n) {\n  try {\n    callComponentWillUnmountWithTimer(current, instance);\n  } catch (error) {\n    captureCommitPhaseError(current, nearestMountedAncestor, error);\n  }\n} // Capture errors so they don't interrupt mounting.\n\nfunction safelyDetachRef(current, nearestMountedAncestor) {\n  var ref = current.ref;\n\n  if (ref !== null) {\n    if (typeof ref === \"function\") {\n      var retVal;\n\n      try {\n        if (\n          enableProfilerTimer &&\n          enableProfilerCommitHooks &&\n          current.mode & ProfileMode\n        ) {\n          try {\n            startLayoutEffectTimer();\n            retVal = ref(null);\n          } finally {\n            recordLayoutEffectDuration(current);\n          }\n        } else {\n          retVal = ref(null);\n        }\n      } catch (error) {\n        captureCommitPhaseError(current, nearestMountedAncestor, error);\n      }\n\n      {\n        if (typeof retVal === \"function\") {\n          error(\n            \"Unexpected return value from a callback ref in %s. \" +\n              \"A callback ref should not return a function.\",\n            getComponentNameFromFiber(current)\n          );\n        }\n      }\n    } else {\n      ref.current = null;\n    }\n  }\n}\n\nfunction safelyCallDestroy(current, nearestMountedAncestor, destroy) {\n  try {\n    destroy();\n  } catch (error) {\n    captureCommitPhaseError(current, nearestMountedAncestor, error);\n  }\n}\n\nvar focusedInstanceHandle = null;\nvar shouldFireAfterActiveInstanceBlur = false;\nfunction commitBeforeMutationEffects(root, firstChild) {\n  focusedInstanceHandle = prepareForCommit(root.containerInfo);\n  nextEffect = firstChild;\n  commitBeforeMutationEffects_begin(); // We no longer need to track the active instance fiber\n\n  var shouldFire = shouldFireAfterActiveInstanceBlur;\n  shouldFireAfterActiveInstanceBlur = false;\n  focusedInstanceHandle = null;\n  return shouldFire;\n}\n\nfunction commitBeforeMutationEffects_begin() {\n  while (nextEffect !== null) {\n    var fiber = nextEffect; // This phase is only used for beforeActiveInstanceBlur.\n\n    var child = fiber.child;\n\n    if (\n      (fiber.subtreeFlags & BeforeMutationMask) !== NoFlags &&\n      child !== null\n    ) {\n      child.return = fiber;\n      nextEffect = child;\n    } else {\n      commitBeforeMutationEffects_complete();\n    }\n  }\n}\n\nfunction commitBeforeMutationEffects_complete() {\n  while (nextEffect !== null) {\n    var fiber = nextEffect;\n    setCurrentFiber(fiber);\n\n    try {\n      commitBeforeMutationEffectsOnFiber(fiber);\n    } catch (error) {\n      captureCommitPhaseError(fiber, fiber.return, error);\n    }\n\n    resetCurrentFiber();\n    var sibling = fiber.sibling;\n\n    if (sibling !== null) {\n      sibling.return = fiber.return;\n      nextEffect = sibling;\n      return;\n    }\n\n    nextEffect = fiber.return;\n  }\n}\n\nfunction commitBeforeMutationEffectsOnFiber(finishedWork) {\n  var current = finishedWork.alternate;\n  var flags = finishedWork.flags;\n\n  if ((flags & Snapshot) !== NoFlags) {\n    setCurrentFiber(finishedWork);\n\n    switch (finishedWork.tag) {\n      case FunctionComponent:\n      case ForwardRef:\n      case SimpleMemoComponent: {\n        break;\n      }\n\n      case ClassComponent: {\n        if (current !== null) {\n          var prevProps = current.memoizedProps;\n          var prevState = current.memoizedState;\n          var instance = finishedWork.stateNode; // We could update instance props and state here,\n          // but instead we rely on them being set during last render.\n          // TODO: revisit this when we implement resuming.\n\n          {\n            if (\n              finishedWork.type === finishedWork.elementType &&\n              !didWarnAboutReassigningProps\n            ) {\n              if (instance.props !== finishedWork.memoizedProps) {\n                error(\n                  \"Expected %s props to match memoized props before \" +\n                    \"getSnapshotBeforeUpdate. \" +\n                    \"This might either be because of a bug in React, or because \" +\n                    \"a component reassigns its own `this.props`. \" +\n                    \"Please file an issue.\",\n                  getComponentNameFromFiber(finishedWork) || \"instance\"\n                );\n              }\n\n              if (instance.state !== finishedWork.memoizedState) {\n                error(\n                  \"Expected %s state to match memoized state before \" +\n                    \"getSnapshotBeforeUpdate. \" +\n                    \"This might either be because of a bug in React, or because \" +\n                    \"a component reassigns its own `this.state`. \" +\n                    \"Please file an issue.\",\n                  getComponentNameFromFiber(finishedWork) || \"instance\"\n                );\n              }\n            }\n          }\n\n          var snapshot = instance.getSnapshotBeforeUpdate(\n            finishedWork.elementType === finishedWork.type\n              ? prevProps\n              : resolveDefaultProps(finishedWork.type, prevProps),\n            prevState\n          );\n\n          {\n            var didWarnSet = didWarnAboutUndefinedSnapshotBeforeUpdate;\n\n            if (snapshot === undefined && !didWarnSet.has(finishedWork.type)) {\n              didWarnSet.add(finishedWork.type);\n\n              error(\n                \"%s.getSnapshotBeforeUpdate(): A snapshot value (or null) \" +\n                  \"must be returned. You have returned undefined.\",\n                getComponentNameFromFiber(finishedWork)\n              );\n            }\n          }\n\n          instance.__reactInternalSnapshotBeforeUpdate = snapshot;\n        }\n\n        break;\n      }\n\n      case HostRoot: {\n        break;\n      }\n\n      case HostComponent:\n      case HostText:\n      case HostPortal:\n      case IncompleteClassComponent:\n        // Nothing to do for these component types\n        break;\n\n      default: {\n        throw new Error(\n          \"This unit of work tag should not have side-effects. This error is \" +\n            \"likely caused by a bug in React. Please file an issue.\"\n        );\n      }\n    }\n\n    resetCurrentFiber();\n  }\n}\n\nfunction commitHookEffectListUnmount(\n  flags,\n  finishedWork,\n  nearestMountedAncestor\n) {\n  var updateQueue = finishedWork.updateQueue;\n  var lastEffect = updateQueue !== null ? updateQueue.lastEffect : null;\n\n  if (lastEffect !== null) {\n    var firstEffect = lastEffect.next;\n    var effect = firstEffect;\n\n    do {\n      if ((effect.tag & flags) === flags) {\n        // Unmount\n        var destroy = effect.destroy;\n        effect.destroy = undefined;\n\n        if (destroy !== undefined) {\n          {\n            if ((flags & Insertion) !== NoFlags$1) {\n              setIsRunningInsertionEffect(true);\n            }\n          }\n\n          safelyCallDestroy(finishedWork, nearestMountedAncestor, destroy);\n\n          {\n            if ((flags & Insertion) !== NoFlags$1) {\n              setIsRunningInsertionEffect(false);\n            }\n          }\n        }\n      }\n\n      effect = effect.next;\n    } while (effect !== firstEffect);\n  }\n}\n\nfunction commitHookEffectListMount(flags, finishedWork) {\n  var updateQueue = finishedWork.updateQueue;\n  var lastEffect = updateQueue !== null ? updateQueue.lastEffect : null;\n\n  if (lastEffect !== null) {\n    var firstEffect = lastEffect.next;\n    var effect = firstEffect;\n\n    do {\n      if ((effect.tag & flags) === flags) {\n        var create = effect.create;\n\n        {\n          if ((flags & Insertion) !== NoFlags$1) {\n            setIsRunningInsertionEffect(true);\n          }\n        }\n\n        effect.destroy = create();\n\n        {\n          if ((flags & Insertion) !== NoFlags$1) {\n            setIsRunningInsertionEffect(false);\n          }\n        }\n\n        {\n          var destroy = effect.destroy;\n\n          if (destroy !== undefined && typeof destroy !== \"function\") {\n            var hookName = void 0;\n\n            if ((effect.tag & Layout) !== NoFlags) {\n              hookName = \"useLayoutEffect\";\n            } else if ((effect.tag & Insertion) !== NoFlags) {\n              hookName = \"useInsertionEffect\";\n            } else {\n              hookName = \"useEffect\";\n            }\n\n            var addendum = void 0;\n\n            if (destroy === null) {\n              addendum =\n                \" You returned null. If your effect does not require clean \" +\n                \"up, return undefined (or nothing).\";\n            } else if (typeof destroy.then === \"function\") {\n              addendum =\n                \"\\n\\nIt looks like you wrote \" +\n                hookName +\n                \"(async () => ...) or returned a Promise. \" +\n                \"Instead, write the async function inside your effect \" +\n                \"and call it immediately:\\n\\n\" +\n                hookName +\n                \"(() => {\\n\" +\n                \"  async function fetchData() {\\n\" +\n                \"    // You can await here\\n\" +\n                \"    const response = await MyAPI.getData(someId);\\n\" +\n                \"    // ...\\n\" +\n                \"  }\\n\" +\n                \"  fetchData();\\n\" +\n                \"}, [someId]); // Or [] if effect doesn't need props or state\\n\\n\" +\n                \"Learn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching\";\n            } else {\n              addendum = \" You returned: \" + destroy;\n            }\n\n            error(\n              \"%s must not return anything besides a function, \" +\n                \"which is used for clean-up.%s\",\n              hookName,\n              addendum\n            );\n          }\n        }\n      }\n\n      effect = effect.next;\n    } while (effect !== firstEffect);\n  }\n}\n\nfunction commitPassiveEffectDurations(finishedRoot, finishedWork) {\n  {\n    // Only Profilers with work in their subtree will have an Update effect scheduled.\n    if ((finishedWork.flags & Update) !== NoFlags) {\n      switch (finishedWork.tag) {\n        case Profiler: {\n          var passiveEffectDuration =\n            finishedWork.stateNode.passiveEffectDuration;\n          var _finishedWork$memoize = finishedWork.memoizedProps,\n            id = _finishedWork$memoize.id,\n            onPostCommit = _finishedWork$memoize.onPostCommit; // This value will still reflect the previous commit phase.\n          // It does not get reset until the start of the next commit phase.\n\n          var commitTime = getCommitTime();\n          var phase = finishedWork.alternate === null ? \"mount\" : \"update\";\n\n          {\n            if (isCurrentUpdateNested()) {\n              phase = \"nested-update\";\n            }\n          }\n\n          if (typeof onPostCommit === \"function\") {\n            onPostCommit(id, phase, passiveEffectDuration, commitTime);\n          } // Bubble times to the next nearest ancestor Profiler.\n          // After we process that Profiler, we'll bubble further up.\n\n          var parentFiber = finishedWork.return;\n\n          outer: while (parentFiber !== null) {\n            switch (parentFiber.tag) {\n              case HostRoot:\n                var root = parentFiber.stateNode;\n                root.passiveEffectDuration += passiveEffectDuration;\n                break outer;\n\n              case Profiler:\n                var parentStateNode = parentFiber.stateNode;\n                parentStateNode.passiveEffectDuration += passiveEffectDuration;\n                break outer;\n            }\n\n            parentFiber = parentFiber.return;\n          }\n\n          break;\n        }\n      }\n    }\n  }\n}\n\nfunction commitLayoutEffectOnFiber(\n  finishedRoot,\n  current,\n  finishedWork,\n  committedLanes\n) {\n  if ((finishedWork.flags & LayoutMask) !== NoFlags) {\n    switch (finishedWork.tag) {\n      case FunctionComponent:\n      case ForwardRef:\n      case SimpleMemoComponent: {\n        {\n          // At this point layout effects have already been destroyed (during mutation phase).\n          // This is done to prevent sibling component effects from interfering with each other,\n          // e.g. a destroy function in one component should never override a ref set\n          // by a create function in another component during the same commit.\n          if (finishedWork.mode & ProfileMode) {\n            try {\n              startLayoutEffectTimer();\n              commitHookEffectListMount(Layout | HasEffect, finishedWork);\n            } finally {\n              recordLayoutEffectDuration(finishedWork);\n            }\n          } else {\n            commitHookEffectListMount(Layout | HasEffect, finishedWork);\n          }\n        }\n\n        break;\n      }\n\n      case ClassComponent: {\n        var instance = finishedWork.stateNode;\n\n        if (finishedWork.flags & Update) {\n          {\n            if (current === null) {\n              // We could update instance props and state here,\n              // but instead we rely on them being set during last render.\n              // TODO: revisit this when we implement resuming.\n              {\n                if (\n                  finishedWork.type === finishedWork.elementType &&\n                  !didWarnAboutReassigningProps\n                ) {\n                  if (instance.props !== finishedWork.memoizedProps) {\n                    error(\n                      \"Expected %s props to match memoized props before \" +\n                        \"componentDidMount. \" +\n                        \"This might either be because of a bug in React, or because \" +\n                        \"a component reassigns its own `this.props`. \" +\n                        \"Please file an issue.\",\n                      getComponentNameFromFiber(finishedWork) || \"instance\"\n                    );\n                  }\n\n                  if (instance.state !== finishedWork.memoizedState) {\n                    error(\n                      \"Expected %s state to match memoized state before \" +\n                        \"componentDidMount. \" +\n                        \"This might either be because of a bug in React, or because \" +\n                        \"a component reassigns its own `this.state`. \" +\n                        \"Please file an issue.\",\n                      getComponentNameFromFiber(finishedWork) || \"instance\"\n                    );\n                  }\n                }\n              }\n\n              if (finishedWork.mode & ProfileMode) {\n                try {\n                  startLayoutEffectTimer();\n                  instance.componentDidMount();\n                } finally {\n                  recordLayoutEffectDuration(finishedWork);\n                }\n              } else {\n                instance.componentDidMount();\n              }\n            } else {\n              var prevProps =\n                finishedWork.elementType === finishedWork.type\n                  ? current.memoizedProps\n                  : resolveDefaultProps(\n                      finishedWork.type,\n                      current.memoizedProps\n                    );\n              var prevState = current.memoizedState; // We could update instance props and state here,\n              // but instead we rely on them being set during last render.\n              // TODO: revisit this when we implement resuming.\n\n              {\n                if (\n                  finishedWork.type === finishedWork.elementType &&\n                  !didWarnAboutReassigningProps\n                ) {\n                  if (instance.props !== finishedWork.memoizedProps) {\n                    error(\n                      \"Expected %s props to match memoized props before \" +\n                        \"componentDidUpdate. \" +\n                        \"This might either be because of a bug in React, or because \" +\n                        \"a component reassigns its own `this.props`. \" +\n                        \"Please file an issue.\",\n                      getComponentNameFromFiber(finishedWork) || \"instance\"\n                    );\n                  }\n\n                  if (instance.state !== finishedWork.memoizedState) {\n                    error(\n                      \"Expected %s state to match memoized state before \" +\n                        \"componentDidUpdate. \" +\n                        \"This might either be because of a bug in React, or because \" +\n                        \"a component reassigns its own `this.state`. \" +\n                        \"Please file an issue.\",\n                      getComponentNameFromFiber(finishedWork) || \"instance\"\n                    );\n                  }\n                }\n              }\n\n              if (finishedWork.mode & ProfileMode) {\n                try {\n                  startLayoutEffectTimer();\n                  instance.componentDidUpdate(\n                    prevProps,\n                    prevState,\n                    instance.__reactInternalSnapshotBeforeUpdate\n                  );\n                } finally {\n                  recordLayoutEffectDuration(finishedWork);\n                }\n              } else {\n                instance.componentDidUpdate(\n                  prevProps,\n                  prevState,\n                  instance.__reactInternalSnapshotBeforeUpdate\n                );\n              }\n            }\n          }\n        } // TODO: I think this is now always non-null by the time it reaches the\n        // commit phase. Consider removing the type check.\n\n        var updateQueue = finishedWork.updateQueue;\n\n        if (updateQueue !== null) {\n          {\n            if (\n              finishedWork.type === finishedWork.elementType &&\n              !didWarnAboutReassigningProps\n            ) {\n              if (instance.props !== finishedWork.memoizedProps) {\n                error(\n                  \"Expected %s props to match memoized props before \" +\n                    \"processing the update queue. \" +\n                    \"This might either be because of a bug in React, or because \" +\n                    \"a component reassigns its own `this.props`. \" +\n                    \"Please file an issue.\",\n                  getComponentNameFromFiber(finishedWork) || \"instance\"\n                );\n              }\n\n              if (instance.state !== finishedWork.memoizedState) {\n                error(\n                  \"Expected %s state to match memoized state before \" +\n                    \"processing the update queue. \" +\n                    \"This might either be because of a bug in React, or because \" +\n                    \"a component reassigns its own `this.state`. \" +\n                    \"Please file an issue.\",\n                  getComponentNameFromFiber(finishedWork) || \"instance\"\n                );\n              }\n            }\n          } // We could update instance props and state here,\n          // but instead we rely on them being set during last render.\n          // TODO: revisit this when we implement resuming.\n\n          commitUpdateQueue(finishedWork, updateQueue, instance);\n        }\n\n        break;\n      }\n\n      case HostRoot: {\n        // TODO: I think this is now always non-null by the time it reaches the\n        // commit phase. Consider removing the type check.\n        var _updateQueue = finishedWork.updateQueue;\n\n        if (_updateQueue !== null) {\n          var _instance = null;\n\n          if (finishedWork.child !== null) {\n            switch (finishedWork.child.tag) {\n              case HostComponent:\n                _instance = getPublicInstance(finishedWork.child.stateNode);\n                break;\n\n              case ClassComponent:\n                _instance = finishedWork.child.stateNode;\n                break;\n            }\n          }\n\n          commitUpdateQueue(finishedWork, _updateQueue, _instance);\n        }\n\n        break;\n      }\n\n      case HostComponent: {\n        var _instance2 = finishedWork.stateNode; // Renderers may schedule work to be done after host components are mounted\n        // (eg DOM renderer may schedule auto-focus for inputs and form controls).\n        // These effects should only be committed when components are first mounted,\n        // aka when there is no current/alternate.\n\n        if (current === null && finishedWork.flags & Update) {\n          var type = finishedWork.type;\n          var props = finishedWork.memoizedProps;\n          commitMount();\n        }\n\n        break;\n      }\n\n      case HostText: {\n        // We have no life-cycles associated with text.\n        break;\n      }\n\n      case HostPortal: {\n        // We have no life-cycles associated with portals.\n        break;\n      }\n\n      case Profiler: {\n        {\n          var _finishedWork$memoize2 = finishedWork.memoizedProps,\n            onCommit = _finishedWork$memoize2.onCommit,\n            onRender = _finishedWork$memoize2.onRender;\n          var effectDuration = finishedWork.stateNode.effectDuration;\n          var commitTime = getCommitTime();\n          var phase = current === null ? \"mount\" : \"update\";\n\n          {\n            if (isCurrentUpdateNested()) {\n              phase = \"nested-update\";\n            }\n          }\n\n          if (typeof onRender === \"function\") {\n            onRender(\n              finishedWork.memoizedProps.id,\n              phase,\n              finishedWork.actualDuration,\n              finishedWork.treeBaseDuration,\n              finishedWork.actualStartTime,\n              commitTime\n            );\n          }\n\n          {\n            if (typeof onCommit === \"function\") {\n              onCommit(\n                finishedWork.memoizedProps.id,\n                phase,\n                effectDuration,\n                commitTime\n              );\n            } // Schedule a passive effect for this Profiler to call onPostCommit hooks.\n            // This effect should be scheduled even if there is no onPostCommit callback for this Profiler,\n            // because the effect is also where times bubble to parent Profilers.\n\n            enqueuePendingPassiveProfilerEffect(finishedWork); // Propagate layout effect durations to the next nearest Profiler ancestor.\n            // Do not reset these values until the next render so DevTools has a chance to read them first.\n\n            var parentFiber = finishedWork.return;\n\n            outer: while (parentFiber !== null) {\n              switch (parentFiber.tag) {\n                case HostRoot:\n                  var root = parentFiber.stateNode;\n                  root.effectDuration += effectDuration;\n                  break outer;\n\n                case Profiler:\n                  var parentStateNode = parentFiber.stateNode;\n                  parentStateNode.effectDuration += effectDuration;\n                  break outer;\n              }\n\n              parentFiber = parentFiber.return;\n            }\n          }\n        }\n\n        break;\n      }\n\n      case SuspenseComponent: {\n        break;\n      }\n\n      case SuspenseListComponent:\n      case IncompleteClassComponent:\n      case ScopeComponent:\n      case OffscreenComponent:\n      case LegacyHiddenComponent:\n      case TracingMarkerComponent: {\n        break;\n      }\n\n      default:\n        throw new Error(\n          \"This unit of work tag should not have side-effects. This error is \" +\n            \"likely caused by a bug in React. Please file an issue.\"\n        );\n    }\n  }\n\n  {\n    {\n      if (finishedWork.flags & Ref) {\n        commitAttachRef(finishedWork);\n      }\n    }\n  }\n}\n\nfunction commitAttachRef(finishedWork) {\n  var ref = finishedWork.ref;\n\n  if (ref !== null) {\n    var instance = finishedWork.stateNode;\n    var instanceToUse;\n\n    switch (finishedWork.tag) {\n      case HostComponent:\n        instanceToUse = getPublicInstance(instance);\n        break;\n\n      default:\n        instanceToUse = instance;\n    } // Moved outside to ensure DCE works with this flag\n\n    if (typeof ref === \"function\") {\n      var retVal;\n\n      if (finishedWork.mode & ProfileMode) {\n        try {\n          startLayoutEffectTimer();\n          retVal = ref(instanceToUse);\n        } finally {\n          recordLayoutEffectDuration(finishedWork);\n        }\n      } else {\n        retVal = ref(instanceToUse);\n      }\n\n      {\n        if (typeof retVal === \"function\") {\n          error(\n            \"Unexpected return value from a callback ref in %s. \" +\n              \"A callback ref should not return a function.\",\n            getComponentNameFromFiber(finishedWork)\n          );\n        }\n      }\n    } else {\n      {\n        if (!ref.hasOwnProperty(\"current\")) {\n          error(\n            \"Unexpected ref object provided for %s. \" +\n              \"Use either a ref-setter function or React.createRef().\",\n            getComponentNameFromFiber(finishedWork)\n          );\n        }\n      }\n\n      ref.current = instanceToUse;\n    }\n  }\n}\n\nfunction detachFiberMutation(fiber) {\n  // Cut off the return pointer to disconnect it from the tree.\n  // This enables us to detect and warn against state updates on an unmounted component.\n  // It also prevents events from bubbling from within disconnected components.\n  //\n  // Ideally, we should also clear the child pointer of the parent alternate to let this\n  // get GC:ed but we don't know which for sure which parent is the current\n  // one so we'll settle for GC:ing the subtree of this child.\n  // This child itself will be GC:ed when the parent updates the next time.\n  //\n  // Note that we can't clear child or sibling pointers yet.\n  // They're needed for passive effects and for findDOMNode.\n  // We defer those fields, and all other cleanup, to the passive phase (see detachFiberAfterEffects).\n  //\n  // Don't reset the alternate yet, either. We need that so we can detach the\n  // alternate's fields in the passive phase. Clearing the return pointer is\n  // sufficient for findDOMNode semantics.\n  var alternate = fiber.alternate;\n\n  if (alternate !== null) {\n    alternate.return = null;\n  }\n\n  fiber.return = null;\n}\n\nfunction detachFiberAfterEffects(fiber) {\n  var alternate = fiber.alternate;\n\n  if (alternate !== null) {\n    fiber.alternate = null;\n    detachFiberAfterEffects(alternate);\n  } // Note: Defensively using negation instead of < in case\n  // `deletedTreeCleanUpLevel` is undefined.\n\n  {\n    // Clear cyclical Fiber fields. This level alone is designed to roughly\n    // approximate the planned Fiber refactor. In that world, `setState` will be\n    // bound to a special \"instance\" object instead of a Fiber. The Instance\n    // object will not have any of these fields. It will only be connected to\n    // the fiber tree via a single link at the root. So if this level alone is\n    // sufficient to fix memory issues, that bodes well for our plans.\n    fiber.child = null;\n    fiber.deletions = null;\n    fiber.sibling = null; // The `stateNode` is cyclical because on host nodes it points to the host\n    // tree, which has its own pointers to children, parents, and siblings.\n    // The other host nodes also point back to fibers, so we should detach that\n    // one, too.\n\n    if (fiber.tag === HostComponent) {\n      var hostInstance = fiber.stateNode;\n    }\n\n    fiber.stateNode = null; // I'm intentionally not clearing the `return` field in this level. We\n    // already disconnect the `return` pointer at the root of the deleted\n    // subtree (in `detachFiberMutation`). Besides, `return` by itself is not\n    // cyclical — it's only cyclical when combined with `child`, `sibling`, and\n    // `alternate`. But we'll clear it in the next level anyway, just in case.\n\n    {\n      fiber._debugOwner = null;\n    }\n\n    {\n      // Theoretically, nothing in here should be necessary, because we already\n      // disconnected the fiber from the tree. So even if something leaks this\n      // particular fiber, it won't leak anything else\n      //\n      // The purpose of this branch is to be super aggressive so we can measure\n      // if there's any difference in memory impact. If there is, that could\n      // indicate a React leak we don't know about.\n      fiber.return = null;\n      fiber.dependencies = null;\n      fiber.memoizedProps = null;\n      fiber.memoizedState = null;\n      fiber.pendingProps = null;\n      fiber.stateNode = null; // TODO: Move to `commitPassiveUnmountInsideDeletedTreeOnFiber` instead.\n\n      fiber.updateQueue = null;\n    }\n  }\n}\n\nfunction emptyPortalContainer(current) {\n  var portal = current.stateNode;\n  var containerInfo = portal.containerInfo;\n  var emptyChildSet = createContainerChildSet(containerInfo);\n}\n\nfunction commitPlacement(finishedWork) {\n  {\n    return;\n  } // Recursively insert all host nodes into the parent.\n}\n\nfunction commitDeletionEffects(root, returnFiber, deletedFiber) {\n  {\n    // Detach refs and call componentWillUnmount() on the whole subtree.\n    commitDeletionEffectsOnFiber(root, returnFiber, deletedFiber);\n  }\n\n  detachFiberMutation(deletedFiber);\n}\n\nfunction recursivelyTraverseDeletionEffects(\n  finishedRoot,\n  nearestMountedAncestor,\n  parent\n) {\n  // TODO: Use a static flag to skip trees that don't have unmount effects\n  var child = parent.child;\n\n  while (child !== null) {\n    commitDeletionEffectsOnFiber(finishedRoot, nearestMountedAncestor, child);\n    child = child.sibling;\n  }\n}\n\nfunction commitDeletionEffectsOnFiber(\n  finishedRoot,\n  nearestMountedAncestor,\n  deletedFiber\n) {\n  onCommitUnmount(deletedFiber); // The cases in this outer switch modify the stack before they traverse\n  // into their subtree. There are simpler cases in the inner switch\n  // that don't modify the stack.\n\n  switch (deletedFiber.tag) {\n    case HostComponent: {\n      {\n        safelyDetachRef(deletedFiber, nearestMountedAncestor);\n      } // Intentional fallthrough to next branch\n    }\n    // eslint-disable-next-line-no-fallthrough\n\n    case HostText: {\n      // We only need to remove the nearest host child. Set the host parent\n      // to `null` on the stack to indicate that nested children don't\n      // need to be removed.\n      {\n        recursivelyTraverseDeletionEffects(\n          finishedRoot,\n          nearestMountedAncestor,\n          deletedFiber\n        );\n      }\n\n      return;\n    }\n\n    case DehydratedFragment: {\n      return;\n    }\n\n    case HostPortal: {\n      {\n        emptyPortalContainer(deletedFiber);\n        recursivelyTraverseDeletionEffects(\n          finishedRoot,\n          nearestMountedAncestor,\n          deletedFiber\n        );\n      }\n\n      return;\n    }\n\n    case FunctionComponent:\n    case ForwardRef:\n    case MemoComponent:\n    case SimpleMemoComponent: {\n      {\n        var updateQueue = deletedFiber.updateQueue;\n\n        if (updateQueue !== null) {\n          var lastEffect = updateQueue.lastEffect;\n\n          if (lastEffect !== null) {\n            var firstEffect = lastEffect.next;\n            var effect = firstEffect;\n\n            do {\n              var _effect = effect,\n                destroy = _effect.destroy,\n                tag = _effect.tag;\n\n              if (destroy !== undefined) {\n                if ((tag & Insertion) !== NoFlags$1) {\n                  safelyCallDestroy(\n                    deletedFiber,\n                    nearestMountedAncestor,\n                    destroy\n                  );\n                } else if ((tag & Layout) !== NoFlags$1) {\n                  if (deletedFiber.mode & ProfileMode) {\n                    startLayoutEffectTimer();\n                    safelyCallDestroy(\n                      deletedFiber,\n                      nearestMountedAncestor,\n                      destroy\n                    );\n                    recordLayoutEffectDuration(deletedFiber);\n                  } else {\n                    safelyCallDestroy(\n                      deletedFiber,\n                      nearestMountedAncestor,\n                      destroy\n                    );\n                  }\n                }\n              }\n\n              effect = effect.next;\n            } while (effect !== firstEffect);\n          }\n        }\n      }\n\n      recursivelyTraverseDeletionEffects(\n        finishedRoot,\n        nearestMountedAncestor,\n        deletedFiber\n      );\n      return;\n    }\n\n    case ClassComponent: {\n      {\n        safelyDetachRef(deletedFiber, nearestMountedAncestor);\n        var instance = deletedFiber.stateNode;\n\n        if (typeof instance.componentWillUnmount === \"function\") {\n          safelyCallComponentWillUnmount(\n            deletedFiber,\n            nearestMountedAncestor,\n            instance\n          );\n        }\n      }\n\n      recursivelyTraverseDeletionEffects(\n        finishedRoot,\n        nearestMountedAncestor,\n        deletedFiber\n      );\n      return;\n    }\n\n    case ScopeComponent: {\n      recursivelyTraverseDeletionEffects(\n        finishedRoot,\n        nearestMountedAncestor,\n        deletedFiber\n      );\n      return;\n    }\n\n    case OffscreenComponent: {\n      {\n        recursivelyTraverseDeletionEffects(\n          finishedRoot,\n          nearestMountedAncestor,\n          deletedFiber\n        );\n      }\n\n      break;\n    }\n\n    default: {\n      recursivelyTraverseDeletionEffects(\n        finishedRoot,\n        nearestMountedAncestor,\n        deletedFiber\n      );\n      return;\n    }\n  }\n}\n\nfunction commitSuspenseCallback(finishedWork) {\n  // TODO: Move this to passive phase\n  var newState = finishedWork.memoizedState;\n}\n\nfunction attachSuspenseRetryListeners(finishedWork) {\n  // If this boundary just timed out, then it will have a set of wakeables.\n  // For each wakeable, attach a listener so that when it resolves, React\n  // attempts to re-render the boundary in the primary (pre-timeout) state.\n  var wakeables = finishedWork.updateQueue;\n\n  if (wakeables !== null) {\n    finishedWork.updateQueue = null;\n    var retryCache = finishedWork.stateNode;\n\n    if (retryCache === null) {\n      retryCache = finishedWork.stateNode = new PossiblyWeakSet();\n    }\n\n    wakeables.forEach(function(wakeable) {\n      // Memoize using the boundary fiber to prevent redundant listeners.\n      var retry = resolveRetryWakeable.bind(null, finishedWork, wakeable);\n\n      if (!retryCache.has(wakeable)) {\n        retryCache.add(wakeable);\n\n        {\n          if (isDevToolsPresent) {\n            if (inProgressLanes !== null && inProgressRoot !== null) {\n              // If we have pending work still, associate the original updaters with it.\n              restorePendingUpdaters(inProgressRoot, inProgressLanes);\n            } else {\n              throw Error(\n                \"Expected finished root and lanes to be set. This is a bug in React.\"\n              );\n            }\n          }\n        }\n\n        wakeable.then(retry, retry);\n      }\n    });\n  }\n} // This function detects when a Suspense boundary goes from visible to hidden.\nfunction commitMutationEffects(root, finishedWork, committedLanes) {\n  inProgressLanes = committedLanes;\n  inProgressRoot = root;\n  setCurrentFiber(finishedWork);\n  commitMutationEffectsOnFiber(finishedWork, root);\n  setCurrentFiber(finishedWork);\n  inProgressLanes = null;\n  inProgressRoot = null;\n}\n\nfunction recursivelyTraverseMutationEffects(root, parentFiber, lanes) {\n  // Deletions effects can be scheduled on any fiber type. They need to happen\n  // before the children effects hae fired.\n  var deletions = parentFiber.deletions;\n\n  if (deletions !== null) {\n    for (var i = 0; i < deletions.length; i++) {\n      var childToDelete = deletions[i];\n\n      try {\n        commitDeletionEffects(root, parentFiber, childToDelete);\n      } catch (error) {\n        captureCommitPhaseError(childToDelete, parentFiber, error);\n      }\n    }\n  }\n\n  var prevDebugFiber = getCurrentFiber();\n\n  if (parentFiber.subtreeFlags & MutationMask) {\n    var child = parentFiber.child;\n\n    while (child !== null) {\n      setCurrentFiber(child);\n      commitMutationEffectsOnFiber(child, root);\n      child = child.sibling;\n    }\n  }\n\n  setCurrentFiber(prevDebugFiber);\n}\n\nfunction commitMutationEffectsOnFiber(finishedWork, root, lanes) {\n  var current = finishedWork.alternate;\n  var flags = finishedWork.flags; // The effect flag should be checked *after* we refine the type of fiber,\n  // because the fiber tag is more specific. An exception is any flag related\n  // to reconcilation, because those can be set on all fiber types.\n\n  switch (finishedWork.tag) {\n    case FunctionComponent:\n    case ForwardRef:\n    case MemoComponent:\n    case SimpleMemoComponent: {\n      recursivelyTraverseMutationEffects(root, finishedWork);\n      commitReconciliationEffects(finishedWork);\n\n      if (flags & Update) {\n        try {\n          commitHookEffectListUnmount(\n            Insertion | HasEffect,\n            finishedWork,\n            finishedWork.return\n          );\n          commitHookEffectListMount(Insertion | HasEffect, finishedWork);\n        } catch (error) {\n          captureCommitPhaseError(finishedWork, finishedWork.return, error);\n        } // Layout effects are destroyed during the mutation phase so that all\n        // destroy functions for all fibers are called before any create functions.\n        // This prevents sibling component effects from interfering with each other,\n        // e.g. a destroy function in one component should never override a ref set\n        // by a create function in another component during the same commit.\n\n        if (finishedWork.mode & ProfileMode) {\n          try {\n            startLayoutEffectTimer();\n            commitHookEffectListUnmount(\n              Layout | HasEffect,\n              finishedWork,\n              finishedWork.return\n            );\n          } catch (error) {\n            captureCommitPhaseError(finishedWork, finishedWork.return, error);\n          }\n\n          recordLayoutEffectDuration(finishedWork);\n        } else {\n          try {\n            commitHookEffectListUnmount(\n              Layout | HasEffect,\n              finishedWork,\n              finishedWork.return\n            );\n          } catch (error) {\n            captureCommitPhaseError(finishedWork, finishedWork.return, error);\n          }\n        }\n      }\n\n      return;\n    }\n\n    case ClassComponent: {\n      recursivelyTraverseMutationEffects(root, finishedWork);\n      commitReconciliationEffects(finishedWork);\n\n      if (flags & Ref) {\n        if (current !== null) {\n          safelyDetachRef(current, current.return);\n        }\n      }\n\n      return;\n    }\n\n    case HostComponent: {\n      recursivelyTraverseMutationEffects(root, finishedWork);\n      commitReconciliationEffects(finishedWork);\n\n      if (flags & Ref) {\n        if (current !== null) {\n          safelyDetachRef(current, current.return);\n        }\n      }\n\n      return;\n    }\n\n    case HostText: {\n      recursivelyTraverseMutationEffects(root, finishedWork);\n      commitReconciliationEffects(finishedWork);\n\n      return;\n    }\n\n    case HostRoot: {\n      recursivelyTraverseMutationEffects(root, finishedWork);\n      commitReconciliationEffects(finishedWork);\n\n      if (flags & Update) {\n        {\n          var containerInfo = root.containerInfo;\n          var pendingChildren = root.pendingChildren;\n\n          try {\n            replaceContainerChildren(containerInfo, pendingChildren);\n          } catch (error) {\n            captureCommitPhaseError(finishedWork, finishedWork.return, error);\n          }\n        }\n      }\n\n      return;\n    }\n\n    case HostPortal: {\n      recursivelyTraverseMutationEffects(root, finishedWork);\n      commitReconciliationEffects(finishedWork);\n\n      if (flags & Update) {\n        {\n          var portal = finishedWork.stateNode;\n          var _containerInfo = portal.containerInfo;\n          var _pendingChildren = portal.pendingChildren;\n\n          try {\n            replaceContainerChildren(_containerInfo, _pendingChildren);\n          } catch (error) {\n            captureCommitPhaseError(finishedWork, finishedWork.return, error);\n          }\n        }\n      }\n\n      return;\n    }\n\n    case SuspenseComponent: {\n      recursivelyTraverseMutationEffects(root, finishedWork);\n      commitReconciliationEffects(finishedWork);\n      var offscreenFiber = finishedWork.child;\n\n      if (offscreenFiber.flags & Visibility) {\n        var offscreenInstance = offscreenFiber.stateNode;\n        var newState = offscreenFiber.memoizedState;\n        var isHidden = newState !== null; // Track the current state on the Offscreen instance so we can\n        // read it during an event\n\n        offscreenInstance.isHidden = isHidden;\n\n        if (isHidden) {\n          var wasHidden =\n            offscreenFiber.alternate !== null &&\n            offscreenFiber.alternate.memoizedState !== null;\n\n          if (!wasHidden) {\n            // TODO: Move to passive phase\n            markCommitTimeOfFallback();\n          }\n        }\n      }\n\n      if (flags & Update) {\n        try {\n          commitSuspenseCallback(finishedWork);\n        } catch (error) {\n          captureCommitPhaseError(finishedWork, finishedWork.return, error);\n        }\n\n        attachSuspenseRetryListeners(finishedWork);\n      }\n\n      return;\n    }\n\n    case OffscreenComponent: {\n      var _wasHidden = current !== null && current.memoizedState !== null;\n\n      {\n        recursivelyTraverseMutationEffects(root, finishedWork);\n      }\n\n      commitReconciliationEffects(finishedWork);\n\n      if (flags & Visibility) {\n        var _offscreenInstance = finishedWork.stateNode;\n        var _newState = finishedWork.memoizedState;\n\n        var _isHidden = _newState !== null;\n        // read it during an event\n\n        _offscreenInstance.isHidden = _isHidden;\n      }\n\n      return;\n    }\n\n    case SuspenseListComponent: {\n      recursivelyTraverseMutationEffects(root, finishedWork);\n      commitReconciliationEffects(finishedWork);\n\n      if (flags & Update) {\n        attachSuspenseRetryListeners(finishedWork);\n      }\n\n      return;\n    }\n\n    case ScopeComponent: {\n      return;\n    }\n\n    default: {\n      recursivelyTraverseMutationEffects(root, finishedWork);\n      commitReconciliationEffects(finishedWork);\n      return;\n    }\n  }\n}\n\nfunction commitReconciliationEffects(finishedWork) {\n  // Placement effects (insertions, reorders) can be scheduled on any fiber\n  // type. They needs to happen after the children effects have fired, but\n  // before the effects on this fiber have fired.\n  var flags = finishedWork.flags;\n\n  if (flags & Placement) {\n    try {\n      commitPlacement(finishedWork);\n    } catch (error) {\n      captureCommitPhaseError(finishedWork, finishedWork.return, error);\n    } // Clear the \"placement\" from effect tag so that we know that this is\n    // inserted, before any life-cycles like componentDidMount gets called.\n    // TODO: findDOMNode doesn't rely on this any more but isMounted does\n    // and isMounted is deprecated anyway so we should be able to kill this.\n\n    finishedWork.flags &= ~Placement;\n  }\n\n  if (flags & Hydrating) {\n    finishedWork.flags &= ~Hydrating;\n  }\n}\n\nfunction commitLayoutEffects(finishedWork, root, committedLanes) {\n  inProgressLanes = committedLanes;\n  inProgressRoot = root;\n  nextEffect = finishedWork;\n  commitLayoutEffects_begin(finishedWork, root, committedLanes);\n  inProgressLanes = null;\n  inProgressRoot = null;\n}\n\nfunction commitLayoutEffects_begin(subtreeRoot, root, committedLanes) {\n  // Suspense layout effects semantics don't change for legacy roots.\n  var isModernRoot = (subtreeRoot.mode & ConcurrentMode) !== NoMode;\n\n  while (nextEffect !== null) {\n    var fiber = nextEffect;\n    var firstChild = fiber.child;\n\n    if ((fiber.subtreeFlags & LayoutMask) !== NoFlags && firstChild !== null) {\n      firstChild.return = fiber;\n      nextEffect = firstChild;\n    } else {\n      commitLayoutMountEffects_complete(subtreeRoot, root, committedLanes);\n    }\n  }\n}\n\nfunction commitLayoutMountEffects_complete(subtreeRoot, root, committedLanes) {\n  while (nextEffect !== null) {\n    var fiber = nextEffect;\n\n    if ((fiber.flags & LayoutMask) !== NoFlags) {\n      var current = fiber.alternate;\n      setCurrentFiber(fiber);\n\n      try {\n        commitLayoutEffectOnFiber(root, current, fiber, committedLanes);\n      } catch (error) {\n        captureCommitPhaseError(fiber, fiber.return, error);\n      }\n\n      resetCurrentFiber();\n    }\n\n    if (fiber === subtreeRoot) {\n      nextEffect = null;\n      return;\n    }\n\n    var sibling = fiber.sibling;\n\n    if (sibling !== null) {\n      sibling.return = fiber.return;\n      nextEffect = sibling;\n      return;\n    }\n\n    nextEffect = fiber.return;\n  }\n}\n\nfunction commitPassiveMountEffects(\n  root,\n  finishedWork,\n  committedLanes,\n  committedTransitions\n) {\n  nextEffect = finishedWork;\n  commitPassiveMountEffects_begin(\n    finishedWork,\n    root,\n    committedLanes,\n    committedTransitions\n  );\n}\n\nfunction commitPassiveMountEffects_begin(\n  subtreeRoot,\n  root,\n  committedLanes,\n  committedTransitions\n) {\n  while (nextEffect !== null) {\n    var fiber = nextEffect;\n    var firstChild = fiber.child;\n\n    if ((fiber.subtreeFlags & PassiveMask) !== NoFlags && firstChild !== null) {\n      firstChild.return = fiber;\n      nextEffect = firstChild;\n    } else {\n      commitPassiveMountEffects_complete(\n        subtreeRoot,\n        root,\n        committedLanes,\n        committedTransitions\n      );\n    }\n  }\n}\n\nfunction commitPassiveMountEffects_complete(\n  subtreeRoot,\n  root,\n  committedLanes,\n  committedTransitions\n) {\n  while (nextEffect !== null) {\n    var fiber = nextEffect;\n\n    if ((fiber.flags & Passive) !== NoFlags) {\n      setCurrentFiber(fiber);\n\n      try {\n        commitPassiveMountOnFiber(\n          root,\n          fiber,\n          committedLanes,\n          committedTransitions\n        );\n      } catch (error) {\n        captureCommitPhaseError(fiber, fiber.return, error);\n      }\n\n      resetCurrentFiber();\n    }\n\n    if (fiber === subtreeRoot) {\n      nextEffect = null;\n      return;\n    }\n\n    var sibling = fiber.sibling;\n\n    if (sibling !== null) {\n      sibling.return = fiber.return;\n      nextEffect = sibling;\n      return;\n    }\n\n    nextEffect = fiber.return;\n  }\n}\n\nfunction commitPassiveMountOnFiber(\n  finishedRoot,\n  finishedWork,\n  committedLanes,\n  committedTransitions\n) {\n  switch (finishedWork.tag) {\n    case FunctionComponent:\n    case ForwardRef:\n    case SimpleMemoComponent: {\n      if (finishedWork.mode & ProfileMode) {\n        startPassiveEffectTimer();\n\n        try {\n          commitHookEffectListMount(Passive$1 | HasEffect, finishedWork);\n        } finally {\n          recordPassiveEffectDuration(finishedWork);\n        }\n      } else {\n        commitHookEffectListMount(Passive$1 | HasEffect, finishedWork);\n      }\n\n      break;\n    }\n  }\n}\n\nfunction commitPassiveUnmountEffects(firstChild) {\n  nextEffect = firstChild;\n  commitPassiveUnmountEffects_begin();\n}\n\nfunction commitPassiveUnmountEffects_begin() {\n  while (nextEffect !== null) {\n    var fiber = nextEffect;\n    var child = fiber.child;\n\n    if ((nextEffect.flags & ChildDeletion) !== NoFlags) {\n      var deletions = fiber.deletions;\n\n      if (deletions !== null) {\n        for (var i = 0; i < deletions.length; i++) {\n          var fiberToDelete = deletions[i];\n          nextEffect = fiberToDelete;\n          commitPassiveUnmountEffectsInsideOfDeletedTree_begin(\n            fiberToDelete,\n            fiber\n          );\n        }\n\n        {\n          // A fiber was deleted from this parent fiber, but it's still part of\n          // the previous (alternate) parent fiber's list of children. Because\n          // children are a linked list, an earlier sibling that's still alive\n          // will be connected to the deleted fiber via its `alternate`:\n          //\n          //   live fiber\n          //   --alternate--> previous live fiber\n          //   --sibling--> deleted fiber\n          //\n          // We can't disconnect `alternate` on nodes that haven't been deleted\n          // yet, but we can disconnect the `sibling` and `child` pointers.\n          var previousFiber = fiber.alternate;\n\n          if (previousFiber !== null) {\n            var detachedChild = previousFiber.child;\n\n            if (detachedChild !== null) {\n              previousFiber.child = null;\n\n              do {\n                var detachedSibling = detachedChild.sibling;\n                detachedChild.sibling = null;\n                detachedChild = detachedSibling;\n              } while (detachedChild !== null);\n            }\n          }\n        }\n\n        nextEffect = fiber;\n      }\n    }\n\n    if ((fiber.subtreeFlags & PassiveMask) !== NoFlags && child !== null) {\n      child.return = fiber;\n      nextEffect = child;\n    } else {\n      commitPassiveUnmountEffects_complete();\n    }\n  }\n}\n\nfunction commitPassiveUnmountEffects_complete() {\n  while (nextEffect !== null) {\n    var fiber = nextEffect;\n\n    if ((fiber.flags & Passive) !== NoFlags) {\n      setCurrentFiber(fiber);\n      commitPassiveUnmountOnFiber(fiber);\n      resetCurrentFiber();\n    }\n\n    var sibling = fiber.sibling;\n\n    if (sibling !== null) {\n      sibling.return = fiber.return;\n      nextEffect = sibling;\n      return;\n    }\n\n    nextEffect = fiber.return;\n  }\n}\n\nfunction commitPassiveUnmountOnFiber(finishedWork) {\n  switch (finishedWork.tag) {\n    case FunctionComponent:\n    case ForwardRef:\n    case SimpleMemoComponent: {\n      if (finishedWork.mode & ProfileMode) {\n        startPassiveEffectTimer();\n        commitHookEffectListUnmount(\n          Passive$1 | HasEffect,\n          finishedWork,\n          finishedWork.return\n        );\n        recordPassiveEffectDuration(finishedWork);\n      } else {\n        commitHookEffectListUnmount(\n          Passive$1 | HasEffect,\n          finishedWork,\n          finishedWork.return\n        );\n      }\n\n      break;\n    }\n  }\n}\n\nfunction commitPassiveUnmountEffectsInsideOfDeletedTree_begin(\n  deletedSubtreeRoot,\n  nearestMountedAncestor\n) {\n  while (nextEffect !== null) {\n    var fiber = nextEffect; // Deletion effects fire in parent -> child order\n    // TODO: Check if fiber has a PassiveStatic flag\n\n    setCurrentFiber(fiber);\n    commitPassiveUnmountInsideDeletedTreeOnFiber(fiber, nearestMountedAncestor);\n    resetCurrentFiber();\n    var child = fiber.child; // TODO: Only traverse subtree if it has a PassiveStatic flag. (But, if we\n    // do this, still need to handle `deletedTreeCleanUpLevel` correctly.)\n\n    if (child !== null) {\n      child.return = fiber;\n      nextEffect = child;\n    } else {\n      commitPassiveUnmountEffectsInsideOfDeletedTree_complete(\n        deletedSubtreeRoot\n      );\n    }\n  }\n}\n\nfunction commitPassiveUnmountEffectsInsideOfDeletedTree_complete(\n  deletedSubtreeRoot\n) {\n  while (nextEffect !== null) {\n    var fiber = nextEffect;\n    var sibling = fiber.sibling;\n    var returnFiber = fiber.return;\n\n    {\n      // Recursively traverse the entire deleted tree and clean up fiber fields.\n      // This is more aggressive than ideal, and the long term goal is to only\n      // have to detach the deleted tree at the root.\n      detachFiberAfterEffects(fiber);\n\n      if (fiber === deletedSubtreeRoot) {\n        nextEffect = null;\n        return;\n      }\n    }\n\n    if (sibling !== null) {\n      sibling.return = returnFiber;\n      nextEffect = sibling;\n      return;\n    }\n\n    nextEffect = returnFiber;\n  }\n}\n\nfunction commitPassiveUnmountInsideDeletedTreeOnFiber(\n  current,\n  nearestMountedAncestor\n) {\n  switch (current.tag) {\n    case FunctionComponent:\n    case ForwardRef:\n    case SimpleMemoComponent: {\n      if (current.mode & ProfileMode) {\n        startPassiveEffectTimer();\n        commitHookEffectListUnmount(Passive$1, current, nearestMountedAncestor);\n        recordPassiveEffectDuration(current);\n      } else {\n        commitHookEffectListUnmount(Passive$1, current, nearestMountedAncestor);\n      }\n\n      break;\n    }\n  }\n} // TODO: Reuse reappearLayoutEffects traversal here?\n\nvar COMPONENT_TYPE = 0;\nvar HAS_PSEUDO_CLASS_TYPE = 1;\nvar ROLE_TYPE = 2;\nvar TEST_NAME_TYPE = 3;\nvar TEXT_TYPE = 4;\n\nif (typeof Symbol === \"function\" && Symbol.for) {\n  var symbolFor = Symbol.for;\n  COMPONENT_TYPE = symbolFor(\"selector.component\");\n  HAS_PSEUDO_CLASS_TYPE = symbolFor(\"selector.has_pseudo_class\");\n  ROLE_TYPE = symbolFor(\"selector.role\");\n  TEST_NAME_TYPE = symbolFor(\"selector.test_id\");\n  TEXT_TYPE = symbolFor(\"selector.text\");\n}\n\nvar ReactCurrentActQueue = ReactSharedInternals.ReactCurrentActQueue;\nfunction isLegacyActEnvironment(fiber) {\n  {\n    // Legacy mode. We preserve the behavior of React 17's act. It assumes an\n    // act environment whenever `jest` is defined, but you can still turn off\n    // spurious warnings by setting IS_REACT_ACT_ENVIRONMENT explicitly\n    // to false.\n    var isReactActEnvironmentGlobal = // $FlowExpectedError – Flow doesn't know about IS_REACT_ACT_ENVIRONMENT global\n      typeof IS_REACT_ACT_ENVIRONMENT !== \"undefined\"\n        ? IS_REACT_ACT_ENVIRONMENT\n        : undefined; // $FlowExpectedError - Flow doesn't know about jest\n    return warnsIfNotActing;\n  }\n}\nfunction isConcurrentActEnvironment() {\n  {\n    var isReactActEnvironmentGlobal = // $FlowExpectedError – Flow doesn't know about IS_REACT_ACT_ENVIRONMENT global\n      typeof IS_REACT_ACT_ENVIRONMENT !== \"undefined\"\n        ? IS_REACT_ACT_ENVIRONMENT\n        : undefined;\n\n    if (!isReactActEnvironmentGlobal && ReactCurrentActQueue.current !== null) {\n      // TODO: Include link to relevant documentation page.\n      error(\n        \"The current testing environment is not configured to support \" +\n          \"act(...)\"\n      );\n    }\n\n    return isReactActEnvironmentGlobal;\n  }\n}\n\nvar ceil = Math.ceil;\nvar ReactCurrentDispatcher$2 = ReactSharedInternals.ReactCurrentDispatcher,\n  ReactCurrentOwner$2 = ReactSharedInternals.ReactCurrentOwner,\n  ReactCurrentBatchConfig$2 = ReactSharedInternals.ReactCurrentBatchConfig,\n  ReactCurrentActQueue$1 = ReactSharedInternals.ReactCurrentActQueue;\nvar NoContext =\n  /*             */\n  0;\nvar BatchedContext =\n  /*               */\n  1;\nvar RenderContext =\n  /*                */\n  2;\nvar CommitContext =\n  /*                */\n  4;\nvar RootInProgress = 0;\nvar RootFatalErrored = 1;\nvar RootErrored = 2;\nvar RootSuspended = 3;\nvar RootSuspendedWithDelay = 4;\nvar RootCompleted = 5;\nvar RootDidNotComplete = 6; // Describes where we are in the React execution stack\n\nvar executionContext = NoContext; // The root we're working on\n\nvar workInProgressRoot = null; // The fiber we're working on\n\nvar workInProgress = null; // The lanes we're rendering\n\nvar workInProgressRootRenderLanes = NoLanes; // Stack that allows components to change the render lanes for its subtree\n// This is a superset of the lanes we started working on at the root. The only\n// case where it's different from `workInProgressRootRenderLanes` is when we\n// enter a subtree that is hidden and needs to be unhidden: Suspense and\n// Offscreen component.\n//\n// Most things in the work loop should deal with workInProgressRootRenderLanes.\n// Most things in begin/complete phases should deal with subtreeRenderLanes.\n\nvar subtreeRenderLanes = NoLanes;\nvar subtreeRenderLanesCursor = createCursor(NoLanes); // Whether to root completed, errored, suspended, etc.\n\nvar workInProgressRootExitStatus = RootInProgress; // A fatal error, if one is thrown\n\nvar workInProgressRootFatalError = null; // \"Included\" lanes refer to lanes that were worked on during this render. It's\n// slightly different than `renderLanes` because `renderLanes` can change as you\n// enter and exit an Offscreen tree. This value is the combination of all render\n// lanes for the entire render phase.\n\nvar workInProgressRootIncludedLanes = NoLanes; // The work left over by components that were visited during this render. Only\n// includes unprocessed updates, not work in bailed out children.\n\nvar workInProgressRootSkippedLanes = NoLanes; // Lanes that were updated (in an interleaved event) during this render.\n\nvar workInProgressRootInterleavedUpdatedLanes = NoLanes; // Lanes that were updated during the render phase (*not* an interleaved event).\n\nvar workInProgressRootPingedLanes = NoLanes; // Errors that are thrown during the render phase.\n\nvar workInProgressRootConcurrentErrors = null; // These are errors that we recovered from without surfacing them to the UI.\n// We will log them once the tree commits.\n\nvar workInProgressRootRecoverableErrors = null; // The most recent time we committed a fallback. This lets us ensure a train\n// model where we don't commit new loading states in too quick succession.\n\nvar globalMostRecentFallbackTime = 0;\nvar FALLBACK_THROTTLE_MS = 500; // The absolute time for when we should start giving up on rendering\n// more and prefer CPU suspense heuristics instead.\n\nvar workInProgressRootRenderTargetTime = Infinity; // How long a render is supposed to take before we start following CPU\n// suspense heuristics and opt out of rendering more content.\n\nvar RENDER_TIMEOUT_MS = 500;\nvar workInProgressTransitions = null;\n\nfunction resetRenderTimer() {\n  workInProgressRootRenderTargetTime = now() + RENDER_TIMEOUT_MS;\n}\n\nfunction getRenderTargetTime() {\n  return workInProgressRootRenderTargetTime;\n}\nvar hasUncaughtError = false;\nvar firstUncaughtError = null;\nvar legacyErrorBoundariesThatAlreadyFailed = null; // Only used when enableProfilerNestedUpdateScheduledHook is true;\nvar rootDoesHavePassiveEffects = false;\nvar rootWithPendingPassiveEffects = null;\nvar pendingPassiveEffectsLanes = NoLanes;\nvar pendingPassiveProfilerEffects = [];\nvar pendingPassiveTransitions = null; // Use these to prevent an infinite loop of nested updates\n\nvar NESTED_UPDATE_LIMIT = 50;\nvar nestedUpdateCount = 0;\nvar rootWithNestedUpdates = null;\nvar isFlushingPassiveEffects = false;\nvar didScheduleUpdateDuringPassiveEffects = false;\nvar NESTED_PASSIVE_UPDATE_LIMIT = 50;\nvar nestedPassiveUpdateCount = 0;\nvar rootWithPassiveNestedUpdates = null; // If two updates are scheduled within the same event, we should treat their\n// event times as simultaneous, even if the actual clock time has advanced\n// between the first and second call.\n\nvar currentEventTime = NoTimestamp;\nvar currentEventTransitionLane = NoLanes;\nvar isRunningInsertionEffect = false;\nfunction getWorkInProgressRoot() {\n  return workInProgressRoot;\n}\nfunction requestEventTime() {\n  if ((executionContext & (RenderContext | CommitContext)) !== NoContext) {\n    // We're inside React, so it's fine to read the actual time.\n    return now();\n  } // We're not inside React, so we may be in the middle of a browser event.\n\n  if (currentEventTime !== NoTimestamp) {\n    // Use the same start time for all updates until we enter React again.\n    return currentEventTime;\n  } // This is the first update since React yielded. Compute a new start time.\n\n  currentEventTime = now();\n  return currentEventTime;\n}\nfunction requestUpdateLane(fiber) {\n  // Special cases\n  var mode = fiber.mode;\n\n  if ((mode & ConcurrentMode) === NoMode) {\n    return SyncLane;\n  } else if (\n    (executionContext & RenderContext) !== NoContext &&\n    workInProgressRootRenderLanes !== NoLanes\n  ) {\n    // This is a render phase update. These are not officially supported. The\n    // old behavior is to give this the same \"thread\" (lanes) as\n    // whatever is currently rendering. So if you call `setState` on a component\n    // that happens later in the same render, it will flush. Ideally, we want to\n    // remove the special case and treat them as if they came from an\n    // interleaved event. Regardless, this pattern is not officially supported.\n    // This behavior is only a fallback. The flag only exists until we can roll\n    // out the setState warning, since existing code might accidentally rely on\n    // the current behavior.\n    return pickArbitraryLane(workInProgressRootRenderLanes);\n  }\n\n  var isTransition = requestCurrentTransition() !== NoTransition;\n\n  if (isTransition) {\n    if (ReactCurrentBatchConfig$2.transition !== null) {\n      var transition = ReactCurrentBatchConfig$2.transition;\n\n      if (!transition._updatedFibers) {\n        transition._updatedFibers = new Set();\n      }\n\n      transition._updatedFibers.add(fiber);\n    } // The algorithm for assigning an update to a lane should be stable for all\n    // updates at the same priority within the same event. To do this, the\n    // inputs to the algorithm must be the same.\n    //\n    // The trick we use is to cache the first of each of these inputs within an\n    // event. Then reset the cached values once we can be sure the event is\n    // over. Our heuristic for that is whenever we enter a concurrent work loop.\n\n    if (currentEventTransitionLane === NoLane) {\n      // All transitions within the same event are assigned the same lane.\n      currentEventTransitionLane = claimNextTransitionLane();\n    }\n\n    return currentEventTransitionLane;\n  } // Updates originating inside certain React methods, like flushSync, have\n  // their priority set by tracking it with a context variable.\n  //\n  // The opaque type returned by the host config is internally a lane, so we can\n  // use that directly.\n  // TODO: Move this type conversion to the event priority module.\n\n  var updateLane = getCurrentUpdatePriority();\n\n  if (updateLane !== NoLane) {\n    return updateLane;\n  } // This update originated outside React. Ask the host environment for an\n  // appropriate priority, based on the type of event.\n  //\n  // The opaque type returned by the host config is internally a lane, so we can\n  // use that directly.\n  // TODO: Move this type conversion to the event priority module.\n\n  var eventLane = getCurrentEventPriority();\n  return eventLane;\n}\n\nfunction requestRetryLane(fiber) {\n  // This is a fork of `requestUpdateLane` designed specifically for Suspense\n  // \"retries\" — a special update that attempts to flip a Suspense boundary\n  // from its placeholder state to its primary/resolved state.\n  // Special cases\n  var mode = fiber.mode;\n\n  if ((mode & ConcurrentMode) === NoMode) {\n    return SyncLane;\n  }\n\n  return claimNextRetryLane();\n}\n\nfunction scheduleUpdateOnFiber(root, fiber, lane, eventTime) {\n  checkForNestedUpdates();\n\n  {\n    if (isRunningInsertionEffect) {\n      error(\"useInsertionEffect must not schedule updates.\");\n    }\n  }\n\n  {\n    if (isFlushingPassiveEffects) {\n      didScheduleUpdateDuringPassiveEffects = true;\n    }\n  } // Mark that the root has a pending update.\n\n  markRootUpdated(root, lane, eventTime);\n\n  if (\n    (executionContext & RenderContext) !== NoLanes &&\n    root === workInProgressRoot\n  ) {\n    // This update was dispatched during the render phase. This is a mistake\n    // if the update originates from user space (with the exception of local\n    // hook updates, which are handled differently and don't reach this\n    // function), but there are some internal React features that use this as\n    // an implementation detail, like selective hydration.\n    warnAboutRenderPhaseUpdatesInDEV(fiber); // Track lanes that were updated during the render phase\n  } else {\n    // This is a normal update, scheduled from outside the render phase. For\n    // example, during an input event.\n    {\n      if (isDevToolsPresent) {\n        addFiberToLanesMap(root, fiber, lane);\n      }\n    }\n\n    warnIfUpdatesNotWrappedWithActDEV(fiber);\n\n    if (root === workInProgressRoot) {\n      // Received an update to a tree that's in the middle of rendering. Mark\n      // that there was an interleaved update work on this root. Unless the\n      // `deferRenderPhaseUpdateToNextBatch` flag is off and this is a render\n      // phase update. In that case, we don't treat render phase updates as if\n      // they were interleaved, for backwards compat reasons.\n      if ((executionContext & RenderContext) === NoContext) {\n        workInProgressRootInterleavedUpdatedLanes = mergeLanes(\n          workInProgressRootInterleavedUpdatedLanes,\n          lane\n        );\n      }\n\n      if (workInProgressRootExitStatus === RootSuspendedWithDelay) {\n        // The root already suspended with a delay, which means this render\n        // definitely won't finish. Since we have a new update, let's mark it as\n        // suspended now, right before marking the incoming update. This has the\n        // effect of interrupting the current render and switching to the update.\n        // TODO: Make sure this doesn't override pings that happen while we've\n        // already started rendering.\n        markRootSuspended$1(root, workInProgressRootRenderLanes);\n      }\n    }\n\n    ensureRootIsScheduled(root, eventTime);\n\n    if (\n      lane === SyncLane &&\n      executionContext === NoContext &&\n      (fiber.mode & ConcurrentMode) === NoMode && // Treat `act` as if it's inside `batchedUpdates`, even in legacy mode.\n      !ReactCurrentActQueue$1.isBatchingLegacy\n    ) {\n      // Flush the synchronous work now, unless we're already working or inside\n      // a batch. This is intentionally inside scheduleUpdateOnFiber instead of\n      // scheduleCallbackForFiber to preserve the ability to schedule a callback\n      // without immediately flushing it. We only do this for user-initiated\n      // updates, to preserve historical behavior of legacy mode.\n      resetRenderTimer();\n      flushSyncCallbacksOnlyInLegacyMode();\n    }\n  }\n}\nfunction isUnsafeClassRenderPhaseUpdate(fiber) {\n  // Check if this is a render phase update. Only called by class components,\n  // which special (deprecated) behavior for UNSAFE_componentWillReceive props.\n  return (\n    // TODO: Remove outdated deferRenderPhaseUpdateToNextBatch experiment. We\n    // decided not to enable it.\n    (executionContext & RenderContext) !== NoContext\n  );\n} // Use this function to schedule a task for a root. There's only one task per\n// root; if a task was already scheduled, we'll check to make sure the priority\n// of the existing task is the same as the priority of the next level that the\n// root has work on. This function is called on every update, and right before\n// exiting a task.\n\nfunction ensureRootIsScheduled(root, currentTime) {\n  var existingCallbackNode = root.callbackNode; // Check if any lanes are being starved by other work. If so, mark them as\n  // expired so we know to work on those next.\n\n  markStarvedLanesAsExpired(root, currentTime); // Determine the next lanes to work on, and their priority.\n\n  var nextLanes = getNextLanes(\n    root,\n    root === workInProgressRoot ? workInProgressRootRenderLanes : NoLanes\n  );\n\n  if (nextLanes === NoLanes) {\n    // Special case: There's nothing to work on.\n    if (existingCallbackNode !== null) {\n      cancelCallback$1(existingCallbackNode);\n    }\n\n    root.callbackNode = null;\n    root.callbackPriority = NoLane;\n    return;\n  } // We use the highest priority lane to represent the priority of the callback.\n\n  var newCallbackPriority = getHighestPriorityLane(nextLanes); // Check if there's an existing task. We may be able to reuse it.\n\n  var existingCallbackPriority = root.callbackPriority;\n\n  if (\n    existingCallbackPriority === newCallbackPriority && // Special case related to `act`. If the currently scheduled task is a\n    // Scheduler task, rather than an `act` task, cancel it and re-scheduled\n    // on the `act` queue.\n    !(\n      ReactCurrentActQueue$1.current !== null &&\n      existingCallbackNode !== fakeActCallbackNode\n    )\n  ) {\n    {\n      // If we're going to re-use an existing task, it needs to exist.\n      // Assume that discrete update microtasks are non-cancellable and null.\n      // TODO: Temporary until we confirm this warning is not fired.\n      if (\n        existingCallbackNode == null &&\n        existingCallbackPriority !== SyncLane\n      ) {\n        error(\n          \"Expected scheduled callback to exist. This error is likely caused by a bug in React. Please file an issue.\"\n        );\n      }\n    } // The priority hasn't changed. We can reuse the existing task. Exit.\n\n    return;\n  }\n\n  if (existingCallbackNode != null) {\n    // Cancel the existing callback. We'll schedule a new one below.\n    cancelCallback$1(existingCallbackNode);\n  } // Schedule a new callback.\n\n  var newCallbackNode;\n\n  if (newCallbackPriority === SyncLane) {\n    // Special case: Sync React callbacks are scheduled on a special\n    // internal queue\n    if (root.tag === LegacyRoot) {\n      if (ReactCurrentActQueue$1.isBatchingLegacy !== null) {\n        ReactCurrentActQueue$1.didScheduleLegacyUpdate = true;\n      }\n\n      scheduleLegacySyncCallback(performSyncWorkOnRoot.bind(null, root));\n    } else {\n      scheduleSyncCallback(performSyncWorkOnRoot.bind(null, root));\n    }\n\n    {\n      // Flush the queue in an Immediate task.\n      scheduleCallback$1(ImmediatePriority, flushSyncCallbacks);\n    }\n\n    newCallbackNode = null;\n  } else {\n    var schedulerPriorityLevel;\n\n    switch (lanesToEventPriority(nextLanes)) {\n      case DiscreteEventPriority:\n        schedulerPriorityLevel = ImmediatePriority;\n        break;\n\n      case ContinuousEventPriority:\n        schedulerPriorityLevel = UserBlockingPriority;\n        break;\n\n      case DefaultEventPriority:\n        schedulerPriorityLevel = NormalPriority;\n        break;\n\n      case IdleEventPriority:\n        schedulerPriorityLevel = IdlePriority;\n        break;\n\n      default:\n        schedulerPriorityLevel = NormalPriority;\n        break;\n    }\n\n    newCallbackNode = scheduleCallback$1(\n      schedulerPriorityLevel,\n      performConcurrentWorkOnRoot.bind(null, root)\n    );\n  }\n\n  root.callbackPriority = newCallbackPriority;\n  root.callbackNode = newCallbackNode;\n} // This is the entry point for every concurrent task, i.e. anything that\n// goes through Scheduler.\n\nfunction performConcurrentWorkOnRoot(root, didTimeout) {\n  {\n    resetNestedUpdateFlag();\n  } // Since we know we're in a React event, we can clear the current\n  // event time. The next update will compute a new event time.\n\n  currentEventTime = NoTimestamp;\n  currentEventTransitionLane = NoLanes;\n\n  if ((executionContext & (RenderContext | CommitContext)) !== NoContext) {\n    throw new Error(\"Should not already be working.\");\n  } // Flush any pending passive effects before deciding which lanes to work on,\n  // in case they schedule additional work.\n\n  var originalCallbackNode = root.callbackNode;\n  var didFlushPassiveEffects = flushPassiveEffects();\n\n  if (didFlushPassiveEffects) {\n    // Something in the passive effect phase may have canceled the current task.\n    // Check if the task node for this root was changed.\n    if (root.callbackNode !== originalCallbackNode) {\n      // The current task was canceled. Exit. We don't need to call\n      // `ensureRootIsScheduled` because the check above implies either that\n      // there's a new task, or that there's no remaining work on this root.\n      return null;\n    }\n  } // Determine the next lanes to work on, using the fields stored\n  // on the root.\n\n  var lanes = getNextLanes(\n    root,\n    root === workInProgressRoot ? workInProgressRootRenderLanes : NoLanes\n  );\n\n  if (lanes === NoLanes) {\n    // Defensive coding. This is never expected to happen.\n    return null;\n  } // We disable time-slicing in some cases: if the work has been CPU-bound\n  // for too long (\"expired\" work, to prevent starvation), or we're in\n  // sync-updates-by-default mode.\n  // TODO: We only check `didTimeout` defensively, to account for a Scheduler\n  // bug we're still investigating. Once the bug in Scheduler is fixed,\n  // we can remove this, since we track expiration ourselves.\n\n  var shouldTimeSlice =\n    !includesBlockingLane(root, lanes) &&\n    !includesExpiredLane(root, lanes) &&\n    !didTimeout;\n  var exitStatus = shouldTimeSlice\n    ? renderRootConcurrent(root, lanes)\n    : renderRootSync(root, lanes);\n\n  if (exitStatus !== RootInProgress) {\n    if (exitStatus === RootErrored) {\n      // If something threw an error, try rendering one more time. We'll\n      // render synchronously to block concurrent data mutations, and we'll\n      // includes all pending updates are included. If it still fails after\n      // the second attempt, we'll give up and commit the resulting tree.\n      var errorRetryLanes = getLanesToRetrySynchronouslyOnError(root);\n\n      if (errorRetryLanes !== NoLanes) {\n        lanes = errorRetryLanes;\n        exitStatus = recoverFromConcurrentError(root, errorRetryLanes);\n      }\n    }\n\n    if (exitStatus === RootFatalErrored) {\n      var fatalError = workInProgressRootFatalError;\n      prepareFreshStack(root, NoLanes);\n      markRootSuspended$1(root, lanes);\n      ensureRootIsScheduled(root, now());\n      throw fatalError;\n    }\n\n    if (exitStatus === RootDidNotComplete) {\n      // The render unwound without completing the tree. This happens in special\n      // cases where need to exit the current render without producing a\n      // consistent tree or committing.\n      //\n      // This should only happen during a concurrent render, not a discrete or\n      // synchronous update. We should have already checked for this when we\n      // unwound the stack.\n      markRootSuspended$1(root, lanes);\n    } else {\n      // The render completed.\n      // Check if this render may have yielded to a concurrent event, and if so,\n      // confirm that any newly rendered stores are consistent.\n      // TODO: It's possible that even a concurrent render may never have yielded\n      // to the main thread, if it was fast enough, or if it expired. We could\n      // skip the consistency check in that case, too.\n      var renderWasConcurrent = !includesBlockingLane(root, lanes);\n      var finishedWork = root.current.alternate;\n\n      if (\n        renderWasConcurrent &&\n        !isRenderConsistentWithExternalStores(finishedWork)\n      ) {\n        // A store was mutated in an interleaved event. Render again,\n        // synchronously, to block further mutations.\n        exitStatus = renderRootSync(root, lanes); // We need to check again if something threw\n\n        if (exitStatus === RootErrored) {\n          var _errorRetryLanes = getLanesToRetrySynchronouslyOnError(root);\n\n          if (_errorRetryLanes !== NoLanes) {\n            lanes = _errorRetryLanes;\n            exitStatus = recoverFromConcurrentError(root, _errorRetryLanes); // We assume the tree is now consistent because we didn't yield to any\n            // concurrent events.\n          }\n        }\n\n        if (exitStatus === RootFatalErrored) {\n          var _fatalError = workInProgressRootFatalError;\n          prepareFreshStack(root, NoLanes);\n          markRootSuspended$1(root, lanes);\n          ensureRootIsScheduled(root, now());\n          throw _fatalError;\n        }\n      } // We now have a consistent tree. The next step is either to commit it,\n      // or, if something suspended, wait to commit it after a timeout.\n\n      root.finishedWork = finishedWork;\n      root.finishedLanes = lanes;\n      finishConcurrentRender(root, exitStatus, lanes);\n    }\n  }\n\n  ensureRootIsScheduled(root, now());\n\n  if (root.callbackNode === originalCallbackNode) {\n    // The task node scheduled for this root is the same one that's\n    // currently executed. Need to return a continuation.\n    return performConcurrentWorkOnRoot.bind(null, root);\n  }\n\n  return null;\n}\n\nfunction recoverFromConcurrentError(root, errorRetryLanes) {\n  // If an error occurred during hydration, discard server response and fall\n  // back to client side render.\n  // Before rendering again, save the errors from the previous attempt.\n  var errorsFromFirstAttempt = workInProgressRootConcurrentErrors;\n\n  if (isRootDehydrated(root)) {\n    // The shell failed to hydrate. Set a flag to force a client rendering\n    // during the next attempt. To do this, we call prepareFreshStack now\n    // to create the root work-in-progress fiber. This is a bit weird in terms\n    // of factoring, because it relies on renderRootSync not calling\n    // prepareFreshStack again in the call below, which happens because the\n    // root and lanes haven't changed.\n    //\n    // TODO: I think what we should do is set ForceClientRender inside\n    // throwException, like we do for nested Suspense boundaries. The reason\n    // it's here instead is so we can switch to the synchronous work loop, too.\n    // Something to consider for a future refactor.\n    var rootWorkInProgress = prepareFreshStack(root, errorRetryLanes);\n    rootWorkInProgress.flags |= ForceClientRender;\n\n    {\n      errorHydratingContainer(root.containerInfo);\n    }\n  }\n\n  var exitStatus = renderRootSync(root, errorRetryLanes);\n\n  if (exitStatus !== RootErrored) {\n    // Successfully finished rendering on retry\n    // The errors from the failed first attempt have been recovered. Add\n    // them to the collection of recoverable errors. We'll log them in the\n    // commit phase.\n    var errorsFromSecondAttempt = workInProgressRootRecoverableErrors;\n    workInProgressRootRecoverableErrors = errorsFromFirstAttempt; // The errors from the second attempt should be queued after the errors\n    // from the first attempt, to preserve the causal sequence.\n\n    if (errorsFromSecondAttempt !== null) {\n      queueRecoverableErrors(errorsFromSecondAttempt);\n    }\n  }\n\n  return exitStatus;\n}\n\nfunction queueRecoverableErrors(errors) {\n  if (workInProgressRootRecoverableErrors === null) {\n    workInProgressRootRecoverableErrors = errors;\n  } else {\n    workInProgressRootRecoverableErrors.push.apply(\n      workInProgressRootRecoverableErrors,\n      errors\n    );\n  }\n}\n\nfunction finishConcurrentRender(root, exitStatus, lanes) {\n  switch (exitStatus) {\n    case RootInProgress:\n    case RootFatalErrored: {\n      throw new Error(\"Root did not complete. This is a bug in React.\");\n    }\n    // Flow knows about invariant, so it complains if I add a break\n    // statement, but eslint doesn't know about invariant, so it complains\n    // if I do. eslint-disable-next-line no-fallthrough\n\n    case RootErrored: {\n      // We should have already attempted to retry this tree. If we reached\n      // this point, it errored again. Commit it.\n      commitRoot(\n        root,\n        workInProgressRootRecoverableErrors,\n        workInProgressTransitions\n      );\n      break;\n    }\n\n    case RootSuspended: {\n      markRootSuspended$1(root, lanes); // We have an acceptable loading state. We need to figure out if we\n      // should immediately commit it or wait a bit.\n\n      if (\n        includesOnlyRetries(lanes) && // do not delay if we're inside an act() scope\n        !shouldForceFlushFallbacksInDEV()\n      ) {\n        // This render only included retries, no updates. Throttle committing\n        // retries so that we don't show too many loading states too quickly.\n        var msUntilTimeout =\n          globalMostRecentFallbackTime + FALLBACK_THROTTLE_MS - now(); // Don't bother with a very short suspense time.\n\n        if (msUntilTimeout > 10) {\n          var nextLanes = getNextLanes(root, NoLanes);\n\n          if (nextLanes !== NoLanes) {\n            // There's additional work on this root.\n            break;\n          }\n\n          var suspendedLanes = root.suspendedLanes;\n\n          if (!isSubsetOfLanes(suspendedLanes, lanes)) {\n            // We should prefer to render the fallback of at the last\n            // suspended level. Ping the last suspended level to try\n            // rendering it again.\n            // FIXME: What if the suspended lanes are Idle? Should not restart.\n            var eventTime = requestEventTime();\n            markRootPinged(root, suspendedLanes);\n            break;\n          } // The render is suspended, it hasn't timed out, and there's no\n          // lower priority work to do. Instead of committing the fallback\n          // immediately, wait for more data to arrive.\n\n          root.timeoutHandle = scheduleTimeout(\n            commitRoot.bind(\n              null,\n              root,\n              workInProgressRootRecoverableErrors,\n              workInProgressTransitions\n            ),\n            msUntilTimeout\n          );\n          break;\n        }\n      } // The work expired. Commit immediately.\n\n      commitRoot(\n        root,\n        workInProgressRootRecoverableErrors,\n        workInProgressTransitions\n      );\n      break;\n    }\n\n    case RootSuspendedWithDelay: {\n      markRootSuspended$1(root, lanes);\n\n      if (includesOnlyTransitions(lanes)) {\n        // This is a transition, so we should exit without committing a\n        // placeholder and without scheduling a timeout. Delay indefinitely\n        // until we receive more data.\n        break;\n      }\n\n      if (!shouldForceFlushFallbacksInDEV()) {\n        // This is not a transition, but we did trigger an avoided state.\n        // Schedule a placeholder to display after a short delay, using the Just\n        // Noticeable Difference.\n        // TODO: Is the JND optimization worth the added complexity? If this is\n        // the only reason we track the event time, then probably not.\n        // Consider removing.\n        var mostRecentEventTime = getMostRecentEventTime(root, lanes);\n        var eventTimeMs = mostRecentEventTime;\n        var timeElapsedMs = now() - eventTimeMs;\n\n        var _msUntilTimeout = jnd(timeElapsedMs) - timeElapsedMs; // Don't bother with a very short suspense time.\n\n        if (_msUntilTimeout > 10) {\n          // Instead of committing the fallback immediately, wait for more data\n          // to arrive.\n          root.timeoutHandle = scheduleTimeout(\n            commitRoot.bind(\n              null,\n              root,\n              workInProgressRootRecoverableErrors,\n              workInProgressTransitions\n            ),\n            _msUntilTimeout\n          );\n          break;\n        }\n      } // Commit the placeholder.\n\n      commitRoot(\n        root,\n        workInProgressRootRecoverableErrors,\n        workInProgressTransitions\n      );\n      break;\n    }\n\n    case RootCompleted: {\n      // The work completed. Ready to commit.\n      commitRoot(\n        root,\n        workInProgressRootRecoverableErrors,\n        workInProgressTransitions\n      );\n      break;\n    }\n\n    default: {\n      throw new Error(\"Unknown root exit status.\");\n    }\n  }\n}\n\nfunction isRenderConsistentWithExternalStores(finishedWork) {\n  // Search the rendered tree for external store reads, and check whether the\n  // stores were mutated in a concurrent event. Intentionally using an iterative\n  // loop instead of recursion so we can exit early.\n  var node = finishedWork;\n\n  while (true) {\n    if (node.flags & StoreConsistency) {\n      var updateQueue = node.updateQueue;\n\n      if (updateQueue !== null) {\n        var checks = updateQueue.stores;\n\n        if (checks !== null) {\n          for (var i = 0; i < checks.length; i++) {\n            var check = checks[i];\n            var getSnapshot = check.getSnapshot;\n            var renderedValue = check.value;\n\n            try {\n              if (!objectIs(getSnapshot(), renderedValue)) {\n                // Found an inconsistent store.\n                return false;\n              }\n            } catch (error) {\n              // If `getSnapshot` throws, return `false`. This will schedule\n              // a re-render, and the error will be rethrown during render.\n              return false;\n            }\n          }\n        }\n      }\n    }\n\n    var child = node.child;\n\n    if (node.subtreeFlags & StoreConsistency && child !== null) {\n      child.return = node;\n      node = child;\n      continue;\n    }\n\n    if (node === finishedWork) {\n      return true;\n    }\n\n    while (node.sibling === null) {\n      if (node.return === null || node.return === finishedWork) {\n        return true;\n      }\n\n      node = node.return;\n    }\n\n    node.sibling.return = node.return;\n    node = node.sibling;\n  } // Flow doesn't know this is unreachable, but eslint does\n  // eslint-disable-next-line no-unreachable\n\n  return true;\n}\n\nfunction markRootSuspended$1(root, suspendedLanes) {\n  // When suspending, we should always exclude lanes that were pinged or (more\n  // rarely, since we try to avoid it) updated during the render phase.\n  // TODO: Lol maybe there's a better way to factor this besides this\n  // obnoxiously named function :)\n  suspendedLanes = removeLanes(suspendedLanes, workInProgressRootPingedLanes);\n  suspendedLanes = removeLanes(\n    suspendedLanes,\n    workInProgressRootInterleavedUpdatedLanes\n  );\n  markRootSuspended(root, suspendedLanes);\n} // This is the entry point for synchronous tasks that don't go\n// through Scheduler\n\nfunction performSyncWorkOnRoot(root) {\n  {\n    syncNestedUpdateFlag();\n  }\n\n  if ((executionContext & (RenderContext | CommitContext)) !== NoContext) {\n    throw new Error(\"Should not already be working.\");\n  }\n\n  flushPassiveEffects();\n  var lanes = getNextLanes(root, NoLanes);\n\n  if (!includesSomeLane(lanes, SyncLane)) {\n    // There's no remaining sync work left.\n    ensureRootIsScheduled(root, now());\n    return null;\n  }\n\n  var exitStatus = renderRootSync(root, lanes);\n\n  if (root.tag !== LegacyRoot && exitStatus === RootErrored) {\n    // If something threw an error, try rendering one more time. We'll render\n    // synchronously to block concurrent data mutations, and we'll includes\n    // all pending updates are included. If it still fails after the second\n    // attempt, we'll give up and commit the resulting tree.\n    var errorRetryLanes = getLanesToRetrySynchronouslyOnError(root);\n\n    if (errorRetryLanes !== NoLanes) {\n      lanes = errorRetryLanes;\n      exitStatus = recoverFromConcurrentError(root, errorRetryLanes);\n    }\n  }\n\n  if (exitStatus === RootFatalErrored) {\n    var fatalError = workInProgressRootFatalError;\n    prepareFreshStack(root, NoLanes);\n    markRootSuspended$1(root, lanes);\n    ensureRootIsScheduled(root, now());\n    throw fatalError;\n  }\n\n  if (exitStatus === RootDidNotComplete) {\n    throw new Error(\"Root did not complete. This is a bug in React.\");\n  } // We now have a consistent tree. Because this is a sync render, we\n  // will commit it even if something suspended.\n\n  var finishedWork = root.current.alternate;\n  root.finishedWork = finishedWork;\n  root.finishedLanes = lanes;\n  commitRoot(\n    root,\n    workInProgressRootRecoverableErrors,\n    workInProgressTransitions\n  ); // Before exiting, make sure there's a callback scheduled for the next\n  // pending level.\n\n  ensureRootIsScheduled(root, now());\n  return null;\n}\nfunction batchedUpdates$1(fn, a) {\n  var prevExecutionContext = executionContext;\n  executionContext |= BatchedContext;\n\n  try {\n    return fn(a);\n  } finally {\n    executionContext = prevExecutionContext; // If there were legacy sync updates, flush them at the end of the outer\n    // most batchedUpdates-like method.\n\n    if (\n      executionContext === NoContext && // Treat `act` as if it's inside `batchedUpdates`, even in legacy mode.\n      !ReactCurrentActQueue$1.isBatchingLegacy\n    ) {\n      resetRenderTimer();\n      flushSyncCallbacksOnlyInLegacyMode();\n    }\n  }\n}\n// Warning, this opts-out of checking the function body.\n\n// eslint-disable-next-line no-redeclare\nfunction flushSync(fn) {\n  // In legacy mode, we flush pending passive effects at the beginning of the\n  // next event, not at the end of the previous one.\n  if (\n    rootWithPendingPassiveEffects !== null &&\n    rootWithPendingPassiveEffects.tag === LegacyRoot &&\n    (executionContext & (RenderContext | CommitContext)) === NoContext\n  ) {\n    flushPassiveEffects();\n  }\n\n  var prevExecutionContext = executionContext;\n  executionContext |= BatchedContext;\n  var prevTransition = ReactCurrentBatchConfig$2.transition;\n  var previousPriority = getCurrentUpdatePriority();\n\n  try {\n    ReactCurrentBatchConfig$2.transition = null;\n    setCurrentUpdatePriority(DiscreteEventPriority);\n\n    if (fn) {\n      return fn();\n    } else {\n      return undefined;\n    }\n  } finally {\n    setCurrentUpdatePriority(previousPriority);\n    ReactCurrentBatchConfig$2.transition = prevTransition;\n    executionContext = prevExecutionContext; // Flush the immediate callbacks that were scheduled during this batch.\n    // Note that this will happen even if batchedUpdates is higher up\n    // the stack.\n\n    if ((executionContext & (RenderContext | CommitContext)) === NoContext) {\n      flushSyncCallbacks();\n    }\n  }\n}\nfunction pushRenderLanes(fiber, lanes) {\n  push(subtreeRenderLanesCursor, subtreeRenderLanes, fiber);\n  subtreeRenderLanes = mergeLanes(subtreeRenderLanes, lanes);\n  workInProgressRootIncludedLanes = mergeLanes(\n    workInProgressRootIncludedLanes,\n    lanes\n  );\n}\nfunction popRenderLanes(fiber) {\n  subtreeRenderLanes = subtreeRenderLanesCursor.current;\n  pop(subtreeRenderLanesCursor, fiber);\n}\n\nfunction prepareFreshStack(root, lanes) {\n  root.finishedWork = null;\n  root.finishedLanes = NoLanes;\n  var timeoutHandle = root.timeoutHandle;\n\n  if (timeoutHandle !== noTimeout) {\n    // The root previous suspended and scheduled a timeout to commit a fallback\n    // state. Now that we have additional work, cancel the timeout.\n    root.timeoutHandle = noTimeout; // $FlowFixMe Complains noTimeout is not a TimeoutID, despite the check above\n\n    cancelTimeout(timeoutHandle);\n  }\n\n  if (workInProgress !== null) {\n    var interruptedWork = workInProgress.return;\n\n    while (interruptedWork !== null) {\n      var current = interruptedWork.alternate;\n      unwindInterruptedWork(current, interruptedWork);\n      interruptedWork = interruptedWork.return;\n    }\n  }\n\n  workInProgressRoot = root;\n  var rootWorkInProgress = createWorkInProgress(root.current, null);\n  workInProgress = rootWorkInProgress;\n  workInProgressRootRenderLanes = subtreeRenderLanes = workInProgressRootIncludedLanes = lanes;\n  workInProgressRootExitStatus = RootInProgress;\n  workInProgressRootFatalError = null;\n  workInProgressRootSkippedLanes = NoLanes;\n  workInProgressRootInterleavedUpdatedLanes = NoLanes;\n  workInProgressRootPingedLanes = NoLanes;\n  workInProgressRootConcurrentErrors = null;\n  workInProgressRootRecoverableErrors = null;\n  finishQueueingConcurrentUpdates();\n\n  {\n    ReactStrictModeWarnings.discardPendingWarnings();\n  }\n\n  return rootWorkInProgress;\n}\n\nfunction handleError(root, thrownValue) {\n  do {\n    var erroredWork = workInProgress;\n\n    try {\n      // Reset module-level state that was set during the render phase.\n      resetContextDependencies();\n      resetHooksAfterThrow();\n      resetCurrentFiber(); // TODO: I found and added this missing line while investigating a\n      // separate issue. Write a regression test using string refs.\n\n      ReactCurrentOwner$2.current = null;\n\n      if (erroredWork === null || erroredWork.return === null) {\n        // Expected to be working on a non-root fiber. This is a fatal error\n        // because there's no ancestor that can handle it; the root is\n        // supposed to capture all errors that weren't caught by an error\n        // boundary.\n        workInProgressRootExitStatus = RootFatalErrored;\n        workInProgressRootFatalError = thrownValue; // Set `workInProgress` to null. This represents advancing to the next\n        // sibling, or the parent if there are no siblings. But since the root\n        // has no siblings nor a parent, we set it to null. Usually this is\n        // handled by `completeUnitOfWork` or `unwindWork`, but since we're\n        // intentionally not calling those, we need set it here.\n        // TODO: Consider calling `unwindWork` to pop the contexts.\n\n        workInProgress = null;\n        return;\n      }\n\n      if (enableProfilerTimer && erroredWork.mode & ProfileMode) {\n        // Record the time spent rendering before an error was thrown. This\n        // avoids inaccurate Profiler durations in the case of a\n        // suspended render.\n        stopProfilerTimerIfRunningAndRecordDelta(erroredWork, true);\n      }\n\n      if (enableSchedulingProfiler) {\n        markComponentRenderStopped();\n\n        if (\n          thrownValue !== null &&\n          typeof thrownValue === \"object\" &&\n          typeof thrownValue.then === \"function\"\n        ) {\n          var wakeable = thrownValue;\n          markComponentSuspended(\n            erroredWork,\n            wakeable,\n            workInProgressRootRenderLanes\n          );\n        } else {\n          markComponentErrored(\n            erroredWork,\n            thrownValue,\n            workInProgressRootRenderLanes\n          );\n        }\n      }\n\n      throwException(\n        root,\n        erroredWork.return,\n        erroredWork,\n        thrownValue,\n        workInProgressRootRenderLanes\n      );\n      completeUnitOfWork(erroredWork);\n    } catch (yetAnotherThrownValue) {\n      // Something in the return path also threw.\n      thrownValue = yetAnotherThrownValue;\n\n      if (workInProgress === erroredWork && erroredWork !== null) {\n        // If this boundary has already errored, then we had trouble processing\n        // the error. Bubble it to the next boundary.\n        erroredWork = erroredWork.return;\n        workInProgress = erroredWork;\n      } else {\n        erroredWork = workInProgress;\n      }\n\n      continue;\n    } // Return to the normal work loop.\n\n    return;\n  } while (true);\n}\n\nfunction pushDispatcher() {\n  var prevDispatcher = ReactCurrentDispatcher$2.current;\n  ReactCurrentDispatcher$2.current = ContextOnlyDispatcher;\n\n  if (prevDispatcher === null) {\n    // The React isomorphic package does not include a default dispatcher.\n    // Instead the first renderer will lazily attach one, in order to give\n    // nicer error messages.\n    return ContextOnlyDispatcher;\n  } else {\n    return prevDispatcher;\n  }\n}\n\nfunction popDispatcher(prevDispatcher) {\n  ReactCurrentDispatcher$2.current = prevDispatcher;\n}\n\nfunction markCommitTimeOfFallback() {\n  globalMostRecentFallbackTime = now();\n}\nfunction markSkippedUpdateLanes(lane) {\n  workInProgressRootSkippedLanes = mergeLanes(\n    lane,\n    workInProgressRootSkippedLanes\n  );\n}\nfunction renderDidSuspend() {\n  if (workInProgressRootExitStatus === RootInProgress) {\n    workInProgressRootExitStatus = RootSuspended;\n  }\n}\nfunction renderDidSuspendDelayIfPossible() {\n  if (\n    workInProgressRootExitStatus === RootInProgress ||\n    workInProgressRootExitStatus === RootSuspended ||\n    workInProgressRootExitStatus === RootErrored\n  ) {\n    workInProgressRootExitStatus = RootSuspendedWithDelay;\n  } // Check if there are updates that we skipped tree that might have unblocked\n  // this render.\n\n  if (\n    workInProgressRoot !== null &&\n    (includesNonIdleWork(workInProgressRootSkippedLanes) ||\n      includesNonIdleWork(workInProgressRootInterleavedUpdatedLanes))\n  ) {\n    // Mark the current render as suspended so that we switch to working on\n    // the updates that were skipped. Usually we only suspend at the end of\n    // the render phase.\n    // TODO: We should probably always mark the root as suspended immediately\n    // (inside this function), since by suspending at the end of the render\n    // phase introduces a potential mistake where we suspend lanes that were\n    // pinged or updated while we were rendering.\n    markRootSuspended$1(workInProgressRoot, workInProgressRootRenderLanes);\n  }\n}\nfunction renderDidError(error) {\n  if (workInProgressRootExitStatus !== RootSuspendedWithDelay) {\n    workInProgressRootExitStatus = RootErrored;\n  }\n\n  if (workInProgressRootConcurrentErrors === null) {\n    workInProgressRootConcurrentErrors = [error];\n  } else {\n    workInProgressRootConcurrentErrors.push(error);\n  }\n} // Called during render to determine if anything has suspended.\n// Returns false if we're not sure.\n\nfunction renderHasNotSuspendedYet() {\n  // If something errored or completed, we can't really be sure,\n  // so those are false.\n  return workInProgressRootExitStatus === RootInProgress;\n}\n\nfunction renderRootSync(root, lanes) {\n  var prevExecutionContext = executionContext;\n  executionContext |= RenderContext;\n  var prevDispatcher = pushDispatcher(); // If the root or lanes have changed, throw out the existing stack\n  // and prepare a fresh one. Otherwise we'll continue where we left off.\n\n  if (workInProgressRoot !== root || workInProgressRootRenderLanes !== lanes) {\n    {\n      if (isDevToolsPresent) {\n        var memoizedUpdaters = root.memoizedUpdaters;\n\n        if (memoizedUpdaters.size > 0) {\n          restorePendingUpdaters(root, workInProgressRootRenderLanes);\n          memoizedUpdaters.clear();\n        } // At this point, move Fibers that scheduled the upcoming work from the Map to the Set.\n        // If we bailout on this work, we'll move them back (like above).\n        // It's important to move them now in case the work spawns more work at the same priority with different updaters.\n        // That way we can keep the current update and future updates separate.\n\n        movePendingFibersToMemoized(root, lanes);\n      }\n    }\n\n    workInProgressTransitions = getTransitionsForLanes();\n    prepareFreshStack(root, lanes);\n  }\n\n  do {\n    try {\n      workLoopSync();\n      break;\n    } catch (thrownValue) {\n      handleError(root, thrownValue);\n    }\n  } while (true);\n\n  resetContextDependencies();\n  executionContext = prevExecutionContext;\n  popDispatcher(prevDispatcher);\n\n  if (workInProgress !== null) {\n    // This is a sync render, so we should have finished the whole tree.\n    throw new Error(\n      \"Cannot commit an incomplete root. This error is likely caused by a \" +\n        \"bug in React. Please file an issue.\"\n    );\n  }\n\n  workInProgressRoot = null;\n  workInProgressRootRenderLanes = NoLanes;\n  return workInProgressRootExitStatus;\n} // The work loop is an extremely hot path. Tell Closure not to inline it.\n\n/** @noinline */\n\nfunction workLoopSync() {\n  // Already timed out, so perform work without checking if we need to yield.\n  while (workInProgress !== null) {\n    performUnitOfWork(workInProgress);\n  }\n}\n\nfunction renderRootConcurrent(root, lanes) {\n  var prevExecutionContext = executionContext;\n  executionContext |= RenderContext;\n  var prevDispatcher = pushDispatcher(); // If the root or lanes have changed, throw out the existing stack\n  // and prepare a fresh one. Otherwise we'll continue where we left off.\n\n  if (workInProgressRoot !== root || workInProgressRootRenderLanes !== lanes) {\n    {\n      if (isDevToolsPresent) {\n        var memoizedUpdaters = root.memoizedUpdaters;\n\n        if (memoizedUpdaters.size > 0) {\n          restorePendingUpdaters(root, workInProgressRootRenderLanes);\n          memoizedUpdaters.clear();\n        } // At this point, move Fibers that scheduled the upcoming work from the Map to the Set.\n        // If we bailout on this work, we'll move them back (like above).\n        // It's important to move them now in case the work spawns more work at the same priority with different updaters.\n        // That way we can keep the current update and future updates separate.\n\n        movePendingFibersToMemoized(root, lanes);\n      }\n    }\n\n    workInProgressTransitions = getTransitionsForLanes();\n    resetRenderTimer();\n    prepareFreshStack(root, lanes);\n  }\n\n  do {\n    try {\n      workLoopConcurrent();\n      break;\n    } catch (thrownValue) {\n      handleError(root, thrownValue);\n    }\n  } while (true);\n\n  resetContextDependencies();\n  popDispatcher(prevDispatcher);\n  executionContext = prevExecutionContext;\n\n  if (workInProgress !== null) {\n    return RootInProgress;\n  } else {\n    workInProgressRoot = null;\n    workInProgressRootRenderLanes = NoLanes; // Return the final exit status.\n\n    return workInProgressRootExitStatus;\n  }\n}\n/** @noinline */\n\nfunction workLoopConcurrent() {\n  // Perform work until Scheduler asks us to yield\n  while (workInProgress !== null && !shouldYield()) {\n    performUnitOfWork(workInProgress);\n  }\n}\n\nfunction performUnitOfWork(unitOfWork) {\n  // The current, flushed, state of this fiber is the alternate. Ideally\n  // nothing should rely on this, but relying on it here means that we don't\n  // need an additional field on the work in progress.\n  var current = unitOfWork.alternate;\n  setCurrentFiber(unitOfWork);\n  var next;\n\n  if ((unitOfWork.mode & ProfileMode) !== NoMode) {\n    startProfilerTimer(unitOfWork);\n    next = beginWork$1(current, unitOfWork, subtreeRenderLanes);\n    stopProfilerTimerIfRunningAndRecordDelta(unitOfWork, true);\n  } else {\n    next = beginWork$1(current, unitOfWork, subtreeRenderLanes);\n  }\n\n  resetCurrentFiber();\n  unitOfWork.memoizedProps = unitOfWork.pendingProps;\n\n  if (next === null) {\n    // If this doesn't spawn new work, complete the current work.\n    completeUnitOfWork(unitOfWork);\n  } else {\n    workInProgress = next;\n  }\n\n  ReactCurrentOwner$2.current = null;\n}\n\nfunction completeUnitOfWork(unitOfWork) {\n  // Attempt to complete the current unit of work, then move to the next\n  // sibling. If there are no more siblings, return to the parent fiber.\n  var completedWork = unitOfWork;\n\n  do {\n    // The current, flushed, state of this fiber is the alternate. Ideally\n    // nothing should rely on this, but relying on it here means that we don't\n    // need an additional field on the work in progress.\n    var current = completedWork.alternate;\n    var returnFiber = completedWork.return; // Check if the work completed or if something threw.\n\n    if ((completedWork.flags & Incomplete) === NoFlags) {\n      setCurrentFiber(completedWork);\n      var next = void 0;\n\n      if ((completedWork.mode & ProfileMode) === NoMode) {\n        next = completeWork(current, completedWork, subtreeRenderLanes);\n      } else {\n        startProfilerTimer(completedWork);\n        next = completeWork(current, completedWork, subtreeRenderLanes); // Update render duration assuming we didn't error.\n\n        stopProfilerTimerIfRunningAndRecordDelta(completedWork, false);\n      }\n\n      resetCurrentFiber();\n\n      if (next !== null) {\n        // Completing this fiber spawned new work. Work on that next.\n        workInProgress = next;\n        return;\n      }\n    } else {\n      // This fiber did not complete because something threw. Pop values off\n      // the stack without entering the complete phase. If this is a boundary,\n      // capture values if possible.\n      var _next = unwindWork(current, completedWork); // Because this fiber did not complete, don't reset its lanes.\n\n      if (_next !== null) {\n        // If completing this work spawned new work, do that next. We'll come\n        // back here again.\n        // Since we're restarting, remove anything that is not a host effect\n        // from the effect tag.\n        _next.flags &= HostEffectMask;\n        workInProgress = _next;\n        return;\n      }\n\n      if ((completedWork.mode & ProfileMode) !== NoMode) {\n        // Record the render duration for the fiber that errored.\n        stopProfilerTimerIfRunningAndRecordDelta(completedWork, false); // Include the time spent working on failed children before continuing.\n\n        var actualDuration = completedWork.actualDuration;\n        var child = completedWork.child;\n\n        while (child !== null) {\n          actualDuration += child.actualDuration;\n          child = child.sibling;\n        }\n\n        completedWork.actualDuration = actualDuration;\n      }\n\n      if (returnFiber !== null) {\n        // Mark the parent fiber as incomplete and clear its subtree flags.\n        returnFiber.flags |= Incomplete;\n        returnFiber.subtreeFlags = NoFlags;\n        returnFiber.deletions = null;\n      } else {\n        // We've unwound all the way to the root.\n        workInProgressRootExitStatus = RootDidNotComplete;\n        workInProgress = null;\n        return;\n      }\n    }\n\n    var siblingFiber = completedWork.sibling;\n\n    if (siblingFiber !== null) {\n      // If there is more work to do in this returnFiber, do that next.\n      workInProgress = siblingFiber;\n      return;\n    } // Otherwise, return to the parent\n\n    completedWork = returnFiber; // Update the next thing we're working on in case something throws.\n\n    workInProgress = completedWork;\n  } while (completedWork !== null); // We've reached the root.\n\n  if (workInProgressRootExitStatus === RootInProgress) {\n    workInProgressRootExitStatus = RootCompleted;\n  }\n}\n\nfunction commitRoot(root, recoverableErrors, transitions) {\n  // TODO: This no longer makes any sense. We already wrap the mutation and\n  // layout phases. Should be able to remove.\n  var previousUpdateLanePriority = getCurrentUpdatePriority();\n  var prevTransition = ReactCurrentBatchConfig$2.transition;\n\n  try {\n    ReactCurrentBatchConfig$2.transition = null;\n    setCurrentUpdatePriority(DiscreteEventPriority);\n    commitRootImpl(\n      root,\n      recoverableErrors,\n      transitions,\n      previousUpdateLanePriority\n    );\n  } finally {\n    ReactCurrentBatchConfig$2.transition = prevTransition;\n    setCurrentUpdatePriority(previousUpdateLanePriority);\n  }\n\n  return null;\n}\n\nfunction commitRootImpl(\n  root,\n  recoverableErrors,\n  transitions,\n  renderPriorityLevel\n) {\n  do {\n    // `flushPassiveEffects` will call `flushSyncUpdateQueue` at the end, which\n    // means `flushPassiveEffects` will sometimes result in additional\n    // passive effects. So we need to keep flushing in a loop until there are\n    // no more pending effects.\n    // TODO: Might be better if `flushPassiveEffects` did not automatically\n    // flush synchronous work at the end, to avoid factoring hazards like this.\n    flushPassiveEffects();\n  } while (rootWithPendingPassiveEffects !== null);\n\n  flushRenderPhaseStrictModeWarningsInDEV();\n\n  if ((executionContext & (RenderContext | CommitContext)) !== NoContext) {\n    throw new Error(\"Should not already be working.\");\n  }\n\n  var finishedWork = root.finishedWork;\n  var lanes = root.finishedLanes;\n\n  if (finishedWork === null) {\n    return null;\n  } else {\n    {\n      if (lanes === NoLanes) {\n        error(\n          \"root.finishedLanes should not be empty during a commit. This is a \" +\n            \"bug in React.\"\n        );\n      }\n    }\n  }\n\n  root.finishedWork = null;\n  root.finishedLanes = NoLanes;\n\n  if (finishedWork === root.current) {\n    throw new Error(\n      \"Cannot commit the same tree as before. This error is likely caused by \" +\n        \"a bug in React. Please file an issue.\"\n    );\n  } // commitRoot never returns a continuation; it always finishes synchronously.\n  // So we can clear these now to allow a new callback to be scheduled.\n\n  root.callbackNode = null;\n  root.callbackPriority = NoLane; // Update the first and last pending times on this root. The new first\n  // pending time is whatever is left on the root fiber.\n\n  var remainingLanes = mergeLanes(finishedWork.lanes, finishedWork.childLanes);\n  markRootFinished(root, remainingLanes);\n\n  if (root === workInProgressRoot) {\n    // We can reset these now that they are finished.\n    workInProgressRoot = null;\n    workInProgress = null;\n    workInProgressRootRenderLanes = NoLanes;\n  } // If there are pending passive effects, schedule a callback to process them.\n  // Do this as early as possible, so it is queued before anything else that\n  // might get scheduled in the commit phase. (See #16714.)\n  // TODO: Delete all other places that schedule the passive effect callback\n  // They're redundant.\n\n  if (\n    (finishedWork.subtreeFlags & PassiveMask) !== NoFlags ||\n    (finishedWork.flags & PassiveMask) !== NoFlags\n  ) {\n    if (!rootDoesHavePassiveEffects) {\n      rootDoesHavePassiveEffects = true;\n      // to store it in pendingPassiveTransitions until they get processed\n      // We need to pass this through as an argument to commitRoot\n      // because workInProgressTransitions might have changed between\n      // the previous render and commit if we throttle the commit\n      // with setTimeout\n\n      pendingPassiveTransitions = transitions;\n      scheduleCallback$1(NormalPriority, function() {\n        flushPassiveEffects(); // This render triggered passive effects: release the root cache pool\n        // *after* passive effects fire to avoid freeing a cache pool that may\n        // be referenced by a node in the tree (HostRoot, Cache boundary etc)\n\n        return null;\n      });\n    }\n  } // Check if there are any effects in the whole tree.\n  // TODO: This is left over from the effect list implementation, where we had\n  // to check for the existence of `firstEffect` to satisfy Flow. I think the\n  // only other reason this optimization exists is because it affects profiling.\n  // Reconsider whether this is necessary.\n\n  var subtreeHasEffects =\n    (finishedWork.subtreeFlags &\n      (BeforeMutationMask | MutationMask | LayoutMask | PassiveMask)) !==\n    NoFlags;\n  var rootHasEffect =\n    (finishedWork.flags &\n      (BeforeMutationMask | MutationMask | LayoutMask | PassiveMask)) !==\n    NoFlags;\n\n  if (subtreeHasEffects || rootHasEffect) {\n    var prevTransition = ReactCurrentBatchConfig$2.transition;\n    ReactCurrentBatchConfig$2.transition = null;\n    var previousPriority = getCurrentUpdatePriority();\n    setCurrentUpdatePriority(DiscreteEventPriority);\n    var prevExecutionContext = executionContext;\n    executionContext |= CommitContext; // Reset this to null before calling lifecycles\n\n    ReactCurrentOwner$2.current = null; // The commit phase is broken into several sub-phases. We do a separate pass\n    // of the effect list for each phase: all mutation effects come before all\n    // layout effects, and so on.\n    // The first phase a \"before mutation\" phase. We use this phase to read the\n    // state of the host tree right before we mutate it. This is where\n    // getSnapshotBeforeUpdate is called.\n\n    var shouldFireAfterActiveInstanceBlur = commitBeforeMutationEffects(\n      root,\n      finishedWork\n    );\n\n    {\n      // Mark the current commit time to be shared by all Profilers in this\n      // batch. This enables them to be grouped later.\n      recordCommitTime();\n    }\n\n    commitMutationEffects(root, finishedWork, lanes);\n\n    resetAfterCommit(root.containerInfo); // The work-in-progress tree is now the current tree. This must come after\n    // the mutation phase, so that the previous tree is still current during\n    // componentWillUnmount, but before the layout phase, so that the finished\n    // work is current during componentDidMount/Update.\n\n    root.current = finishedWork; // The next phase is the layout phase, where we call effects that read\n\n    commitLayoutEffects(finishedWork, root, lanes);\n    // opportunity to paint.\n\n    requestPaint();\n    executionContext = prevExecutionContext; // Reset the priority to the previous non-sync value.\n\n    setCurrentUpdatePriority(previousPriority);\n    ReactCurrentBatchConfig$2.transition = prevTransition;\n  } else {\n    // No effects.\n    root.current = finishedWork; // Measure these anyway so the flamegraph explicitly shows that there were\n    // no effects.\n    // TODO: Maybe there's a better way to report this.\n\n    {\n      recordCommitTime();\n    }\n  }\n\n  if (rootDoesHavePassiveEffects) {\n    // This commit has passive effects. Stash a reference to them. But don't\n    // schedule a callback until after flushing layout work.\n    rootDoesHavePassiveEffects = false;\n    rootWithPendingPassiveEffects = root;\n    pendingPassiveEffectsLanes = lanes;\n  } else {\n    {\n      nestedPassiveUpdateCount = 0;\n      rootWithPassiveNestedUpdates = null;\n    }\n  } // Read this again, since an effect might have updated it\n\n  remainingLanes = root.pendingLanes; // Check if there's remaining work on this root\n  // TODO: This is part of the `componentDidCatch` implementation. Its purpose\n  // is to detect whether something might have called setState inside\n  // `componentDidCatch`. The mechanism is known to be flawed because `setState`\n  // inside `componentDidCatch` is itself flawed — that's why we recommend\n  // `getDerivedStateFromError` instead. However, it could be improved by\n  // checking if remainingLanes includes Sync work, instead of whether there's\n  // any work remaining at all (which would also include stuff like Suspense\n  // retries or transitions). It's been like this for a while, though, so fixing\n  // it probably isn't that urgent.\n\n  if (remainingLanes === NoLanes) {\n    // If there's no remaining work, we can clear the set of already failed\n    // error boundaries.\n    legacyErrorBoundariesThatAlreadyFailed = null;\n  }\n\n  onCommitRoot(finishedWork.stateNode, renderPriorityLevel);\n\n  {\n    if (isDevToolsPresent) {\n      root.memoizedUpdaters.clear();\n    }\n  }\n  // additional work on this root is scheduled.\n\n  ensureRootIsScheduled(root, now());\n\n  if (recoverableErrors !== null) {\n    // There were errors during this render, but recovered from them without\n    // needing to surface it to the UI. We log them here.\n    var onRecoverableError = root.onRecoverableError;\n\n    for (var i = 0; i < recoverableErrors.length; i++) {\n      var recoverableError = recoverableErrors[i];\n      var componentStack = recoverableError.stack;\n      var digest = recoverableError.digest;\n      onRecoverableError(recoverableError.value, {\n        componentStack: componentStack,\n        digest: digest\n      });\n    }\n  }\n\n  if (hasUncaughtError) {\n    hasUncaughtError = false;\n    var error$1 = firstUncaughtError;\n    firstUncaughtError = null;\n    throw error$1;\n  } // If the passive effects are the result of a discrete render, flush them\n  // synchronously at the end of the current task so that the result is\n  // immediately observable. Otherwise, we assume that they are not\n  // order-dependent and do not need to be observed by external systems, so we\n  // can wait until after paint.\n  // TODO: We can optimize this by not scheduling the callback earlier. Since we\n  // currently schedule the callback in multiple places, will wait until those\n  // are consolidated.\n\n  if (\n    includesSomeLane(pendingPassiveEffectsLanes, SyncLane) &&\n    root.tag !== LegacyRoot\n  ) {\n    flushPassiveEffects();\n  } // Read this again, since a passive effect might have updated it\n\n  remainingLanes = root.pendingLanes;\n\n  if (includesSomeLane(remainingLanes, SyncLane)) {\n    {\n      markNestedUpdateScheduled();\n    } // Count the number of times the root synchronously re-renders without\n    // finishing. If there are too many, it indicates an infinite update loop.\n\n    if (root === rootWithNestedUpdates) {\n      nestedUpdateCount++;\n    } else {\n      nestedUpdateCount = 0;\n      rootWithNestedUpdates = root;\n    }\n  } else {\n    nestedUpdateCount = 0;\n  } // If layout work was scheduled, flush it now.\n\n  flushSyncCallbacks();\n\n  return null;\n}\n\nfunction flushPassiveEffects() {\n  // Returns whether passive effects were flushed.\n  // TODO: Combine this check with the one in flushPassiveEFfectsImpl. We should\n  // probably just combine the two functions. I believe they were only separate\n  // in the first place because we used to wrap it with\n  // `Scheduler.runWithPriority`, which accepts a function. But now we track the\n  // priority within React itself, so we can mutate the variable directly.\n  if (rootWithPendingPassiveEffects !== null) {\n    var renderPriority = lanesToEventPriority(pendingPassiveEffectsLanes);\n    var priority = lowerEventPriority(DefaultEventPriority, renderPriority);\n    var prevTransition = ReactCurrentBatchConfig$2.transition;\n    var previousPriority = getCurrentUpdatePriority();\n\n    try {\n      ReactCurrentBatchConfig$2.transition = null;\n      setCurrentUpdatePriority(priority);\n      return flushPassiveEffectsImpl();\n    } finally {\n      setCurrentUpdatePriority(previousPriority);\n      ReactCurrentBatchConfig$2.transition = prevTransition; // Once passive effects have run for the tree - giving components a\n    }\n  }\n\n  return false;\n}\nfunction enqueuePendingPassiveProfilerEffect(fiber) {\n  {\n    pendingPassiveProfilerEffects.push(fiber);\n\n    if (!rootDoesHavePassiveEffects) {\n      rootDoesHavePassiveEffects = true;\n      scheduleCallback$1(NormalPriority, function() {\n        flushPassiveEffects();\n        return null;\n      });\n    }\n  }\n}\n\nfunction flushPassiveEffectsImpl() {\n  if (rootWithPendingPassiveEffects === null) {\n    return false;\n  } // Cache and clear the transitions flag\n\n  var transitions = pendingPassiveTransitions;\n  pendingPassiveTransitions = null;\n  var root = rootWithPendingPassiveEffects;\n  var lanes = pendingPassiveEffectsLanes;\n  rootWithPendingPassiveEffects = null; // TODO: This is sometimes out of sync with rootWithPendingPassiveEffects.\n  // Figure out why and fix it. It's not causing any known issues (probably\n  // because it's only used for profiling), but it's a refactor hazard.\n\n  pendingPassiveEffectsLanes = NoLanes;\n\n  if ((executionContext & (RenderContext | CommitContext)) !== NoContext) {\n    throw new Error(\"Cannot flush passive effects while already rendering.\");\n  }\n\n  {\n    isFlushingPassiveEffects = true;\n    didScheduleUpdateDuringPassiveEffects = false;\n  }\n\n  var prevExecutionContext = executionContext;\n  executionContext |= CommitContext;\n  commitPassiveUnmountEffects(root.current);\n  commitPassiveMountEffects(root, root.current, lanes, transitions); // TODO: Move to commitPassiveMountEffects\n\n  {\n    var profilerEffects = pendingPassiveProfilerEffects;\n    pendingPassiveProfilerEffects = [];\n\n    for (var i = 0; i < profilerEffects.length; i++) {\n      var _fiber = profilerEffects[i];\n      commitPassiveEffectDurations(root, _fiber);\n    }\n  }\n\n  executionContext = prevExecutionContext;\n  flushSyncCallbacks();\n\n  {\n    // If additional passive effects were scheduled, increment a counter. If this\n    // exceeds the limit, we'll fire a warning.\n    if (didScheduleUpdateDuringPassiveEffects) {\n      if (root === rootWithPassiveNestedUpdates) {\n        nestedPassiveUpdateCount++;\n      } else {\n        nestedPassiveUpdateCount = 0;\n        rootWithPassiveNestedUpdates = root;\n      }\n    } else {\n      nestedPassiveUpdateCount = 0;\n    }\n\n    isFlushingPassiveEffects = false;\n    didScheduleUpdateDuringPassiveEffects = false;\n  } // TODO: Move to commitPassiveMountEffects\n\n  onPostCommitRoot(root);\n\n  {\n    var stateNode = root.current.stateNode;\n    stateNode.effectDuration = 0;\n    stateNode.passiveEffectDuration = 0;\n  }\n\n  return true;\n}\n\nfunction isAlreadyFailedLegacyErrorBoundary(instance) {\n  return (\n    legacyErrorBoundariesThatAlreadyFailed !== null &&\n    legacyErrorBoundariesThatAlreadyFailed.has(instance)\n  );\n}\nfunction markLegacyErrorBoundaryAsFailed(instance) {\n  if (legacyErrorBoundariesThatAlreadyFailed === null) {\n    legacyErrorBoundariesThatAlreadyFailed = new Set([instance]);\n  } else {\n    legacyErrorBoundariesThatAlreadyFailed.add(instance);\n  }\n}\n\nfunction prepareToThrowUncaughtError(error) {\n  if (!hasUncaughtError) {\n    hasUncaughtError = true;\n    firstUncaughtError = error;\n  }\n}\n\nvar onUncaughtError = prepareToThrowUncaughtError;\n\nfunction captureCommitPhaseErrorOnRoot(rootFiber, sourceFiber, error) {\n  var errorInfo = createCapturedValueAtFiber(error, sourceFiber);\n  var update = createRootErrorUpdate(rootFiber, errorInfo, SyncLane);\n  var root = enqueueUpdate(rootFiber, update, SyncLane);\n  var eventTime = requestEventTime();\n\n  if (root !== null) {\n    markRootUpdated(root, SyncLane, eventTime);\n    ensureRootIsScheduled(root, eventTime);\n  }\n}\n\nfunction captureCommitPhaseError(sourceFiber, nearestMountedAncestor, error$1) {\n  {\n    reportUncaughtErrorInDEV(error$1);\n    setIsRunningInsertionEffect(false);\n  }\n\n  if (sourceFiber.tag === HostRoot) {\n    // Error was thrown at the root. There is no parent, so the root\n    // itself should capture it.\n    captureCommitPhaseErrorOnRoot(sourceFiber, sourceFiber, error$1);\n    return;\n  }\n\n  var fiber = null;\n\n  {\n    fiber = sourceFiber.return;\n  }\n\n  while (fiber !== null) {\n    if (fiber.tag === HostRoot) {\n      captureCommitPhaseErrorOnRoot(fiber, sourceFiber, error$1);\n      return;\n    } else if (fiber.tag === ClassComponent) {\n      var ctor = fiber.type;\n      var instance = fiber.stateNode;\n\n      if (\n        typeof ctor.getDerivedStateFromError === \"function\" ||\n        (typeof instance.componentDidCatch === \"function\" &&\n          !isAlreadyFailedLegacyErrorBoundary(instance))\n      ) {\n        var errorInfo = createCapturedValueAtFiber(error$1, sourceFiber);\n        var update = createClassErrorUpdate(fiber, errorInfo, SyncLane);\n        var root = enqueueUpdate(fiber, update, SyncLane);\n        var eventTime = requestEventTime();\n\n        if (root !== null) {\n          markRootUpdated(root, SyncLane, eventTime);\n          ensureRootIsScheduled(root, eventTime);\n        }\n\n        return;\n      }\n    }\n\n    fiber = fiber.return;\n  }\n\n  {\n    // TODO: Until we re-land skipUnmountedBoundaries (see #20147), this warning\n    // will fire for errors that are thrown by destroy functions inside deleted\n    // trees. What it should instead do is propagate the error to the parent of\n    // the deleted tree. In the meantime, do not add this warning to the\n    // allowlist; this is only for our internal use.\n    error(\n      \"Internal React error: Attempted to capture a commit phase error \" +\n        \"inside a detached tree. This indicates a bug in React. Likely \" +\n        \"causes include deleting the same fiber more than once, committing an \" +\n        \"already-finished tree, or an inconsistent return pointer.\\n\\n\" +\n        \"Error message:\\n\\n%s\",\n      error$1\n    );\n  }\n}\nfunction pingSuspendedRoot(root, wakeable, pingedLanes) {\n  var pingCache = root.pingCache;\n\n  if (pingCache !== null) {\n    // The wakeable resolved, so we no longer need to memoize, because it will\n    // never be thrown again.\n    pingCache.delete(wakeable);\n  }\n\n  var eventTime = requestEventTime();\n  markRootPinged(root, pingedLanes);\n  warnIfSuspenseResolutionNotWrappedWithActDEV(root);\n\n  if (\n    workInProgressRoot === root &&\n    isSubsetOfLanes(workInProgressRootRenderLanes, pingedLanes)\n  ) {\n    // Received a ping at the same priority level at which we're currently\n    // rendering. We might want to restart this render. This should mirror\n    // the logic of whether or not a root suspends once it completes.\n    // TODO: If we're rendering sync either due to Sync, Batched or expired,\n    // we should probably never restart.\n    // If we're suspended with delay, or if it's a retry, we'll always suspend\n    // so we can always restart.\n    if (\n      workInProgressRootExitStatus === RootSuspendedWithDelay ||\n      (workInProgressRootExitStatus === RootSuspended &&\n        includesOnlyRetries(workInProgressRootRenderLanes) &&\n        now() - globalMostRecentFallbackTime < FALLBACK_THROTTLE_MS)\n    ) {\n      // Restart from the root.\n      prepareFreshStack(root, NoLanes);\n    } else {\n      // Even though we can't restart right now, we might get an\n      // opportunity later. So we mark this render as having a ping.\n      workInProgressRootPingedLanes = mergeLanes(\n        workInProgressRootPingedLanes,\n        pingedLanes\n      );\n    }\n  }\n\n  ensureRootIsScheduled(root, eventTime);\n}\n\nfunction retryTimedOutBoundary(boundaryFiber, retryLane) {\n  // The boundary fiber (a Suspense component or SuspenseList component)\n  // previously was rendered in its fallback state. One of the promises that\n  // suspended it has resolved, which means at least part of the tree was\n  // likely unblocked. Try rendering again, at a new lanes.\n  if (retryLane === NoLane) {\n    // TODO: Assign this to `suspenseState.retryLane`? to avoid\n    // unnecessary entanglement?\n    retryLane = requestRetryLane(boundaryFiber);\n  } // TODO: Special case idle priority?\n\n  var eventTime = requestEventTime();\n  var root = enqueueConcurrentRenderForLane(boundaryFiber, retryLane);\n\n  if (root !== null) {\n    markRootUpdated(root, retryLane, eventTime);\n    ensureRootIsScheduled(root, eventTime);\n  }\n}\n\nfunction retryDehydratedSuspenseBoundary(boundaryFiber) {\n  var suspenseState = boundaryFiber.memoizedState;\n  var retryLane = NoLane;\n\n  if (suspenseState !== null) {\n    retryLane = suspenseState.retryLane;\n  }\n\n  retryTimedOutBoundary(boundaryFiber, retryLane);\n}\nfunction resolveRetryWakeable(boundaryFiber, wakeable) {\n  var retryLane = NoLane; // Default\n\n  var retryCache;\n\n  switch (boundaryFiber.tag) {\n    case SuspenseComponent:\n      retryCache = boundaryFiber.stateNode;\n      var suspenseState = boundaryFiber.memoizedState;\n\n      if (suspenseState !== null) {\n        retryLane = suspenseState.retryLane;\n      }\n\n      break;\n\n    case SuspenseListComponent:\n      retryCache = boundaryFiber.stateNode;\n      break;\n\n    default:\n      throw new Error(\n        \"Pinged unknown suspense boundary type. \" +\n          \"This is probably a bug in React.\"\n      );\n  }\n\n  if (retryCache !== null) {\n    // The wakeable resolved, so we no longer need to memoize, because it will\n    // never be thrown again.\n    retryCache.delete(wakeable);\n  }\n\n  retryTimedOutBoundary(boundaryFiber, retryLane);\n} // Computes the next Just Noticeable Difference (JND) boundary.\n// The theory is that a person can't tell the difference between small differences in time.\n// Therefore, if we wait a bit longer than necessary that won't translate to a noticeable\n// difference in the experience. However, waiting for longer might mean that we can avoid\n// showing an intermediate loading state. The longer we have already waited, the harder it\n// is to tell small differences in time. Therefore, the longer we've already waited,\n// the longer we can wait additionally. At some point we have to give up though.\n// We pick a train model where the next boundary commits at a consistent schedule.\n// These particular numbers are vague estimates. We expect to adjust them based on research.\n\nfunction jnd(timeElapsed) {\n  return timeElapsed < 120\n    ? 120\n    : timeElapsed < 480\n    ? 480\n    : timeElapsed < 1080\n    ? 1080\n    : timeElapsed < 1920\n    ? 1920\n    : timeElapsed < 3000\n    ? 3000\n    : timeElapsed < 4320\n    ? 4320\n    : ceil(timeElapsed / 1960) * 1960;\n}\n\nfunction checkForNestedUpdates() {\n  if (nestedUpdateCount > NESTED_UPDATE_LIMIT) {\n    nestedUpdateCount = 0;\n    rootWithNestedUpdates = null;\n    throw new Error(\n      \"Maximum update depth exceeded. This can happen when a component \" +\n        \"repeatedly calls setState inside componentWillUpdate or \" +\n        \"componentDidUpdate. React limits the number of nested updates to \" +\n        \"prevent infinite loops.\"\n    );\n  }\n\n  {\n    if (nestedPassiveUpdateCount > NESTED_PASSIVE_UPDATE_LIMIT) {\n      nestedPassiveUpdateCount = 0;\n      rootWithPassiveNestedUpdates = null;\n\n      error(\n        \"Maximum update depth exceeded. This can happen when a component \" +\n          \"calls setState inside useEffect, but useEffect either doesn't \" +\n          \"have a dependency array, or one of the dependencies changes on \" +\n          \"every render.\"\n      );\n    }\n  }\n}\n\nfunction flushRenderPhaseStrictModeWarningsInDEV() {\n  {\n    ReactStrictModeWarnings.flushLegacyContextWarning();\n\n    {\n      ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings();\n    }\n  }\n}\n\nvar didWarnStateUpdateForNotYetMountedComponent = null;\nfunction warnAboutUpdateOnNotYetMountedFiberInDEV(fiber) {\n  {\n    if ((executionContext & RenderContext) !== NoContext) {\n      // We let the other warning about render phase updates deal with this one.\n      return;\n    }\n\n    if (!(fiber.mode & ConcurrentMode)) {\n      return;\n    }\n\n    var tag = fiber.tag;\n\n    if (\n      tag !== IndeterminateComponent &&\n      tag !== HostRoot &&\n      tag !== ClassComponent &&\n      tag !== FunctionComponent &&\n      tag !== ForwardRef &&\n      tag !== MemoComponent &&\n      tag !== SimpleMemoComponent\n    ) {\n      // Only warn for user-defined components, not internal ones like Suspense.\n      return;\n    } // We show the whole stack but dedupe on the top component's name because\n    // the problematic code almost always lies inside that component.\n\n    var componentName = getComponentNameFromFiber(fiber) || \"ReactComponent\";\n\n    if (didWarnStateUpdateForNotYetMountedComponent !== null) {\n      if (didWarnStateUpdateForNotYetMountedComponent.has(componentName)) {\n        return;\n      }\n\n      didWarnStateUpdateForNotYetMountedComponent.add(componentName);\n    } else {\n      didWarnStateUpdateForNotYetMountedComponent = new Set([componentName]);\n    }\n\n    var previousFiber = current;\n\n    try {\n      setCurrentFiber(fiber);\n\n      error(\n        \"Can't perform a React state update on a component that hasn't mounted yet. \" +\n          \"This indicates that you have a side-effect in your render function that \" +\n          \"asynchronously later calls tries to update the component. Move this work to \" +\n          \"useEffect instead.\"\n      );\n    } finally {\n      if (previousFiber) {\n        setCurrentFiber(fiber);\n      } else {\n        resetCurrentFiber();\n      }\n    }\n  }\n}\nvar beginWork$1;\n\n{\n  var dummyFiber = null;\n\n  beginWork$1 = function(current, unitOfWork, lanes) {\n    // If a component throws an error, we replay it again in a synchronously\n    // dispatched event, so that the debugger will treat it as an uncaught\n    // error See ReactErrorUtils for more information.\n    // Before entering the begin phase, copy the work-in-progress onto a dummy\n    // fiber. If beginWork throws, we'll use this to reset the state.\n    var originalWorkInProgressCopy = assignFiberPropertiesInDEV(\n      dummyFiber,\n      unitOfWork\n    );\n\n    try {\n      return beginWork(current, unitOfWork, lanes);\n    } catch (originalError) {\n      if (\n        didSuspendOrErrorWhileHydratingDEV() ||\n        (originalError !== null &&\n          typeof originalError === \"object\" &&\n          typeof originalError.then === \"function\")\n      ) {\n        // Don't replay promises.\n        // Don't replay errors if we are hydrating and have already suspended or handled an error\n        throw originalError;\n      } // Keep this code in sync with handleError; any changes here must have\n      // corresponding changes there.\n\n      resetContextDependencies();\n      resetHooksAfterThrow(); // Don't reset current debug fiber, since we're about to work on the\n      // same fiber again.\n      // Unwind the failed stack frame\n\n      unwindInterruptedWork(current, unitOfWork); // Restore the original properties of the fiber.\n\n      assignFiberPropertiesInDEV(unitOfWork, originalWorkInProgressCopy);\n\n      if (unitOfWork.mode & ProfileMode) {\n        // Reset the profiler timer.\n        startProfilerTimer(unitOfWork);\n      } // Run beginWork again.\n\n      invokeGuardedCallback(null, beginWork, null, current, unitOfWork, lanes);\n\n      if (hasCaughtError()) {\n        var replayError = clearCaughtError();\n\n        if (\n          typeof replayError === \"object\" &&\n          replayError !== null &&\n          replayError._suppressLogging &&\n          typeof originalError === \"object\" &&\n          originalError !== null &&\n          !originalError._suppressLogging\n        ) {\n          // If suppressed, let the flag carry over to the original error which is the one we'll rethrow.\n          originalError._suppressLogging = true;\n        }\n      } // We always throw the original error in case the second render pass is not idempotent.\n      // This can happen if a memoized function or CommonJS module doesn't throw after first invocation.\n\n      throw originalError;\n    }\n  };\n}\n\nvar didWarnAboutUpdateInRender = false;\nvar didWarnAboutUpdateInRenderForAnotherComponent;\n\n{\n  didWarnAboutUpdateInRenderForAnotherComponent = new Set();\n}\n\nfunction warnAboutRenderPhaseUpdatesInDEV(fiber) {\n  {\n    if (isRendering && !getIsUpdatingOpaqueValueInRenderPhaseInDEV()) {\n      switch (fiber.tag) {\n        case FunctionComponent:\n        case ForwardRef:\n        case SimpleMemoComponent: {\n          var renderingComponentName =\n            (workInProgress && getComponentNameFromFiber(workInProgress)) ||\n            \"Unknown\"; // Dedupe by the rendering component because it's the one that needs to be fixed.\n\n          var dedupeKey = renderingComponentName;\n\n          if (!didWarnAboutUpdateInRenderForAnotherComponent.has(dedupeKey)) {\n            didWarnAboutUpdateInRenderForAnotherComponent.add(dedupeKey);\n            var setStateComponentName =\n              getComponentNameFromFiber(fiber) || \"Unknown\";\n\n            error(\n              \"Cannot update a component (`%s`) while rendering a \" +\n                \"different component (`%s`). To locate the bad setState() call inside `%s`, \" +\n                \"follow the stack trace as described in https://reactjs.org/link/setstate-in-render\",\n              setStateComponentName,\n              renderingComponentName,\n              renderingComponentName\n            );\n          }\n\n          break;\n        }\n\n        case ClassComponent: {\n          if (!didWarnAboutUpdateInRender) {\n            error(\n              \"Cannot update during an existing state transition (such as \" +\n                \"within `render`). Render methods should be a pure \" +\n                \"function of props and state.\"\n            );\n\n            didWarnAboutUpdateInRender = true;\n          }\n\n          break;\n        }\n      }\n    }\n  }\n}\n\nfunction restorePendingUpdaters(root, lanes) {\n  {\n    if (isDevToolsPresent) {\n      var memoizedUpdaters = root.memoizedUpdaters;\n      memoizedUpdaters.forEach(function(schedulingFiber) {\n        addFiberToLanesMap(root, schedulingFiber, lanes);\n      }); // This function intentionally does not clear memoized updaters.\n      // Those may still be relevant to the current commit\n      // and a future one (e.g. Suspense).\n    }\n  }\n}\nvar fakeActCallbackNode = {};\n\nfunction scheduleCallback$1(priorityLevel, callback) {\n  {\n    // If we're currently inside an `act` scope, bypass Scheduler and push to\n    // the `act` queue instead.\n    var actQueue = ReactCurrentActQueue$1.current;\n\n    if (actQueue !== null) {\n      actQueue.push(callback);\n      return fakeActCallbackNode;\n    } else {\n      return scheduleCallback(priorityLevel, callback);\n    }\n  }\n}\n\nfunction cancelCallback$1(callbackNode) {\n  if (callbackNode === fakeActCallbackNode) {\n    return;\n  } // In production, always call Scheduler. This function will be stripped out.\n\n  return cancelCallback(callbackNode);\n}\n\nfunction shouldForceFlushFallbacksInDEV() {\n  // Never force flush in production. This function should get stripped out.\n  return ReactCurrentActQueue$1.current !== null;\n}\n\nfunction warnIfUpdatesNotWrappedWithActDEV(fiber) {\n  {\n    if (fiber.mode & ConcurrentMode) {\n      if (!isConcurrentActEnvironment()) {\n        // Not in an act environment. No need to warn.\n        return;\n      }\n    } else {\n      // Legacy mode has additional cases where we suppress a warning.\n      if (!isLegacyActEnvironment()) {\n        // Not in an act environment. No need to warn.\n        return;\n      }\n\n      if (executionContext !== NoContext) {\n        // Legacy mode doesn't warn if the update is batched, i.e.\n        // batchedUpdates or flushSync.\n        return;\n      }\n\n      if (\n        fiber.tag !== FunctionComponent &&\n        fiber.tag !== ForwardRef &&\n        fiber.tag !== SimpleMemoComponent\n      ) {\n        // For backwards compatibility with pre-hooks code, legacy mode only\n        // warns for updates that originate from a hook.\n        return;\n      }\n    }\n\n    if (ReactCurrentActQueue$1.current === null) {\n      var previousFiber = current;\n\n      try {\n        setCurrentFiber(fiber);\n\n        error(\n          \"An update to %s inside a test was not wrapped in act(...).\\n\\n\" +\n            \"When testing, code that causes React state updates should be \" +\n            \"wrapped into act(...):\\n\\n\" +\n            \"act(() => {\\n\" +\n            \"  /* fire events that update state */\\n\" +\n            \"});\\n\" +\n            \"/* assert on the output */\\n\\n\" +\n            \"This ensures that you're testing the behavior the user would see \" +\n            \"in the browser.\" +\n            \" Learn more at https://reactjs.org/link/wrap-tests-with-act\",\n          getComponentNameFromFiber(fiber)\n        );\n      } finally {\n        if (previousFiber) {\n          setCurrentFiber(fiber);\n        } else {\n          resetCurrentFiber();\n        }\n      }\n    }\n  }\n}\n\nfunction warnIfSuspenseResolutionNotWrappedWithActDEV(root) {\n  {\n    if (\n      root.tag !== LegacyRoot &&\n      isConcurrentActEnvironment() &&\n      ReactCurrentActQueue$1.current === null\n    ) {\n      error(\n        \"A suspended resource finished loading inside a test, but the event \" +\n          \"was not wrapped in act(...).\\n\\n\" +\n          \"When testing, code that resolves suspended data should be wrapped \" +\n          \"into act(...):\\n\\n\" +\n          \"act(() => {\\n\" +\n          \"  /* finish loading suspended data */\\n\" +\n          \"});\\n\" +\n          \"/* assert on the output */\\n\\n\" +\n          \"This ensures that you're testing the behavior the user would see \" +\n          \"in the browser.\" +\n          \" Learn more at https://reactjs.org/link/wrap-tests-with-act\"\n      );\n    }\n  }\n}\n\nfunction setIsRunningInsertionEffect(isRunning) {\n  {\n    isRunningInsertionEffect = isRunning;\n  }\n}\n\n/* eslint-disable react-internal/prod-error-codes */\nvar resolveFamily = null; // $FlowFixMe Flow gets confused by a WeakSet feature check below.\n\nvar failedBoundaries = null;\nvar setRefreshHandler = function(handler) {\n  {\n    resolveFamily = handler;\n  }\n};\nfunction resolveFunctionForHotReloading(type) {\n  {\n    if (resolveFamily === null) {\n      // Hot reloading is disabled.\n      return type;\n    }\n\n    var family = resolveFamily(type);\n\n    if (family === undefined) {\n      return type;\n    } // Use the latest known implementation.\n\n    return family.current;\n  }\n}\nfunction resolveClassForHotReloading(type) {\n  // No implementation differences.\n  return resolveFunctionForHotReloading(type);\n}\nfunction resolveForwardRefForHotReloading(type) {\n  {\n    if (resolveFamily === null) {\n      // Hot reloading is disabled.\n      return type;\n    }\n\n    var family = resolveFamily(type);\n\n    if (family === undefined) {\n      // Check if we're dealing with a real forwardRef. Don't want to crash early.\n      if (\n        type !== null &&\n        type !== undefined &&\n        typeof type.render === \"function\"\n      ) {\n        // ForwardRef is special because its resolved .type is an object,\n        // but it's possible that we only have its inner render function in the map.\n        // If that inner render function is different, we'll build a new forwardRef type.\n        var currentRender = resolveFunctionForHotReloading(type.render);\n\n        if (type.render !== currentRender) {\n          var syntheticType = {\n            $$typeof: REACT_FORWARD_REF_TYPE,\n            render: currentRender\n          };\n\n          if (type.displayName !== undefined) {\n            syntheticType.displayName = type.displayName;\n          }\n\n          return syntheticType;\n        }\n      }\n\n      return type;\n    } // Use the latest known implementation.\n\n    return family.current;\n  }\n}\nfunction isCompatibleFamilyForHotReloading(fiber, element) {\n  {\n    if (resolveFamily === null) {\n      // Hot reloading is disabled.\n      return false;\n    }\n\n    var prevType = fiber.elementType;\n    var nextType = element.type; // If we got here, we know types aren't === equal.\n\n    var needsCompareFamilies = false;\n    var $$typeofNextType =\n      typeof nextType === \"object\" && nextType !== null\n        ? nextType.$$typeof\n        : null;\n\n    switch (fiber.tag) {\n      case ClassComponent: {\n        if (typeof nextType === \"function\") {\n          needsCompareFamilies = true;\n        }\n\n        break;\n      }\n\n      case FunctionComponent: {\n        if (typeof nextType === \"function\") {\n          needsCompareFamilies = true;\n        } else if ($$typeofNextType === REACT_LAZY_TYPE) {\n          // We don't know the inner type yet.\n          // We're going to assume that the lazy inner type is stable,\n          // and so it is sufficient to avoid reconciling it away.\n          // We're not going to unwrap or actually use the new lazy type.\n          needsCompareFamilies = true;\n        }\n\n        break;\n      }\n\n      case ForwardRef: {\n        if ($$typeofNextType === REACT_FORWARD_REF_TYPE) {\n          needsCompareFamilies = true;\n        } else if ($$typeofNextType === REACT_LAZY_TYPE) {\n          needsCompareFamilies = true;\n        }\n\n        break;\n      }\n\n      case MemoComponent:\n      case SimpleMemoComponent: {\n        if ($$typeofNextType === REACT_MEMO_TYPE) {\n          // TODO: if it was but can no longer be simple,\n          // we shouldn't set this.\n          needsCompareFamilies = true;\n        } else if ($$typeofNextType === REACT_LAZY_TYPE) {\n          needsCompareFamilies = true;\n        }\n\n        break;\n      }\n\n      default:\n        return false;\n    } // Check if both types have a family and it's the same one.\n\n    if (needsCompareFamilies) {\n      // Note: memo() and forwardRef() we'll compare outer rather than inner type.\n      // This means both of them need to be registered to preserve state.\n      // If we unwrapped and compared the inner types for wrappers instead,\n      // then we would risk falsely saying two separate memo(Foo)\n      // calls are equivalent because they wrap the same Foo function.\n      var prevFamily = resolveFamily(prevType);\n\n      if (prevFamily !== undefined && prevFamily === resolveFamily(nextType)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n}\nfunction markFailedErrorBoundaryForHotReloading(fiber) {\n  {\n    if (resolveFamily === null) {\n      // Hot reloading is disabled.\n      return;\n    }\n\n    if (typeof WeakSet !== \"function\") {\n      return;\n    }\n\n    if (failedBoundaries === null) {\n      failedBoundaries = new WeakSet();\n    }\n\n    failedBoundaries.add(fiber);\n  }\n}\nvar scheduleRefresh = function(root, update) {\n  {\n    if (resolveFamily === null) {\n      // Hot reloading is disabled.\n      return;\n    }\n\n    var staleFamilies = update.staleFamilies,\n      updatedFamilies = update.updatedFamilies;\n    flushPassiveEffects();\n    flushSync(function() {\n      scheduleFibersWithFamiliesRecursively(\n        root.current,\n        updatedFamilies,\n        staleFamilies\n      );\n    });\n  }\n};\nvar scheduleRoot = function(root, element) {\n  {\n    if (root.context !== emptyContextObject) {\n      // Super edge case: root has a legacy _renderSubtree context\n      // but we don't know the parentComponent so we can't pass it.\n      // Just ignore. We'll delete this with _renderSubtree code path later.\n      return;\n    }\n\n    flushPassiveEffects();\n    flushSync(function() {\n      updateContainer(element, root, null, null);\n    });\n  }\n};\n\nfunction scheduleFibersWithFamiliesRecursively(\n  fiber,\n  updatedFamilies,\n  staleFamilies\n) {\n  {\n    var alternate = fiber.alternate,\n      child = fiber.child,\n      sibling = fiber.sibling,\n      tag = fiber.tag,\n      type = fiber.type;\n    var candidateType = null;\n\n    switch (tag) {\n      case FunctionComponent:\n      case SimpleMemoComponent:\n      case ClassComponent:\n        candidateType = type;\n        break;\n\n      case ForwardRef:\n        candidateType = type.render;\n        break;\n    }\n\n    if (resolveFamily === null) {\n      throw new Error(\"Expected resolveFamily to be set during hot reload.\");\n    }\n\n    var needsRender = false;\n    var needsRemount = false;\n\n    if (candidateType !== null) {\n      var family = resolveFamily(candidateType);\n\n      if (family !== undefined) {\n        if (staleFamilies.has(family)) {\n          needsRemount = true;\n        } else if (updatedFamilies.has(family)) {\n          if (tag === ClassComponent) {\n            needsRemount = true;\n          } else {\n            needsRender = true;\n          }\n        }\n      }\n    }\n\n    if (failedBoundaries !== null) {\n      if (\n        failedBoundaries.has(fiber) ||\n        (alternate !== null && failedBoundaries.has(alternate))\n      ) {\n        needsRemount = true;\n      }\n    }\n\n    if (needsRemount) {\n      fiber._debugNeedsRemount = true;\n    }\n\n    if (needsRemount || needsRender) {\n      var _root = enqueueConcurrentRenderForLane(fiber, SyncLane);\n\n      if (_root !== null) {\n        scheduleUpdateOnFiber(_root, fiber, SyncLane, NoTimestamp);\n      }\n    }\n\n    if (child !== null && !needsRemount) {\n      scheduleFibersWithFamiliesRecursively(\n        child,\n        updatedFamilies,\n        staleFamilies\n      );\n    }\n\n    if (sibling !== null) {\n      scheduleFibersWithFamiliesRecursively(\n        sibling,\n        updatedFamilies,\n        staleFamilies\n      );\n    }\n  }\n}\n\nvar findHostInstancesForRefresh = function(root, families) {\n  {\n    var hostInstances = new Set();\n    var types = new Set(\n      families.map(function(family) {\n        return family.current;\n      })\n    );\n    findHostInstancesForMatchingFibersRecursively(\n      root.current,\n      types,\n      hostInstances\n    );\n    return hostInstances;\n  }\n};\n\nfunction findHostInstancesForMatchingFibersRecursively(\n  fiber,\n  types,\n  hostInstances\n) {\n  {\n    var child = fiber.child,\n      sibling = fiber.sibling,\n      tag = fiber.tag,\n      type = fiber.type;\n    var candidateType = null;\n\n    switch (tag) {\n      case FunctionComponent:\n      case SimpleMemoComponent:\n      case ClassComponent:\n        candidateType = type;\n        break;\n\n      case ForwardRef:\n        candidateType = type.render;\n        break;\n    }\n\n    var didMatch = false;\n\n    if (candidateType !== null) {\n      if (types.has(candidateType)) {\n        didMatch = true;\n      }\n    }\n\n    if (didMatch) {\n      // We have a match. This only drills down to the closest host components.\n      // There's no need to search deeper because for the purpose of giving\n      // visual feedback, \"flashing\" outermost parent rectangles is sufficient.\n      findHostInstancesForFiberShallowly(fiber, hostInstances);\n    } else {\n      // If there's no match, maybe there will be one further down in the child tree.\n      if (child !== null) {\n        findHostInstancesForMatchingFibersRecursively(\n          child,\n          types,\n          hostInstances\n        );\n      }\n    }\n\n    if (sibling !== null) {\n      findHostInstancesForMatchingFibersRecursively(\n        sibling,\n        types,\n        hostInstances\n      );\n    }\n  }\n}\n\nfunction findHostInstancesForFiberShallowly(fiber, hostInstances) {\n  {\n    var foundHostInstances = findChildHostInstancesForFiberShallowly(\n      fiber,\n      hostInstances\n    );\n\n    if (foundHostInstances) {\n      return;\n    } // If we didn't find any host children, fallback to closest host parent.\n\n    var node = fiber;\n\n    while (true) {\n      switch (node.tag) {\n        case HostComponent:\n          hostInstances.add(node.stateNode);\n          return;\n\n        case HostPortal:\n          hostInstances.add(node.stateNode.containerInfo);\n          return;\n\n        case HostRoot:\n          hostInstances.add(node.stateNode.containerInfo);\n          return;\n      }\n\n      if (node.return === null) {\n        throw new Error(\"Expected to reach root first.\");\n      }\n\n      node = node.return;\n    }\n  }\n}\n\nfunction findChildHostInstancesForFiberShallowly(fiber, hostInstances) {\n  {\n    var node = fiber;\n    var foundHostInstances = false;\n\n    while (true) {\n      if (node.tag === HostComponent) {\n        // We got a match.\n        foundHostInstances = true;\n        hostInstances.add(node.stateNode); // There may still be more, so keep searching.\n      } else if (node.child !== null) {\n        node.child.return = node;\n        node = node.child;\n        continue;\n      }\n\n      if (node === fiber) {\n        return foundHostInstances;\n      }\n\n      while (node.sibling === null) {\n        if (node.return === null || node.return === fiber) {\n          return foundHostInstances;\n        }\n\n        node = node.return;\n      }\n\n      node.sibling.return = node.return;\n      node = node.sibling;\n    }\n  }\n\n  return false;\n}\n\nvar hasBadMapPolyfill;\n\n{\n  hasBadMapPolyfill = false;\n\n  try {\n    var nonExtensibleObject = Object.preventExtensions({});\n    /* eslint-disable no-new */\n\n    new Map([[nonExtensibleObject, null]]);\n    new Set([nonExtensibleObject]);\n    /* eslint-enable no-new */\n  } catch (e) {\n    // TODO: Consider warning about bad polyfills\n    hasBadMapPolyfill = true;\n  }\n}\n\nfunction FiberNode(tag, pendingProps, key, mode) {\n  // Instance\n  this.tag = tag;\n  this.key = key;\n  this.elementType = null;\n  this.type = null;\n  this.stateNode = null; // Fiber\n\n  this.return = null;\n  this.child = null;\n  this.sibling = null;\n  this.index = 0;\n  this.ref = null;\n  this.pendingProps = pendingProps;\n  this.memoizedProps = null;\n  this.updateQueue = null;\n  this.memoizedState = null;\n  this.dependencies = null;\n  this.mode = mode; // Effects\n\n  this.flags = NoFlags;\n  this.subtreeFlags = NoFlags;\n  this.deletions = null;\n  this.lanes = NoLanes;\n  this.childLanes = NoLanes;\n  this.alternate = null;\n\n  {\n    // Note: The following is done to avoid a v8 performance cliff.\n    //\n    // Initializing the fields below to smis and later updating them with\n    // double values will cause Fibers to end up having separate shapes.\n    // This behavior/bug has something to do with Object.preventExtension().\n    // Fortunately this only impacts DEV builds.\n    // Unfortunately it makes React unusably slow for some applications.\n    // To work around this, initialize the fields below with doubles.\n    //\n    // Learn more about this here:\n    // https://github.com/facebook/react/issues/14365\n    // https://bugs.chromium.org/p/v8/issues/detail?id=8538\n    this.actualDuration = Number.NaN;\n    this.actualStartTime = Number.NaN;\n    this.selfBaseDuration = Number.NaN;\n    this.treeBaseDuration = Number.NaN; // It's okay to replace the initial doubles with smis after initialization.\n    // This won't trigger the performance cliff mentioned above,\n    // and it simplifies other profiler code (including DevTools).\n\n    this.actualDuration = 0;\n    this.actualStartTime = -1;\n    this.selfBaseDuration = 0;\n    this.treeBaseDuration = 0;\n  }\n\n  {\n    // This isn't directly used but is handy for debugging internals:\n    this._debugSource = null;\n    this._debugOwner = null;\n    this._debugNeedsRemount = false;\n    this._debugHookTypes = null;\n\n    if (!hasBadMapPolyfill && typeof Object.preventExtensions === \"function\") {\n      Object.preventExtensions(this);\n    }\n  }\n} // This is a constructor function, rather than a POJO constructor, still\n// please ensure we do the following:\n// 1) Nobody should add any instance methods on this. Instance methods can be\n//    more difficult to predict when they get optimized and they are almost\n//    never inlined properly in static compilers.\n// 2) Nobody should rely on `instanceof Fiber` for type testing. We should\n//    always know when it is a fiber.\n// 3) We might want to experiment with using numeric keys since they are easier\n//    to optimize in a non-JIT environment.\n// 4) We can easily go from a constructor to a createFiber object literal if that\n//    is faster.\n// 5) It should be easy to port this to a C struct and keep a C implementation\n//    compatible.\n\nvar createFiber = function(tag, pendingProps, key, mode) {\n  // $FlowFixMe: the shapes are exact here but Flow doesn't like constructors\n  return new FiberNode(tag, pendingProps, key, mode);\n};\n\nfunction shouldConstruct(Component) {\n  var prototype = Component.prototype;\n  return !!(prototype && prototype.isReactComponent);\n}\n\nfunction isSimpleFunctionComponent(type) {\n  return (\n    typeof type === \"function\" &&\n    !shouldConstruct(type) &&\n    type.defaultProps === undefined\n  );\n}\nfunction resolveLazyComponentTag(Component) {\n  if (typeof Component === \"function\") {\n    return shouldConstruct(Component) ? ClassComponent : FunctionComponent;\n  } else if (Component !== undefined && Component !== null) {\n    var $$typeof = Component.$$typeof;\n\n    if ($$typeof === REACT_FORWARD_REF_TYPE) {\n      return ForwardRef;\n    }\n\n    if ($$typeof === REACT_MEMO_TYPE) {\n      return MemoComponent;\n    }\n  }\n\n  return IndeterminateComponent;\n} // This is used to create an alternate fiber to do work on.\n\nfunction createWorkInProgress(current, pendingProps) {\n  var workInProgress = current.alternate;\n\n  if (workInProgress === null) {\n    // We use a double buffering pooling technique because we know that we'll\n    // only ever need at most two versions of a tree. We pool the \"other\" unused\n    // node that we're free to reuse. This is lazily created to avoid allocating\n    // extra objects for things that are never updated. It also allow us to\n    // reclaim the extra memory if needed.\n    workInProgress = createFiber(\n      current.tag,\n      pendingProps,\n      current.key,\n      current.mode\n    );\n    workInProgress.elementType = current.elementType;\n    workInProgress.type = current.type;\n    workInProgress.stateNode = current.stateNode;\n\n    {\n      // DEV-only fields\n      workInProgress._debugSource = current._debugSource;\n      workInProgress._debugOwner = current._debugOwner;\n      workInProgress._debugHookTypes = current._debugHookTypes;\n    }\n\n    workInProgress.alternate = current;\n    current.alternate = workInProgress;\n  } else {\n    workInProgress.pendingProps = pendingProps; // Needed because Blocks store data on type.\n\n    workInProgress.type = current.type; // We already have an alternate.\n    // Reset the effect tag.\n\n    workInProgress.flags = NoFlags; // The effects are no longer valid.\n\n    workInProgress.subtreeFlags = NoFlags;\n    workInProgress.deletions = null;\n\n    {\n      // We intentionally reset, rather than copy, actualDuration & actualStartTime.\n      // This prevents time from endlessly accumulating in new commits.\n      // This has the downside of resetting values for different priority renders,\n      // But works for yielding (the common case) and should support resuming.\n      workInProgress.actualDuration = 0;\n      workInProgress.actualStartTime = -1;\n    }\n  } // Reset all effects except static ones.\n  // Static effects are not specific to a render.\n\n  workInProgress.flags = current.flags & StaticMask;\n  workInProgress.childLanes = current.childLanes;\n  workInProgress.lanes = current.lanes;\n  workInProgress.child = current.child;\n  workInProgress.memoizedProps = current.memoizedProps;\n  workInProgress.memoizedState = current.memoizedState;\n  workInProgress.updateQueue = current.updateQueue; // Clone the dependencies object. This is mutated during the render phase, so\n  // it cannot be shared with the current fiber.\n\n  var currentDependencies = current.dependencies;\n  workInProgress.dependencies =\n    currentDependencies === null\n      ? null\n      : {\n          lanes: currentDependencies.lanes,\n          firstContext: currentDependencies.firstContext\n        }; // These will be overridden during the parent's reconciliation\n\n  workInProgress.sibling = current.sibling;\n  workInProgress.index = current.index;\n  workInProgress.ref = current.ref;\n\n  {\n    workInProgress.selfBaseDuration = current.selfBaseDuration;\n    workInProgress.treeBaseDuration = current.treeBaseDuration;\n  }\n\n  {\n    workInProgress._debugNeedsRemount = current._debugNeedsRemount;\n\n    switch (workInProgress.tag) {\n      case IndeterminateComponent:\n      case FunctionComponent:\n      case SimpleMemoComponent:\n        workInProgress.type = resolveFunctionForHotReloading(current.type);\n        break;\n\n      case ClassComponent:\n        workInProgress.type = resolveClassForHotReloading(current.type);\n        break;\n\n      case ForwardRef:\n        workInProgress.type = resolveForwardRefForHotReloading(current.type);\n        break;\n    }\n  }\n\n  return workInProgress;\n} // Used to reuse a Fiber for a second pass.\n\nfunction resetWorkInProgress(workInProgress, renderLanes) {\n  // This resets the Fiber to what createFiber or createWorkInProgress would\n  // have set the values to before during the first pass. Ideally this wouldn't\n  // be necessary but unfortunately many code paths reads from the workInProgress\n  // when they should be reading from current and writing to workInProgress.\n  // We assume pendingProps, index, key, ref, return are still untouched to\n  // avoid doing another reconciliation.\n  // Reset the effect flags but keep any Placement tags, since that's something\n  // that child fiber is setting, not the reconciliation.\n  workInProgress.flags &= StaticMask | Placement; // The effects are no longer valid.\n\n  var current = workInProgress.alternate;\n\n  if (current === null) {\n    // Reset to createFiber's initial values.\n    workInProgress.childLanes = NoLanes;\n    workInProgress.lanes = renderLanes;\n    workInProgress.child = null;\n    workInProgress.subtreeFlags = NoFlags;\n    workInProgress.memoizedProps = null;\n    workInProgress.memoizedState = null;\n    workInProgress.updateQueue = null;\n    workInProgress.dependencies = null;\n    workInProgress.stateNode = null;\n\n    {\n      // Note: We don't reset the actualTime counts. It's useful to accumulate\n      // actual time across multiple render passes.\n      workInProgress.selfBaseDuration = 0;\n      workInProgress.treeBaseDuration = 0;\n    }\n  } else {\n    // Reset to the cloned values that createWorkInProgress would've.\n    workInProgress.childLanes = current.childLanes;\n    workInProgress.lanes = current.lanes;\n    workInProgress.child = current.child;\n    workInProgress.subtreeFlags = NoFlags;\n    workInProgress.deletions = null;\n    workInProgress.memoizedProps = current.memoizedProps;\n    workInProgress.memoizedState = current.memoizedState;\n    workInProgress.updateQueue = current.updateQueue; // Needed because Blocks store data on type.\n\n    workInProgress.type = current.type; // Clone the dependencies object. This is mutated during the render phase, so\n    // it cannot be shared with the current fiber.\n\n    var currentDependencies = current.dependencies;\n    workInProgress.dependencies =\n      currentDependencies === null\n        ? null\n        : {\n            lanes: currentDependencies.lanes,\n            firstContext: currentDependencies.firstContext\n          };\n\n    {\n      // Note: We don't reset the actualTime counts. It's useful to accumulate\n      // actual time across multiple render passes.\n      workInProgress.selfBaseDuration = current.selfBaseDuration;\n      workInProgress.treeBaseDuration = current.treeBaseDuration;\n    }\n  }\n\n  return workInProgress;\n}\nfunction createHostRootFiber(\n  tag,\n  isStrictMode,\n  concurrentUpdatesByDefaultOverride\n) {\n  var mode;\n\n  if (tag === ConcurrentRoot) {\n    mode = ConcurrentMode;\n\n    if (isStrictMode === true) {\n      mode |= StrictLegacyMode;\n    }\n  } else {\n    mode = NoMode;\n  }\n\n  if (isDevToolsPresent) {\n    // Always collect profile timings when DevTools are present.\n    // This enables DevTools to start capturing timing at any point–\n    // Without some nodes in the tree having empty base times.\n    mode |= ProfileMode;\n  }\n\n  return createFiber(HostRoot, null, null, mode);\n}\nfunction createFiberFromTypeAndProps(\n  type, // React$ElementType\n  key,\n  pendingProps,\n  owner,\n  mode,\n  lanes\n) {\n  var fiberTag = IndeterminateComponent; // The resolved type is set if we know what the final type will be. I.e. it's not lazy.\n\n  var resolvedType = type;\n\n  if (typeof type === \"function\") {\n    if (shouldConstruct(type)) {\n      fiberTag = ClassComponent;\n\n      {\n        resolvedType = resolveClassForHotReloading(resolvedType);\n      }\n    } else {\n      {\n        resolvedType = resolveFunctionForHotReloading(resolvedType);\n      }\n    }\n  } else if (typeof type === \"string\") {\n    fiberTag = HostComponent;\n  } else {\n    getTag: switch (type) {\n      case REACT_FRAGMENT_TYPE:\n        return createFiberFromFragment(pendingProps.children, mode, lanes, key);\n\n      case REACT_STRICT_MODE_TYPE:\n        fiberTag = Mode;\n        mode |= StrictLegacyMode;\n\n        break;\n\n      case REACT_PROFILER_TYPE:\n        return createFiberFromProfiler(pendingProps, mode, lanes, key);\n\n      case REACT_SUSPENSE_TYPE:\n        return createFiberFromSuspense(pendingProps, mode, lanes, key);\n\n      case REACT_SUSPENSE_LIST_TYPE:\n        return createFiberFromSuspenseList(pendingProps, mode, lanes, key);\n\n      case REACT_OFFSCREEN_TYPE:\n        return createFiberFromOffscreen(pendingProps, mode, lanes, key);\n\n      case REACT_LEGACY_HIDDEN_TYPE:\n\n      // eslint-disable-next-line no-fallthrough\n\n      case REACT_SCOPE_TYPE:\n\n      // eslint-disable-next-line no-fallthrough\n\n      case REACT_CACHE_TYPE:\n\n      // eslint-disable-next-line no-fallthrough\n\n      case REACT_TRACING_MARKER_TYPE:\n\n      // eslint-disable-next-line no-fallthrough\n\n      case REACT_DEBUG_TRACING_MODE_TYPE:\n\n      // eslint-disable-next-line no-fallthrough\n\n      default: {\n        if (typeof type === \"object\" && type !== null) {\n          switch (type.$$typeof) {\n            case REACT_PROVIDER_TYPE:\n              fiberTag = ContextProvider;\n              break getTag;\n\n            case REACT_CONTEXT_TYPE:\n              // This is a consumer\n              fiberTag = ContextConsumer;\n              break getTag;\n\n            case REACT_FORWARD_REF_TYPE:\n              fiberTag = ForwardRef;\n\n              {\n                resolvedType = resolveForwardRefForHotReloading(resolvedType);\n              }\n\n              break getTag;\n\n            case REACT_MEMO_TYPE:\n              fiberTag = MemoComponent;\n              break getTag;\n\n            case REACT_LAZY_TYPE:\n              fiberTag = LazyComponent;\n              resolvedType = null;\n              break getTag;\n          }\n        }\n\n        var info = \"\";\n\n        {\n          if (\n            type === undefined ||\n            (typeof type === \"object\" &&\n              type !== null &&\n              Object.keys(type).length === 0)\n          ) {\n            info +=\n              \" You likely forgot to export your component from the file \" +\n              \"it's defined in, or you might have mixed up default and \" +\n              \"named imports.\";\n          }\n\n          var ownerName = owner ? getComponentNameFromFiber(owner) : null;\n\n          if (ownerName) {\n            info += \"\\n\\nCheck the render method of `\" + ownerName + \"`.\";\n          }\n        }\n\n        throw new Error(\n          \"Element type is invalid: expected a string (for built-in \" +\n            \"components) or a class/function (for composite components) \" +\n            (\"but got: \" + (type == null ? type : typeof type) + \".\" + info)\n        );\n      }\n    }\n  }\n\n  var fiber = createFiber(fiberTag, pendingProps, key, mode);\n  fiber.elementType = type;\n  fiber.type = resolvedType;\n  fiber.lanes = lanes;\n\n  {\n    fiber._debugOwner = owner;\n  }\n\n  return fiber;\n}\nfunction createFiberFromElement(element, mode, lanes) {\n  var owner = null;\n\n  {\n    owner = element._owner;\n  }\n\n  var type = element.type;\n  var key = element.key;\n  var pendingProps = element.props;\n  var fiber = createFiberFromTypeAndProps(\n    type,\n    key,\n    pendingProps,\n    owner,\n    mode,\n    lanes\n  );\n\n  {\n    fiber._debugSource = element._source;\n    fiber._debugOwner = element._owner;\n  }\n\n  return fiber;\n}\nfunction createFiberFromFragment(elements, mode, lanes, key) {\n  var fiber = createFiber(Fragment, elements, key, mode);\n  fiber.lanes = lanes;\n  return fiber;\n}\n\nfunction createFiberFromProfiler(pendingProps, mode, lanes, key) {\n  {\n    if (typeof pendingProps.id !== \"string\") {\n      error(\n        'Profiler must specify an \"id\" of type `string` as a prop. Received the type `%s` instead.',\n        typeof pendingProps.id\n      );\n    }\n  }\n\n  var fiber = createFiber(Profiler, pendingProps, key, mode | ProfileMode);\n  fiber.elementType = REACT_PROFILER_TYPE;\n  fiber.lanes = lanes;\n\n  {\n    fiber.stateNode = {\n      effectDuration: 0,\n      passiveEffectDuration: 0\n    };\n  }\n\n  return fiber;\n}\n\nfunction createFiberFromSuspense(pendingProps, mode, lanes, key) {\n  var fiber = createFiber(SuspenseComponent, pendingProps, key, mode);\n  fiber.elementType = REACT_SUSPENSE_TYPE;\n  fiber.lanes = lanes;\n  return fiber;\n}\nfunction createFiberFromSuspenseList(pendingProps, mode, lanes, key) {\n  var fiber = createFiber(SuspenseListComponent, pendingProps, key, mode);\n  fiber.elementType = REACT_SUSPENSE_LIST_TYPE;\n  fiber.lanes = lanes;\n  return fiber;\n}\nfunction createFiberFromOffscreen(pendingProps, mode, lanes, key) {\n  var fiber = createFiber(OffscreenComponent, pendingProps, key, mode);\n  fiber.elementType = REACT_OFFSCREEN_TYPE;\n  fiber.lanes = lanes;\n  var primaryChildInstance = {\n    isHidden: false\n  };\n  fiber.stateNode = primaryChildInstance;\n  return fiber;\n}\nfunction createFiberFromText(content, mode, lanes) {\n  var fiber = createFiber(HostText, content, null, mode);\n  fiber.lanes = lanes;\n  return fiber;\n}\nfunction createFiberFromPortal(portal, mode, lanes) {\n  var pendingProps = portal.children !== null ? portal.children : [];\n  var fiber = createFiber(HostPortal, pendingProps, portal.key, mode);\n  fiber.lanes = lanes;\n  fiber.stateNode = {\n    containerInfo: portal.containerInfo,\n    pendingChildren: null,\n    // Used by persistent updates\n    implementation: portal.implementation\n  };\n  return fiber;\n} // Used for stashing WIP properties to replay failed work in DEV.\n\nfunction assignFiberPropertiesInDEV(target, source) {\n  if (target === null) {\n    // This Fiber's initial properties will always be overwritten.\n    // We only use a Fiber to ensure the same hidden class so DEV isn't slow.\n    target = createFiber(IndeterminateComponent, null, null, NoMode);\n  } // This is intentionally written as a list of all properties.\n  // We tried to use Object.assign() instead but this is called in\n  // the hottest path, and Object.assign() was too slow:\n  // https://github.com/facebook/react/issues/12502\n  // This code is DEV-only so size is not a concern.\n\n  target.tag = source.tag;\n  target.key = source.key;\n  target.elementType = source.elementType;\n  target.type = source.type;\n  target.stateNode = source.stateNode;\n  target.return = source.return;\n  target.child = source.child;\n  target.sibling = source.sibling;\n  target.index = source.index;\n  target.ref = source.ref;\n  target.pendingProps = source.pendingProps;\n  target.memoizedProps = source.memoizedProps;\n  target.updateQueue = source.updateQueue;\n  target.memoizedState = source.memoizedState;\n  target.dependencies = source.dependencies;\n  target.mode = source.mode;\n  target.flags = source.flags;\n  target.subtreeFlags = source.subtreeFlags;\n  target.deletions = source.deletions;\n  target.lanes = source.lanes;\n  target.childLanes = source.childLanes;\n  target.alternate = source.alternate;\n\n  {\n    target.actualDuration = source.actualDuration;\n    target.actualStartTime = source.actualStartTime;\n    target.selfBaseDuration = source.selfBaseDuration;\n    target.treeBaseDuration = source.treeBaseDuration;\n  }\n\n  target._debugSource = source._debugSource;\n  target._debugOwner = source._debugOwner;\n  target._debugNeedsRemount = source._debugNeedsRemount;\n  target._debugHookTypes = source._debugHookTypes;\n  return target;\n}\n\nfunction FiberRootNode(\n  containerInfo,\n  tag,\n  hydrate,\n  identifierPrefix,\n  onRecoverableError\n) {\n  this.tag = tag;\n  this.containerInfo = containerInfo;\n  this.pendingChildren = null;\n  this.current = null;\n  this.pingCache = null;\n  this.finishedWork = null;\n  this.timeoutHandle = noTimeout;\n  this.context = null;\n  this.pendingContext = null;\n  this.callbackNode = null;\n  this.callbackPriority = NoLane;\n  this.eventTimes = createLaneMap(NoLanes);\n  this.expirationTimes = createLaneMap(NoTimestamp);\n  this.pendingLanes = NoLanes;\n  this.suspendedLanes = NoLanes;\n  this.pingedLanes = NoLanes;\n  this.expiredLanes = NoLanes;\n  this.mutableReadLanes = NoLanes;\n  this.finishedLanes = NoLanes;\n  this.entangledLanes = NoLanes;\n  this.entanglements = createLaneMap(NoLanes);\n  this.identifierPrefix = identifierPrefix;\n  this.onRecoverableError = onRecoverableError;\n\n  {\n    this.effectDuration = 0;\n    this.passiveEffectDuration = 0;\n  }\n\n  {\n    this.memoizedUpdaters = new Set();\n    var pendingUpdatersLaneMap = (this.pendingUpdatersLaneMap = []);\n\n    for (var _i = 0; _i < TotalLanes; _i++) {\n      pendingUpdatersLaneMap.push(new Set());\n    }\n  }\n\n  {\n    switch (tag) {\n      case ConcurrentRoot:\n        this._debugRootType = hydrate ? \"hydrateRoot()\" : \"createRoot()\";\n        break;\n\n      case LegacyRoot:\n        this._debugRootType = hydrate ? \"hydrate()\" : \"render()\";\n        break;\n    }\n  }\n}\n\nfunction createFiberRoot(\n  containerInfo,\n  tag,\n  hydrate,\n  initialChildren,\n  hydrationCallbacks,\n  isStrictMode,\n  concurrentUpdatesByDefaultOverride, // TODO: We have several of these arguments that are conceptually part of the\n  // host config, but because they are passed in at runtime, we have to thread\n  // them through the root constructor. Perhaps we should put them all into a\n  // single type, like a DynamicHostConfig that is defined by the renderer.\n  identifierPrefix,\n  onRecoverableError,\n  transitionCallbacks\n) {\n  var root = new FiberRootNode(\n    containerInfo,\n    tag,\n    hydrate,\n    identifierPrefix,\n    onRecoverableError\n  );\n  // stateNode is any.\n\n  var uninitializedFiber = createHostRootFiber(tag, isStrictMode);\n  root.current = uninitializedFiber;\n  uninitializedFiber.stateNode = root;\n\n  {\n    var _initialState = {\n      element: initialChildren,\n      isDehydrated: hydrate,\n      cache: null,\n      // not enabled yet\n      transitions: null,\n      pendingSuspenseBoundaries: null\n    };\n    uninitializedFiber.memoizedState = _initialState;\n  }\n\n  initializeUpdateQueue(uninitializedFiber);\n  return root;\n}\n\nvar ReactVersion = \"18.2.0-next-9e3b772b8-20220608\";\n\nfunction createPortal(\n  children,\n  containerInfo, // TODO: figure out the API for cross-renderer implementation.\n  implementation\n) {\n  var key =\n    arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n\n  {\n    checkKeyStringCoercion(key);\n  }\n\n  return {\n    // This tag allow us to uniquely identify this as a React Portal\n    $$typeof: REACT_PORTAL_TYPE,\n    key: key == null ? null : \"\" + key,\n    children: children,\n    containerInfo: containerInfo,\n    implementation: implementation\n  };\n}\n\nvar didWarnAboutNestedUpdates;\nvar didWarnAboutFindNodeInStrictMode;\n\n{\n  didWarnAboutNestedUpdates = false;\n  didWarnAboutFindNodeInStrictMode = {};\n}\n\nfunction getContextForSubtree(parentComponent) {\n  if (!parentComponent) {\n    return emptyContextObject;\n  }\n\n  var fiber = get(parentComponent);\n  var parentContext = findCurrentUnmaskedContext(fiber);\n\n  if (fiber.tag === ClassComponent) {\n    var Component = fiber.type;\n\n    if (isContextProvider(Component)) {\n      return processChildContext(fiber, Component, parentContext);\n    }\n  }\n\n  return parentContext;\n}\n\nfunction findHostInstanceWithWarning(component, methodName) {\n  {\n    var fiber = get(component);\n\n    if (fiber === undefined) {\n      if (typeof component.render === \"function\") {\n        throw new Error(\"Unable to find node on an unmounted component.\");\n      } else {\n        var keys = Object.keys(component).join(\",\");\n        throw new Error(\n          \"Argument appears to not be a ReactComponent. Keys: \" + keys\n        );\n      }\n    }\n\n    var hostFiber = findCurrentHostFiber(fiber);\n\n    if (hostFiber === null) {\n      return null;\n    }\n\n    if (hostFiber.mode & StrictLegacyMode) {\n      var componentName = getComponentNameFromFiber(fiber) || \"Component\";\n\n      if (!didWarnAboutFindNodeInStrictMode[componentName]) {\n        didWarnAboutFindNodeInStrictMode[componentName] = true;\n        var previousFiber = current;\n\n        try {\n          setCurrentFiber(hostFiber);\n\n          if (fiber.mode & StrictLegacyMode) {\n            error(\n              \"%s is deprecated in StrictMode. \" +\n                \"%s was passed an instance of %s which is inside StrictMode. \" +\n                \"Instead, add a ref directly to the element you want to reference. \" +\n                \"Learn more about using refs safely here: \" +\n                \"https://reactjs.org/link/strict-mode-find-node\",\n              methodName,\n              methodName,\n              componentName\n            );\n          } else {\n            error(\n              \"%s is deprecated in StrictMode. \" +\n                \"%s was passed an instance of %s which renders StrictMode children. \" +\n                \"Instead, add a ref directly to the element you want to reference. \" +\n                \"Learn more about using refs safely here: \" +\n                \"https://reactjs.org/link/strict-mode-find-node\",\n              methodName,\n              methodName,\n              componentName\n            );\n          }\n        } finally {\n          // Ideally this should reset to previous but this shouldn't be called in\n          // render and there's another warning for that anyway.\n          if (previousFiber) {\n            setCurrentFiber(previousFiber);\n          } else {\n            resetCurrentFiber();\n          }\n        }\n      }\n    }\n\n    return hostFiber.stateNode;\n  }\n}\n\nfunction createContainer(\n  containerInfo,\n  tag,\n  hydrationCallbacks,\n  isStrictMode,\n  concurrentUpdatesByDefaultOverride,\n  identifierPrefix,\n  onRecoverableError,\n  transitionCallbacks\n) {\n  var hydrate = false;\n  var initialChildren = null;\n  return createFiberRoot(\n    containerInfo,\n    tag,\n    hydrate,\n    initialChildren,\n    hydrationCallbacks,\n    isStrictMode,\n    concurrentUpdatesByDefaultOverride,\n    identifierPrefix,\n    onRecoverableError\n  );\n}\nfunction updateContainer(element, container, parentComponent, callback) {\n  {\n    onScheduleRoot(container, element);\n  }\n\n  var current$1 = container.current;\n  var eventTime = requestEventTime();\n  var lane = requestUpdateLane(current$1);\n\n  var context = getContextForSubtree(parentComponent);\n\n  if (container.context === null) {\n    container.context = context;\n  } else {\n    container.pendingContext = context;\n  }\n\n  {\n    if (isRendering && current !== null && !didWarnAboutNestedUpdates) {\n      didWarnAboutNestedUpdates = true;\n\n      error(\n        \"Render methods should be a pure function of props and state; \" +\n          \"triggering nested component updates from render is not allowed. \" +\n          \"If necessary, trigger nested updates in componentDidUpdate.\\n\\n\" +\n          \"Check the render method of %s.\",\n        getComponentNameFromFiber(current) || \"Unknown\"\n      );\n    }\n  }\n\n  var update = createUpdate(eventTime, lane); // Caution: React DevTools currently depends on this property\n  // being called \"element\".\n\n  update.payload = {\n    element: element\n  };\n  callback = callback === undefined ? null : callback;\n\n  if (callback !== null) {\n    {\n      if (typeof callback !== \"function\") {\n        error(\n          \"render(...): Expected the last optional `callback` argument to be a \" +\n            \"function. Instead received: %s.\",\n          callback\n        );\n      }\n    }\n\n    update.callback = callback;\n  }\n\n  var root = enqueueUpdate(current$1, update, lane);\n\n  if (root !== null) {\n    scheduleUpdateOnFiber(root, current$1, lane, eventTime);\n    entangleTransitions(root, current$1, lane);\n  }\n\n  return lane;\n}\nfunction getPublicRootInstance(container) {\n  var containerFiber = container.current;\n\n  if (!containerFiber.child) {\n    return null;\n  }\n\n  switch (containerFiber.child.tag) {\n    case HostComponent:\n      return getPublicInstance(containerFiber.child.stateNode);\n\n    default:\n      return containerFiber.child.stateNode;\n  }\n}\n\nvar shouldErrorImpl = function(fiber) {\n  return null;\n};\n\nfunction shouldError(fiber) {\n  return shouldErrorImpl(fiber);\n}\n\nvar shouldSuspendImpl = function(fiber) {\n  return false;\n};\n\nfunction shouldSuspend(fiber) {\n  return shouldSuspendImpl(fiber);\n}\nvar overrideHookState = null;\nvar overrideHookStateDeletePath = null;\nvar overrideHookStateRenamePath = null;\nvar overrideProps = null;\nvar overridePropsDeletePath = null;\nvar overridePropsRenamePath = null;\nvar scheduleUpdate = null;\nvar setErrorHandler = null;\nvar setSuspenseHandler = null;\n\n{\n  var copyWithDeleteImpl = function(obj, path, index) {\n    var key = path[index];\n    var updated = isArray(obj) ? obj.slice() : assign({}, obj);\n\n    if (index + 1 === path.length) {\n      if (isArray(updated)) {\n        updated.splice(key, 1);\n      } else {\n        delete updated[key];\n      }\n\n      return updated;\n    } // $FlowFixMe number or string is fine here\n\n    updated[key] = copyWithDeleteImpl(obj[key], path, index + 1);\n    return updated;\n  };\n\n  var copyWithDelete = function(obj, path) {\n    return copyWithDeleteImpl(obj, path, 0);\n  };\n\n  var copyWithRenameImpl = function(obj, oldPath, newPath, index) {\n    var oldKey = oldPath[index];\n    var updated = isArray(obj) ? obj.slice() : assign({}, obj);\n\n    if (index + 1 === oldPath.length) {\n      var newKey = newPath[index]; // $FlowFixMe number or string is fine here\n\n      updated[newKey] = updated[oldKey];\n\n      if (isArray(updated)) {\n        updated.splice(oldKey, 1);\n      } else {\n        delete updated[oldKey];\n      }\n    } else {\n      // $FlowFixMe number or string is fine here\n      updated[oldKey] = copyWithRenameImpl(\n        // $FlowFixMe number or string is fine here\n        obj[oldKey],\n        oldPath,\n        newPath,\n        index + 1\n      );\n    }\n\n    return updated;\n  };\n\n  var copyWithRename = function(obj, oldPath, newPath) {\n    if (oldPath.length !== newPath.length) {\n      warn(\"copyWithRename() expects paths of the same length\");\n\n      return;\n    } else {\n      for (var i = 0; i < newPath.length - 1; i++) {\n        if (oldPath[i] !== newPath[i]) {\n          warn(\n            \"copyWithRename() expects paths to be the same except for the deepest key\"\n          );\n\n          return;\n        }\n      }\n    }\n\n    return copyWithRenameImpl(obj, oldPath, newPath, 0);\n  };\n\n  var copyWithSetImpl = function(obj, path, index, value) {\n    if (index >= path.length) {\n      return value;\n    }\n\n    var key = path[index];\n    var updated = isArray(obj) ? obj.slice() : assign({}, obj); // $FlowFixMe number or string is fine here\n\n    updated[key] = copyWithSetImpl(obj[key], path, index + 1, value);\n    return updated;\n  };\n\n  var copyWithSet = function(obj, path, value) {\n    return copyWithSetImpl(obj, path, 0, value);\n  };\n\n  var findHook = function(fiber, id) {\n    // For now, the \"id\" of stateful hooks is just the stateful hook index.\n    // This may change in the future with e.g. nested hooks.\n    var currentHook = fiber.memoizedState;\n\n    while (currentHook !== null && id > 0) {\n      currentHook = currentHook.next;\n      id--;\n    }\n\n    return currentHook;\n  }; // Support DevTools editable values for useState and useReducer.\n\n  overrideHookState = function(fiber, id, path, value) {\n    var hook = findHook(fiber, id);\n\n    if (hook !== null) {\n      var newState = copyWithSet(hook.memoizedState, path, value);\n      hook.memoizedState = newState;\n      hook.baseState = newState; // We aren't actually adding an update to the queue,\n      // because there is no update we can add for useReducer hooks that won't trigger an error.\n      // (There's no appropriate action type for DevTools overrides.)\n      // As a result though, React will see the scheduled update as a noop and bailout.\n      // Shallow cloning props works as a workaround for now to bypass the bailout check.\n\n      fiber.memoizedProps = assign({}, fiber.memoizedProps);\n      var root = enqueueConcurrentRenderForLane(fiber, SyncLane);\n\n      if (root !== null) {\n        scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);\n      }\n    }\n  };\n\n  overrideHookStateDeletePath = function(fiber, id, path) {\n    var hook = findHook(fiber, id);\n\n    if (hook !== null) {\n      var newState = copyWithDelete(hook.memoizedState, path);\n      hook.memoizedState = newState;\n      hook.baseState = newState; // We aren't actually adding an update to the queue,\n      // because there is no update we can add for useReducer hooks that won't trigger an error.\n      // (There's no appropriate action type for DevTools overrides.)\n      // As a result though, React will see the scheduled update as a noop and bailout.\n      // Shallow cloning props works as a workaround for now to bypass the bailout check.\n\n      fiber.memoizedProps = assign({}, fiber.memoizedProps);\n      var root = enqueueConcurrentRenderForLane(fiber, SyncLane);\n\n      if (root !== null) {\n        scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);\n      }\n    }\n  };\n\n  overrideHookStateRenamePath = function(fiber, id, oldPath, newPath) {\n    var hook = findHook(fiber, id);\n\n    if (hook !== null) {\n      var newState = copyWithRename(hook.memoizedState, oldPath, newPath);\n      hook.memoizedState = newState;\n      hook.baseState = newState; // We aren't actually adding an update to the queue,\n      // because there is no update we can add for useReducer hooks that won't trigger an error.\n      // (There's no appropriate action type for DevTools overrides.)\n      // As a result though, React will see the scheduled update as a noop and bailout.\n      // Shallow cloning props works as a workaround for now to bypass the bailout check.\n\n      fiber.memoizedProps = assign({}, fiber.memoizedProps);\n      var root = enqueueConcurrentRenderForLane(fiber, SyncLane);\n\n      if (root !== null) {\n        scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);\n      }\n    }\n  }; // Support DevTools props for function components, forwardRef, memo, host components, etc.\n\n  overrideProps = function(fiber, path, value) {\n    fiber.pendingProps = copyWithSet(fiber.memoizedProps, path, value);\n\n    if (fiber.alternate) {\n      fiber.alternate.pendingProps = fiber.pendingProps;\n    }\n\n    var root = enqueueConcurrentRenderForLane(fiber, SyncLane);\n\n    if (root !== null) {\n      scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);\n    }\n  };\n\n  overridePropsDeletePath = function(fiber, path) {\n    fiber.pendingProps = copyWithDelete(fiber.memoizedProps, path);\n\n    if (fiber.alternate) {\n      fiber.alternate.pendingProps = fiber.pendingProps;\n    }\n\n    var root = enqueueConcurrentRenderForLane(fiber, SyncLane);\n\n    if (root !== null) {\n      scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);\n    }\n  };\n\n  overridePropsRenamePath = function(fiber, oldPath, newPath) {\n    fiber.pendingProps = copyWithRename(fiber.memoizedProps, oldPath, newPath);\n\n    if (fiber.alternate) {\n      fiber.alternate.pendingProps = fiber.pendingProps;\n    }\n\n    var root = enqueueConcurrentRenderForLane(fiber, SyncLane);\n\n    if (root !== null) {\n      scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);\n    }\n  };\n\n  scheduleUpdate = function(fiber) {\n    var root = enqueueConcurrentRenderForLane(fiber, SyncLane);\n\n    if (root !== null) {\n      scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);\n    }\n  };\n\n  setErrorHandler = function(newShouldErrorImpl) {\n    shouldErrorImpl = newShouldErrorImpl;\n  };\n\n  setSuspenseHandler = function(newShouldSuspendImpl) {\n    shouldSuspendImpl = newShouldSuspendImpl;\n  };\n}\n\nfunction findHostInstanceByFiber(fiber) {\n  var hostFiber = findCurrentHostFiber(fiber);\n\n  if (hostFiber === null) {\n    return null;\n  }\n\n  return hostFiber.stateNode;\n}\n\nfunction emptyFindFiberByHostInstance(instance) {\n  return null;\n}\n\nfunction getCurrentFiberForDevTools() {\n  return current;\n}\n\nfunction injectIntoDevTools(devToolsConfig) {\n  var findFiberByHostInstance = devToolsConfig.findFiberByHostInstance;\n  var ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\n  return injectInternals({\n    bundleType: devToolsConfig.bundleType,\n    version: devToolsConfig.version,\n    rendererPackageName: devToolsConfig.rendererPackageName,\n    rendererConfig: devToolsConfig.rendererConfig,\n    overrideHookState: overrideHookState,\n    overrideHookStateDeletePath: overrideHookStateDeletePath,\n    overrideHookStateRenamePath: overrideHookStateRenamePath,\n    overrideProps: overrideProps,\n    overridePropsDeletePath: overridePropsDeletePath,\n    overridePropsRenamePath: overridePropsRenamePath,\n    setErrorHandler: setErrorHandler,\n    setSuspenseHandler: setSuspenseHandler,\n    scheduleUpdate: scheduleUpdate,\n    currentDispatcherRef: ReactCurrentDispatcher,\n    findHostInstanceByFiber: findHostInstanceByFiber,\n    findFiberByHostInstance:\n      findFiberByHostInstance || emptyFindFiberByHostInstance,\n    // React Refresh\n    findHostInstancesForRefresh: findHostInstancesForRefresh,\n    scheduleRefresh: scheduleRefresh,\n    scheduleRoot: scheduleRoot,\n    setRefreshHandler: setRefreshHandler,\n    // Enables DevTools to append owner stacks to error messages in DEV mode.\n    getCurrentFiber: getCurrentFiberForDevTools,\n    // Enables DevTools to detect reconciler version rather than renderer version\n    // which may not match for third party renderers.\n    reconcilerVersion: ReactVersion\n  });\n}\n\nvar instanceCache = new Map();\n\nfunction getInstanceFromTag(tag) {\n  return instanceCache.get(tag) || null;\n}\n\nvar emptyObject$1 = {};\n\n{\n  Object.freeze(emptyObject$1);\n}\n\nvar createHierarchy;\nvar getHostNode;\nvar getHostProps;\nvar lastNonHostInstance;\n\nvar getOwnerHierarchy;\nvar traverseOwnerTreeUp;\n\n{\n  createHierarchy = function(fiberHierarchy) {\n    return fiberHierarchy.map(function(fiber) {\n      return {\n        name: getComponentNameFromType(fiber.type),\n        getInspectorData: function(findNodeHandle) {\n          return {\n            props: getHostProps(fiber),\n            source: fiber._debugSource,\n            measure: function(callback) {\n              // If this is Fabric, we'll find a ShadowNode and use that to measure.\n              var hostFiber = findCurrentHostFiber(fiber);\n              var shadowNode =\n                hostFiber != null &&\n                hostFiber.stateNode !== null &&\n                hostFiber.stateNode.node;\n\n              if (shadowNode) {\n                nativeFabricUIManager.measure(shadowNode, callback);\n              } else {\n                return ReactNativePrivateInterface.UIManager.measure(\n                  getHostNode(fiber, findNodeHandle),\n                  callback\n                );\n              }\n            }\n          };\n        }\n      };\n    });\n  };\n\n  getHostNode = function(fiber, findNodeHandle) {\n    var hostNode; // look for children first for the hostNode\n    // as composite fibers do not have a hostNode\n\n    while (fiber) {\n      if (fiber.stateNode !== null && fiber.tag === HostComponent) {\n        hostNode = findNodeHandle(fiber.stateNode);\n      }\n\n      if (hostNode) {\n        return hostNode;\n      }\n\n      fiber = fiber.child;\n    }\n\n    return null;\n  };\n\n  getHostProps = function(fiber) {\n    var host = findCurrentHostFiber(fiber);\n\n    if (host) {\n      return host.memoizedProps || emptyObject$1;\n    }\n\n    return emptyObject$1;\n  };\n\n  exports.getInspectorDataForInstance = function(closestInstance) {\n    // Handle case where user clicks outside of ReactNative\n    if (!closestInstance) {\n      return {\n        hierarchy: [],\n        props: emptyObject$1,\n        selectedIndex: null,\n        source: null\n      };\n    }\n\n    var fiber = findCurrentFiberUsingSlowPath(closestInstance);\n    var fiberHierarchy = getOwnerHierarchy(fiber);\n    var instance = lastNonHostInstance(fiberHierarchy);\n    var hierarchy = createHierarchy(fiberHierarchy);\n    var props = getHostProps(instance);\n    var source = instance._debugSource;\n    var selectedIndex = fiberHierarchy.indexOf(instance);\n    return {\n      hierarchy: hierarchy,\n      props: props,\n      selectedIndex: selectedIndex,\n      source: source\n    };\n  };\n\n  getOwnerHierarchy = function(instance) {\n    var hierarchy = [];\n    traverseOwnerTreeUp(hierarchy, instance);\n    return hierarchy;\n  };\n\n  lastNonHostInstance = function(hierarchy) {\n    for (var i = hierarchy.length - 1; i > 1; i--) {\n      var instance = hierarchy[i];\n\n      if (instance.tag !== HostComponent) {\n        return instance;\n      }\n    }\n\n    return hierarchy[0];\n  };\n\n  traverseOwnerTreeUp = function(hierarchy, instance) {\n    if (instance) {\n      hierarchy.unshift(instance);\n      traverseOwnerTreeUp(hierarchy, instance._debugOwner);\n    }\n  };\n}\n\nvar getInspectorDataForViewTag;\nvar getInspectorDataForViewAtPoint;\n\n{\n  getInspectorDataForViewTag = function(viewTag) {\n    var closestInstance = getInstanceFromTag(viewTag); // Handle case where user clicks outside of ReactNative\n\n    if (!closestInstance) {\n      return {\n        hierarchy: [],\n        props: emptyObject$1,\n        selectedIndex: null,\n        source: null\n      };\n    }\n\n    var fiber = findCurrentFiberUsingSlowPath(closestInstance);\n    var fiberHierarchy = getOwnerHierarchy(fiber);\n    var instance = lastNonHostInstance(fiberHierarchy);\n    var hierarchy = createHierarchy(fiberHierarchy);\n    var props = getHostProps(instance);\n    var source = instance._debugSource;\n    var selectedIndex = fiberHierarchy.indexOf(instance);\n    return {\n      hierarchy: hierarchy,\n      props: props,\n      selectedIndex: selectedIndex,\n      source: source\n    };\n  };\n\n  getInspectorDataForViewAtPoint = function(\n    findNodeHandle,\n    inspectedView,\n    locationX,\n    locationY,\n    callback\n  ) {\n    var closestInstance = null;\n\n    if (inspectedView._internalInstanceHandle != null) {\n      // For Fabric we can look up the instance handle directly and measure it.\n      nativeFabricUIManager.findNodeAtPoint(\n        inspectedView._internalInstanceHandle.stateNode.node,\n        locationX,\n        locationY,\n        function(internalInstanceHandle) {\n          if (internalInstanceHandle == null) {\n            callback(\n              assign(\n                {\n                  pointerY: locationY,\n                  frame: {\n                    left: 0,\n                    top: 0,\n                    width: 0,\n                    height: 0\n                  }\n                },\n                exports.getInspectorDataForInstance(closestInstance)\n              )\n            );\n          }\n\n          closestInstance =\n            internalInstanceHandle.stateNode.canonical._internalInstanceHandle; // Note: this is deprecated and we want to remove it ASAP. Keeping it here for React DevTools compatibility for now.\n\n          var nativeViewTag =\n            internalInstanceHandle.stateNode.canonical._nativeTag;\n          nativeFabricUIManager.measure(\n            internalInstanceHandle.stateNode.node,\n            function(x, y, width, height, pageX, pageY) {\n              var inspectorData = exports.getInspectorDataForInstance(\n                closestInstance\n              );\n              callback(\n                assign({}, inspectorData, {\n                  pointerY: locationY,\n                  frame: {\n                    left: pageX,\n                    top: pageY,\n                    width: width,\n                    height: height\n                  },\n                  touchedViewTag: nativeViewTag\n                })\n              );\n            }\n          );\n        }\n      );\n    } else if (inspectedView._internalFiberInstanceHandleDEV != null) {\n      // For Paper we fall back to the old strategy using the React tag.\n      ReactNativePrivateInterface.UIManager.findSubviewIn(\n        findNodeHandle(inspectedView),\n        [locationX, locationY],\n        function(nativeViewTag, left, top, width, height) {\n          var inspectorData = exports.getInspectorDataForInstance(\n            getInstanceFromTag(nativeViewTag)\n          );\n          callback(\n            assign({}, inspectorData, {\n              pointerY: locationY,\n              frame: {\n                left: left,\n                top: top,\n                width: width,\n                height: height\n              },\n              touchedViewTag: nativeViewTag\n            })\n          );\n        }\n      );\n    } else {\n      error(\n        \"getInspectorDataForViewAtPoint expects to receive a host component\"\n      );\n\n      return;\n    }\n  };\n}\n\nvar ReactCurrentOwner$3 = ReactSharedInternals.ReactCurrentOwner;\n\nfunction findHostInstance_DEPRECATED(componentOrHandle) {\n  {\n    var owner = ReactCurrentOwner$3.current;\n\n    if (owner !== null && owner.stateNode !== null) {\n      if (!owner.stateNode._warnedAboutRefsInRender) {\n        error(\n          \"%s is accessing findNodeHandle inside its render(). \" +\n            \"render() should be a pure function of props and state. It should \" +\n            \"never access something that requires stale data from the previous \" +\n            \"render, such as refs. Move this logic to componentDidMount and \" +\n            \"componentDidUpdate instead.\",\n          getComponentNameFromType(owner.type) || \"A component\"\n        );\n      }\n\n      owner.stateNode._warnedAboutRefsInRender = true;\n    }\n  }\n\n  if (componentOrHandle == null) {\n    return null;\n  } // $FlowIssue Flow has hardcoded values for React DOM that don't work with RN\n\n  if (componentOrHandle._nativeTag) {\n    // $FlowIssue Flow has hardcoded values for React DOM that don't work with RN\n    return componentOrHandle;\n  } // $FlowIssue Flow has hardcoded values for React DOM that don't work with RN\n\n  if (componentOrHandle.canonical && componentOrHandle.canonical._nativeTag) {\n    // $FlowIssue Flow has hardcoded values for React DOM that don't work with RN\n    return componentOrHandle.canonical;\n  }\n\n  var hostInstance;\n\n  {\n    hostInstance = findHostInstanceWithWarning(\n      componentOrHandle,\n      \"findHostInstance_DEPRECATED\"\n    );\n  }\n\n  if (hostInstance == null) {\n    return hostInstance;\n  }\n\n  if (hostInstance.canonical) {\n    // Fabric\n    return hostInstance.canonical;\n  } // $FlowFixMe[incompatible-return]\n\n  return hostInstance;\n}\n\nfunction findNodeHandle(componentOrHandle) {\n  {\n    var owner = ReactCurrentOwner$3.current;\n\n    if (owner !== null && owner.stateNode !== null) {\n      if (!owner.stateNode._warnedAboutRefsInRender) {\n        error(\n          \"%s is accessing findNodeHandle inside its render(). \" +\n            \"render() should be a pure function of props and state. It should \" +\n            \"never access something that requires stale data from the previous \" +\n            \"render, such as refs. Move this logic to componentDidMount and \" +\n            \"componentDidUpdate instead.\",\n          getComponentNameFromType(owner.type) || \"A component\"\n        );\n      }\n\n      owner.stateNode._warnedAboutRefsInRender = true;\n    }\n  }\n\n  if (componentOrHandle == null) {\n    return null;\n  }\n\n  if (typeof componentOrHandle === \"number\") {\n    // Already a node handle\n    return componentOrHandle;\n  }\n\n  if (componentOrHandle._nativeTag) {\n    return componentOrHandle._nativeTag;\n  }\n\n  if (componentOrHandle.canonical && componentOrHandle.canonical._nativeTag) {\n    return componentOrHandle.canonical._nativeTag;\n  }\n\n  var hostInstance;\n\n  {\n    hostInstance = findHostInstanceWithWarning(\n      componentOrHandle,\n      \"findNodeHandle\"\n    );\n  }\n\n  if (hostInstance == null) {\n    return hostInstance;\n  } // TODO: the code is right but the types here are wrong.\n  // https://github.com/facebook/react/pull/12863\n\n  if (hostInstance.canonical) {\n    // Fabric\n    return hostInstance.canonical._nativeTag;\n  }\n\n  return hostInstance._nativeTag;\n}\n\nfunction dispatchCommand(handle, command, args) {\n  if (handle._nativeTag == null) {\n    {\n      error(\n        \"dispatchCommand was called with a ref that isn't a \" +\n          \"native component. Use React.forwardRef to get access to the underlying native component\"\n      );\n    }\n\n    return;\n  }\n\n  if (handle._internalInstanceHandle != null) {\n    var stateNode = handle._internalInstanceHandle.stateNode;\n\n    if (stateNode != null) {\n      nativeFabricUIManager.dispatchCommand(stateNode.node, command, args);\n    }\n  } else {\n    ReactNativePrivateInterface.UIManager.dispatchViewManagerCommand(\n      handle._nativeTag,\n      command,\n      args\n    );\n  }\n}\n\nfunction sendAccessibilityEvent(handle, eventType) {\n  if (handle._nativeTag == null) {\n    {\n      error(\n        \"sendAccessibilityEvent was called with a ref that isn't a \" +\n          \"native component. Use React.forwardRef to get access to the underlying native component\"\n      );\n    }\n\n    return;\n  }\n\n  if (handle._internalInstanceHandle != null) {\n    var stateNode = handle._internalInstanceHandle.stateNode;\n\n    if (stateNode != null) {\n      nativeFabricUIManager.sendAccessibilityEvent(stateNode.node, eventType);\n    }\n  } else {\n    ReactNativePrivateInterface.legacySendAccessibilityEvent(\n      handle._nativeTag,\n      eventType\n    );\n  }\n}\n\nfunction onRecoverableError(error$1) {\n  // TODO: Expose onRecoverableError option to userspace\n  // eslint-disable-next-line react-internal/no-production-logging, react-internal/warning-args\n  error(error$1);\n}\n\nfunction render(element, containerTag, callback, concurrentRoot) {\n  var root = roots.get(containerTag);\n\n  if (!root) {\n    // TODO (bvaughn): If we decide to keep the wrapper component,\n    // We could create a wrapper for containerTag as well to reduce special casing.\n    root = createContainer(\n      containerTag,\n      concurrentRoot ? ConcurrentRoot : LegacyRoot,\n      null,\n      false,\n      null,\n      \"\",\n      onRecoverableError\n    );\n    roots.set(containerTag, root);\n  }\n\n  updateContainer(element, root, null, callback); // $FlowIssue Flow has hardcoded values for React DOM that don't work with RN\n\n  return getPublicRootInstance(root);\n}\n\nfunction unmountComponentAtNode(containerTag) {\n  this.stopSurface(containerTag);\n}\n\nfunction stopSurface(containerTag) {\n  var root = roots.get(containerTag);\n\n  if (root) {\n    // TODO: Is it safe to reset this now or should I wait since this unmount could be deferred?\n    updateContainer(null, root, null, function() {\n      roots.delete(containerTag);\n    });\n  }\n}\n\nfunction createPortal$1(children, containerTag) {\n  var key =\n    arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  return createPortal(children, containerTag, null, key);\n}\n\nsetBatchingImplementation(batchedUpdates$1);\nvar roots = new Map();\ninjectIntoDevTools({\n  findFiberByHostInstance: getInstanceFromInstance,\n  bundleType: 1,\n  version: ReactVersion,\n  rendererPackageName: \"react-native-renderer\",\n  rendererConfig: {\n    getInspectorDataForViewTag: getInspectorDataForViewTag,\n    getInspectorDataForViewAtPoint: getInspectorDataForViewAtPoint.bind(\n      null,\n      findNodeHandle\n    )\n  }\n});\n\nexports.createPortal = createPortal$1;\nexports.dispatchCommand = dispatchCommand;\nexports.findHostInstance_DEPRECATED = findHostInstance_DEPRECATED;\nexports.findNodeHandle = findNodeHandle;\nexports.render = render;\nexports.sendAccessibilityEvent = sendAccessibilityEvent;\nexports.stopSurface = stopSurface;\nexports.unmountComponentAtNode = unmountComponentAtNode;\n\n          /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\nif (\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop ===\n    'function'\n) {\n  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());\n}\n        \n  })();\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
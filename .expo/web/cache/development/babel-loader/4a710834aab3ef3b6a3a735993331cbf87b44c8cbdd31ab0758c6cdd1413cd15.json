{"ast":null,"code":"var DisplayMode = Object.freeze({\n  VISIBLE: 1,\n  SUSPENDED: 2,\n  HIDDEN: 3\n});\nexport function coerceDisplayMode(value) {\n  switch (value) {\n    case DisplayMode.SUSPENDED:\n      return DisplayMode.SUSPENDED;\n    case DisplayMode.HIDDEN:\n      return DisplayMode.HIDDEN;\n    default:\n      return DisplayMode.VISIBLE;\n  }\n}\nexport default DisplayMode;","map":{"version":3,"names":["DisplayMode","Object","freeze","VISIBLE","SUSPENDED","HIDDEN","coerceDisplayMode","value"],"sources":["C:/Users/arzug/Documents/GitHub/travel-brew/node_modules/react-native/Libraries/ReactNative/DisplayMode.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nexport opaque type DisplayModeType = number;\n\n/** DisplayMode should be in sync with the method displayModeToInt from\n * react/renderer/uimanager/primitives.h. */\nconst DisplayMode: {[string]: DisplayModeType} = Object.freeze({\n  VISIBLE: 1,\n  SUSPENDED: 2,\n  HIDDEN: 3,\n});\n\nexport function coerceDisplayMode(value: ?number): DisplayModeType {\n  switch (value) {\n    case DisplayMode.SUSPENDED:\n      return DisplayMode.SUSPENDED;\n    case DisplayMode.HIDDEN:\n      return DisplayMode.HIDDEN;\n    default:\n      return DisplayMode.VISIBLE;\n  }\n}\n\nexport default DisplayMode;\n"],"mappings":"AAcA,IAAMA,WAAwC,GAAGC,MAAM,CAACC,MAAM,CAAC;EAC7DC,OAAO,EAAE,CAAC;EACVC,SAAS,EAAE,CAAC;EACZC,MAAM,EAAE;AACV,CAAC,CAAC;AAEF,OAAO,SAASC,iBAAiBA,CAACC,KAAc,EAAmB;EACjE,QAAQA,KAAK;IACX,KAAKP,WAAW,CAACI,SAAS;MACxB,OAAOJ,WAAW,CAACI,SAAS;IAC9B,KAAKJ,WAAW,CAACK,MAAM;MACrB,OAAOL,WAAW,CAACK,MAAM;IAC3B;MACE,OAAOL,WAAW,CAACG,OAAO;EAC9B;AACF;AAEA,eAAeH,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}
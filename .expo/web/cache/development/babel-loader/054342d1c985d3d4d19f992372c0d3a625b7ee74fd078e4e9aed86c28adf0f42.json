{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport RCTDeviceEventEmitter from \"../EventEmitter/RCTDeviceEventEmitter\";\nimport NativeRedBox from \"../NativeModules/specs/NativeRedBox\";\nimport NativeBugReporting from \"./NativeBugReporting\";\nfunction defaultExtras() {\n  BugReporting.addFileSource('react_hierarchy.txt', function () {\n    return require(\"./dumpReactTree\")();\n  });\n}\nvar BugReporting = function () {\n  function BugReporting() {\n    _classCallCheck(this, BugReporting);\n  }\n  _createClass(BugReporting, null, [{\n    key: \"_maybeInit\",\n    value: function _maybeInit() {\n      if (!BugReporting._subscription) {\n        BugReporting._subscription = RCTDeviceEventEmitter.addListener('collectBugExtraData', BugReporting.collectExtraData, null);\n        defaultExtras();\n      }\n      if (!BugReporting._redboxSubscription) {\n        BugReporting._redboxSubscription = RCTDeviceEventEmitter.addListener('collectRedBoxExtraData', BugReporting.collectExtraData, null);\n      }\n    }\n  }, {\n    key: \"addSource\",\n    value: function addSource(key, callback) {\n      return this._addSource(key, callback, BugReporting._extraSources);\n    }\n  }, {\n    key: \"addFileSource\",\n    value: function addFileSource(key, callback) {\n      return this._addSource(key, callback, BugReporting._fileSources);\n    }\n  }, {\n    key: \"_addSource\",\n    value: function _addSource(key, callback, source) {\n      BugReporting._maybeInit();\n      if (source.has(key)) {\n        console.warn(`BugReporting.add* called multiple times for same key '${key}'`);\n      }\n      source.set(key, callback);\n      return {\n        remove: function remove() {\n          source.delete(key);\n        }\n      };\n    }\n  }, {\n    key: \"collectExtraData\",\n    value: function collectExtraData() {\n      var extraData = {};\n      for (var _ref of BugReporting._extraSources) {\n        var _ref2 = _slicedToArray(_ref, 2);\n        var _key = _ref2[0];\n        var callback = _ref2[1];\n        extraData[_key] = callback();\n      }\n      var fileData = {};\n      for (var _ref3 of BugReporting._fileSources) {\n        var _ref4 = _slicedToArray(_ref3, 2);\n        var _key2 = _ref4[0];\n        var _callback = _ref4[1];\n        fileData[_key2] = _callback();\n      }\n      if (NativeBugReporting != null && NativeBugReporting.setExtraData != null) {\n        NativeBugReporting.setExtraData(extraData, fileData);\n      }\n      if (NativeRedBox != null && NativeRedBox.setExtraData != null) {\n        NativeRedBox.setExtraData(extraData, 'From BugReporting.js');\n      }\n      return {\n        extras: extraData,\n        files: fileData\n      };\n    }\n  }]);\n  return BugReporting;\n}();\nBugReporting._extraSources = new Map();\nBugReporting._fileSources = new Map();\nBugReporting._subscription = null;\nBugReporting._redboxSubscription = null;\nmodule.exports = BugReporting;","map":{"version":3,"names":["RCTDeviceEventEmitter","NativeRedBox","NativeBugReporting","defaultExtras","BugReporting","addFileSource","require","_classCallCheck","_createClass","key","value","_maybeInit","_subscription","addListener","collectExtraData","_redboxSubscription","addSource","callback","_addSource","_extraSources","_fileSources","source","has","console","warn","set","remove","delete","extraData","_ref","_ref2","_slicedToArray","fileData","_ref3","_ref4","setExtraData","extras","files","Map","module","exports"],"sources":["C:/Users/arzug/Documents/GitHub/travel-brew/node_modules/react-native/Libraries/BugReporting/BugReporting.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\nimport RCTDeviceEventEmitter from '../EventEmitter/RCTDeviceEventEmitter';\nimport NativeRedBox from '../NativeModules/specs/NativeRedBox';\nimport {type EventSubscription} from '../vendor/emitter/EventEmitter';\nimport NativeBugReporting from './NativeBugReporting';\n\ntype ExtraData = {[key: string]: string, ...};\ntype SourceCallback = () => string;\ntype DebugData = {\n  extras: ExtraData,\n  files: ExtraData,\n  ...\n};\n\nfunction defaultExtras() {\n  BugReporting.addFileSource('react_hierarchy.txt', () =>\n    require('./dumpReactTree')(),\n  );\n}\n\n/**\n * A simple class for collecting bug report data. Components can add sources that will be queried when a bug report\n * is created via `collectExtraData`. For example, a list component might add a source that provides the list of rows\n * that are currently visible on screen. Components should also remember to call `remove()` on the object that is\n * returned by `addSource` when they are unmounted.\n */\nclass BugReporting {\n  static _extraSources: Map<string, SourceCallback> = new Map();\n  static _fileSources: Map<string, SourceCallback> = new Map();\n  static _subscription: ?EventSubscription = null;\n  static _redboxSubscription: ?EventSubscription = null;\n\n  static _maybeInit() {\n    if (!BugReporting._subscription) {\n      BugReporting._subscription = RCTDeviceEventEmitter.addListener(\n        'collectBugExtraData',\n        // $FlowFixMe[method-unbinding]\n        BugReporting.collectExtraData,\n        null,\n      );\n      defaultExtras();\n    }\n\n    if (!BugReporting._redboxSubscription) {\n      BugReporting._redboxSubscription = RCTDeviceEventEmitter.addListener(\n        'collectRedBoxExtraData',\n        // $FlowFixMe[method-unbinding]\n        BugReporting.collectExtraData,\n        null,\n      );\n    }\n  }\n\n  /**\n   * Maps a string key to a simple callback that should return a string payload to be attached\n   * to a bug report. Source callbacks are called when `collectExtraData` is called.\n   *\n   * Returns an object to remove the source when the component unmounts.\n   *\n   * Conflicts trample with a warning.\n   */\n  static addSource(\n    key: string,\n    callback: SourceCallback,\n  ): {remove: () => void, ...} {\n    return this._addSource(key, callback, BugReporting._extraSources);\n  }\n\n  /**\n   * Maps a string key to a simple callback that should return a string payload to be attached\n   * to a bug report. Source callbacks are called when `collectExtraData` is called.\n   *\n   * Returns an object to remove the source when the component unmounts.\n   *\n   * Conflicts trample with a warning.\n   */\n  static addFileSource(\n    key: string,\n    callback: SourceCallback,\n  ): {remove: () => void, ...} {\n    return this._addSource(key, callback, BugReporting._fileSources);\n  }\n\n  static _addSource(\n    key: string,\n    callback: SourceCallback,\n    source: Map<string, SourceCallback>,\n  ): {remove: () => void, ...} {\n    BugReporting._maybeInit();\n    if (source.has(key)) {\n      console.warn(\n        `BugReporting.add* called multiple times for same key '${key}'`,\n      );\n    }\n    source.set(key, callback);\n    return {\n      remove: () => {\n        source.delete(key);\n      },\n    };\n  }\n\n  /**\n   * This can be called from a native bug reporting flow, or from JS code.\n   *\n   * If available, this will call `NativeModules.BugReporting.setExtraData(extraData)`\n   * after collecting `extraData`.\n   */\n  static collectExtraData(): DebugData {\n    const extraData: ExtraData = {};\n    for (const [key, callback] of BugReporting._extraSources) {\n      extraData[key] = callback();\n    }\n    const fileData: ExtraData = {};\n    for (const [key, callback] of BugReporting._fileSources) {\n      fileData[key] = callback();\n    }\n\n    if (NativeBugReporting != null && NativeBugReporting.setExtraData != null) {\n      NativeBugReporting.setExtraData(extraData, fileData);\n    }\n\n    if (NativeRedBox != null && NativeRedBox.setExtraData != null) {\n      NativeRedBox.setExtraData(extraData, 'From BugReporting.js');\n    }\n\n    return {extras: extraData, files: fileData};\n  }\n}\n\nmodule.exports = BugReporting;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
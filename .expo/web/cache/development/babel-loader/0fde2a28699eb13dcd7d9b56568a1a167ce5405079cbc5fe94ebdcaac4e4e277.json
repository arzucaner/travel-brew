{"ast":null,"code":"'use strict';\n\nvar _require = require(\"../Utilities/PolyfillFunctions\"),\n  polyfillGlobal = _require.polyfillGlobal;\npolyfillGlobal('XMLHttpRequest', function () {\n  return require(\"../Network/XMLHttpRequest\");\n});\npolyfillGlobal('FormData', function () {\n  return require(\"../Network/FormData\");\n});\npolyfillGlobal('fetch', function () {\n  return require(\"../Network/fetch\").fetch;\n});\npolyfillGlobal('Headers', function () {\n  return require(\"../Network/fetch\").Headers;\n});\npolyfillGlobal('Request', function () {\n  return require(\"../Network/fetch\").Request;\n});\npolyfillGlobal('Response', function () {\n  return require(\"../Network/fetch\").Response;\n});\npolyfillGlobal('WebSocket', function () {\n  return require(\"../WebSocket/WebSocket\");\n});\npolyfillGlobal('Blob', function () {\n  return require(\"../Blob/Blob\");\n});\npolyfillGlobal('File', function () {\n  return require(\"../Blob/File\");\n});\npolyfillGlobal('FileReader', function () {\n  return require(\"../Blob/FileReader\");\n});\npolyfillGlobal('URL', function () {\n  return require(\"../Blob/URL\").URL;\n});\npolyfillGlobal('URLSearchParams', function () {\n  return require(\"../Blob/URL\").URLSearchParams;\n});\npolyfillGlobal('AbortController', function () {\n  return require('abort-controller/dist/abort-controller').AbortController;\n});\npolyfillGlobal('AbortSignal', function () {\n  return require('abort-controller/dist/abort-controller').AbortSignal;\n});","map":{"version":3,"names":["_require","require","polyfillGlobal","fetch","Headers","Request","Response","URL","URLSearchParams","AbortController","AbortSignal"],"sources":["C:/Users/arzug/Documents/GitHub/travel-brew/node_modules/react-native/Libraries/Core/setUpXHR.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nconst {polyfillGlobal} = require('../Utilities/PolyfillFunctions');\n\n/**\n * Set up XMLHttpRequest. The native XMLHttpRequest in Chrome dev tools is CORS\n * aware and won't let you fetch anything from the internet.\n *\n * You can use this module directly, or just require InitializeCore.\n */\npolyfillGlobal('XMLHttpRequest', () => require('../Network/XMLHttpRequest'));\npolyfillGlobal('FormData', () => require('../Network/FormData'));\n\npolyfillGlobal('fetch', () => require('../Network/fetch').fetch);\npolyfillGlobal('Headers', () => require('../Network/fetch').Headers);\npolyfillGlobal('Request', () => require('../Network/fetch').Request);\npolyfillGlobal('Response', () => require('../Network/fetch').Response);\npolyfillGlobal('WebSocket', () => require('../WebSocket/WebSocket'));\npolyfillGlobal('Blob', () => require('../Blob/Blob'));\npolyfillGlobal('File', () => require('../Blob/File'));\npolyfillGlobal('FileReader', () => require('../Blob/FileReader'));\npolyfillGlobal('URL', () => require('../Blob/URL').URL); // flowlint-line untyped-import:off\npolyfillGlobal('URLSearchParams', () => require('../Blob/URL').URLSearchParams); // flowlint-line untyped-import:off\npolyfillGlobal(\n  'AbortController',\n  () => require('abort-controller/dist/abort-controller').AbortController, // flowlint-line untyped-import:off\n);\npolyfillGlobal(\n  'AbortSignal',\n  () => require('abort-controller/dist/abort-controller').AbortSignal, // flowlint-line untyped-import:off\n);\n"],"mappings":"AAUA,YAAY;;AAEZ,IAAAA,QAAA,GAAyBC,OAAO,iCAAiC,CAAC;EAA3DC,cAAc,GAAAF,QAAA,CAAdE,cAAc;AAQrBA,cAAc,CAAC,gBAAgB,EAAE;EAAA,OAAMD,OAAO,4BAA4B,CAAC;AAAA,EAAC;AAC5EC,cAAc,CAAC,UAAU,EAAE;EAAA,OAAMD,OAAO,sBAAsB,CAAC;AAAA,EAAC;AAEhEC,cAAc,CAAC,OAAO,EAAE;EAAA,OAAMD,OAAO,mBAAmB,CAAC,CAACE,KAAK;AAAA,EAAC;AAChED,cAAc,CAAC,SAAS,EAAE;EAAA,OAAMD,OAAO,mBAAmB,CAAC,CAACG,OAAO;AAAA,EAAC;AACpEF,cAAc,CAAC,SAAS,EAAE;EAAA,OAAMD,OAAO,mBAAmB,CAAC,CAACI,OAAO;AAAA,EAAC;AACpEH,cAAc,CAAC,UAAU,EAAE;EAAA,OAAMD,OAAO,mBAAmB,CAAC,CAACK,QAAQ;AAAA,EAAC;AACtEJ,cAAc,CAAC,WAAW,EAAE;EAAA,OAAMD,OAAO,yBAAyB,CAAC;AAAA,EAAC;AACpEC,cAAc,CAAC,MAAM,EAAE;EAAA,OAAMD,OAAO,eAAe,CAAC;AAAA,EAAC;AACrDC,cAAc,CAAC,MAAM,EAAE;EAAA,OAAMD,OAAO,eAAe,CAAC;AAAA,EAAC;AACrDC,cAAc,CAAC,YAAY,EAAE;EAAA,OAAMD,OAAO,qBAAqB,CAAC;AAAA,EAAC;AACjEC,cAAc,CAAC,KAAK,EAAE;EAAA,OAAMD,OAAO,cAAc,CAAC,CAACM,GAAG;AAAA,EAAC;AACvDL,cAAc,CAAC,iBAAiB,EAAE;EAAA,OAAMD,OAAO,cAAc,CAAC,CAACO,eAAe;AAAA,EAAC;AAC/EN,cAAc,CACZ,iBAAiB,EACjB;EAAA,OAAMD,OAAO,CAAC,wCAAwC,CAAC,CAACQ,eAAe;AAAA,CACzE,CAAC;AACDP,cAAc,CACZ,aAAa,EACb;EAAA,OAAMD,OAAO,CAAC,wCAAwC,CAAC,CAACS,WAAW;AAAA,CACrE,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"import Linking from \"../../Linking/Linking\";\nimport StyleSheet from \"../../StyleSheet/StyleSheet\";\nimport Text from \"../../Text/Text\";\nimport * as React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nfunction getLinkRanges(string) {\n  var regex = /https?:\\/\\/[^\\s$.?#].[^\\s]*/gi;\n  var matches = [];\n  var regexResult;\n  while ((regexResult = regex.exec(string)) !== null) {\n    if (regexResult != null) {\n      matches.push({\n        lowerBound: regexResult.index,\n        upperBound: regex.lastIndex\n      });\n    }\n  }\n  return matches;\n}\nfunction TappableLinks(props) {\n  var matches = getLinkRanges(props.content);\n  if (matches.length === 0) {\n    return _jsx(Text, {\n      style: props.style,\n      children: props.content\n    });\n  }\n  var fragments = [];\n  var indexCounter = 0;\n  var startIndex = 0;\n  var _loop = function _loop() {\n    if (startIndex < linkRange.lowerBound) {\n      var _text = props.content.substring(startIndex, linkRange.lowerBound);\n      fragments.push(_jsx(Text, {\n        children: _text\n      }, ++indexCounter));\n    }\n    var link = props.content.substring(linkRange.lowerBound, linkRange.upperBound);\n    fragments.push(_jsx(Text, {\n      onPress: function onPress() {\n        Linking.openURL(link);\n      },\n      style: styles.linkText,\n      children: link\n    }, ++indexCounter));\n    startIndex = linkRange.upperBound;\n  };\n  for (var linkRange of matches) {\n    _loop();\n  }\n  if (startIndex < props.content.length) {\n    var text = props.content.substring(startIndex);\n    fragments.push(_jsx(Text, {\n      style: props.style,\n      children: text\n    }, ++indexCounter));\n  }\n  return _jsx(Text, {\n    style: props.style,\n    children: fragments\n  });\n}\nvar cleanContent = function cleanContent(content) {\n  return content.replace(/^(TransformError |Warning: (Warning: )?|Error: )/g, '');\n};\nfunction LogBoxMessage(props) {\n  var _props$message = props.message,\n    content = _props$message.content,\n    substitutions = _props$message.substitutions;\n  if (props.plaintext === true) {\n    return _jsx(Text, {\n      children: cleanContent(content)\n    });\n  }\n  var maxLength = props.maxLength != null ? props.maxLength : Infinity;\n  var substitutionStyle = props.style;\n  var elements = [];\n  var length = 0;\n  var createUnderLength = function createUnderLength(key, message, style) {\n    var cleanMessage = cleanContent(message);\n    if (props.maxLength != null) {\n      cleanMessage = cleanMessage.slice(0, props.maxLength - length);\n    }\n    if (length < maxLength) {\n      elements.push(_jsx(TappableLinks, {\n        content: cleanMessage,\n        style: style\n      }, key));\n    }\n    length += cleanMessage.length;\n  };\n  var lastOffset = substitutions.reduce(function (prevOffset, substitution, index) {\n    var key = String(index);\n    if (substitution.offset > prevOffset) {\n      var prevPart = content.substr(prevOffset, substitution.offset - prevOffset);\n      createUnderLength(key, prevPart);\n    }\n    var substitutionPart = content.substr(substitution.offset, substitution.length);\n    createUnderLength(key + '.5', substitutionPart, substitutionStyle);\n    return substitution.offset + substitution.length;\n  }, 0);\n  if (lastOffset < content.length) {\n    var lastPart = content.substr(lastOffset);\n    createUnderLength('-1', lastPart);\n  }\n  return _jsx(_Fragment, {\n    children: elements\n  });\n}\nvar styles = StyleSheet.create({\n  linkText: {\n    textDecorationLine: 'underline'\n  }\n});\nexport default LogBoxMessage;","map":{"version":3,"names":["Linking","StyleSheet","Text","React","jsx","_jsx","Fragment","_Fragment","getLinkRanges","string","regex","matches","regexResult","exec","push","lowerBound","index","upperBound","lastIndex","TappableLinks","props","content","length","style","children","fragments","indexCounter","startIndex","_loop","linkRange","text","substring","link","onPress","openURL","styles","linkText","cleanContent","replace","LogBoxMessage","_props$message","message","substitutions","plaintext","maxLength","Infinity","substitutionStyle","elements","createUnderLength","key","cleanMessage","slice","lastOffset","reduce","prevOffset","substitution","String","offset","prevPart","substr","substitutionPart","lastPart","create","textDecorationLine"],"sources":["C:/Users/arzug/Documents/GitHub/travel-brew/node_modules/react-native/Libraries/LogBox/UI/LogBoxMessage.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport type {TextStyleProp} from '../../StyleSheet/StyleSheet';\nimport type {Message} from '../Data/parseLogBoxLog';\n\nimport Linking from '../../Linking/Linking';\nimport StyleSheet from '../../StyleSheet/StyleSheet';\nimport Text from '../../Text/Text';\nimport * as React from 'react';\n\ntype Props = {\n  message: Message,\n  style: TextStyleProp,\n  plaintext?: ?boolean,\n  maxLength?: ?number,\n  ...\n};\n\ntype Range = {\n  lowerBound: number,\n  upperBound: number,\n};\n\nfunction getLinkRanges(string: string): $ReadOnlyArray<Range> {\n  const regex = /https?:\\/\\/[^\\s$.?#].[^\\s]*/gi;\n  const matches = [];\n\n  let regexResult: RegExp$matchResult | null;\n  while ((regexResult = regex.exec(string)) !== null) {\n    if (regexResult != null) {\n      matches.push({\n        lowerBound: regexResult.index,\n        upperBound: regex.lastIndex,\n      });\n    }\n  }\n\n  return matches;\n}\n\nfunction TappableLinks(props: {\n  content: string,\n  style: void | TextStyleProp,\n}): React.Node {\n  const matches = getLinkRanges(props.content);\n\n  if (matches.length === 0) {\n    // No URLs detected. Just return the content.\n    return <Text style={props.style}>{props.content}</Text>;\n  }\n\n  // URLs were detected. Construct array of Text nodes.\n\n  let fragments: Array<React.Node> = [];\n  let indexCounter = 0;\n  let startIndex = 0;\n\n  for (const linkRange of matches) {\n    if (startIndex < linkRange.lowerBound) {\n      const text = props.content.substring(startIndex, linkRange.lowerBound);\n      fragments.push(<Text key={++indexCounter}>{text}</Text>);\n    }\n\n    const link = props.content.substring(\n      linkRange.lowerBound,\n      linkRange.upperBound,\n    );\n    fragments.push(\n      <Text\n        onPress={() => {\n          // $FlowFixMe[unused-promise]\n          Linking.openURL(link);\n        }}\n        key={++indexCounter}\n        style={styles.linkText}>\n        {link}\n      </Text>,\n    );\n\n    startIndex = linkRange.upperBound;\n  }\n\n  if (startIndex < props.content.length) {\n    const text = props.content.substring(startIndex);\n    fragments.push(\n      <Text key={++indexCounter} style={props.style}>\n        {text}\n      </Text>,\n    );\n  }\n\n  return <Text style={props.style}>{fragments}</Text>;\n}\n\nconst cleanContent = (content: string) =>\n  content.replace(/^(TransformError |Warning: (Warning: )?|Error: )/g, '');\n\nfunction LogBoxMessage(props: Props): React.Node {\n  const {content, substitutions}: Message = props.message;\n\n  if (props.plaintext === true) {\n    return <Text>{cleanContent(content)}</Text>;\n  }\n\n  const maxLength = props.maxLength != null ? props.maxLength : Infinity;\n  const substitutionStyle: TextStyleProp = props.style;\n  const elements = [];\n  let length = 0;\n  const createUnderLength = (\n    key: string | $TEMPORARY$string<'-1'>,\n    message: string,\n    style: void | TextStyleProp,\n  ) => {\n    let cleanMessage = cleanContent(message);\n\n    if (props.maxLength != null) {\n      cleanMessage = cleanMessage.slice(0, props.maxLength - length);\n    }\n\n    if (length < maxLength) {\n      elements.push(\n        <TappableLinks content={cleanMessage} key={key} style={style} />,\n      );\n    }\n\n    length += cleanMessage.length;\n  };\n\n  const lastOffset = substitutions.reduce((prevOffset, substitution, index) => {\n    const key = String(index);\n\n    if (substitution.offset > prevOffset) {\n      const prevPart = content.substr(\n        prevOffset,\n        substitution.offset - prevOffset,\n      );\n\n      createUnderLength(key, prevPart);\n    }\n\n    const substitutionPart = content.substr(\n      substitution.offset,\n      substitution.length,\n    );\n\n    createUnderLength(key + '.5', substitutionPart, substitutionStyle);\n    return substitution.offset + substitution.length;\n  }, 0);\n\n  if (lastOffset < content.length) {\n    const lastPart = content.substr(lastOffset);\n    createUnderLength('-1', lastPart);\n  }\n\n  return <>{elements}</>;\n}\n\nconst styles = StyleSheet.create({\n  linkText: {\n    textDecorationLine: 'underline',\n  },\n});\n\nexport default LogBoxMessage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
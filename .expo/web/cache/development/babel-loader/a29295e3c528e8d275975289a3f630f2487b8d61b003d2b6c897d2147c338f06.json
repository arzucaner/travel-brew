{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport MapView, { Marker, PROVIDER_GOOGLE } from \"react-native-maps\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { UserLocationContext } from \"../../Context/UserLocationContext\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function GoogleMapView() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    mapRegion = _useState2[0],\n    setmapRegion = _useState2[1];\n  var _useContext = useContext(UserLocationContext),\n    location = _useContext.location,\n    setLocation = _useContext.setLocation;\n  useEffect(function () {\n    if (location) {\n      setmapRegion({\n        latitude: location.coords.latitude,\n        longitude: location.coords.longitude,\n        latitudeDelta: 0.0522,\n        longitudeDelta: 0.0421\n      });\n    }\n  }, [location]);\n  return _jsxs(View, {\n    style: {\n      marginTop: 20\n    },\n    children: [_jsx(Text, {\n      style: {\n        fontSize: 20,\n        marginBottom: 10,\n        fontWeight: \"600\"\n      },\n      children: \"Top Near By Places\"\n    }), _jsx(View, {\n      style: {\n        borderRadius: 20,\n        overflow: \"hidden\"\n      },\n      children: _jsx(MapView, {\n        style: {\n          width: Dimensions.get(\"screen\").width * 0.89,\n          height: Dimensions.get(\"screen\").height * 0.23\n        },\n        provider: PROVIDER_GOOGLE,\n        showsUserLocation: true,\n        region: mapRegion,\n        children: _jsx(Marker, {\n          title: \"You\",\n          coordinate: {\n            longitude: mapRegion.longitude ? mapRegion.longitude : 0,\n            latitude: mapRegion.latitude ? mapRegion.latitude : 0\n          }\n        })\n      })\n    })]\n  });\n}","map":{"version":3,"names":["MapView","Marker","PROVIDER_GOOGLE","React","useContext","useEffect","useState","UserLocationContext","jsx","_jsx","jsxs","_jsxs","GoogleMapView","_useState","_useState2","_slicedToArray","mapRegion","setmapRegion","_useContext","location","setLocation","latitude","coords","longitude","latitudeDelta","longitudeDelta","View","style","marginTop","children","Text","fontSize","marginBottom","fontWeight","borderRadius","overflow","width","Dimensions","get","height","provider","showsUserLocation","region","title","coordinate"],"sources":["C:/Users/arzug/Documents/GitHub/travel-brew/App/Components/Home/GoogleMapView.js"],"sourcesContent":["import { View, Text, Dimensions } from \"react-native\";\r\nimport MapView, { Marker, PROVIDER_GOOGLE } from \"react-native-maps\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { UserLocationContext } from \"../../Context/UserLocationContext\";\r\n\r\nexport default function GoogleMapView() {\r\n  const [mapRegion, setmapRegion] = useState([]);\r\n\r\n  const { location, setLocation } = useContext(UserLocationContext);\r\n\r\n  useEffect(() => {\r\n    if (location) {\r\n      setmapRegion({\r\n        latitude: location.coords.latitude,\r\n        longitude: location.coords.longitude,\r\n        latitudeDelta: 0.0522,\r\n        longitudeDelta: 0.0421,\r\n      });\r\n    }\r\n  }, [location]);\r\n\r\n  return (\r\n    <View style={{ marginTop: 20 }}>\r\n      <Text\r\n        style={{\r\n          fontSize: 20,\r\n          marginBottom: 10,\r\n          fontWeight: \"600\",\r\n        }}\r\n      >\r\n        Top Near By Places\r\n      </Text>\r\n      <View style={{ borderRadius: 20, overflow: \"hidden\" }}>\r\n        <MapView\r\n          style={{\r\n            width: Dimensions.get(\"screen\").width * 0.89,\r\n            height: Dimensions.get(\"screen\").height * 0.23,\r\n          }}\r\n          provider={PROVIDER_GOOGLE}\r\n          showsUserLocation={true}\r\n          region={mapRegion}\r\n        >\r\n          <Marker\r\n            title=\"You\"\r\n            coordinate={{\r\n              longitude: mapRegion.longitude ? mapRegion.longitude : 0,\r\n              latitude: mapRegion.latitude ? mapRegion.latitude : 0,\r\n            }}\r\n          />\r\n        </MapView>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n"],"mappings":";;;;AACA,OAAOA,OAAO,IAAIC,MAAM,EAAEC,eAAe,QAAQ,mBAAmB;AACpE,OAAOC,KAAK,IAAIC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC9D,SAASC,mBAAmB;AAA4C,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAExE,eAAe,SAASC,aAAaA,CAAA,EAAG;EACtC,IAAAC,SAAA,GAAkCP,QAAQ,CAAC,EAAE,CAAC;IAAAQ,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAvCG,SAAS,GAAAF,UAAA;IAAEG,YAAY,GAAAH,UAAA;EAE9B,IAAAI,WAAA,GAAkCd,UAAU,CAACG,mBAAmB,CAAC;IAAzDY,QAAQ,GAAAD,WAAA,CAARC,QAAQ;IAAEC,WAAW,GAAAF,WAAA,CAAXE,WAAW;EAE7Bf,SAAS,CAAC,YAAM;IACd,IAAIc,QAAQ,EAAE;MACZF,YAAY,CAAC;QACXI,QAAQ,EAAEF,QAAQ,CAACG,MAAM,CAACD,QAAQ;QAClCE,SAAS,EAAEJ,QAAQ,CAACG,MAAM,CAACC,SAAS;QACpCC,aAAa,EAAE,MAAM;QACrBC,cAAc,EAAE;MAClB,CAAC,CAAC;IACJ;EACF,CAAC,EAAE,CAACN,QAAQ,CAAC,CAAC;EAEd,OACER,KAAA,CAACe,IAAI;IAACC,KAAK,EAAE;MAAEC,SAAS,EAAE;IAAG,CAAE;IAAAC,QAAA,GAC7BpB,IAAA,CAACqB,IAAI;MACHH,KAAK,EAAE;QACLI,QAAQ,EAAE,EAAE;QACZC,YAAY,EAAE,EAAE;QAChBC,UAAU,EAAE;MACd,CAAE;MAAAJ,QAAA,EACH;IAED,CAAM,CAAC,EACPpB,IAAA,CAACiB,IAAI;MAACC,KAAK,EAAE;QAAEO,YAAY,EAAE,EAAE;QAAEC,QAAQ,EAAE;MAAS,CAAE;MAAAN,QAAA,EACpDpB,IAAA,CAACT,OAAO;QACN2B,KAAK,EAAE;UACLS,KAAK,EAAEC,UAAU,CAACC,GAAG,CAAC,QAAQ,CAAC,CAACF,KAAK,GAAG,IAAI;UAC5CG,MAAM,EAAEF,UAAU,CAACC,GAAG,CAAC,QAAQ,CAAC,CAACC,MAAM,GAAG;QAC5C,CAAE;QACFC,QAAQ,EAAEtC,eAAgB;QAC1BuC,iBAAiB,EAAE,IAAK;QACxBC,MAAM,EAAE1B,SAAU;QAAAa,QAAA,EAElBpB,IAAA,CAACR,MAAM;UACL0C,KAAK,EAAC,KAAK;UACXC,UAAU,EAAE;YACVrB,SAAS,EAAEP,SAAS,CAACO,SAAS,GAAGP,SAAS,CAACO,SAAS,GAAG,CAAC;YACxDF,QAAQ,EAAEL,SAAS,CAACK,QAAQ,GAAGL,SAAS,CAACK,QAAQ,GAAG;UACtD;QAAE,CACH;MAAC,CACK;IAAC,CACN,CAAC;EAAA,CACH,CAAC;AAEX"},"metadata":{},"sourceType":"module","externalDependencies":[]}
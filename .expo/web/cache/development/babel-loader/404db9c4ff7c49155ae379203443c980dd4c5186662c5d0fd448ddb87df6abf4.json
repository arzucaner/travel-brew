{"ast":null,"code":"'use strict';\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\nvar WebSocketEvent = _createClass(function WebSocketEvent(type, eventInitDict) {\n  _classCallCheck(this, WebSocketEvent);\n  this.type = type.toString();\n  Object.assign(this, eventInitDict);\n});\nmodule.exports = WebSocketEvent;","map":{"version":3,"names":["_createClass","require","_classCallCheck","WebSocketEvent","type","eventInitDict","toString","Object","assign","module","exports"],"sources":["C:/Users/arzug/Documents/GitHub/travel-brew/node_modules/react-native/Libraries/WebSocket/WebSocketEvent.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\n'use strict';\n\n/**\n * Event object passed to the `onopen`, `onclose`, `onmessage`, `onerror`\n * callbacks of `WebSocket`.\n *\n * The `type` property is \"open\", \"close\", \"message\", \"error\" respectively.\n *\n * In case of \"message\", the `data` property contains the incoming data.\n */\nclass WebSocketEvent {\n  constructor(type, eventInitDict) {\n    this.type = type.toString();\n    Object.assign(this, eventInitDict);\n  }\n}\n\nmodule.exports = WebSocketEvent;\n"],"mappings":"AASA,YAAY;AAAC,IAAAA,YAAA,GAAAC,OAAA;AAAA,IAAAC,eAAA,GAAAD,OAAA;AAAA,IAUPE,cAAc,GAAAH,YAAA,CAClB,SAAAG,eAAYC,IAAI,EAAEC,aAAa,EAAE;EAAAH,eAAA,OAAAC,cAAA;EAC/B,IAAI,CAACC,IAAI,GAAGA,IAAI,CAACE,QAAQ,CAAC,CAAC;EAC3BC,MAAM,CAACC,MAAM,CAAC,IAAI,EAAEH,aAAa,CAAC;AACpC,CAAC;AAGHI,MAAM,CAACC,OAAO,GAAGP,cAAc"},"metadata":{},"sourceType":"script","externalDependencies":[]}
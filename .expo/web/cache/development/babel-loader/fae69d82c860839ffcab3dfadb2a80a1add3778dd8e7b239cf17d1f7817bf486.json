{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport BatchedBridge from \"../BatchedBridge/BatchedBridge\";\nimport BugReporting from \"../BugReporting/BugReporting\";\nimport createPerformanceLogger from \"../Utilities/createPerformanceLogger\";\nimport infoLog from \"../Utilities/infoLog\";\nimport SceneTracker from \"../Utilities/SceneTracker\";\nimport { coerceDisplayMode } from \"./DisplayMode\";\nimport HeadlessJsTaskError from \"./HeadlessJsTaskError\";\nimport NativeHeadlessJsTaskSupport from \"./NativeHeadlessJsTaskSupport\";\nimport renderApplication from \"./renderApplication\";\nimport { unmountComponentAtNodeAndRemoveContainer } from \"./RendererProxy\";\nimport invariant from 'invariant';\nvar runnables = {};\nvar runCount = 1;\nvar sections = {};\nvar taskProviders = new Map();\nvar taskCancelProviders = new Map();\nvar componentProviderInstrumentationHook = function componentProviderInstrumentationHook(component) {\n  return component();\n};\nvar wrapperComponentProvider;\nvar showArchitectureIndicator = false;\nvar AppRegistry = {\n  setWrapperComponentProvider: function setWrapperComponentProvider(provider) {\n    wrapperComponentProvider = provider;\n  },\n  enableArchitectureIndicator: function enableArchitectureIndicator(enabled) {\n    showArchitectureIndicator = enabled;\n  },\n  registerConfig: function registerConfig(config) {\n    config.forEach(function (appConfig) {\n      if (appConfig.run) {\n        AppRegistry.registerRunnable(appConfig.appKey, appConfig.run);\n      } else {\n        invariant(appConfig.component != null, 'AppRegistry.registerConfig(...): Every config is expected to set ' + 'either `run` or `component`, but `%s` has neither.', appConfig.appKey);\n        AppRegistry.registerComponent(appConfig.appKey, appConfig.component, appConfig.section);\n      }\n    });\n  },\n  registerComponent: function registerComponent(appKey, componentProvider, section) {\n    var scopedPerformanceLogger = createPerformanceLogger();\n    runnables[appKey] = {\n      componentProvider: componentProvider,\n      run: function run(appParameters, displayMode) {\n        var _appParameters$initia;\n        var concurrentRootEnabled = ((_appParameters$initia = appParameters.initialProps) == null ? void 0 : _appParameters$initia.concurrentRoot) || appParameters.concurrentRoot;\n        renderApplication(componentProviderInstrumentationHook(componentProvider, scopedPerformanceLogger), appParameters.initialProps, appParameters.rootTag, wrapperComponentProvider && wrapperComponentProvider(appParameters), appParameters.fabric, showArchitectureIndicator, scopedPerformanceLogger, appKey === 'LogBox', appKey, coerceDisplayMode(displayMode), concurrentRootEnabled);\n      }\n    };\n    if (section) {\n      sections[appKey] = runnables[appKey];\n    }\n    return appKey;\n  },\n  registerRunnable: function registerRunnable(appKey, run) {\n    runnables[appKey] = {\n      run: run\n    };\n    return appKey;\n  },\n  registerSection: function registerSection(appKey, component) {\n    AppRegistry.registerComponent(appKey, component, true);\n  },\n  getAppKeys: function getAppKeys() {\n    return Object.keys(runnables);\n  },\n  getSectionKeys: function getSectionKeys() {\n    return Object.keys(sections);\n  },\n  getSections: function getSections() {\n    return _objectSpread({}, sections);\n  },\n  getRunnable: function getRunnable(appKey) {\n    return runnables[appKey];\n  },\n  getRegistry: function getRegistry() {\n    return {\n      sections: AppRegistry.getSectionKeys(),\n      runnables: _objectSpread({}, runnables)\n    };\n  },\n  setComponentProviderInstrumentationHook: function setComponentProviderInstrumentationHook(hook) {\n    componentProviderInstrumentationHook = hook;\n  },\n  runApplication: function runApplication(appKey, appParameters, displayMode) {\n    if (appKey !== 'LogBox') {\n      var logParams = __DEV__ ? '\" with ' + JSON.stringify(appParameters) : '';\n      var msg = 'Running \"' + appKey + logParams;\n      infoLog(msg);\n      BugReporting.addSource('AppRegistry.runApplication' + runCount++, function () {\n        return msg;\n      });\n    }\n    invariant(runnables[appKey] && runnables[appKey].run, `\"${appKey}\" has not been registered. This can happen if:\\n` + '* Metro (the local dev server) is run from the wrong folder. ' + 'Check if Metro is running, stop it and restart it in the current project.\\n' + \"* A module failed to load due to an error and `AppRegistry.registerComponent` wasn't called.\");\n    SceneTracker.setActiveScene({\n      name: appKey\n    });\n    runnables[appKey].run(appParameters, displayMode);\n  },\n  setSurfaceProps: function setSurfaceProps(appKey, appParameters, displayMode) {\n    if (appKey !== 'LogBox') {\n      var msg = 'Updating props for Surface \"' + appKey + '\" with ' + JSON.stringify(appParameters);\n      infoLog(msg);\n      BugReporting.addSource('AppRegistry.setSurfaceProps' + runCount++, function () {\n        return msg;\n      });\n    }\n    invariant(runnables[appKey] && runnables[appKey].run, `\"${appKey}\" has not been registered. This can happen if:\\n` + '* Metro (the local dev server) is run from the wrong folder. ' + 'Check if Metro is running, stop it and restart it in the current project.\\n' + \"* A module failed to load due to an error and `AppRegistry.registerComponent` wasn't called.\");\n    runnables[appKey].run(appParameters, displayMode);\n  },\n  unmountApplicationComponentAtRootTag: function unmountApplicationComponentAtRootTag(rootTag) {\n    unmountComponentAtNodeAndRemoveContainer(rootTag);\n  },\n  registerHeadlessTask: function registerHeadlessTask(taskKey, taskProvider) {\n    this.registerCancellableHeadlessTask(taskKey, taskProvider, function () {\n      return function () {};\n    });\n  },\n  registerCancellableHeadlessTask: function registerCancellableHeadlessTask(taskKey, taskProvider, taskCancelProvider) {\n    if (taskProviders.has(taskKey)) {\n      console.warn(`registerHeadlessTask or registerCancellableHeadlessTask called multiple times for same key '${taskKey}'`);\n    }\n    taskProviders.set(taskKey, taskProvider);\n    taskCancelProviders.set(taskKey, taskCancelProvider);\n  },\n  startHeadlessTask: function startHeadlessTask(taskId, taskKey, data) {\n    var taskProvider = taskProviders.get(taskKey);\n    if (!taskProvider) {\n      console.warn(`No task registered for key ${taskKey}`);\n      if (NativeHeadlessJsTaskSupport) {\n        NativeHeadlessJsTaskSupport.notifyTaskFinished(taskId);\n      }\n      return;\n    }\n    taskProvider()(data).then(function () {\n      if (NativeHeadlessJsTaskSupport) {\n        NativeHeadlessJsTaskSupport.notifyTaskFinished(taskId);\n      }\n    }).catch(function (reason) {\n      console.error(reason);\n      if (NativeHeadlessJsTaskSupport && reason instanceof HeadlessJsTaskError) {\n        NativeHeadlessJsTaskSupport.notifyTaskRetry(taskId).then(function (retryPosted) {\n          if (!retryPosted) {\n            NativeHeadlessJsTaskSupport.notifyTaskFinished(taskId);\n          }\n        });\n      }\n    });\n  },\n  cancelHeadlessTask: function cancelHeadlessTask(taskId, taskKey) {\n    var taskCancelProvider = taskCancelProviders.get(taskKey);\n    if (!taskCancelProvider) {\n      throw new Error(`No task canceller registered for key '${taskKey}'`);\n    }\n    taskCancelProvider()();\n  }\n};\nif (!(global.RN$Bridgeless === true)) {\n  BatchedBridge.registerCallableModule('AppRegistry', AppRegistry);\n  AppRegistry.registerComponent('LogBox', function () {\n    if (__DEV__) {\n      return require(\"../LogBox/LogBoxInspectorContainer\").default;\n    } else {\n      return function NoOp() {\n        return null;\n      };\n    }\n  });\n}\nmodule.exports = AppRegistry;","map":{"version":3,"names":["BatchedBridge","BugReporting","createPerformanceLogger","infoLog","SceneTracker","coerceDisplayMode","HeadlessJsTaskError","NativeHeadlessJsTaskSupport","renderApplication","unmountComponentAtNodeAndRemoveContainer","invariant","runnables","runCount","sections","taskProviders","Map","taskCancelProviders","componentProviderInstrumentationHook","component","wrapperComponentProvider","showArchitectureIndicator","AppRegistry","setWrapperComponentProvider","provider","enableArchitectureIndicator","enabled","registerConfig","config","forEach","appConfig","run","registerRunnable","appKey","registerComponent","section","componentProvider","scopedPerformanceLogger","appParameters","displayMode","_appParameters$initia","concurrentRootEnabled","initialProps","concurrentRoot","rootTag","fabric","registerSection","getAppKeys","Object","keys","getSectionKeys","getSections","_objectSpread","getRunnable","getRegistry","setComponentProviderInstrumentationHook","hook","runApplication","logParams","__DEV__","JSON","stringify","msg","addSource","setActiveScene","name","setSurfaceProps","unmountApplicationComponentAtRootTag","registerHeadlessTask","taskKey","taskProvider","registerCancellableHeadlessTask","taskCancelProvider","has","console","warn","set","startHeadlessTask","taskId","data","get","notifyTaskFinished","then","catch","reason","error","notifyTaskRetry","retryPosted","cancelHeadlessTask","Error","global","RN$Bridgeless","registerCallableModule","require","default","NoOp","module","exports"],"sources":["C:/Users/arzug/Documents/GitHub/travel-brew/node_modules/react-native/Libraries/ReactNative/AppRegistry.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\nimport type {RootTag} from '../Types/RootTagTypes';\nimport type {IPerformanceLogger} from '../Utilities/createPerformanceLogger';\n\nimport BatchedBridge from '../BatchedBridge/BatchedBridge';\nimport BugReporting from '../BugReporting/BugReporting';\nimport createPerformanceLogger from '../Utilities/createPerformanceLogger';\nimport infoLog from '../Utilities/infoLog';\nimport SceneTracker from '../Utilities/SceneTracker';\nimport {coerceDisplayMode} from './DisplayMode';\nimport HeadlessJsTaskError from './HeadlessJsTaskError';\nimport NativeHeadlessJsTaskSupport from './NativeHeadlessJsTaskSupport';\nimport renderApplication from './renderApplication';\nimport {unmountComponentAtNodeAndRemoveContainer} from './RendererProxy';\nimport invariant from 'invariant';\n\ntype Task = (taskData: any) => Promise<void>;\nexport type TaskProvider = () => Task;\ntype TaskCanceller = () => void;\ntype TaskCancelProvider = () => TaskCanceller;\n\nexport type ComponentProvider = () => React$ComponentType<any>;\nexport type ComponentProviderInstrumentationHook = (\n  component: ComponentProvider,\n  scopedPerformanceLogger: IPerformanceLogger,\n) => React$ComponentType<any>;\nexport type AppConfig = {\n  appKey: string,\n  component?: ComponentProvider,\n  run?: Function,\n  section?: boolean,\n  ...\n};\nexport type Runnable = {\n  component?: ComponentProvider,\n  run: Function,\n  ...\n};\nexport type Runnables = {[appKey: string]: Runnable, ...};\nexport type Registry = {\n  sections: Array<string>,\n  runnables: Runnables,\n  ...\n};\nexport type WrapperComponentProvider = (\n  appParameters: any,\n) => React$ComponentType<any>;\n\nconst runnables: Runnables = {};\nlet runCount = 1;\nconst sections: Runnables = {};\nconst taskProviders: Map<string, TaskProvider> = new Map();\nconst taskCancelProviders: Map<string, TaskCancelProvider> = new Map();\nlet componentProviderInstrumentationHook: ComponentProviderInstrumentationHook =\n  (component: ComponentProvider) => component();\n\nlet wrapperComponentProvider: ?WrapperComponentProvider;\nlet showArchitectureIndicator = false;\n\n/**\n * `AppRegistry` is the JavaScript entry point to running all React Native apps.\n *\n * See https://reactnative.dev/docs/appregistry\n */\nconst AppRegistry = {\n  setWrapperComponentProvider(provider: WrapperComponentProvider) {\n    wrapperComponentProvider = provider;\n  },\n\n  enableArchitectureIndicator(enabled: boolean): void {\n    showArchitectureIndicator = enabled;\n  },\n\n  registerConfig(config: Array<AppConfig>): void {\n    config.forEach(appConfig => {\n      if (appConfig.run) {\n        AppRegistry.registerRunnable(appConfig.appKey, appConfig.run);\n      } else {\n        invariant(\n          appConfig.component != null,\n          'AppRegistry.registerConfig(...): Every config is expected to set ' +\n            'either `run` or `component`, but `%s` has neither.',\n          appConfig.appKey,\n        );\n        AppRegistry.registerComponent(\n          appConfig.appKey,\n          appConfig.component,\n          appConfig.section,\n        );\n      }\n    });\n  },\n\n  /**\n   * Registers an app's root component.\n   *\n   * See https://reactnative.dev/docs/appregistry#registercomponent\n   */\n  registerComponent(\n    appKey: string,\n    componentProvider: ComponentProvider,\n    section?: boolean,\n  ): string {\n    let scopedPerformanceLogger = createPerformanceLogger();\n    runnables[appKey] = {\n      componentProvider,\n      run: (appParameters, displayMode) => {\n        const concurrentRootEnabled =\n          appParameters.initialProps?.concurrentRoot ||\n          appParameters.concurrentRoot;\n        renderApplication(\n          componentProviderInstrumentationHook(\n            componentProvider,\n            scopedPerformanceLogger,\n          ),\n          appParameters.initialProps,\n          appParameters.rootTag,\n          wrapperComponentProvider && wrapperComponentProvider(appParameters),\n          appParameters.fabric,\n          showArchitectureIndicator,\n          scopedPerformanceLogger,\n          appKey === 'LogBox',\n          appKey,\n          coerceDisplayMode(displayMode),\n          concurrentRootEnabled,\n        );\n      },\n    };\n    if (section) {\n      sections[appKey] = runnables[appKey];\n    }\n    return appKey;\n  },\n\n  registerRunnable(appKey: string, run: Function): string {\n    runnables[appKey] = {run};\n    return appKey;\n  },\n\n  registerSection(appKey: string, component: ComponentProvider): void {\n    AppRegistry.registerComponent(appKey, component, true);\n  },\n\n  getAppKeys(): Array<string> {\n    return Object.keys(runnables);\n  },\n\n  getSectionKeys(): Array<string> {\n    return Object.keys(sections);\n  },\n\n  getSections(): Runnables {\n    return {\n      ...sections,\n    };\n  },\n\n  getRunnable(appKey: string): ?Runnable {\n    return runnables[appKey];\n  },\n\n  getRegistry(): Registry {\n    return {\n      sections: AppRegistry.getSectionKeys(),\n      runnables: {...runnables},\n    };\n  },\n\n  setComponentProviderInstrumentationHook(\n    hook: ComponentProviderInstrumentationHook,\n  ) {\n    componentProviderInstrumentationHook = hook;\n  },\n\n  /**\n   * Loads the JavaScript bundle and runs the app.\n   *\n   * See https://reactnative.dev/docs/appregistry#runapplication\n   */\n  runApplication(\n    appKey: string,\n    appParameters: any,\n    displayMode?: number,\n  ): void {\n    if (appKey !== 'LogBox') {\n      const logParams = __DEV__\n        ? '\" with ' + JSON.stringify(appParameters)\n        : '';\n      const msg = 'Running \"' + appKey + logParams;\n      infoLog(msg);\n      BugReporting.addSource(\n        'AppRegistry.runApplication' + runCount++,\n        () => msg,\n      );\n    }\n    invariant(\n      runnables[appKey] && runnables[appKey].run,\n      `\"${appKey}\" has not been registered. This can happen if:\\n` +\n        '* Metro (the local dev server) is run from the wrong folder. ' +\n        'Check if Metro is running, stop it and restart it in the current project.\\n' +\n        \"* A module failed to load due to an error and `AppRegistry.registerComponent` wasn't called.\",\n    );\n\n    SceneTracker.setActiveScene({name: appKey});\n    runnables[appKey].run(appParameters, displayMode);\n  },\n\n  /**\n   * Update initial props for a surface that's already rendered\n   */\n  setSurfaceProps(\n    appKey: string,\n    appParameters: any,\n    displayMode?: number,\n  ): void {\n    if (appKey !== 'LogBox') {\n      const msg =\n        'Updating props for Surface \"' +\n        appKey +\n        '\" with ' +\n        JSON.stringify(appParameters);\n      infoLog(msg);\n      BugReporting.addSource(\n        'AppRegistry.setSurfaceProps' + runCount++,\n        () => msg,\n      );\n    }\n    invariant(\n      runnables[appKey] && runnables[appKey].run,\n      `\"${appKey}\" has not been registered. This can happen if:\\n` +\n        '* Metro (the local dev server) is run from the wrong folder. ' +\n        'Check if Metro is running, stop it and restart it in the current project.\\n' +\n        \"* A module failed to load due to an error and `AppRegistry.registerComponent` wasn't called.\",\n    );\n\n    runnables[appKey].run(appParameters, displayMode);\n  },\n\n  /**\n   * Stops an application when a view should be destroyed.\n   *\n   * See https://reactnative.dev/docs/appregistry#unmountapplicationcomponentatroottag\n   */\n  unmountApplicationComponentAtRootTag(rootTag: RootTag): void {\n    unmountComponentAtNodeAndRemoveContainer(rootTag);\n  },\n\n  /**\n   * Register a headless task. A headless task is a bit of code that runs without a UI.\n   *\n   * See https://reactnative.dev/docs/appregistry#registerheadlesstask\n   */\n  registerHeadlessTask(taskKey: string, taskProvider: TaskProvider): void {\n    // $FlowFixMe[object-this-reference]\n    this.registerCancellableHeadlessTask(taskKey, taskProvider, () => () => {\n      /* Cancel is no-op */\n    });\n  },\n\n  /**\n   * Register a cancellable headless task. A headless task is a bit of code that runs without a UI.\n   *\n   * See https://reactnative.dev/docs/appregistry#registercancellableheadlesstask\n   */\n  registerCancellableHeadlessTask(\n    taskKey: string,\n    taskProvider: TaskProvider,\n    taskCancelProvider: TaskCancelProvider,\n  ): void {\n    if (taskProviders.has(taskKey)) {\n      console.warn(\n        `registerHeadlessTask or registerCancellableHeadlessTask called multiple times for same key '${taskKey}'`,\n      );\n    }\n    taskProviders.set(taskKey, taskProvider);\n    taskCancelProviders.set(taskKey, taskCancelProvider);\n  },\n\n  /**\n   * Only called from native code. Starts a headless task.\n   *\n   * See https://reactnative.dev/docs/appregistry#startheadlesstask\n   */\n  startHeadlessTask(taskId: number, taskKey: string, data: any): void {\n    const taskProvider = taskProviders.get(taskKey);\n    if (!taskProvider) {\n      console.warn(`No task registered for key ${taskKey}`);\n      if (NativeHeadlessJsTaskSupport) {\n        NativeHeadlessJsTaskSupport.notifyTaskFinished(taskId);\n      }\n      return;\n    }\n    taskProvider()(data)\n      .then(() => {\n        if (NativeHeadlessJsTaskSupport) {\n          NativeHeadlessJsTaskSupport.notifyTaskFinished(taskId);\n        }\n      })\n      .catch(reason => {\n        console.error(reason);\n\n        if (\n          NativeHeadlessJsTaskSupport &&\n          reason instanceof HeadlessJsTaskError\n        ) {\n          // $FlowFixMe[unused-promise]\n          NativeHeadlessJsTaskSupport.notifyTaskRetry(taskId).then(\n            retryPosted => {\n              if (!retryPosted) {\n                NativeHeadlessJsTaskSupport.notifyTaskFinished(taskId);\n              }\n            },\n          );\n        }\n      });\n  },\n\n  /**\n   * Only called from native code. Cancels a headless task.\n   *\n   * See https://reactnative.dev/docs/appregistry#cancelheadlesstask\n   */\n  cancelHeadlessTask(taskId: number, taskKey: string): void {\n    const taskCancelProvider = taskCancelProviders.get(taskKey);\n    if (!taskCancelProvider) {\n      throw new Error(`No task canceller registered for key '${taskKey}'`);\n    }\n    taskCancelProvider()();\n  },\n};\n\nif (!(global.RN$Bridgeless === true)) {\n  BatchedBridge.registerCallableModule('AppRegistry', AppRegistry);\n\n  AppRegistry.registerComponent('LogBox', () => {\n    if (__DEV__) {\n      return require('../LogBox/LogBoxInspectorContainer').default;\n    } else {\n      return function NoOp() {\n        return null;\n      };\n    }\n  });\n}\n\nmodule.exports = AppRegistry;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}